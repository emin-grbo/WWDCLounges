{
  "name": "devtools-and-swift-lounge",
  "messages": [
    {
      "type": "message",
      "user": "U03EBH4MA8Y",
      "text": "This content can't be displayed.",
      "ts": "1654550661.316559",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "fire",
          "count": 28,
          "users": [
            "U03JDHJMJS1",
            "U03J1UXFUKV",
            "U03HYBRAJNB",
            "U03JGRKGDGT",
            "U03J1QBS6MV",
            "U03J22AU6DQ",
            "U03J8B88VE1",
            "U03J5TH7TFF",
            "U03HMBFH687",
            "U03JBLJLAM8",
            "U03JKNC8XK6",
            "U03JRRNKHQQ",
            "U03JSBA6YQY",
            "U03JRNR7LTS",
            "U03JC3BQWSE",
            "U03J2BYS20P",
            "U03J97E2TL2",
            "U03JES1EH34",
            "U03JRPTDF6U",
            "U03JE7D37QU",
            "U03J1V8PVC3",
            "U03J22G8DT4",
            "U03J22CB2PL",
            "U03JEKVMV6D",
            "U03J4D2D8FN",
            "U03HZ3E3GTF",
            "U03HB5MM11U",
            "U03JK9WR69J"
          ]
        },
        {
          "name": "heart",
          "count": 20,
          "users": [
            "U03JB85MK35",
            "U03J1QBS6MV",
            "U03J8B88VE1",
            "U03HMBFH687",
            "U03JKNC8XK6",
            "U03JRRNKHQQ",
            "U03JELDBMT3",
            "U03JAHTL682",
            "U03JSBA6YQY",
            "U03J4C1RWMA",
            "U03H36R5MST",
            "U03J97E2TL2",
            "U03JES1EH34",
            "U03JELVMV7T",
            "U03JRPTDF6U",
            "U03JE7D37QU",
            "U03J1V8PVC3",
            "U03J22GCV8S",
            "U03JK9WR69J",
            "U03JRP7LF4Y"
          ]
        },
        {
          "name": "hammer_and_wrench",
          "count": 22,
          "users": [
            "U03HVEXK4ES",
            "U03JA9MD6DA",
            "U03J8B88VE1",
            "U03J5TH7TFF",
            "U03HMBFH687",
            "U03K6SH0TFA",
            "U03J1TJD2GK",
            "U03JKNC8XK6",
            "U03JRRNKHQQ",
            "U03JPTNTVL1",
            "U03JSBA6YQY",
            "U03H36R5MST",
            "U03J97E2TL2",
            "U03JES1EH34",
            "U03JRPTDF6U",
            "U03J1V8PVC3",
            "U03HVD6UVJS",
            "U03J4RTGZ51",
            "U03JNB58J12",
            "U03J1TLDKUK",
            "U03HB5MM11U",
            "U03JK9WR69J"
          ]
        },
        {
          "name": "swift-orange",
          "count": 18,
          "users": [
            "U03HVDJJ1TQ",
            "U03J8B88VE1",
            "U03J4E8DD0U",
            "U03HMBFH687",
            "U03JKNC8XK6",
            "U03J4EJ0CVA",
            "U03JRRNKHQQ",
            "U03JSBA6YQY",
            "U03HVE3J0UE",
            "U03JELVMV7T",
            "U03JRPTDF6U",
            "U03J1V8PVC3",
            "U03J22CB2PL",
            "U03JTN05PPB",
            "U03J4CUMLTW",
            "U03JEKVMV6D",
            "U03JC1A19PV",
            "U03HWD593CH"
          ]
        },
        {
          "name": "+1",
          "count": 4,
          "users": [
            "U03JRQD6K5W",
            "U03J97E2TL2",
            "U03JRPTDF6U",
            "U03J8B88VE1"
          ]
        },
        {
          "name": "flag-pt",
          "count": 3,
          "users": [
            "U03J8B88VE1",
            "U03JKGPS36F",
            "U03JB0Y3XE0"
          ]
        },
        {
          "name": "wwdc22",
          "count": 1,
          "users": [
            "U03J22CB2PL"
          ]
        },
        {
          "name": "flag-il",
          "count": 1,
          "users": [
            "U03JTMA2FUH"
          ]
        },
        {
          "name": "es",
          "count": 1,
          "users": [
            "U03J9UWUV37"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "header",
          "text": {
            "type": "plain_text",
            "text": "Welcome to the Developer Tools \u0026amp; Swift Digital Lounge!",
            "emoji": true
          },
          "block_id": "FaWSJ"
        },
        {
          "type": "image",
          "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/wwdc22/slack/Developer%20Tools%20-%20regular%20hero%403x.png",
          "alt_text": "A multi-colored hammer on a black background",
          "block_id": "1Ba4z"
        },
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "Welcome to the WWDC22 Developer Tools \u0026amp; Swift Digital Lounge! We’ve got an exciting week planned for you. You can find the full schedule of events in the \u003chttps://developer.apple.com/news/?id=514lsvn5| Apple Developer app and on developer.apple.com\u003e, and activities for all lounges kick off on June 7."
          },
          "block_id": "6tFR"
        },
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "If you haven't already, please take a moment to familiarize yourself with \u003chttps://developer.apple.com/news/?id=735utu4s|how the Digital Lounges will work\u003e."
          },
          "block_id": "Ird"
        },
        {
          "type": "header",
          "text": {
            "type": "plain_text",
            "text": "WWDC22 Interactive Events Policy",
            "emoji": true
          },
          "block_id": "RMniW"
        },
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "We want to make sure these spaces are helpful and welcoming for everyone — developers and Apple employees alike. Please review and follow the \u003chttps://developer.apple.com/wwdc22/policies/interactive-events/1/Apple-Developer-WWDC22-Interactive-Events-Attendance-Policy.pdf| WWDC22 Interactive Events Policy\u003e."
          },
          "block_id": "ZwmzJ"
        },
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "Have a great WWDC!"
          },
          "block_id": "3Aq"
        }
      ]
    },
    {
      "client_msg_id": "6c0769d5-003a-481d-ac5b-616414b54480",
      "type": "message",
      "user": "U03HHPBGV99",
      "text": "Hi everyone! We’re ready to start the *Simulators and Devices Q\u0026amp;A*. We have a number of engineers here that work on simulators in Xcode to answer your questions. You can submit your questions with the :workflowbolt: button. We’ll review your questions and then post them here for everyone to see.\n\nWe might not be able to get to all of your questions, but we’ll do our best. As a reminder, please keep the content professional and within our code of conduct.\n\nIf you have questions on other topics, you can check to see if there are other Developer Tools Lounge times that might be better suited to your questions. For things not covered here, you can also check for 1-on-1 Developer Labs, or post your questions in the \u003chttps://developer.apple.com/forums/|Developer Forums\u003e.",
      "ts": "1654617607.025929",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 7,
          "users": [
            "U03HL553PNG",
            "U03HB5MM11U",
            "U03H36PM1BR",
            "U03HES3E8DT",
            "U03HHPBL0LB",
            "U03JRQ62JQY",
            "U03JE7D37QU"
          ]
        },
        {
          "name": "tada",
          "count": 3,
          "users": [
            "U03DF5L7S30",
            "U03JB85MK35",
            "U03JRQ62JQY"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "zlq",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hi everyone! We’re ready to start the "
                },
                {
                  "type": "text",
                  "text": "Simulators and Devices Q\u0026A",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": ". We have a number of engineers here that work on simulators in Xcode to answer your questions. You can submit your questions with the "
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " button. We’ll review your questions and then post them here for everyone to see.\n\nWe might not be able to get to all of your questions, but we’ll do our best. As a reminder, please keep the content professional and within our code of conduct.\n\nIf you have questions on other topics, you can check to see if there are other Developer Tools Lounge times that might be better suited to your questions. For things not covered here, you can also check for 1-on-1 Developer Labs, or post your questions in the "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4DLGHUL\u003e asked\n\u0026gt; Good morning. How can I automatically launch multiple simulators at once by the run keyboard shortcut? (e.g., iPhone 8, iPhone X, iPad, 14.5/16)",
      "ts": "1654617943.728419",
      "thread_ts": "1654617943.728419",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654621560.897329",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "TtuXK",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4DLGHUL"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Good morning. How can I automatically launch multiple simulators at once by the run keyboard shortcut? (e.g., iPhone 8, iPhone X, iPad, 14.5\\/16)\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "d0434419-4b1f-495e-ade9-22caafd0cdb8",
          "type": "message",
          "user": "U03HL5ECHUL",
          "text": "Xcode doesn't currently support selecting multiple run destinations for the Run action to use. It would be great if you could file a feedback request asking for that feature and provide some details on how/why you'd use it.",
          "ts": "1654618065.730689",
          "thread_ts": "1654617943.728419",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Bl1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Xcode doesn't currently support selecting multiple run destinations for the Run action to use. It would be great if you could file a feedback request asking for that feature and provide some details on how/why you'd use it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "E0C954A9-58A4-4E75-8340-2846C26FC2A2",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Hi Ryan (great name!)\n\nAs a follow-up to Scott, the `simctl` command line tool might be an option for you. It can perform many of the same tasks as Xcode and you can operate it via script",
          "ts": "1654618147.538679",
          "thread_ts": "1654617943.728419",
          "edited": {
            "user": "U03HHPY6YQ2",
            "ts": "1654618182.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "laughing",
              "count": 1,
              "users": [
                "U03JGPGBQTV"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "u18",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Ryan (great name!)\n\nAs a follow-up to Scott, the "
                    },
                    {
                      "type": "text",
                      "text": "simctl",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " command line tool might be an option for you. It can perform many of the same tasks as Xcode and you can operate it via script"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6a42f4c6-60ef-4227-b1f1-db260f22b758",
          "type": "message",
          "user": "U03HL5ECHUL",
          "text": "Another possible alternative that might work for you is to use test plans with schemes to automatically run through a set of tests across multiple devices.",
          "ts": "1654618253.572209",
          "thread_ts": "1654617943.728419",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "rocket",
              "count": 1,
              "users": [
                "U03JSPMPTMW"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8Gm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Another possible alternative that might work for you is to use test plans with schemes to automatically run through a set of tests across multiple devices."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b443018e-de45-49b7-b3bb-bf9dcc056a31",
          "type": "message",
          "user": "U03HWD593CH",
          "text": "Hello Ryan,\nIf you are looking to speed up running Unit or UI tests on simulators you could enable an option on your testing targets to “Execute in Parallel”. This will boot many copied simulators at once and speed up test execution.",
          "ts": "1654618472.843519",
          "thread_ts": "1654617943.728419",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cksJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hello Ryan,\nIf you are looking to speed up running Unit or UI tests on simulators you could enable an option on your testing targets to “Execute in Parallel”. This will boot many copied simulators at once and speed up test execution."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7c8347ea-4d30-4c6f-bdce-779c8a70c3e1",
          "type": "message",
          "user": "U03JSPMPTMW",
          "text": "\u003c@U03HL5ECHUL\u003e \u0026amp; \u003c@U03HWD593CH\u003e these are both awesome options! Consume them all of the time across all sorts of language and hardware combinations.",
          "ts": "1654619350.398959",
          "thread_ts": "1654617943.728419",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uE/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HL5ECHUL"
                    },
                    {
                      "type": "text",
                      "text": " \u0026 "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HWD593CH"
                    },
                    {
                      "type": "text",
                      "text": " these are both awesome options! Consume them all of the time across all sorts of language and hardware combinations."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b022fb99-5807-4b37-b189-4147e4bc6025",
          "type": "message",
          "user": "U03J4DLGHUL",
          "text": "\u003c@U03HHPY6YQ2\u003e \u003c@U03HL5ECHUL\u003e I'll check your suggestions out. One use case is, before submitting a PR with UI work, I like \"see to believe\" one last time, preferably on sims already setup with various accessibility settings or staging environment user accounts. It would be great to mix in with my live test devices, one of which is always on a verbose VoiceOver setting.",
          "ts": "1654620453.408039",
          "thread_ts": "1654617943.728419",
          "edited": {
            "user": "U03J4DLGHUL",
            "ts": "1654620510.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+NTnq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HHPY6YQ2"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HL5ECHUL"
                    },
                    {
                      "type": "text",
                      "text": " I'll check your suggestions out. One use case is, before submitting a PR with UI work, I like \"see to believe\" one last time, preferably on sims already setup with various accessibility settings or staging environment user accounts. It would be great to mix in with my live test devices, one of which is always on a verbose VoiceOver setting."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "99fd001e-8f63-4056-aa5a-043fc1fc0c58",
          "type": "message",
          "user": "U03HL5ECHUL",
          "text": "I'd encourage you to look at test plans with a combination of unit tests and UI tests to automate some of that confidence building. Where you are using Swift UI you can also use previews to get better visual coverage of changes made to the UI.",
          "ts": "1654620785.943589",
          "thread_ts": "1654617943.728419",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ny/b",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'd encourage you to look at test plans with a combination of unit tests and UI tests to automate some of that confidence building. Where you are using Swift UI you can also use previews to get better visual coverage of changes made to the UI."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8220D44B-15C5-48B2-A0F4-8123DC7A6E2D",
          "type": "message",
          "user": "U03J1V52JQK",
          "text": "Snapshot tests (not from Apple, but there are libraries) are also a great tool here. They let you record snapshots of views and then diff the images if they change.",
          "ts": "1654621560.897329",
          "thread_ts": "1654617943.728419",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qJqoR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Snapshot "
                    },
                    {
                      "type": "text",
                      "text": "tests"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "(not"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "from"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Apple,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "but"
                    },
                    {
                      "type": "text",
                      "text": " there "
                    },
                    {
                      "type": "text",
                      "text": "are"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "libraries)"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "are"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "also"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "great"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "tool"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "here. They"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "let"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "record"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "snapshots"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " views "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "then"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "diff"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " images "
                    },
                    {
                      "type": "text",
                      "text": "if"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "they"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "change."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRR4R3CY\u003e asked\n\u0026gt; I'm working on an Apple Watch app that uses compass heading for navigation. However, the debugging on an actual watch is slow. Is there a way to simulate compass data using the watchOS Simulator?",
      "ts": "1654618196.831429",
      "thread_ts": "1654618196.831429",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654618748.624879",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ZgZrq",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRR4R3CY"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I'm working on an Apple Watch app that uses compass heading for navigation. However, the debugging on an actual watch is slow. Is there a way to simulate compass data using the watchOS Simulator?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "E4C05364-7467-4352-901D-54D5BCCD28D5",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "I believe the compass requires physical sensors on device, and therefore it is not available in Simulator",
          "ts": "1654618237.908919",
          "thread_ts": "1654618196.831429",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+WR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I believe the compass requires physical sensors on device, and therefore it is not available in Simulator"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "EA736E4A-D669-4EF2-90A9-2B68C9A92FB6",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "As always, file feedback using Feedback Assistant if this is important to you!",
          "ts": "1654618281.603999",
          "thread_ts": "1654618196.831429",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uN4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "As always, file feedback using Feedback Assistant if this is important to you!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "86f78ca7-611c-4c59-bcd2-a244d76a8d8e",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "Indeed, we do not currently support simulating Compass but we would be interested in hearing about your use case in detail",
          "ts": "1654618308.798599",
          "thread_ts": "1654618196.831429",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cI9q",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Indeed, we do not currently support simulating Compass but we would be interested in hearing about your use case in detail"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a5497259-3440-4ac4-bd62-60a428e24672",
          "type": "message",
          "user": "U03JRR4R3CY",
          "text": "Thanks, I filed a feedback for this last year and was hoping to see it this year. I had already checked the simulator but did not find the feature.\nThe feedback number is FB9161848\n\nThe use case is an app for theme parks, these locations are poorly mapped if mapped at all. So I wanted to offer a simple navigation using an arrow indicating the direction. And a similar case for a public water fountain finder for Apple Watch",
          "ts": "1654618580.105449",
          "thread_ts": "1654618196.831429",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "T7XO3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks, I filed a feedback for this last year and was hoping to see it this year. I had already checked the simulator but did not find the feature.\nThe feedback number is FB9161848\n\nThe use case is an app for theme parks, these locations are poorly mapped if mapped at all. So I wanted to offer a simple navigation using an arrow indicating the direction. And a similar case for a public water fountain finder for Apple Watch"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "087F9FB1-A1D2-4F33-8874-576F61B8A67F",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Thanks for your feedback",
          "ts": "1654618748.624879",
          "thread_ts": "1654618196.831429",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "llZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for your feedback"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JQ1UJSPK\u003e asked\n\u0026gt; Hi, are there plans to include network link conditioning into Xcode/simulators so that we can simulate bad network connections on apps running in simulators without impacting the entire computer's internet connection (or requiring the use of software like Charles or Proxyman)?",
      "ts": "1654618318.140239",
      "thread_ts": "1654618318.140239",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654618398.872469",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "lUPL",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JQ1UJSPK"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi, are there plans to include network link conditioning into Xcode\\/simulators so that we can simulate bad network connections on apps running in simulators without impacting the entire computer's internet connection (or requiring the use of software like Charles or Proxyman)?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "5aca32d6-062c-4f19-b288-0b6d1e69effb",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "Each Simulator is a separate userspace but shares the kernel and networking stack with macOS so there is not presently a way to do this.",
          "ts": "1654618362.962209",
          "thread_ts": "1654618318.140239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fm3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Each Simulator is a separate userspace but shares the kernel and networking stack with macOS so there is not presently a way to do this."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a9f4d66d-af82-4f16-8ebc-a6830c0673b6",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "But we are aware of the desire for this!",
          "ts": "1654618398.872469",
          "thread_ts": "1654618318.140239",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 5,
              "users": [
                "U03JQ1UJSPK",
                "U03J6QJ2M0D",
                "U03HWQNU65D",
                "U03HVC03PC6",
                "U03JD04C7NF"
              ]
            },
            {
              "name": "+1",
              "count": 5,
              "users": [
                "U03JLV0E8RJ",
                "U03JW7PM509",
                "U03JYBU2FR7",
                "U03JRQGN85N",
                "U03J8QZS7J9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "N=8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "But we are aware of the desire for this!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JE7PBQPP\u003e asked\n\u0026gt; Good day! How can I change simulators location and language programmatically?  My primary use case is Unit Tests need to check multiple locations and languages and am hoping for a better option than shell scripts that change plist files...",
      "ts": "1654618341.097289",
      "thread_ts": "1654618341.097289",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654619486.662209",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 2,
          "users": [
            "U03JTMA2FUH",
            "U03HZ3X84VB"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "zG4Z",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JE7PBQPP"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Good day! How can I change simulators location and language programmatically?  My primary use case is Unit Tests need to check multiple locations and languages and am hoping for a better option than shell scripts that change plist files...\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "35156473-c670-46bb-af1c-3d43a97c81ef",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "In your test plan file, there's a \"Simulated Location\" setting for configuring the system location, as well as an \"Application Language\" setting.",
          "ts": "1654618370.422829",
          "thread_ts": "1654618341.097289",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OfXdu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In your test plan file, there's a \"Simulated Location\" setting for configuring the system location, as well as an \"Application Language\" setting."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e45d8536-51b0-4af8-bce2-2e600b956392",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "If you need to change the system location/application language outside of a testing context, could you file a feedback assistant requesting this?",
          "ts": "1654618502.373289",
          "thread_ts": "1654618341.097289",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wZ3lL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you need to change the system location/application language outside of a testing context, could you file a feedback assistant requesting this?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b890f4e5-2289-465d-a427-e0718621768e",
          "type": "message",
          "user": "U03JE7PBQPP",
          "text": "TestPlans allow for a change to the App Language and Region, but not the System Lang/Region",
          "ts": "1654618640.934209",
          "thread_ts": "1654618341.097289",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zH8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "TestPlans allow for a change to the App Language and Region, but not the System Lang/Region"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9ec6d8d5-afc8-4ad9-8abb-4490b9972083",
          "type": "message",
          "user": "U03JE7PBQPP",
          "text": "And for testing things like various UTF formatting (Currency definitely comes to mind), it really helps to be able to change the System levels",
          "ts": "1654618717.325769",
          "thread_ts": "1654618341.097289",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "J2tNm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "And for testing things like various UTF formatting (Currency definitely comes to mind), it really helps to be able to change the System levels"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "501bfb01-1a64-4469-993f-bd0b4ac3d5f0",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "Currently Simulator does not surface a UI to change this directly. Instead of manipulating plists you can use `simctl` to spawn the `defaults` utility inside a given Simulator:\n`xcrun simctl spawn \u0026lt;device\u0026gt; defaults write -globalDomain AppleLanguages -array en-US fr-FR`",
          "ts": "1654619472.292639",
          "thread_ts": "1654618341.097289",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 3,
              "users": [
                "U03JRNYGBNC",
                "U03J20949JN",
                "U03JDD3QB52"
              ]
            },
            {
              "name": "thumbsup_all",
              "count": 1,
              "users": [
                "U03JE7PBQPP"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LxD3m",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Currently Simulator does not surface a UI to change this directly. Instead of manipulating plists you can use "
                    },
                    {
                      "type": "text",
                      "text": "simctl",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to spawn the "
                    },
                    {
                      "type": "text",
                      "text": "defaults",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " utility inside a given Simulator:\n"
                    },
                    {
                      "type": "text",
                      "text": "xcrun simctl spawn \u003cdevice\u003e defaults write -globalDomain AppleLanguages -array en-US fr-FR",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8c931e34-0a1b-42d3-9327-0d7d99a8e9e8",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "The same goes for the `AppleLocale`",
          "ts": "1654619486.662209",
          "thread_ts": "1654618341.097289",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "NqbXl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The same goes for the "
                    },
                    {
                      "type": "text",
                      "text": "AppleLocale",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J20E7UBV\u003e asked\n\u0026gt; Is there any means of using the iOS Simulator for ARKit or AVFoundation, wherein the Mac's camera (or Continuity camera in macOS Ventura) could be used for testing AR or camera experiences?",
      "ts": "1654618595.695829",
      "thread_ts": "1654618595.695829",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654621927.547559",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "MKUXh",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J20E7UBV"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there any means of using the iOS Simulator for ARKit or AVFoundation, wherein the Mac's camera (or Continuity camera in macOS Ventura) could be used for testing AR or camera experiences?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "023A0263-52E8-41F4-8914-C001A8938B42",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Hi Brandon. I don't think this is supported at present. Please file a feedback request if this is important to you",
          "ts": "1654618651.952119",
          "thread_ts": "1654618595.695829",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2ef",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Brandon. I don't think this is supported at present. Please file a feedback request if this is important to you"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e56601e5-6fe7-4ca2-9c01-18358bf21a27",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Thank you!  :slightly_smiling_face:",
          "ts": "1654618687.424549",
          "thread_ts": "1654618595.695829",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Uks",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!  "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7bc21c3b-cd80-4607-8544-12ed1073e383",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "It is especially helpful when you can provide motivating use cases: What does this enable or how does it improve your dev workflow?",
          "ts": "1654619043.206809",
          "thread_ts": "1654618595.695829",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YKeK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It is especially helpful when you can provide motivating use cases: What does this enable or how does it improve your dev workflow?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "24d7bfcd-7dd6-4b20-84e5-ab14eaba67f1",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Thanks, \u003c@U03HL5EFWP6\u003e!  I will file a feedback request.  Mostly, this is a request to be able to quickly test ARKit-related code without `#if` statements, though this might only be practical for ARFaceTrackingConfigurations rather than ARWorldTracking.  I'll write up a use case and file a Feedback Request.  Thank you!",
          "ts": "1654619127.830559",
          "thread_ts": "1654618595.695829",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "yLvf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks, "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HL5EFWP6"
                    },
                    {
                      "type": "text",
                      "text": "!  I will file a feedback request.  Mostly, this is a request to be able to quickly test ARKit-related code without "
                    },
                    {
                      "type": "text",
                      "text": "#if",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " statements, though this might only be practical for ARFaceTrackingConfigurations rather than ARWorldTracking.  I'll write up a use case and file a Feedback Request.  Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "80812cfd-0592-43bd-86b2-3fd362a788a8",
          "type": "message",
          "user": "U03JH1ULBCH",
          "text": "Hi \u003c@U03HL5EFWP6\u003e Even if the simulator didn't provide live camera, that we are unable to ~test~ run any Camera code in the simulator has been a big pain point over the years. If it even just let us run the camera APIs and delivered a static/placeholder image would be a huge help",
          "ts": "1654621927.547559",
          "thread_ts": "1654618595.695829",
          "edited": {
            "user": "U03JH1ULBCH",
            "ts": "1654621948.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J01RLBBR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GJH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HL5EFWP6"
                    },
                    {
                      "type": "text",
                      "text": " Even if the simulator didn't provide live camera, that we are unable to "
                    },
                    {
                      "type": "text",
                      "text": "test",
                      "style": {
                        "strike": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " run any Camera code in the simulator has been a big pain point over the years. If it even just let us run the camera APIs and delivered a static/placeholder image would be a huge help"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMEM4TM5\u003e asked\n\u0026gt; Hi, are the simulators being updated to support Stage Manager? What about Stage Manager support in external displays?",
      "ts": "1654618626.458899",
      "thread_ts": "1654618626.458899",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654618922.813079",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "A45Q",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMEM4TM5"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi, are the simulators being updated to support Stage Manager? What about Stage Manager support in external displays?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "78cc3e53-70c3-441b-9266-04d7940f161c",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "This is a known bug for Seed 1 that didn't make it into the release notes",
          "ts": "1654618651.948499",
          "thread_ts": "1654618626.458899",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ijj5n",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is a known bug for Seed 1 that didn't make it into the release notes"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8aa9a713-efb1-4f14-b0a8-c0089f72faeb",
          "type": "message",
          "user": "U03HWD3Q7LH",
          "text": "Support for enabling Stage Manager will be coming in a future beta.  Check out our future release notes for information.",
          "ts": "1654618922.813079",
          "thread_ts": "1654618626.458899",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sG+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Support for enabling Stage Manager will be coming in a future beta.  Check out our future release notes for information."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J58WAJ2J\u003e asked\n\u0026gt; How can I build and run in the command line using the \"My Mac (Designed for iPad)\" destination? I've tried `xcrun simctl list devices`, but it does not have this destination.",
      "ts": "1654618690.258559",
      "thread_ts": "1654618690.258559",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654803233.484359",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "alD=9",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J58WAJ2J"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"How can I build and run in the command line using the \\\"My Mac (Designed for iPad)\\\" destination? I've tried `xcrun simctl list devices`, but it does not have this destination.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "e8445263-0a44-4cd9-955c-c96420b4693d",
          "type": "message",
          "user": "U03HWD3Q7LH",
          "text": "`xcrun simctl list devices` shows simulator devices.\nTo get a list of supported run destinations to pass to `xcodebuild` from the command line, check `xcodebuild -showdestinations` .",
          "ts": "1654618743.041309",
          "thread_ts": "1654618690.258559",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xyr0",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "xcrun simctl list devices",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " shows simulator devices.\nTo get a list of supported run destinations to pass to "
                    },
                    {
                      "type": "text",
                      "text": "xcodebuild",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " from the command line, check "
                    },
                    {
                      "type": "text",
                      "text": "xcodebuild -showdestinations",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " ."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fcafa573-5bca-4666-94da-a3f4f737e8d0",
          "type": "message",
          "user": "U03J58WAJ2J",
          "text": "Ok, I can specify the macOS destination but it seems to build the usual iPad `.app`. How do I install and run it on the mac? From my investigations, Xcode seems to create a wrapper app inside the `.XCInstall` folder.",
          "ts": "1654627788.126449",
          "thread_ts": "1654618690.258559",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0r+5D",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok, I can specify the macOS destination but it seems to build the usual iPad "
                    },
                    {
                      "type": "text",
                      "text": ".app",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". How do I install and run it on the mac? From my investigations, Xcode seems to create a wrapper app inside the "
                    },
                    {
                      "type": "text",
                      "text": ".XCInstall",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " folder."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4421365d-338d-42d6-a868-49568a7c9609",
          "type": "message",
          "user": "U03J58WAJ2J",
          "text": "Do you think I should request this in a Feedback? Anyway, thanks for your time.",
          "ts": "1654707650.763849",
          "thread_ts": "1654618690.258559",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "26jl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Do you think I should request this in a Feedback? Anyway, thanks for your time."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "284794c2-6c70-48e9-bdcd-fd5d6a1678f4",
          "type": "message",
          "user": "U03HWD3Q7LH",
          "text": "I believe you should be able to just pass it to the `open` command line tool or double click it.",
          "ts": "1654710502.228739",
          "thread_ts": "1654618690.258559",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YMff9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I believe you should be able to just pass it to the "
                    },
                    {
                      "type": "text",
                      "text": "open",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " command line tool or double click it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1e4410ec-da63-4c34-a2c9-535e8629cd38",
          "type": "message",
          "user": "U03J58WAJ2J",
          "text": "I can’t :disappointed:\n```⇒  open \u003chttp://mmyapp.app|mmyapp.app\u003e\nThe application cannot be opened because it has an incorrect executable format.```\nAnd the application icon have that :no_entry_sign:",
          "ts": "1654710796.878879",
          "thread_ts": "1654618690.258559",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "MAVb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I can’t "
                    },
                    {
                      "type": "emoji",
                      "name": "disappointed",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"\\u21d2  open mmyapp.app\\nThe application cannot be opened because it has an incorrect executable format.\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "And the application icon have that "
                    },
                    {
                      "type": "emoji",
                      "name": "no_entry_sign",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "77ff7d88-6f39-4e9c-a059-d983b0e73905",
          "type": "message",
          "user": "U03HWD3Q7LH",
          "text": "Ok, well it's getting built right (as an iPad app).  But we should be able to launch it.  I need to dig into this a bit more with experts in this area.  Can you please file a report with Feedback Assistant and report the number here?",
          "ts": "1654787577.249319",
          "thread_ts": "1654618690.258559",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J58WAJ2J"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GM3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok, well it's getting built right (as an iPad app).  But we should be able to launch it.  I need to dig into this a bit more with experts in this area.  Can you please file a report with Feedback Assistant and report the number here?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "66a4048a-07b3-4055-b6c7-4324c29df7eb",
          "type": "message",
          "user": "U03J58WAJ2J",
          "text": "Here it is: FB10138671",
          "ts": "1654803233.484359",
          "thread_ts": "1654618690.258559",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+uHi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Here it is: FB10138671"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03K7KBHSV6\u003e asked\n\u0026gt; Simulators and previews take up a ton of space on my Mac. I noticed in particular Previews keeps growing and growing to the point where the previews folder in the developer folder takes up more that 100gigs of space. Is there a way to limit the amount of space previews and simulators take up, and if so what is the best and safest way to clear that space?",
      "ts": "1654618767.930409",
      "thread_ts": "1654618767.930409",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654619853.823039",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ly3",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K7KBHSV6"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Simulators and previews take up a ton of space on my Mac. I noticed in particular Previews keeps growing and growing to the point where the previews folder in the developer folder takes up more that 100gigs of space. Is there a way to limit the amount of space previews and simulators take up, and if so what is the best and safest way to clear that space?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ac8dc5ec-a9fe-4ced-a544-ac09e42cae51",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "There were some known issues with Xcode 13 that should be fixed in Xcode 14. Please file a feedback request with the disk space usage output from a program like GrandPerspective if you can. We would like to know what files are taking up the space and if you still see the issue in Xcode 14.",
          "ts": "1654618844.497979",
          "thread_ts": "1654618767.930409",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1::skin-tone-2",
              "count": 1,
              "users": [
                "U03JW7PM509"
              ]
            },
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JQA2LA04",
                "U03K7KBHSV6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dnE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There were some known issues with Xcode 13 that should be fixed in Xcode 14. Please file a feedback request with the disk space usage output from a program like GrandPerspective if you can. We would like to know what files are taking up the space and if you still see the issue in Xcode 14."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d3fdca80-2085-47a5-88f8-e4961c79836e",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "In the mean time you can use `xcrun simctl erase` to erase simulators you don't need anymore.",
          "ts": "1654618880.238349",
          "thread_ts": "1654618767.930409",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Gfa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In the mean time you can use "
                    },
                    {
                      "type": "text",
                      "text": "xcrun simctl erase",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to erase simulators you don't need anymore."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d37bc961-9e97-4113-b7da-dba1e9765ab3",
          "type": "message",
          "user": "U03K7KBHSV6",
          "text": "Thank you!",
          "ts": "1654618931.986829",
          "thread_ts": "1654618767.930409",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nhTnp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d86acba4-0bf7-4322-8eb7-cf184c29adc6",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "Previews, Interface Builder, and Playgrounds use separate device sets which you can specify. So for example to list all Previews simulators:\n`xcrun simctl --set previews list`\nThen do the same with the erase/delete subcommands.",
          "ts": "1654618963.502429",
          "thread_ts": "1654618767.930409",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 3,
              "users": [
                "U03K7KBHSV6",
                "U03J21ZK802",
                "U03J1UBVC2X"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gI7=N",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Previews, Interface Builder, and Playgrounds use separate device sets which you can specify. So for example to list all Previews simulators:\n"
                    },
                    {
                      "type": "text",
                      "text": "xcrun simctl --set previews list",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\nThen do the same with the erase/delete subcommands."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "741aff40-9160-46cf-b8a5-9b6b175262b4",
          "type": "message",
          "user": "U03JSBCTCQ1",
          "text": "Thanks for this question, just removed almost 100gb of previews files today :slightly_smiling_face:",
          "ts": "1654619853.823039",
          "thread_ts": "1654618767.930409",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "duO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for this question, just removed almost 100gb of previews files today "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J20E7UBV\u003e asked\n\u0026gt; This is not a question, but just so your team sees it, thank you for the amazing work you do.  Xcode and Simulators are the tools so many of us use to build fun apps, or even build businesses that support our lives.  We couldn't do this without your hard work.",
      "ts": "1654618916.830149",
      "thread_ts": "1654618916.830149",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654625201.681869",
      "reactions": [
        {
          "name": "heart",
          "count": 34,
          "users": [
            "U03HL553PNG",
            "U03HHPBGV99",
            "U03HVF9E2BG",
            "U03HWD593CH",
            "U03JQ1UJSPK",
            "U03JE2L47J8",
            "U03HVD5Q8DC",
            "U03HHPY6YQ2",
            "U03J1TY3P27",
            "U03J4ESC65A",
            "U03HHP75UJF",
            "U03HB5MM11U",
            "U03JSCDT2HE",
            "U03H36PM1BR",
            "U03JRP7LF4Y",
            "U03JNGF2JS0",
            "U03HL5ECHUL",
            "U03J7H4CG6L",
            "U03HL5AMFCL",
            "U03HVDDBP0W",
            "U03K720M8RW",
            "U03JQA2LA04",
            "U03J4DLGHUL",
            "U03JZ218ZUY",
            "U03HMBPKU0P",
            "U03HB5P8SB0",
            "U03HQG7PXRD",
            "U03JELVMV7T",
            "U03JTMA2FUH",
            "U03JJUHHF7W",
            "U03JG50CYLR",
            "U03JNTU9KED",
            "U03J0J7078V",
            "U03J98SC0RK"
          ]
        },
        {
          "name": "point_up",
          "count": 4,
          "users": [
            "U03JRNYGBNC",
            "U03JLB0L3L1",
            "U03JELVMV7T",
            "U03J22HDMSN"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "pf9",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J20E7UBV"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"This is not a question, but just so your team sees it, thank you for the amazing work you do.  Xcode and Simulators are the tools so many of us use to build fun apps, or even build businesses that support our lives.  We couldn't do this without your hard work.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "EFF91DEF-70C1-4405-A281-A60151FCAAC3",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Thank you Brandon!",
          "ts": "1654618929.635559",
          "thread_ts": "1654618916.830149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Bc08",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you Brandon!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4D111BA2-0ACB-41E8-8E99-CB8A7602A759",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Speaking just for myself, helping developers reach their potential is why I do this, and I love seeing what people create using our tools!",
          "ts": "1654618971.413459",
          "thread_ts": "1654618916.830149",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 3,
              "users": [
                "U03HHPBGV99",
                "U03HL553PNG",
                "U03J20E7UBV"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JBzMP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Speaking just for myself, helping developers reach their potential is why I do this, and I love seeing what people create using our tools!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c03a0697-ae5d-4de9-a0d1-604ba5eb9c23",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "Thank you, positive feedback like this is always appreciated!",
          "ts": "1654618997.486249",
          "thread_ts": "1654618916.830149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "te0",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you, positive feedback like this is always appreciated!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3d8cbb09-b415-430a-a294-6b232682eab9",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Thank you all for the replies!  It's great to have that incredible support and it makes doing this work fun and empowering every day.  Keep up your great work!",
          "ts": "1654619164.482089",
          "thread_ts": "1654618916.830149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+qyMZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you all for the replies!  It's great to have that incredible support and it makes doing this work fun and empowering every day.  Keep up your great work!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0f3cccfe-6f13-43e7-8820-036b35b24d11",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "Thank you Brandon!",
          "ts": "1654619347.484529",
          "thread_ts": "1654618916.830149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "QZSt",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you Brandon!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "83aa385c-8bf5-4611-bac6-0ccbb85b680d",
          "type": "message",
          "user": "U03J4CWFAN8",
          "text": "Argh, wrong thread, sorry",
          "ts": "1654625201.681869",
          "thread_ts": "1654618916.830149",
          "edited": {
            "user": "U03J4CWFAN8",
            "ts": "1654625243.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4PuAa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Argh, wrong thread, sorry"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J20E7UBV\u003e asked\n\u0026gt; What's the best place to turn to for help in getting our apps to run in Xcode 14 (errors like ld: symbol(s) not found for architecture x86_64 are commonplace).  It'd be great to start testing Xcode 14 to have the chance to find questions to ask before WWDC ends!",
      "ts": "1654619161.538249",
      "thread_ts": "1654619161.538249",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 13,
      "latest_reply": "1654642640.607279",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "VuRj",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J20E7UBV"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What's the best place to turn to for help in getting our apps to run in Xcode 14 (errors like ld: symbol(s) not found for architecture x86_64 are commonplace).  It'd be great to start testing Xcode 14 to have the chance to find questions to ask before WWDC ends!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "90ee8de8-8a7b-42b9-85ec-a06e012d27fa",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "Is this specifically about such errors when building for Simulator? If this is a general project build issue please come back for the Xcode Open Hours Lab.",
          "ts": "1654619194.806159",
          "thread_ts": "1654619161.538249",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YIW3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is this specifically about such errors when building for Simulator? If this is a general project build issue please come back for the Xcode Open Hours Lab."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "631e8651-5bef-44c9-bac7-3a2f83b65c1a",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Good question, \u003c@U03HL5EFWP6\u003e.  I didn't even think to try on-device vs. Simulator.  I'll come back for Open Hours.  Thank you!",
          "ts": "1654619226.721109",
          "thread_ts": "1654619161.538249",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JCoa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Good question, "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HL5EFWP6"
                    },
                    {
                      "type": "text",
                      "text": ".  I didn't even think to try on-device vs. Simulator.  I'll come back for Open Hours.  Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5c3aafdf-dd07-4692-81b3-3844f62c2f1f",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "If this is Simulator specific then can you tell us if you are on an Apple Silicon Mac or not? Missing symbols errors are often a result of a link time dependency being missing or using a binary dependency that doesn't have all the architectures required",
          "ts": "1654619253.626919",
          "thread_ts": "1654619161.538249",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "O9=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If this is Simulator specific then can you tell us if you are on an Apple Silicon Mac or not? Missing symbols errors are often a result of a link time dependency being missing or using a binary dependency that doesn't have all the architectures required"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4462df0c-1f81-49ea-aeb9-4a9c22a54d96",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "This is indeed on an Apple Silicon machine (running Xcode 14 in Rosetta).  Regretfully, the app I work on has quite a few dependencies outside of my control, requiring Rosetta, but the aforementioned symbol error is seemingly the last barrier standing in my way to getting the app to run on Xcode 14.",
          "ts": "1654619317.858809",
          "thread_ts": "1654619161.538249",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "EW/WQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is indeed on an Apple Silicon machine (running Xcode 14 in Rosetta).  Regretfully, the app I work on has quite a few dependencies outside of my control, requiring Rosetta, but the aforementioned symbol error is seemingly the last barrier standing in my way to getting the app to run on Xcode 14."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "53c22752-ae60-4753-b8bc-eee37864c5b0",
          "type": "message",
          "user": "U03HL5ECHUL",
          "text": "There is also the Xcode Build Performance lab on Thursday (9am-1pm) where they are happy to field questions about getting your project to build properly.",
          "ts": "1654619460.778469",
          "thread_ts": "1654619161.538249",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+BE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There is also the Xcode Build Performance lab on Thursday (9am-1pm) where they are happy to field questions about getting your project to build properly."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "df6953f2-eaf1-46a8-a517-1aaed27e3329",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "We have an Xcode Open Hours Q\u0026amp;A here in Slack tomorrow at 3pm to 5pm Pacific Time.  Or you can make a 1:1 appointment at \u003chttps://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming?q=Xcode\u003e",
          "ts": "1654619466.464909",
          "thread_ts": "1654619161.538249",
          "attachments": [
            {
              "fallback": "Sign In - Apple",
              "id": 1,
              "title": "Sign In - Apple",
              "title_link": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming?q=Xcode",
              "text": "Sign in with your Apple ID",
              "service_name": "idmsa.apple.com",
              "service_icon": "https://appleid.cdn-apple.com/daw/IDMSWebAuth/static/20Apr2022/images/favicon.ico",
              "from_url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming?q=Xcode",
              "original_url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming?q=Xcode",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03JRNYGBNC"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "g2HBc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We have an Xcode Open Hours Q\u0026A here in Slack tomorrow at 3pm to 5pm Pacific Time.  Or you can make a 1:1 appointment at "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming?q=Xcode",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1e236a4f-a751-47d1-bfe4-ed7679f41b03",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Thanks \u003c@U03HL5EFWP6\u003e \u003c@U03HL5ECHUL\u003e \u003c@U03HL553PNG\u003e!  I will make an appointment if I'm not able to resolve it!",
          "ts": "1654619522.772399",
          "thread_ts": "1654619161.538249",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zqc=r",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HL5EFWP6"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HL5ECHUL"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HL553PNG"
                    },
                    {
                      "type": "text",
                      "text": "!  I will make an appointment if I'm not able to resolve it!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b5c377d2-3ec7-4568-950e-b062b2ceb901",
          "type": "message",
          "user": "U03HWD3Q7LH",
          "text": "Please be sure to come prepared with a build log for folks to look through.  It might even be quicker to post your question (and log) in the developer forums.  If you do so, please provide a link to the dev forums in this thread to connect the conversations.",
          "ts": "1654619876.317839",
          "thread_ts": "1654619161.538249",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J20E7UBV"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7jBn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Please be sure to come prepared with a build log for folks to look through.  It might even be quicker to post your question (and log) in the developer forums.  If you do so, please provide a link to the dev forums in this thread to connect the conversations."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5871bfa3-97d3-40e6-a49d-f442018dc6b3",
          "type": "message",
          "user": "U03JLB0L3L1",
          "text": "Just want to confirm the issue and add some additional information and observations. We have a project that depends on XCFramework distributed through SPM, that contains frameworks for ios-arm64 and ios-arm64-simulator (basically iPhone and Simulator on M1 Mac. Everything works fine on Xcode 13 but on Xcode 13 the framework does not link properly. Judging from the error message: “warning build: Ignoring file “/path to binary/“, building for iOS Simulator-x86_64 but attempting to link with file built for iOS Simulator-arm64” it appears that for some reason Xcode tries to build for x86 Simulator architecture, which is obviously not correct considering that Xcode runs *without* Rosetta and on a M1 Mac. My biggest fear is that this behavior somehow slipped into new version as a way of ‘fixing’ a major problem with old-style fat-frameworks that contain a slice for x86 simulator and thus de-facto break Simulator on M1 machines, and people do all sorts of terrible things with their project to hot-fix the problem.\n\nP.S. For folks interested in details there is great blog post by _Bogo Giertler_ titled “_Hacking native ARM64 binaries to run on the iOS Simulator_”.",
          "ts": "1654625276.587989",
          "thread_ts": "1654619161.538249",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Krqw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Just want to confirm the issue and add some additional information and observations. We have a project that depends on XCFramework distributed through SPM, that contains frameworks for ios-arm64 and ios-arm64-simulator (basically iPhone and Simulator on M1 Mac. Everything works fine on Xcode 13 but on Xcode 13 the framework does not link properly. Judging from the error message: “warning build: Ignoring file “/path to binary/“, building for iOS Simulator-x86_64 but attempting to link with file built for iOS Simulator-arm64” it appears that for some reason Xcode tries to build for x86 Simulator architecture, which is obviously not correct considering that Xcode runs "
                    },
                    {
                      "type": "text",
                      "text": "without",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " Rosetta and on a M1 Mac. My biggest fear is that this behavior somehow slipped into new version as a way of ‘fixing’ a major problem with old-style fat-frameworks that contain a slice for x86 simulator and thus de-facto break Simulator on M1 machines, and people do all sorts of terrible things with their project to hot-fix the problem.\n\nP.S. For folks interested in details there is great blog post by "
                    },
                    {
                      "type": "text",
                      "text": "Bogo Giertler",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " titled “"
                    },
                    {
                      "type": "text",
                      "text": "Hacking native ARM64 binaries to run on the iOS Simulator",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "”."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bdf96a27-69dc-49c0-a725-e41a0eaa318c",
          "type": "message",
          "user": "U03JLB0L3L1",
          "text": "Small follow-up: our project depends on framework that only distributed for arm64 (which is not uncommon)  so on x86 machines we don’t have simulator, but we managed to get everything working on m1's by duplicating and modifying an arm64 slice to iphonesimulator and creating xcframework with it, which greatly improved our dev experience. I truly hope what we see on Xcode 14 is bug.",
          "ts": "1654625563.514939",
          "thread_ts": "1654619161.538249",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "w=g",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Small follow-up: our project depends on framework that only distributed for arm64 (which is not uncommon)  so on x86 machines we don’t have simulator, but we managed to get everything working on m1's by duplicating and modifying an arm64 slice to iphonesimulator and creating xcframework with it, which greatly improved our dev experience. I truly hope what we see on Xcode 14 is bug."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "79efcee3-318b-431f-b245-3e78be658604",
          "type": "message",
          "user": "U03J4CWFAN8",
          "text": "\u003c@U03J20E7UBV\u003e I have successfully converted one of our projects to build successfully for the arm64 simulator, but every library, every case is different. In our case, I have two cases:\n1. Recompile the library for the arm64 simulator, and then link different libraries for device and simulator (if you want to go the extra mile, build an xcframework)\n2. Find a new (in our case) beta version of the dependency we used\n3. What \u003c@U03JLB0L3L1\u003e pointed",
          "ts": "1654625585.234559",
          "thread_ts": "1654619161.538249",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "re5zs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03J20E7UBV"
                    },
                    {
                      "type": "text",
                      "text": " I have successfully converted one of our projects to build successfully for the arm64 simulator, but every library, every case is different. In our case, I have two cases:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Recompile the library for the arm64 simulator, and then link different libraries for device and simulator (if you want to go the extra mile, build an xcframework)\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Find a new (in our case) beta version of the dependency we used\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"What \"},{\"type\":\"user\",\"user_id\":\"U03JLB0L3L1\"},{\"type\":\"text\",\"text\":\" pointed\"}]}],\"style\":\"ordered\",\"indent\":0,\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "491d5009-c049-4409-8b4d-df0f4807946c",
          "type": "message",
          "user": "U03JLB0L3L1",
          "text": "Also forgot to mention that undefined symbols problem mention in the beginning results from framework not linking and xcode treating this as a warning and not an error, so the build pipeline continues without necessary symbols. I submitted the overall bug report with the following reference: FB10068243",
          "ts": "1654625754.705459",
          "thread_ts": "1654619161.538249",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VTD",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also forgot to mention that undefined symbols problem mention in the beginning results from framework not linking and xcode treating this as a warning and not an error, so the build pipeline continues without necessary symbols. I submitted the overall bug report with the following reference: FB10068243"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "989edfa4-6d0e-43f6-b9ba-f9139da6c3c5",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Thanks, \u003c@U03J4CWFAN8\u003e!  In my case, our frameworks and dependencies are building fine on Apple Silicon in Xcode 13.4.1 (running in Rosetta), but I'm getting an error doing the same in Xcode 14, and was hoping to get going with Xcode 14 during WWDC!",
          "ts": "1654642640.607279",
          "thread_ts": "1654619161.538249",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UZq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks, "
                    },
                    {
                      "type": "user",
                      "user_id": "U03J4CWFAN8"
                    },
                    {
                      "type": "text",
                      "text": "!  In my case, our frameworks and dependencies are building fine on Apple Silicon in Xcode 13.4.1 (running in Rosetta), but I'm getting an error doing the same in Xcode 14, and was hoping to get going with Xcode 14 during WWDC!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JBJTFHEZ\u003e asked\n\u0026gt; Will it ever be possible to simulate accessibility gestures (such as the VoiceOver “Z” gesture and the rotor) in the simulator, especially in calls from UI Tests?",
      "ts": "1654619455.473899",
      "thread_ts": "1654619455.473899",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654620670.082629",
      "reactions": [
        {
          "name": "wheelchair",
          "count": 2,
          "users": [
            "U03JBJTFHEZ",
            "U03J4DPCXGC"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "uE=b",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JBJTFHEZ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Will it ever be possible to simulate accessibility gestures (such as the VoiceOver \\u201cZ\\u201d gesture and the rotor) in the simulator, especially in calls from UI Tests?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "8137F1A3-5813-4E3A-B5AD-6342E8C70535",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "We can't discuss what might or might not be coming in future releases. If this is important to you, please file feedback through Feedback Assistant ",
          "ts": "1654619510.635019",
          "thread_ts": "1654619455.473899",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hAXT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We can't discuss what might or might not be coming in future releases. If this is important to you, please file feedback through Feedback Assistant "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "98E207C4-FA86-4D5B-850E-A5DCE5C17F00",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "It would also be helpful to know your use case ",
          "ts": "1654619526.876459",
          "thread_ts": "1654619455.473899",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VkPj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It would also be helpful to know your use case "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2db14a6b-0944-451f-aa6b-71188d68c8c8",
          "type": "message",
          "user": "U03JBJTFHEZ",
          "text": "Anything that can’t be put into either, or both of, unit or UI tests, can’t be counted on to keep working as we continue to develop our code. Everything we rely on our code to do should be testable. “What gets measured matters” and automated tests are a key tool of “measuring” our code, and maintaining good engineering practice.\n\nRight now, accessibility interactions are subject to significant risk of regressions because we have to resort to manual testing in our apps.\n\nIt feels like, while Apple has developed some incredible, and sometimes life-changing, accessibility features, they’ve only gone half way by leaving them out of automated testing.",
          "ts": "1654620003.831989",
          "thread_ts": "1654619455.473899",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Gnoxa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Anything that can’t be put into either, or both of, unit or UI tests, can’t be counted on to keep working as we continue to develop our code. Everything we rely on our code to do should be testable. “What gets measured matters” and automated tests are a key tool of “measuring” our code, and maintaining good engineering practice.\n\nRight now, accessibility interactions are subject to significant risk of regressions because we have to resort to manual testing in our apps.\n\nIt feels like, while Apple has developed some incredible, and sometimes life-changing, accessibility features, they’ve only gone half way by leaving them out of automated testing."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3fe75e2d-89a3-4bd3-8374-cf25bdb6851b",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "We definitely agree with you on the importance of being able to test the accessibility features of your app! There's no UI testing API today for automating the VoiceOver gestures you listed, but this would be a great enhancement. If you capture that request into a feedback assistant, it would be really appreciated. You can also check out one of the \"Xcode Cloud and testing open hours\" labs to discuss this use case.",
          "ts": "1654620670.082629",
          "thread_ts": "1654619455.473899",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JBJTFHEZ",
                "U03JRUP5YP2"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dTjI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We definitely agree with you on the importance of being able to test the accessibility features of your app! There's no UI testing API today for automating the VoiceOver gestures you listed, but this would be a great enhancement. If you capture that request into a feedback assistant, it would be really appreciated. You can also check out one of the \"Xcode Cloud and testing open hours\" labs to discuss this use case."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JMJD1610\u003e asked\n\u0026gt; Hello everyone, for Xcode project having large codebase, every time if its a clean build or branch change, Xcode start preparing the indexing which causes whole mac system makes so much slower until indexing task completes. Any workaround or tips for it?",
      "ts": "1654619769.924979",
      "thread_ts": "1654619769.924979",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654632087.707099",
      "reactions": [
        {
          "name": "heavy_plus_sign",
          "count": 2,
          "users": [
            "U03HZ3E3GTF",
            "U03JTMA2FUH"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "FtW",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JMJD1610"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hello everyone, for Xcode project having large codebase, every time if its a clean build or branch change, Xcode start preparing the indexing which causes whole mac system makes so much slower until indexing task completes. Any workaround or tips for it?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "71fc46a0-5b0f-420b-8a7c-54eaecbfd3b1",
          "type": "message",
          "user": "U03HL5ENC1J",
          "text": "Hi there, indexing is an integral part of Xcode so that other features like Source Editor will work optimally. If indexing is causing your system to be slow, please file a feedback using Feedback Assistant. We will follow up to ask for logs so that we can triage the problem correctly.",
          "ts": "1654619931.511799",
          "thread_ts": "1654619769.924979",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Aqr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi there, indexing is an integral part of Xcode so that other features like Source Editor will work optimally. If indexing is causing your system to be slow, please file a feedback using Feedback Assistant. We will follow up to ask for logs so that we can triage the problem correctly."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fa43f96b-cf9c-4908-9a7f-7bb89fdbc633",
          "type": "message",
          "user": "U03HZ47UMRT",
          "text": "How about breaking your code into Swift Packages?",
          "ts": "1654623984.250459",
          "thread_ts": "1654619769.924979",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/ib=w",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "How about breaking your code into Swift Packages?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "519929ec-033b-41e2-88a7-9a224477456f",
          "type": "message",
          "user": "U03HZ3E3GTF",
          "text": "I have the same issue.\nThere are two threads about this issue on the forum:\n\u003chttps://developer.apple.com/forums/thread/694058\u003e\n\u003chttps://developer.apple.com/forums/thread/699112\u003e\nThis issue is still present in Xcode 14 :-(",
          "ts": "1654632087.707099",
          "thread_ts": "1654619769.924979",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gBUE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I have the same issue.\nThere are two threads about this issue on the forum:\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/forums/thread/694058",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/forums/thread/699112",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\nThis issue is still present in Xcode 14 :-("
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J1TVG79R\u003e asked\n\u0026gt; Hey guys! In order to inject a dynamic library to an application we use `xcrun simctl launch` with `SIMCTL_CHILD_DYLD_INSERT_LIBRARIES` argument, which works only for iOS Simulators of course. What is the alternative for iOS real (hardware) devices?",
      "ts": "1654619818.022259",
      "thread_ts": "1654619818.022259",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 15,
      "latest_reply": "1654625343.375169",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "0E6+",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J1TVG79R"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hey guys! In order to inject a dynamic library to an application we use `xcrun simctl launch` with `SIMCTL_CHILD_DYLD_INSERT_LIBRARIES` argument, which works only for iOS Simulators of course. What is the alternative for iOS real (hardware) devices?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "09fb298d-15ab-470e-8cf5-3d02937cd5de",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "This is not something supported for on-device debugging for iOS, watchOS, or tvOS. The system only allows a specific approved list of dylibs to be injected (the ones used by Xcode for things like View Debugger).",
          "ts": "1654619879.076869",
          "thread_ts": "1654619818.022259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "J=SQD",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is not something supported for on-device debugging for iOS, watchOS, or tvOS. The system only allows a specific approved list of dylibs to be injected (the ones used by Xcode for things like View Debugger)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "05521b09-a0c8-4e7a-85ed-ebf57f51067c",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "You must build and link any dylibs you want to use with your app.",
          "ts": "1654619903.964329",
          "thread_ts": "1654619818.022259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "n7Wk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You must build and link any dylibs you want to use with your app."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dfc1a8d3-93e5-4c8a-be51-01912aeb8086",
          "type": "message",
          "user": "U03J1TVG79R",
          "text": "Thanks \u003c@U03HL5EFWP6\u003e!\nIs there a reason behind why you don’t enable this for on-device debugging? Even if the app is code signed by you?",
          "ts": "1654620085.718949",
          "thread_ts": "1654619818.022259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1EZ8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HL5EFWP6"
                    },
                    {
                      "type": "text",
                      "text": "!\nIs there a reason behind why you don’t enable this for on-device debugging? Even if the app is code signed by you?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "daf6bffb-1901-463f-8443-977949e2a9ce",
          "type": "message",
          "user": "U03HWD3Q7LH",
          "text": "Is there a use case you have that isn't solved by directly linking in your dylibs?",
          "ts": "1654620248.436239",
          "thread_ts": "1654619818.022259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OPIQO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is there a use case you have that isn't solved by directly linking in your dylibs?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "13bbb49c-14f5-4322-bf5e-40db8532a469",
          "type": "message",
          "user": "U03J1TVG79R",
          "text": "Yes, for example I have some library that I’d like to insert only from CI agents for debugging (logging and monitoring) purposes",
          "ts": "1654620831.228879",
          "thread_ts": "1654619818.022259",
          "edited": {
            "user": "U03J1TVG79R",
            "ts": "1654620968.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "b8CLi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, for example I have some library that I’d like to insert only from CI agents for debugging (logging and monitoring) purposes"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e922de9d-2abf-4c3e-acca-bd97f5bf4106",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "So is the issue that you want your CI to build once, make the artifacts available everywhere, but only load your logging library when running tests in CI?",
          "ts": "1654620970.079679",
          "thread_ts": "1654619818.022259",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U03J1TVG79R"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/pus",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So is the issue that you want your CI to build once, make the artifacts available everywhere, but only load your logging library when running tests in CI?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bf48bba8-6afc-49df-a356-9058cc83b7ba",
          "type": "message",
          "user": "U03J1TVG79R",
          "text": "Exactly",
          "ts": "1654621005.256399",
          "thread_ts": "1654619818.022259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qH2nM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Exactly"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a1629b46-b8b5-4dd0-85fd-371c7cd84fa9",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "So there is not an easily supported way to do this but in theory if you weak link the dylib and include it in your build you could take the built app, remove the dylib from its bundle, then resign it to update the list of resources in the bundle. Trying that will be very fragile and I don't recommend it because you will be fighting `xcodebuild` the entire way.",
          "ts": "1654621128.594099",
          "thread_ts": "1654619818.022259",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "thinking_face",
              "count": 1,
              "users": [
                "U03J1TVG79R"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "p9f8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So there is not an easily supported way to do this but in theory if you weak link the dylib and include it in your build you could take the built app, remove the dylib from its bundle, then resign it to update the list of resources in the bundle. Trying that will be very fragile and I don't recommend it because you will be fighting "
                    },
                    {
                      "type": "text",
                      "text": "xcodebuild",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " the entire way."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bafdd272-2d93-4390-8ede-11b5a87f268c",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "Instead I recommend you include your code and use some kind of switch to enable or disable it at startup.",
          "ts": "1654621157.836659",
          "thread_ts": "1654619818.022259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BONz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Instead I recommend you include your code and use some kind of switch to enable or disable it at startup."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8da09dfb-b8f9-443e-8036-a5a22f692cc5",
          "type": "message",
          "user": "U03J1TVG79R",
          "text": "\u0026gt; Instead I recommend you include your code and use some kind of switch to enable or disable it at startup.\nIt feels very risky to have this code part of the app, I want this to be as far as possible from production :smile:",
          "ts": "1654621603.598939",
          "thread_ts": "1654619818.022259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Xle",
              "elements": [
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Instead I recommend you include your code and use some kind of switch to enable or disable it at startup.\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It feels very risky to have this code part of the app, I want this to be as far as possible from production "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7a79f991-0f6f-4351-8fdc-72ffdd6fb1c3",
          "type": "message",
          "user": "U03J1TVG79R",
          "text": "\u0026gt; So there is not an easily supported way to do this but in theory if you weak link the dylib and include it in your build you could take the built app, remove the dylib from its bundle, then resign it to update the list of resources in the bundle. Trying that will be very fragile and I don’t recommend it because you will be fighting `xcodebuild` the entire way.\nInteresting, what kind of fighting? Is there anything specific you can think of?",
          "ts": "1654621795.330929",
          "thread_ts": "1654619818.022259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0qmW",
              "elements": [
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"So there is not an easily supported way to do this but in theory if you weak link the dylib and include it in your build you could take the built app, remove the dylib from its bundle, then resign it to update the list of resources in the bundle. Trying that will be very fragile and I don\\u2019t recommend it because you will be fighting \"},{\"type\":\"text\",\"text\":\"xcodebuild\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" the entire way.\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Interesting, what kind of fighting? Is there anything specific you can think of?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fb3a38c5-f09c-4a94-aaec-a3c53ab7758a",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "Normally you would build the app for distribution if we are talking about a device build. You'd need to unwrap that, make the change, resign the app bundle manually with all the correct flags and the correct signing identity, then get it packaged back up for distribution.",
          "ts": "1654622586.837839",
          "thread_ts": "1654619818.022259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+Db",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Normally you would build the app for distribution if we are talking about a device build. You'd need to unwrap that, make the change, resign the app bundle manually with all the correct flags and the correct signing identity, then get it packaged back up for distribution."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9e9180b8-eaba-43bd-86cd-1b360c098947",
          "type": "message",
          "user": "U03HWD3Q7LH",
          "text": "Also, in order to weak link it, the dylib (or tbd) actually needs to be there.  So you'd need to build it even though you don't use it, which is not ideal.  As you start to unwind all of that with various build settings, I expect you'd converge on adding it to OTHER_LD_FLAGS[config=Debug] (or similar) and adding something to GCC_PREPROCESSOR_DEFINITIONS[config=Debug] to only use and link it in your debug configuration.",
          "ts": "1654622597.666609",
          "thread_ts": "1654619818.022259",
          "edited": {
            "user": "U03HWD3Q7LH",
            "ts": "1654622613.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "p7UmA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also, in order to weak link it, the dylib (or tbd) actually needs to be there.  So you'd need to build it even though you don't use it, which is not ideal.  As you start to unwind all of that with various build settings, I expect you'd converge on adding it to OTHER_LD_FLAGS[config=Debug] (or similar) and adding something to GCC_PREPROCESSOR_DEFINITIONS[config=Debug] to only use and link it in your debug configuration."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "eeb74028-e27a-4c26-a6a8-c7c23f8520b4",
          "type": "message",
          "user": "U03J1TVG79R",
          "text": "\u0026gt; So you’d need to build it even though you don’t use it, which is not ideal\nindeed :confused:",
          "ts": "1654625258.627539",
          "thread_ts": "1654619818.022259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XuEax",
              "elements": [
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"So you\\u2019d need to build it even though you don\\u2019t use it, which is not ideal\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "indeed "
                    },
                    {
                      "type": "emoji",
                      "name": "confused",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "67d89438-2fc8-470a-869a-2d279e283a48",
          "type": "message",
          "user": "U03J1TVG79R",
          "text": "OK, thanks for the answers guys",
          "ts": "1654625343.375169",
          "thread_ts": "1654619818.022259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OFMi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "OK, thanks for the answers guys"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMD6FP9V\u003e asked\n\u0026gt; Will it ever be possible to get the Apple Watch battery level via 3rd party apps? I do not see any documentation for this.",
      "ts": "1654620074.003069",
      "thread_ts": "1654620074.003069",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654620186.431229",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "KNd1",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMD6FP9V"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Will it ever be possible to get the Apple Watch battery level via 3rd party apps? I do not see any documentation for this.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "8dd4bc40-f44d-43ee-bb21-1b5d5a6ba42d",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "I'd recommend bringing this to the watchOS Developer Lab. They'd be able to give better guidance than we can",
          "ts": "1654620100.275439",
          "thread_ts": "1654620074.003069",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "S6j",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'd recommend bringing this to the watchOS Developer Lab. They'd be able to give better guidance than we can"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1687dd78-fc88-4508-b2e2-9c21a3d2aa54",
          "type": "message",
          "user": "U03HMD6FP9V",
          "text": "Will do.",
          "ts": "1654620121.000739",
          "thread_ts": "1654620074.003069",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gTAv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Will do."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "257becfe-3eeb-4752-8a21-ae0e7664a788",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "You can \u003chttps://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming?q=watch|sign up for a 1:1 appointment\u003e in one of the watchOS labs too.",
          "ts": "1654620186.431229",
          "thread_ts": "1654620074.003069",
          "attachments": [
            {
              "fallback": "Sign In - Apple",
              "id": 1,
              "title": "Sign In - Apple",
              "title_link": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming?q=watch",
              "text": "Sign in with your Apple ID",
              "service_name": "idmsa.apple.com",
              "service_icon": "https://appleid.cdn-apple.com/daw/IDMSWebAuth/static/20Apr2022/images/favicon.ico",
              "from_url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming?q=watch",
              "original_url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming?q=watch",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bk+52",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming?q=watch",
                      "text": "sign up for a 1:1 appointment"
                    },
                    {
                      "type": "text",
                      "text": " in one of the watchOS labs too."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMEM4TM5\u003e asked\n\u0026gt; Can I try Focus filters in the simulator? Thanks!",
      "ts": "1654620130.797919",
      "thread_ts": "1654620130.797919",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654620421.660579",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Dd+",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMEM4TM5"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can I try Focus filters in the simulator? Thanks!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a05dac1d-6fe9-4086-bc0b-38608776695f",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "Which aspect of Focus Filters are you interested in?",
          "ts": "1654620248.812939",
          "thread_ts": "1654620130.797919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jaYZm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Which aspect of Focus Filters are you interested in?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "343a4a9d-62be-4451-8046-84257ea457c4",
          "type": "message",
          "user": "U03HMEM4TM5",
          "text": "I can’t seem to find a way to test focus filters implemented in a third-party app in the simulator",
          "ts": "1654620316.863479",
          "thread_ts": "1654620130.797919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vuHHn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I can’t seem to find a way to test focus filters implemented in a third-party app in the simulator"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "af83b4db-db70-41a2-98c7-eb987acb7242",
          "type": "message",
          "user": "U03HMEM4TM5",
          "text": "(i.e. there’s no “Focus” item in Settings, no control center in the simulator)",
          "ts": "1654620340.927939",
          "thread_ts": "1654620130.797919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7H0vZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(i.e. there’s no “Focus” item in Settings, no control center in the simulator)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1dd34f52-7399-401d-826b-833989939c0e",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "OK so you are using App Intents to set a focus filter but don't have a way to test the behavior?",
          "ts": "1654620394.966219",
          "thread_ts": "1654620130.797919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cGFd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "OK so you are using App Intents to set a focus filter but don't have a way to test the behavior?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d5063225-f05e-449f-9598-3af9bcc4a4ce",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "Can you please file this as a feedback item?",
          "ts": "1654620416.562349",
          "thread_ts": "1654620130.797919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UUGAB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Can you please file this as a feedback item?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "13da76fc-793f-4c31-9178-67bc4a2f39cf",
          "type": "message",
          "user": "U03HMEM4TM5",
          "text": "correct! will do, thanks",
          "ts": "1654620421.660579",
          "thread_ts": "1654620130.797919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FUzH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "correct! will do, thanks"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRNYGBNC\u003e asked\n\u0026gt; When running UI tests, we sporadically get an error like this inside of XCTest (when trying to do element queries), and it seems like it persists until restarting the simulator. Any tips for how to debug this kind of thing or what might cause it?\n\u0026gt; \n\u0026gt; `*** -[__NSArrayM insertObject:atIndex:]: object cannot be nil (NSInvalidArgumentException)`",
      "ts": "1654620874.762119",
      "thread_ts": "1654620874.762119",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 11,
      "latest_reply": "1654731824.156089",
      "reactions": [
        {
          "name": "satellite_antenna",
          "count": 1,
          "users": [
            "U03JEMN82JV"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "=Br",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRNYGBNC"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"When running UI tests, we sporadically get an error like this inside of XCTest (when trying to do element queries), and it seems like it persists until restarting the simulator. Any tips for how to debug this kind of thing or what might cause it?\\n\\n`*** -[__NSArrayM insertObject\"},{\"type\":\"emoji\",\"name\":\"atIndex\"},{\"type\":\"text\",\"text\":\"]: object cannot be nil (NSInvalidArgumentException)`\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "4a951d1d-4ab9-4157-8d18-05c0a45921ba",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "Is this a crash happening in your application code, your test code, or an Apple framework?",
          "ts": "1654620901.323829",
          "thread_ts": "1654620874.762119",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4E5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is this a crash happening in your application code, your test code, or an Apple framework?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "148bc525-5c33-4bdc-b941-4a4f77ce2c91",
          "type": "message",
          "user": "U03HL5ENC1J",
          "text": "To help you with your triage, you can create an `Exception` Breakpoint in the Breakpoint Navigator, run your test and examine your backtrace.",
          "ts": "1654620955.542229",
          "thread_ts": "1654620874.762119",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wIY1h",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "To help you with your triage, you can create an "
                    },
                    {
                      "type": "text",
                      "text": "Exception",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " Breakpoint in the Breakpoint Navigator, run your test and examine your backtrace."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2903a29f-280c-4629-813b-072561c4e3ca",
          "type": "message",
          "user": "U03HL5ENC1J",
          "text": "Note that the exception will be raised in `Foundation` framework but the important stack frames are the ones that set up the `NSArray`",
          "ts": "1654621031.287899",
          "thread_ts": "1654620874.762119",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JRNYGBNC"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rQi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Note that the exception will be raised in "
                    },
                    {
                      "type": "text",
                      "text": "Foundation",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " framework but the important stack frames are the ones that set up the "
                    },
                    {
                      "type": "text",
                      "text": "NSArray",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7148cc6e-b9fd-4c52-9a4e-465cab8be719",
          "type": "message",
          "user": "U03JRNYGBNC",
          "text": "It seems to be in test frameworks, but I'll do the exception breakpoint and get more info next time I see it. It's kind of tricky because it seems to show up randomly and then when you want to try to debug it, it won't show itself :slightly_smiling_face:",
          "ts": "1654621124.527689",
          "thread_ts": "1654620874.762119",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "T67Nl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It seems to be in test frameworks, but I'll do the exception breakpoint and get more info next time I see it. It's kind of tricky because it seems to show up randomly and then when you want to try to debug it, it won't show itself "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b730791f-4fde-4c12-9e1a-e4033c55f54b",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "What iOS version are you hitting this on? There was a bug impacting UI element queries that was fixed in the iOS 15.6 beta, which you may be hitting.",
          "ts": "1654621244.310789",
          "thread_ts": "1654620874.762119",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qI3E9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "What iOS version are you hitting this on? There was a bug impacting UI element queries that was fixed in the iOS 15.6 beta, which you may be hitting."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "185ac771-0846-4ed9-8692-1fdc3f3c51b9",
          "type": "message",
          "user": "U03JRNYGBNC",
          "text": "I saw it today with 15.5, but I think it's been going on for the last few versions...can't run the Xcode 14 beta yet due to IT policies :(",
          "ts": "1654621299.417769",
          "thread_ts": "1654620874.762119",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hubGw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I saw it today with 15.5, but I think it's been going on for the last few versions...can't run the Xcode 14 beta yet due to IT policies :("
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4a3dea53-9545-40ac-812e-57a1aeb21e83",
          "type": "message",
          "user": "U03HL5ENC1J",
          "text": "You can leave your Exception breakpoint on until you see the problem. In terms of performance impact, it is minimal. You can choose to delete the breakpoint after that.",
          "ts": "1654621369.198129",
          "thread_ts": "1654620874.762119",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7+rl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can leave your Exception breakpoint on until you see the problem. In terms of performance impact, it is minimal. You can choose to delete the breakpoint after that."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "96f16960-fa0b-4e6c-b2de-53cd50fd72dd",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "If you manage to capture the backtrace before the end of today's digital lounge, you can post it here, or you could check out one of the \"Xcode Cloud and testing open hours\" labs and discuss the issue with one of the engineers there.",
          "ts": "1654621393.799589",
          "thread_ts": "1654620874.762119",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "MH7",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you manage to capture the backtrace before the end of today's digital lounge, you can post it here, or you could check out one of the \"Xcode Cloud and testing open hours\" labs and discuss the issue with one of the engineers there."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "efcdc93a-21d8-4a10-968b-63d7934fcf38",
          "type": "message",
          "user": "U03JRNYGBNC",
          "text": "sounds good! i've requested an appt about some other UI testing stuff too, so if I get a trace before then I'll share it as well",
          "ts": "1654621435.747509",
          "thread_ts": "1654620874.762119",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03J7H4CG6L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Dqkz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "sounds good! i've requested an appt about some other UI testing stuff too, so if I get a trace before then I'll share it as well"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "81f28274-f1db-48c6-ac5e-09e7ce4e1bee",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "Also, correction to what I said earlier: the bug I was referencing was fixed in the Xcode 14 beta, not in the iOS 15.6 beta. So the device OS version doesn't matter in this case, you just need to build \u0026amp; run your tests with the Xcode 14 beta.",
          "ts": "1654621943.140739",
          "thread_ts": "1654620874.762119",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JRNYGBNC"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FKX1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also, correction to what I said earlier: the bug I was referencing was fixed in the Xcode 14 beta, not in the iOS 15.6 beta. So the device OS version doesn't matter in this case, you just need to build \u0026 run your tests with the Xcode 14 beta."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "11aaa273-52e5-45b6-b733-ecac0c445907",
          "type": "message",
          "user": "U03JEMN82JV",
          "text": "I ran into this issue or a similar one with the same exception in XCTest on Xcode 13. I submitted Feedback FB9905764 with a sample project.\nI’ll try it out with Xcode 14 beta too.",
          "ts": "1654731824.156089",
          "thread_ts": "1654620874.762119",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Lm8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I ran into this issue or a similar one with the same exception in XCTest on Xcode 13. I submitted Feedback FB9905764 with a sample project.\nI’ll try it out with Xcode 14 beta too."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "f97de8bf-6433-404e-9d7e-30492a4b48f4",
      "type": "message",
      "user": "U03HB5MM11U",
      "text": ":watch: Time Check! We're at the halfway mark with one hour left. Great questions so far, keep them coming! You've got us thinking :thinking_face:",
      "ts": "1654621201.544829",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 2,
          "users": [
            "U03JQA2LA04",
            "U03HMDF31P1"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "u2r",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "emoji",
                  "name": "watch",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " Time Check! We're at the halfway mark with one hour left. Great questions so far, keep them coming! You've got us thinking "
                },
                {
                  "type": "emoji",
                  "name": "thinking_face",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JEAPSKE2\u003e asked\n\u0026gt; For purely logical unit tests (i.e. a Unit Test bundle - not UI Unit Tests), what difference is there between running the tests on the simulator versus running them in catalyst?  If I'm not planning on distributing my app via catalyst, would it make running unit tests using them less helpful?  I like running them in catalyst, because it seems to be easier to automate - but I don't know if there are downsides to running them like that.",
      "ts": "1654621253.939729",
      "thread_ts": "1654621253.939729",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654621939.962279",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "sGT",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JEAPSKE2"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"For purely logical unit tests (i.e. a Unit Test bundle - not UI Unit Tests), what difference is there between running the tests on the simulator versus running them in catalyst?  If I'm not planning on distributing my app via catalyst, would it make running unit tests using them less helpful?  I like running them in catalyst, because it seems to be easier to automate - but I don't know if there are downsides to running them like that.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "9e8b5b31-3c02-488e-ad11-17571df903c1",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "This depends on what your code does and what your testing goals are.",
          "ts": "1654621286.220089",
          "thread_ts": "1654621253.939729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hPYZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This depends on what your code does and what your testing goals are."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e5ea4c48-eb7f-426b-b331-1678576113f5",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "Simulator and Catalyst have different behavior in various ways (for example Simulator treats all filesystem access as case-sensitive even on macOS where most volumes are not which helps catch errors). The Catalyst environment is also tied to the version of macOS you are running unlike Simulator. Simulator is also a separate environment with its own Photo Library, Contacts, and so forth so it doesn't affect your Mac.",
          "ts": "1654621391.545589",
          "thread_ts": "1654621253.939729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sFxN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Simulator and Catalyst have different behavior in various ways (for example Simulator treats all filesystem access as case-sensitive even on macOS where most volumes are not which helps catch errors). The Catalyst environment is also tied to the version of macOS you are running unlike Simulator. Simulator is also a separate environment with its own Photo Library, Contacts, and so forth so it doesn't affect your Mac."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2f6545d6-8637-4067-bbe7-554092637fc9",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "Those things may or may not matter to you.",
          "ts": "1654621396.857129",
          "thread_ts": "1654621253.939729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9=/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Those things may or may not matter to you."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "37e2a8f3-48cf-4266-8849-9a67d0d3425f",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "If your unit tests are just exercising data structures or doing straightforward CRUD operations on a database then you can certainly run them under Catalyst.",
          "ts": "1654621437.147299",
          "thread_ts": "1654621253.939729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cIu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If your unit tests are just exercising data structures or doing straightforward CRUD operations on a database then you can certainly run them under Catalyst."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c83a4030-ea5b-4929-b995-7a8aab3f2bf8",
          "type": "message",
          "user": "U03JEAPSKE2",
          "text": "Thank you - I'm actually trying to just test out basic functionality of a shared cross-platform library that we are starting to port to iOS.  I think that the Catalyst environment is probably sufficient for what we would want in this initial phase.\n\nHowever, we may at some point benefit from being able to run unit tests on a simulator as well - are there many differences between the simulator and a physical device as it pertains to unit testing?  Are there ways to automate the execution of unit tests on the simulator as well? (Sorry for the basic questions - this is the first we've dealt with development for iOS...yeah - we're late to the game! :slightly_smiling_face:)",
          "ts": "1654621786.397359",
          "thread_ts": "1654621253.939729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OPB4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you - I'm actually trying to just test out basic functionality of a shared cross-platform library that we are starting to port to iOS.  I think that the Catalyst environment is probably sufficient for what we would want in this initial phase.\n\nHowever, we may at some point benefit from being able to run unit tests on a simulator as well - are there many differences between the simulator and a physical device as it pertains to unit testing?  Are there ways to automate the execution of unit tests on the simulator as well? (Sorry for the basic questions - this is the first we've dealt with development for iOS...yeah - we're late to the game! "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": ")"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9b0e6cd9-5acb-419a-ad79-49ee0fe43be4",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "Not as it pertains to unit testing unless you have specific hardware needs like BT. And yes you can automate on simulators. Many developers test on both and that is what I would also recommend.",
          "ts": "1654621907.251589",
          "thread_ts": "1654621253.939729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9m=0X",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Not as it pertains to unit testing unless you have specific hardware needs like BT. And yes you can automate on simulators. Many developers test on both and that is what I would also recommend."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b6c08386-a47c-450b-8ef9-69180bb5dde5",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "If you want to build your own automation outside of what Xcode provides you can check out `xcrun simctl` as well.",
          "ts": "1654621939.962279",
          "thread_ts": "1654621253.939729",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JEAPSKE2"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "X8X",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you want to build your own automation outside of what Xcode provides you can check out "
                    },
                    {
                      "type": "text",
                      "text": "xcrun simctl",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " as well."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMDF31P1\u003e asked\n\u0026gt; We’ve recently launched widgets at my company. It was really hard to develop with the sim as the widget extension would fail to attach to the simulator after the second or third run. The simulator would crash and not be reusable until restarting the Mac. Any tips of how to avoid that?",
      "ts": "1654622187.347549",
      "thread_ts": "1654622187.347549",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654625460.084979",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Xo5o7",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMDF31P1"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We\\u2019ve recently launched widgets at my company. It was really hard to develop with the sim as the widget extension would fail to attach to the simulator after the second or third run. The simulator would crash and not be reusable until restarting the Mac. Any tips of how to avoid that?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "0eea47bb-22be-4eef-bfc4-628ac45c4106",
          "type": "message",
          "user": "U03HHPYC53L",
          "text": "We improved Widget debugging in Xcode 13.3 and iOS 15.4. If you are still having issue with those versions please file a Feedback, especially when you experience any crashes! And please try the Xcode 14 beta and let us know how that works for you.",
          "ts": "1654622216.653339",
          "thread_ts": "1654622187.347549",
          "edited": {
            "user": "U03HHPYC53L",
            "ts": "1654622225.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "J8F",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We improved Widget debugging in Xcode 13.3 and iOS 15.4. If you are still having issue with those versions please file a Feedback, especially when you experience any crashes! And please try the Xcode 14 beta and let us know how that works for you."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b552b02d-fd26-4853-9875-a1c1471ad65a",
          "type": "message",
          "user": "U03HMDF31P1",
          "text": "i will make sure to file a feedback too. This is what we see once the simulator breaks",
          "ts": "1654622548.089949",
          "thread_ts": "1654622187.347549",
          "files": [
            {
              "id": "F03JK8BTHSR",
              "created": 1654622509,
              "timestamp": 1654622509,
              "name": "Screen Shot 2022-06-07 at 1.21.45 PM.png",
              "title": "Screen Shot 2022-06-07 at 1.21.45 PM.png",
              "mimetype": "image/png",
              "image_exif_rotation": 0,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03HMDF31P1",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 1119814,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03JK8BTHSR-Screen Shot 2022-06-07 at 1.21.45 PM.png",
              "url_private_download": "C03H0JN431U/F03JK8BTHSR-Screen Shot 2022-06-07 at 1.21.45 PM.png",
              "original_h": 2850,
              "original_w": 1252,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JK8BTHSR-d866087126/screen_shot_2022-06-07_at_1.21.45_pm_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JK8BTHSR-d866087126/screen_shot_2022-06-07_at_1.21.45_pm_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JK8BTHSR-d866087126/screen_shot_2022-06-07_at_1.21.45_pm_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JK8BTHSR-d866087126/screen_shot_2022-06-07_at_1.21.45_pm_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 158,
              "thumb_360_h": 360,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JK8BTHSR-d866087126/screen_shot_2022-06-07_at_1.21.45_pm_480.png",
              "thumb_480_w": 211,
              "thumb_480_h": 480,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JK8BTHSR-d866087126/screen_shot_2022-06-07_at_1.21.45_pm_720.png",
              "thumb_720_w": 316,
              "thumb_720_h": 720,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JK8BTHSR-d866087126/screen_shot_2022-06-07_at_1.21.45_pm_960.png",
              "thumb_960_w": 422,
              "thumb_960_h": 960,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JK8BTHSR-d866087126/screen_shot_2022-06-07_at_1.21.45_pm_1024.png",
              "thumb_1024_w": 450,
              "thumb_1024_h": 1024,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03HMDF31P1/F03JK8BTHSR/screen_shot_2022-06-07_at_1.21.45_pm.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03JK8BTHSR-7dfef456d5",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "yAEL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "i will make sure to file a feedback too. This is what we see once the simulator breaks"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "30860ec6-7cd9-4f0e-856b-09b8bc3a6439",
          "type": "message",
          "user": "U03H36PM1BR",
          "text": "Thanks Dominic! Please definitely do file a Feedback for that if you're still seeing this after updating to the versions Christopher mentioned. And please attach the output from `xcrun simctl diagnose` to that Feedback so we can have more information to look at up front and hopefully cut down on the back and forth. :slightly_smiling_face:",
          "ts": "1654622763.831019",
          "thread_ts": "1654622187.347549",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "iLL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks Dominic! Please definitely do file a Feedback for that if you're still seeing this after updating to the versions Christopher mentioned. And please attach the output from "
                    },
                    {
                      "type": "text",
                      "text": "xcrun simctl diagnose",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to that Feedback so we can have more information to look at up front and hopefully cut down on the back and forth. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b43ed209-4b76-45ef-95a3-067634faa2bf",
          "type": "message",
          "user": "U03HMDF31P1",
          "text": "gotta update my mac to get access to the beta xcode but im able to reproduce it with Xcode 13.4. Feedback has been filed: FB10074851 i can check the new xcode tomorrow",
          "ts": "1654623832.912949",
          "thread_ts": "1654622187.347549",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "c/K",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "gotta update my mac to get access to the beta xcode but im able to reproduce it with Xcode 13.4. Feedback has been filed: FB10074851 i can check the new xcode tomorrow"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "971eb370-1f85-4fe7-a7e6-3ef398fa3f2e",
          "type": "message",
          "user": "U03HMDF31P1",
          "text": "Thank you for your help!!",
          "ts": "1654623843.143669",
          "thread_ts": "1654622187.347549",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "l9k",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for your help!!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c8691489-1353-440b-a86c-da0808b16fa9",
          "type": "message",
          "user": "U03H36PM1BR",
          "text": "Sure thing!",
          "ts": "1654625460.084979",
          "thread_ts": "1654622187.347549",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Uyp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sure thing!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4CR8WAG\u003e asked\n\u0026gt; At home when I recently updated my router from an old AirPort Extreme to a mesh Orbi system, wireless debugging has stopped working and I can never get it to work. Is there any known issues with mesh networks and wireless debugging?",
      "ts": "1654623023.533229",
      "thread_ts": "1654623023.533229",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654624397.310589",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "=4HP",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4CR8WAG"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"At home when I recently updated my router from an old AirPort Extreme to a mesh Orbi system, wireless debugging has stopped working and I can never get it to work. Is there any known issues with mesh networks and wireless debugging?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "782e225c-38c2-486c-a48e-a51db6daf101",
          "type": "message",
          "user": "U03HES3E8DT",
          "text": "As a first troubleshooting step, I would recommend checking whether your wireless network is filtering Bonjour/mDNS traffic. Devices which have been configured for wireless development advertise their presence via bonjour and Xcode depends on this traffic to discover and connect to these devices.",
          "ts": "1654623155.339509",
          "thread_ts": "1654623023.533229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0l8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "As a first troubleshooting step, I would recommend checking whether your wireless network is filtering Bonjour/mDNS traffic. Devices which have been configured for wireless development advertise their presence via bonjour and Xcode depends on this traffic to discover and connect to these devices."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "46a9e5ce-78f1-46c1-a5d1-a5be029bd2ce",
          "type": "message",
          "user": "U03HES3E8DT",
          "text": "You can also check whether other devices on your network which you normally expect to be discoverable via bonjour are discoverable on your new WiFi network. That can help isolate whether the issues are specific to your development workflows or all workflows which depend on Bonjour.",
          "ts": "1654623245.801489",
          "thread_ts": "1654623023.533229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VBDA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can also check whether other devices on your network which you normally expect to be discoverable via bonjour are discoverable on your new WiFi network. That can help isolate whether the issues are specific to your development workflows or all workflows which depend on Bonjour."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "08819a41-9c40-4200-b88c-5dc3f49b5e31",
          "type": "message",
          "user": "U03J4CR8WAG",
          "text": "AirPrint does work, but not sure if that uses Bonjour….thanks for the thoughts, I’ll take a look",
          "ts": "1654623311.510049",
          "thread_ts": "1654623023.533229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "W9Xh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "AirPrint does work, but not sure if that uses Bonjour….thanks for the thoughts, I’ll take a look"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ba3cd890-dfd4-48b7-bfbd-835ec9c948cd",
          "type": "message",
          "user": "U03HES3E8DT",
          "text": "If neither of those steps work, please send us a feedback report and include a sysdiagnose from the mac running Xcode and the device on which you would like to develop.",
          "ts": "1654623318.545369",
          "thread_ts": "1654623023.533229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "HZi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If neither of those steps work, please send us a feedback report and include a sysdiagnose from the mac running Xcode and the device on which you would like to develop."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "37f70a04-80c3-4e7a-83f6-84198210b852",
          "type": "message",
          "user": "U03JEJRJS2J",
          "text": "\u003c@U03J4CR8WAG\u003e (I’m not an Apple Employee, but thought I would interject)…I found the free app “Flame Services Browser” useful for browsing bonjour.  I’ve used it on iOS, and looks like it’s available for macOS.  Thought that may help.",
          "ts": "1654623438.928639",
          "thread_ts": "1654623023.533229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03J4CR8WAG"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "k0Q",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03J4CR8WAG"
                    },
                    {
                      "type": "text",
                      "text": " (I’m not an Apple Employee, but thought I would interject)…I found the free app “Flame Services Browser” useful for browsing bonjour.  I’ve used it on iOS, and looks like it’s available for macOS.  Thought that may help."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "78f64d11-9017-4c6c-9bbd-31838446db43",
          "type": "message",
          "user": "U03JRR4R3CY",
          "text": "Also dropping in (not an Apple employee), we had this issue at my previous company as well we used an Asus router and figured out that “Airtime Fairness” was causing debugging not to work.\n\nNot sure how this fixed it, but it might have been a broken implementation. So that is a step you could try as well.",
          "ts": "1654623868.280969",
          "thread_ts": "1654623023.533229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 2,
              "users": [
                "U03J223TNSE",
                "U03J6FV1E95"
              ]
            },
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J6FV1E95"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "QUJT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also dropping in (not an Apple employee), we had this issue at my previous company as well we used an Asus router and figured out that “Airtime Fairness” was causing debugging not to work.\n\nNot sure how this fixed it, but it might have been a broken implementation. So that is a step you could try as well."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3907c5a2-1413-4b4d-a82e-2408b392657f",
          "type": "message",
          "user": "U03J223TNSE",
          "text": "\u003c@U03JRR4R3CY\u003e I`m an Asus router user and have a huge pain with wireless debugging. Did you turned “Airtime Fairness” on or off?",
          "ts": "1654624094.805479",
          "thread_ts": "1654623023.533229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "q7e",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03JRR4R3CY"
                    },
                    {
                      "type": "text",
                      "text": " I`m an Asus router user and have a huge pain with wireless debugging. Did you turned “Airtime Fairness” on or off?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "749f9bb8-df03-4a98-95ca-8bfb3703b34e",
          "type": "message",
          "user": "U03JRR4R3CY",
          "text": "We turned it off",
          "ts": "1654624397.310589",
          "thread_ts": "1654623023.533229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J223TNSE"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VSXp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We turned it off"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ47UMRT\u003e asked\n\u0026gt; Is it possible to run Xcode 13.4.1 under Ventura?  If so, how do you install it?",
      "ts": "1654624205.756539",
      "thread_ts": "1654624205.756539",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 21,
      "latest_reply": "1654642242.587579",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "mrmR",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ47UMRT"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is it possible to run Xcode 13.4.1 under Ventura?  If so, how do you install it?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "d01318e0-4467-4ba2-8b41-14a322897de7",
          "type": "message",
          "user": "U03HES3E8DT",
          "text": "Hi Edward, macOS Ventura requires Xcode 14.",
          "ts": "1654624253.314859",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7RQ3t",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Edward, macOS Ventura requires Xcode 14."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fe9b0ba4-3e50-4298-8d83-1ac90fd1f7ae",
          "type": "message",
          "user": "U03HZ47UMRT",
          "text": "I was coming to that conclusion.  Any advice on installing Monterey on a volume?",
          "ts": "1654624309.784719",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qs9V5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I was coming to that conclusion.  Any advice on installing Monterey on a volume?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "469d7342-adcd-449a-b57d-77dfe0a25246",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "\u003chttps://support.apple.com/en-us/HT208891\u003e",
          "ts": "1654624372.138769",
          "thread_ts": "1654624205.756539",
          "attachments": [
            {
              "fallback": "Apple Support: Use more than one version of macOS on a Mac",
              "id": 1,
              "title": "Use more than one version of macOS on a Mac",
              "title_link": "https://support.apple.com/en-us/HT208891",
              "text": "If you install a compatible macOS on a new volume of your built-in startup disk, your Mac can start up from either volume. It's an easy way to use a newer macOS while keeping a previously installed macOS for software that might require it.",
              "service_name": "Apple Support",
              "service_icon": "https://support.apple.com/favicon.ico",
              "from_url": "https://support.apple.com/en-us/HT208891",
              "original_url": "https://support.apple.com/en-us/HT208891",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TxTfc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "link",
                      "url": "https://support.apple.com/en-us/HT208891",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c1be8094-62bb-4e88-abc7-3e872d8d9457",
          "type": "message",
          "user": "U03HZ47UMRT",
          "text": "I set up a volume to install Ventura, stepped away for a little bit, and found the update was installing over Monterey :disappointed:. It's working great - good job, but need access to Xcode 13.",
          "ts": "1654624453.718879",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8FH5e",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I set up a volume to install Ventura, stepped away for a little bit, and found the update was installing over Monterey "
                    },
                    {
                      "type": "emoji",
                      "name": "disappointed",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": ". It's working great - good job, but need access to Xcode 13."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "528ec045-ceca-4508-a146-d4c7927e0b6c",
          "type": "message",
          "user": "U03HL5EFWP6",
          "text": "When you start the macOS installer you should be able to select a different volume to have it install to a separate one. Or you can use the `createinstallmedia` utility inside the installer bundle to make an installer disk, then restart holding Option and select that disk as the boot disk.",
          "ts": "1654624556.405199",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Nl3sD",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "When you start the macOS installer you should be able to select a different volume to have it install to a separate one. Or you can use the "
                    },
                    {
                      "type": "text",
                      "text": "createinstallmedia",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " utility inside the installer bundle to make an installer disk, then restart holding Option and select that disk as the boot disk."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8a89d10e-8d0a-41e7-b04a-6656228b2419",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "Make sure to run the installer in a way you can select the volume. I guess that volume can now be for Monterey :man-shrugging: \u003chttps://support.apple.com/en-us/HT201372\u003e",
          "ts": "1654624677.355869",
          "thread_ts": "1654624205.756539",
          "attachments": [
            {
              "fallback": "Apple Support: How to create a bootable installer for macOS",
              "id": 1,
              "title": "How to create a bootable installer for macOS",
              "title_link": "https://support.apple.com/en-us/HT201372",
              "text": "You can use an external drive or secondary volume as a startup disk from which to install the Mac operating system.",
              "service_name": "Apple Support",
              "service_icon": "https://support.apple.com/favicon.ico",
              "from_url": "https://support.apple.com/en-us/HT201372",
              "original_url": "https://support.apple.com/en-us/HT201372",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "b5v",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Make sure to run the installer in a way you can select the volume. I guess that volume can now be for Monterey "
                    },
                    {
                      "type": "emoji",
                      "name": "man-shrugging",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "link",
                      "url": "https://support.apple.com/en-us/HT201372",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bdba2f93-34a6-45ec-8048-fb02e9dd0d15",
          "type": "message",
          "user": "U03HZ47UMRT",
          "text": "I thought it would ask for a destination, but it didn't.    How do I actually get Monterey?  Downloads links to the App Store, which opens Settings, which says I'm up to date (Ventura) :disappointed:",
          "ts": "1654624786.920469",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jbU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I thought it would ask for a destination, but it didn't.    How do I actually get Monterey?  Downloads links to the App Store, which opens Settings, which says I'm up to date (Ventura) "
                    },
                    {
                      "type": "emoji",
                      "name": "disappointed",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d9f4655b-129c-4050-a127-f1a5c289e762",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "Good question. That might be messed up from new Settings app. Usually a direct link works.",
          "ts": "1654624883.807269",
          "thread_ts": "1654624205.756539",
          "attachments": [
            {
              "fallback": "Mac App Store: ‎macOS Monterey",
              "id": 1,
              "title": "‎macOS Monterey",
              "title_link": "https://apps.apple.com/us/app/macos-monterey/id1576738294?mt=12",
              "text": "‎macOS Monterey lets you connect, share, and create like never before. Enjoy new FaceTime audio and video enhancements, including spatial audio and Portrait mode. Get more done with powerful productivity tools like Focus, Quick Note, and Tab Groups in Safari. Work fluidly across your devices with Air…",
              "image_url": "https://is1-ssl.mzstatic.com/image/thumb/Purple122/v4/68/41/c8/6841c88c-24bb-2a34-fa1f-a7ded02ff4d2/ProductPageIcon.png/1200x630bb.png",
              "service_name": "Mac App Store",
              "service_icon": "https://apps.apple.com/favicon.ico",
              "from_url": "https://apps.apple.com/us/app/macos-monterey/id1576738294?mt=12",
              "original_url": "https://apps.apple.com/us/app/macos-monterey/id1576738294?mt=12",
              "blocks": null
            }
          ],
          "edited": {
            "user": "U03JE2L47J8",
            "ts": "1654624994.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PYj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Good question. That might be messed up from new Settings app. Usually a direct link works."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "de205bc4-be87-4e40-9189-aa41adad084c",
          "type": "message",
          "user": "U03HZ47UMRT",
          "text": "Yeah... not working.  Get in App Store pops up the Settings app, with no way to download.",
          "ts": "1654625093.882379",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "18T",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yeah... not working.  Get in App Store pops up the Settings app, with no way to download."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3a9a86ea-c4cd-41e4-adcd-d0a2b89bc2bd",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "Try running this command in Terminal `softwareupdate --fetch-full-installer --full-installer-version 12.4` It might take a moment to start downloading. Seems to be working on my test Mac.",
          "ts": "1654625127.656499",
          "thread_ts": "1654624205.756539",
          "edited": {
            "user": "U03JE2L47J8",
            "ts": "1654625213.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YJUl=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Try running this command in Terminal "
                    },
                    {
                      "type": "text",
                      "text": "softwareupdate --fetch-full-installer --full-installer-version 12.4",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " It might take a moment to start downloading. Seems to be working on my test Mac."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ad1bed67-4296-424f-b08d-87a4e10451bb",
          "type": "message",
          "user": "U03HZ47UMRT",
          "text": "That's doing something.. but it says \"Installing: 3.0%\", etc.  Where is it going?",
          "ts": "1654625254.744859",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=AI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That's doing something.. but it says \"Installing: 3.0%\", etc.  Where is it going?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b0c89b4f-65e5-4c77-a3be-a6ec50f0e215",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "Applications folder. It isn't really installing. Just downloading.",
          "ts": "1654625272.534139",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BF8x",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Applications folder. It isn't really installing. Just downloading."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ca40f36c-d8ac-4afd-91b9-1255b4b68f7f",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "You wont see it in there until it's done.",
          "ts": "1654625282.740929",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Lxk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You wont see it in there until it's done."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "66355ea8-6f6d-4134-9976-cd9483e156e9",
          "type": "message",
          "user": "U03HZ47UMRT",
          "text": "Right... so into some tmp space until done.",
          "ts": "1654625343.004809",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "617aK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Right... so into some tmp space until done."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6f86681a-116e-4213-ab3d-71f8eba0acf7",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "Yeah",
          "ts": "1654625349.123059",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UTtp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yeah"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "73fe2ff5-05b3-4568-9a9f-c12ea7fb5833",
          "type": "message",
          "user": "U03HZ47UMRT",
          "text": "Awesome.  So should be able to run it from there, choose my \"Mammoth\" (yeah, I was guessing) volume, then get Xcode 13.4.1, etc.",
          "ts": "1654625386.873049",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KZ7M",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Awesome.  So should be able to run it from there, choose my \"Mammoth\" (yeah, I was guessing) volume, then get Xcode 13.4.1, etc."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7a117095-9c33-4c92-9c02-02df1dacab69",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "Rather than running it, make sure to create a USB installer. Details in the two links I shared.",
          "ts": "1654625428.781159",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GgJW",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Rather than running it, make sure to create a USB installer. Details in the two links I shared."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6375d9c3-e764-4b6f-ae48-29cd55a643b3",
          "type": "message",
          "user": "U03HZ47UMRT",
          "text": "OK... I saw all that last night.  Would be nice to just \"run\" it, but I understand.",
          "ts": "1654625485.927249",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ui1hI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "OK... I saw all that last night.  Would be nice to just \"run\" it, but I understand."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7b15ee12-42be-4a84-926d-7e7028d5485f",
          "type": "message",
          "user": "U03HZ47UMRT",
          "text": "THANKS !!",
          "ts": "1654625496.319019",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cOJxu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "THANKS !!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3f2b772f-38ed-4353-b227-cdb596cc0228",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "To select another volume you need to use it to create a USB installer. No problem. Good luck!",
          "ts": "1654625513.091379",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0CleE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "To select another volume you need to use it to create a USB installer. No problem. Good luck!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9d0793af-74a7-49c6-a8f7-6fded9109f11",
          "type": "message",
          "user": "U03HZ47UMRT",
          "text": "FYI, success.  Thanks again.",
          "ts": "1654642242.587579",
          "thread_ts": "1654624205.756539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "S/kUl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "FYI, success.  Thanks again."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JP09AXLL\u003e asked\n\u0026gt; When testing my app over different simulators it creates multiple instances of simulator which over time cause simulator to become unresponsive. The only fix I have found for this is to quit and relaunch the simulator, which in turn causes me to have to rebuild for each instance. Is there an easier way to clean my cache without me having to start over?",
      "ts": "1654624823.850459",
      "thread_ts": "1654624823.850459",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654625815.935939",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "h5/",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JP09AXLL"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"When testing my app over different simulators it creates multiple instances of simulator which over time cause simulator to become unresponsive. The only fix I have found for this is to quit and relaunch the simulator, which in turn causes me to have to rebuild for each instance. Is there an easier way to clean my cache without me having to start over?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "d113daf3-22d3-4b3c-b35a-26f2c4c98f9c",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "It's possible to run your app on the simulator without rebuilding it, via the `Product \u0026gt; Perform Action \u0026gt; Run without Building` menu item.",
          "ts": "1654624889.554059",
          "thread_ts": "1654624823.850459",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2Bux",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It's possible to run your app on the simulator without rebuilding it, via the "
                    },
                    {
                      "type": "text",
                      "text": "Product \u003e Perform Action \u003e Run without Building",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " menu item."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b95c5d7c-2dc8-4b48-89ce-4afaa7dc019e",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "Using that action (and the similar action for testing, `Product \u0026gt; Perform Action \u0026gt; Test without Building`) can avoid unnecessary rebuilds in between launches of Xcode or the simulator.",
          "ts": "1654624967.738289",
          "thread_ts": "1654624823.850459",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ALb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Using that action (and the similar action for testing, "
                    },
                    {
                      "type": "text",
                      "text": "Product \u003e Perform Action \u003e Test without Building",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ") can avoid unnecessary rebuilds in between launches of Xcode or the simulator."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3F62C158-91C0-4377-865E-F75B05CC606E",
          "type": "message",
          "user": "U03JP09AXLL",
          "text": "Ok, I will give that a try! Thanks so much!",
          "ts": "1654625815.935939",
          "thread_ts": "1654624823.850459",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eqvw2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok,"
                    },
                    {
                      "type": "text",
                      "text": " I "
                    },
                    {
                      "type": "text",
                      "text": "will"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "give"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "try!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Thanks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "so"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "much!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "3151818a-5e2b-4363-81c9-5150a44e4d5b",
      "type": "message",
      "user": "U03HHPBGV99",
      "text": "Hey everyone, our time for the *Simulators and Devices Q\u0026amp;A* is wrapping up. If your question didn’t get answered, you can check to see if there are other Developer Tools Lounge times that can cover your question, sign up for a 1-on-1 Developer Lab, or head over to the \u003chttps://developer.apple.com/forums/|Developer Forums\u003e. Thanks for joining us, and have a great WWDC22! :wwdc22: :tada:",
      "ts": "1654624836.608369",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "+1",
          "count": 1,
          "users": [
            "U03JNAGPDS6"
          ]
        },
        {
          "name": "partying_face",
          "count": 1,
          "users": [
            "U03JBMMB10A"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Kza",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hey everyone, our time for the "
                },
                {
                  "type": "text",
                  "text": "Simulators and Devices Q\u0026A ",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "is wrapping up. If your question didn’t get answered, you can check to see if there are other Developer Tools Lounge times that can cover your question, sign up for a 1-on-1 Developer Lab, or head over to the "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": ". Thanks for joining us, and have a great WWDC22! "
                },
                {
                  "type": "emoji",
                  "name": "wwdc22",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " "
                },
                {
                  "type": "emoji",
                  "name": "tada",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "827857f9-a01f-49c8-9e49-16dab3e87144",
      "type": "message",
      "user": "U03J7HE00BA",
      "text": "Hi everyone! We’re ready to start the *Swift Standard Library Q\u0026amp;A*. We have engineers here that work on the Swift Standard Library to answer your questions. You can submit your questions with the :workflowbolt:button. We’ll review your questions and then post them here for everyone to see.\n\nWe might not be able to get to all of your questions, but we’ll do our best. As a reminder, please keep the content professional and within our code of conduct.\n\nIf you have questions on other topics, you can check to see if there are other Developer Tools Lounge times that might be better suited to your questions. For things not covered here, you can also check for 1-on-1 Developer Labs, or post your questions in the \u003chttps://developer.apple.com/forums/|Developer Forums\u003e.",
      "ts": "1654624964.382659",
      "attachments": [
        {
          "fallback": "Apple Developer Forums",
          "id": 1,
          "title": "Apple Developer Forums",
          "title_link": "https://developer.apple.com/forums/",
          "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
          "service_name": "developer.apple.com",
          "service_icon": "https://forums.developer.apple.com/forums/build-05312022-1/public/assets/favicon.ico",
          "from_url": "https://developer.apple.com/forums/",
          "original_url": "https://developer.apple.com/forums/",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "tada",
          "count": 8,
          "users": [
            "U03HHPMJCDR",
            "U03HB5XJY14",
            "U03HHPMJCSX",
            "U03HESHJ945",
            "U03DF5L7S30",
            "U03HES7M40M",
            "U03HB5WK03G",
            "U03JEMCCQ57"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "vH5t",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hi everyone! We’re ready to start the "
                },
                {
                  "type": "text",
                  "text": "Swift Standard Library Q\u0026A",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": ". We have engineers here that work on the Swift Standard Library to answer your questions. You can submit your questions with the "
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "button. We’ll review your questions and then post them here for everyone to see.\n\nWe might not be able to get to all of your questions, but we’ll do our best. As a reminder, please keep the content professional and within our code of conduct.\n\nIf you have questions on other topics, you can check to see if there are other Developer Tools Lounge times that might be better suited to your questions. For things not covered here, you can also check for 1-on-1 Developer Labs, or post your questions in the "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JSFUKL2U\u003e asked\n\u0026gt; Can I use SPM to build executable binaries for non apple platforms, like example Windows or Platform.custom(“nintendo”)?  ",
      "ts": "1654625287.544719",
      "thread_ts": "1654625287.544719",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654627132.921859",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "RRt",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JSFUKL2U"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can I use SPM to build executable binaries for non apple platforms, like example Windows or Platform.custom(\\u201cnintendo\\u201d)?  \"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "2a36c998-6213-4c06-868e-6255c92dedac",
          "type": "message",
          "user": "U03HHPMJCDR",
          "text": "Swift core team member \"compnerd\" (Saleem) has been working on windows support for SwiftPM. Something like \"nintendo\" would require that someone else from the community make a similar effort.",
          "ts": "1654625423.618369",
          "thread_ts": "1654625287.544719",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "R0bNz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Swift core team member \"compnerd\" (Saleem) has been working on windows support for SwiftPM. Something like \"nintendo\" would require that someone else from the community make a similar effort."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "68f0eda0-c461-4f24-81c6-80abc06a4c88",
          "type": "message",
          "user": "U03HB5XJY14",
          "text": "You can find out about platforms Swift supports for development and deployment here: \u003chttps://www.swift.org/platform-support/\u003e",
          "ts": "1654625621.020859",
          "thread_ts": "1654625287.544719",
          "attachments": [
            {
              "fallback": "Swift.org",
              "id": 1,
              "title": "Swift.org",
              "title_link": "https://www.swift.org/platform-support/",
              "text": "Swift is a general-purpose programming language built using a modern approach to safety, performance, and software design patterns.",
              "thumb_url": "https://swift.org/apple-touch-icon-180x180.png",
              "service_name": "swift.org",
              "service_icon": "https://www.swift.org/apple-touch-icon.png",
              "from_url": "https://www.swift.org/platform-support/",
              "original_url": "https://www.swift.org/platform-support/",
              "blocks": null
            }
          ],
          "edited": {
            "user": "U03HB5XJY14",
            "ts": "1654625631.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cVIab",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can find out about platforms Swift supports for development and deployment here: "
                    },
                    {
                      "type": "link",
                      "url": "https://www.swift.org/platform-support/",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "C30DB27A-1452-4642-96B4-324872544FAA",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Ok, what the point to use Platform.custom()? And can simple developer create custom product type, like ApplePlatforms SDK?",
          "ts": "1654626195.649149",
          "thread_ts": "1654625287.544719",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "H1j=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok,"
                    },
                    {
                      "type": "text",
                      "text": " w"
                    },
                    {
                      "type": "text",
                      "text": "hat"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "point"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "use"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Platform.custom()?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "And"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "can"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "simple"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "developer"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "create"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "custom"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "product"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "type,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "like"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "ApplePlatforms"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "SDK?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8f9d250d-14f4-41f9-854a-2da01e8ffc29",
          "type": "message",
          "user": "U03HB5XJY14",
          "text": "Great question! `Platform.custom(_:)` is intended for use when someone is adding support for a new platform to SwiftPM. During the development process, and before that official support is added, you can use the `.custom` API",
          "ts": "1654626802.749159",
          "thread_ts": "1654625287.544719",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03HHPMJCDR",
                "U03JSFUKL2U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5Z4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Great question! "
                    },
                    {
                      "type": "text",
                      "text": "Platform.custom(_:)",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is intended for use when someone is adding support for a new platform to SwiftPM. During the development process, and before that official support is added, you can use the "
                    },
                    {
                      "type": "text",
                      "text": ".custom",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " API"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "C25761F5-4F75-4D7E-8AD6-3B8FEA380B21",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Thats clear for me. Thanks a lot)",
          "ts": "1654627132.921859",
          "thread_ts": "1654625287.544719",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HB5XJY14"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZO+=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thats"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "clear"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "me."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Thanks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "lot)"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03K110VCN5\u003e asked\n\u0026gt; What is the reason for Swift Regex only being available in iOS, is it because it's a part of the standard library not the swift language it self? If so would it be possible to ship the standard library with our app to gain backwards compatibility like we did before we had ABI stability?",
      "ts": "1654625640.278989",
      "thread_ts": "1654625640.278989",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654626520.945999",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "hgeR",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K110VCN5"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What is the reason for Swift Regex only being available in iOS, is it because it's a part of the standard library not the swift language it self? If so would it be possible to ship the standard library with our app to gain backwards compatibility like we did before we had ABI stability?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "c125d27b-40de-4690-a8f0-c4008d867cdb",
          "type": "message",
          "user": "U03HES7M40M",
          "text": "The swift regex API is available on all Apple platforms. See the documentation here:\n\u003chttps://developer.apple.com/documentation/regexbuilder\u003e",
          "ts": "1654625822.123129",
          "thread_ts": "1654625640.278989",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0Dl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The swift regex API is available on all Apple platforms. See the documentation here:\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/regexbuilder",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1db5ddfb-4801-47cc-85f9-afc68f99a898",
          "type": "message",
          "user": "U03HB5XE9K8",
          "text": "It’s because it’s part of the standard library. The minimum deployment target is iOS 16 and macOS 13. You can deploy to macOS if you target the beta macOS.",
          "ts": "1654625834.066469",
          "thread_ts": "1654625640.278989",
          "edited": {
            "user": "U03HB5XE9K8",
            "ts": "1654625854.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zyL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It’s because it’s part of the standard library. The minimum deployment target is iOS 16 and macOS 13. You can deploy to macOS if you target the beta macOS."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d51a2660-0034-4f1a-beae-d974050c15ae",
          "type": "message",
          "user": "U03HHPMJCDR",
          "text": "You cannot ship the standard library with your app.",
          "ts": "1654625880.181919",
          "thread_ts": "1654625640.278989",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PKVk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You cannot ship the standard library with your app."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7a448a5b-7754-49aa-a403-e6f49d2683ba",
          "type": "message",
          "user": "U03K110VCN5",
          "text": "But being able to would be extremely good, that way new features could be supported on older iOS versions. For something like regex I will have to wait at least two years befor I can use it…",
          "ts": "1654625963.740859",
          "thread_ts": "1654625640.278989",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "point_up::skin-tone-4",
              "count": 1,
              "users": [
                "U03JBCWHJF8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5SJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "But being able to would be extremely good, that way new features could be supported on older iOS versions. For something like regex I will have to wait at least two years befor I can use it…"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d98ee6c9-0eae-486a-b778-2dc259aa3b68",
          "type": "message",
          "user": "U03HHPMJCDR",
          "text": "There are some technical problems with having types defined in multiple modules (the standard library shipped with your app and the standard library that the SDK frameworks your app interacts with are linked against), so simply including the standard library with your app cannot work.\n\nIf having specific features be back-deployable to older OSes is important for you, that's a great request to provide via feedback assistant.",
          "ts": "1654626344.190379",
          "thread_ts": "1654625640.278989",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03K110VCN5"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nB8z",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There are some technical problems with having types defined in multiple modules (the standard library shipped with your app and the standard library that the SDK frameworks your app interacts with are linked against), so simply including the standard library with your app cannot work.\n\nIf having specific features be back-deployable to older OSes is important for you, that's a great request to provide via feedback assistant."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a135bd28-72df-4a5a-b578-f4dedbc0c1f2",
          "type": "message",
          "user": "U03J9D6803X",
          "text": "Is there a good resource or estimates available for how many people still use iPhone 6s, iPhone 7, and original SE?  I've seen articles written in 2022 still recommending that people buy iPhone 7 who can't afford newer phones, and I still have multiple family members who use iPhone 7.  It seems like a particularly large burden this year to either drop or continue support for iPhone 7.",
          "ts": "1654626520.945999",
          "thread_ts": "1654625640.278989",
          "edited": {
            "user": "U03J9D6803X",
            "ts": "1654626548.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ag1l",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is there a good resource or estimates available for how many people still use iPhone 6s, iPhone 7, and original SE?  I've seen articles written in 2022 still recommending that people buy iPhone 7 who can't afford newer phones, and I still have multiple family members who use iPhone 7.  It seems like a particularly large burden this year to either drop or continue support for iPhone 7."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRQ81NEL\u003e asked\n\u0026gt; When to use class and actor?",
      "ts": "1654625692.325859",
      "thread_ts": "1654625692.325859",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654626887.199989",
      "reactions": [
        {
          "name": "+1",
          "count": 1,
          "users": [
            "U03JTMA2FUH"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "xfosY",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRQ81NEL"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"When to use class and actor?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "c778fb1d-721e-4f1c-b95f-751e0a5313fd",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "Good Swift style generally revolves around the use of structs instead of classes. However, if you must use a class to model something, generally you should ask if you need to protect some shared resource or state. This comes up very frequently when using async-await and Swift's other concurrency features. If you find yourself using async-await it's good to start with an actor to protect the state of the type from concurrent modifications. So when do you use classes? Generally when you need a type that has a built-in notion of identity, or when interacting with other languages like Objective-C that require subclassing.",
          "ts": "1654625861.413339",
          "thread_ts": "1654625692.325859",
          "edited": {
            "user": "U03HWDCSCHX",
            "ts": "1654625950.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "ok_hand",
              "count": 1,
              "users": [
                "U03HHPMJCDR"
              ]
            },
            {
              "name": "+1",
              "count": 4,
              "users": [
                "U03J223TNSE",
                "U03HL5QFQ84",
                "U03K12H9FEV",
                "U03KWLVQP96"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "a4l",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Good Swift style generally revolves around the use of structs instead of classes. However, if you must use a class to model something, generally you should ask if you need to protect some shared resource or state. This comes up very frequently when using async-await and Swift's other concurrency features. If you find yourself using async-await it's good to start with an actor to protect the state of the type from concurrent modifications. So when do you use classes? Generally when you need a type that has a built-in notion of identity, or when interacting with other languages like Objective-C that require subclassing."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "46bddfe0-2cb0-4de1-a85c-acbdfd182ca6",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "For more information please see \"Protect mutable state with Swift actors\" from WWDC 2021 \u003chttps://developer.apple.com/videos/play/wwdc2021/10133/\u003e",
          "ts": "1654626280.667619",
          "thread_ts": "1654625692.325859",
          "is_starred": true,
          "attachments": [
            {
              "fallback": "Apple Developer: Protect mutable state with Swift actors - WWDC21 - Videos - Apple Developer",
              "id": 1,
              "title": "Protect mutable state with Swift actors - WWDC21 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/videos/play/wwdc2021/10133/",
              "text": "Data races occur when two separate threads concurrently access the same mutable state. They are trivial to construct, but are notoriously...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/119/5034/5034_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/videos/play/wwdc2021/10133/",
              "original_url": "https://developer.apple.com/videos/play/wwdc2021/10133/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=b4yT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "For more information please see \"Protect mutable state with Swift actors\" from WWDC 2021 "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2021/10133/",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "30EF292E-DF94-45C1-A435-5F9FEB5755A2",
          "type": "message",
          "user": "U03JRQ81NEL",
          "text": "Thanks, like in a SwiftUI project’s view model where one method fetches data from remote and update the some properties. In this class with @MainActor is used if that property read/observed by any UI part?",
          "ts": "1654626471.839859",
          "thread_ts": "1654625692.325859",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8aswX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "like"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "SwiftUI"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "project’s"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "view"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "model"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "where"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "one"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "method"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "fetches"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "data"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "from"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "remote"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "update"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "some"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "properties."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "In"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "this"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "class"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "with"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "@MainActor"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "used"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "if"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "property"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "read/observed"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "by"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "any"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "UI"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "part?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f1b30e21-b6cf-4577-bb5d-6218b8179ec3",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "Yes, if the class has an instance property that is read/observed by the UI, you will need a `@MainActor class`.",
          "ts": "1654626548.211469",
          "thread_ts": "1654625692.325859",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JRQ81NEL"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vS6pO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, if the class has an instance property that is read/observed by the UI, you will need a "
                    },
                    {
                      "type": "text",
                      "text": "@MainActor class",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "B99D70DB-AD2C-42BE-9FA4-95FC08BAC5D0",
          "type": "message",
          "user": "U03JRQ81NEL",
          "text": "And to communicate between actors and other data types, the property should be of sendable type?",
          "ts": "1654626774.098809",
          "thread_ts": "1654625692.325859",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jsZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "And"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "communicate"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "between"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "actors"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "other"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "data"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "types,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "property"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "should"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "sendable"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "type?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0dd99394-617d-4dde-a3d4-e168b0a25b16",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "Yes, in general you should ensure that types are `Sendable` when crossing concurrency boundaries, including async calls. The Swift compiler has warnings and errors in place to catch a wide variety of errors that can potentially occur when writing this kind of code.",
          "ts": "1654626873.844379",
          "thread_ts": "1654625692.325859",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZRv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, in general you should ensure that types are "
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " when crossing concurrency boundaries, including async calls. The Swift compiler has warnings and errors in place to catch a wide variety of errors that can potentially occur when writing this kind of code."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "72f5fff5-9f8f-4cd4-847d-a52dcb53dc18",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "Yes, only `Sendable` types can be safely passed amongst different actors and tasks. The session \"Eliminate data races using Swift Concurrency\" (\u003chttps://developer.apple.com/videos/play/wwdc2022/110351/\u003e) goes into detail on `Sendable` types and how they interact with tasks and actors.",
          "ts": "1654626887.199989",
          "thread_ts": "1654625692.325859",
          "is_starred": true,
          "attachments": [
            {
              "fallback": "Apple Developer: Eliminate data races using Swift Concurrency - WWDC22 - Videos - Apple Developer",
              "id": 1,
              "title": "Eliminate data races using Swift Concurrency - WWDC22 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/videos/play/wwdc2022/110351/",
              "text": "Join us as we explore one of the core concepts in Swift concurrency: isolation of tasks and actors. We'll take you through Swift's...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/124/6705/6705_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/videos/play/wwdc2022/110351/",
              "original_url": "https://developer.apple.com/videos/play/wwdc2022/110351/",
              "blocks": null
            }
          ],
          "edited": {
            "user": "U03HHPMGVEF",
            "ts": "1654626898.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03JRQ81NEL",
                "U03JHARHUTD"
              ]
            },
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03HWDCSCHX"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "u52y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, only "
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " types can be safely passed amongst different actors and tasks. The session \"Eliminate data races using Swift Concurrency\" ("
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2022/110351/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ") goes into detail on "
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " types and how they interact with tasks and actors."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRN827HN\u003e asked\n\u0026gt; SwiftUI and Swift Standard Library sometimes rely on emitting public protocols with underscored/hidden requirements that end up in module interface but – crucially – not in code completion or documentation. I would find this extremely useful as a framework vendor. Is there a way to achieve this using a special flag or attribute?",
      "ts": "1654626163.352109",
      "thread_ts": "1654626163.352109",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654626519.068259",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "263Dx",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRN827HN"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"SwiftUI and Swift Standard Library sometimes rely on emitting public protocols with underscored\\/hidden requirements that end up in module interface but \\u2013 crucially \\u2013 not in code completion or documentation. I would find this extremely useful as a framework vendor. Is there a way to achieve this using a special flag or attribute?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "26fd523d-ec59-41bc-8d10-54f2d5774568",
          "type": "message",
          "user": "U03HB5WK03G",
          "text": "All names beginning with an underscore are hidden by default from code completion and documentation. The Swift Standard Library and some of the packages we maintain rely on this feature to hide entry points that need to be public for technical reasons but aren’t part of the module’s public API. Feel free to use the same convention in your own modules!",
          "ts": "1654626174.460019",
          "thread_ts": "1654626163.352109",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 5,
              "users": [
                "U03JRN827HN",
                "U03JE2L47J8",
                "U03J79KJXPX",
                "U03JTMA2FUH",
                "U03JSFUKL2U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7=cx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "All names beginning with an underscore are hidden by default from code completion and documentation. The Swift Standard Library and some of the packages we maintain rely on this feature to hide entry points that need to be public for technical reasons but aren’t part of the module’s public API. Feel free to use the same convention in your own modules!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a8362238-4f59-4f25-856c-934a1a937ab7",
          "type": "message",
          "user": "U03JRN827HN",
          "text": "Thank you for taking the time to answer my question, Karoy! That’s great news.",
          "ts": "1654626370.037339",
          "thread_ts": "1654626163.352109",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HB5WK03G"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9bQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for taking the time to answer my question, Karoy! That’s great news."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4e29d6fc-66d5-4731-b74c-2c4e7e107847",
          "type": "message",
          "user": "U03HHPMJCDR",
          "text": "Note that you can also hide inits and subscripts by underscoring their argument labels.",
          "ts": "1654626395.848609",
          "thread_ts": "1654626163.352109",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "hushed",
              "count": 6,
              "users": [
                "U03JRN827HN",
                "U03HZ3L66QM",
                "U03J20RJQ2X",
                "U03J79KJXPX",
                "U03J8QZS7J9",
                "U03JSFUKL2U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "DW4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Note that you can also hide inits and subscripts by underscoring their argument labels."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "98b29bf5-492e-4fbd-a21d-d52f6548241c",
          "type": "message",
          "user": "U03JRN827HN",
          "text": "Ha, nice! I would’ve never discovered this. Thanks!",
          "ts": "1654626519.068259",
          "thread_ts": "1654626163.352109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kJwpF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ha, nice! I would’ve never discovered this. Thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4CR8WAG\u003e asked\n\u0026gt; Other than being open source, is Apple really interested in advancing Swift on the server? I'd love to replace some Spring Boot webservices with Swift that use Kafka/Cassandra...unfortunately the community and support just doesn't yet seem mature enough. Is this just a dream of mine or is this a priority for Apple?",
      "ts": "1654626614.153989",
      "thread_ts": "1654626614.153989",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654628682.493999",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "C54P",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4CR8WAG"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Other than being open source, is Apple really interested in advancing Swift on the server? I'd love to replace some Spring Boot webservices with Swift that use Kafka\\/Cassandra...unfortunately the community and support just doesn't yet seem mature enough. Is this just a dream of mine or is this a priority for Apple?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6d5d2171-c016-4347-a248-4b3688852dd5",
          "type": "message",
          "user": "U03HES7M40M",
          "text": "Hey Sean, thanks for your question. Apple is committed to advancing Swift on Server. This is why we have three employees participate in the Swift on Server workgroup. Further we mentor in the google summer of code, where one project is a kafka library. (\u003chttps://summerofcode.withgoogle.com/programs/2022/projects/5nq3GuxI\u003e).\n\nRegarding your wish for a cassandra client, I have noted this and will bring this feedback to the SSWG.",
          "ts": "1654626653.066079",
          "thread_ts": "1654626614.153989",
          "attachments": [
            {
              "fallback": "Google Summer of Code",
              "id": 1,
              "title": "Google Summer of Code",
              "title_link": "https://summerofcode.withgoogle.com/programs/2022/projects/5nq3GuxI",
              "text": "Google Summer of Code is a global program focused on bringing more developers into open source software development.",
              "service_name": "summerofcode.withgoogle.com",
              "service_icon": "https://summerofcode.withgoogle.com/assets/favicons/apple-touch-icon.png",
              "from_url": "https://summerofcode.withgoogle.com/programs/2022/projects/5nq3GuxI",
              "original_url": "https://summerofcode.withgoogle.com/programs/2022/projects/5nq3GuxI",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rzD+Q",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hey Sean, thanks for your question. Apple is committed to advancing Swift on Server. This is why we have three employees participate in the Swift on Server workgroup. Further we mentor in the google summer of code, where one project is a kafka library. ("
                    },
                    {
                      "type": "link",
                      "url": "https://summerofcode.withgoogle.com/programs/2022/projects/5nq3GuxI",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ").\n\nRegarding your wish for a cassandra client, I have noted this and will bring this feedback to the SSWG."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0eb26ed5-6008-41f8-b7e7-fbaa86d20c1b",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "Swift on Server Workgroup (SSWG): \u003chttps://www.swift.org/sswg/\u003e",
          "ts": "1654626666.416459",
          "thread_ts": "1654626614.153989",
          "attachments": [
            {
              "fallback": "Swift.org",
              "id": 1,
              "title": "Swift.org",
              "title_link": "https://www.swift.org/sswg/",
              "text": "Swift is a general-purpose programming language built using a modern approach to safety, performance, and software design patterns.",
              "thumb_url": "https://swift.org/apple-touch-icon-180x180.png",
              "service_name": "swift.org",
              "service_icon": "https://www.swift.org/apple-touch-icon.png",
              "from_url": "https://www.swift.org/sswg/",
              "original_url": "https://www.swift.org/sswg/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Sc3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Swift on Server Workgroup (SSWG): "
                    },
                    {
                      "type": "link",
                      "url": "https://www.swift.org/sswg/",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d4fe9243-7faa-4116-ab6d-69ea4d399d30",
          "type": "message",
          "user": "U03J4CR8WAG",
          "text": "Thanks! Gives me hope of ditching Java soon…I really don’t want to start using Go",
          "ts": "1654626972.892319",
          "thread_ts": "1654626614.153989",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "E1KgQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks! Gives me hope of ditching Java soon…I really don’t want to start using Go"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "65ec8903-e2be-4de8-b239-93655f6b8d1b",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "I’d love to hear more about any specific requirements (besides the one you mention) that you feel are missing",
          "ts": "1654626993.605499",
          "thread_ts": "1654626614.153989",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Uk2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’d love to hear more about any specific requirements (besides the one you mention) that you feel are missing"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1c8bfc7c-669c-4ba1-91a4-7c6d983aeedf",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "(not that I’m claiming that we have everything already :wink:)",
          "ts": "1654627029.043919",
          "thread_ts": "1654626614.153989",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "laughing",
              "count": 1,
              "users": [
                "U03J4CR8WAG"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "NWLZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(not that I’m claiming that we have everything already "
                    },
                    {
                      "type": "emoji",
                      "name": "wink",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": ")"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a9b84784-f685-4cb8-a98b-f7c1e8c7c373",
          "type": "message",
          "user": "U03J4CR8WAG",
          "text": "To be honest, I haven’t taken a very hard look at it in about 2 years, but keeping me in SpringBoot is probably just the plethora of support for nearly anything that may come along requirements-wise. Off the top of my head would be Kafka, Cassandra, WebSockets, and support for securing APIs using a plethora of ways (keycloak, ping, etc - -spring security plugins seems to be available for everything).\n\nMaybe it is time for me to go back and take another look at using it",
          "ts": "1654627549.783539",
          "thread_ts": "1654626614.153989",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GTv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "To be honest, I haven’t taken a very hard look at it in about 2 years, but keeping me in SpringBoot is probably just the plethora of support for nearly anything that may come along requirements-wise. Off the top of my head would be Kafka, Cassandra, WebSockets, and support for securing APIs using a plethora of ways (keycloak, ping, etc - -spring security plugins seems to be available for everything).\n\nMaybe it is time for me to go back and take another look at using it"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "43240d5b-a0be-4f78-b9b0-d7b737534a8f",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Thanks \u003c@U03J4CR8WAG\u003e",
          "ts": "1654627912.591269",
          "thread_ts": "1654626614.153989",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "22ju",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks "
                    },
                    {
                      "type": "user",
                      "user_id": "U03J4CR8WAG"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "83b00450-e4f3-49a1-9c06-2f4aeb4c2b9a",
          "type": "message",
          "user": "U03J4CR8WAG",
          "text": "Thank you, \u003c@U03HL5K6L04\u003e",
          "ts": "1654628682.493999",
          "thread_ts": "1654626614.153989",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BcO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you, "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HL5K6L04"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JE2L47J8\u003e asked\n\u0026gt; What is the plan for XPC support in Distributed Actors? Will there be support or will that be left to the community?",
      "ts": "1654627343.698679",
      "thread_ts": "1654627343.698679",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 12,
      "latest_reply": "1654628998.189499",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "xTcJ1",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JE2L47J8"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What is the plan for XPC support in Distributed Actors? Will there be support or will that be left to the community?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "98dfd760-dc05-429b-9925-f6f09e07a048",
          "type": "message",
          "user": "U03HESHGASH",
          "text": "We’re always interested in improving our APIs, but can’t comment on unreleased products or future plans. If you have specific enhancements you’d find useful, please file feedbacks requesting them",
          "ts": "1654627354.071449",
          "thread_ts": "1654627343.698679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Pzx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We’re always interested in improving our APIs, but can’t comment on unreleased products or future plans. If you have specific enhancements you’d find useful, please file feedbacks requesting them"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4327a36c-56ac-4bab-8048-bf1a6c9ff556",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "Distributed Actors is designed to work across multiple transport mechanisms and with different ways of encoding/decoding data, so it should be possible to build an XPC transport that integrates fully with the language feature. The session \"Meet distributed actors in Swift\" (\u003chttps://developer.apple.com/videos/play/wwdc2022/110356/\u003e) discusses several transport mechanisms.",
          "ts": "1654627436.139349",
          "thread_ts": "1654627343.698679",
          "attachments": [
            {
              "fallback": "Apple Developer: Meet distributed actors in Swift - WWDC22 - Videos - Apple Developer",
              "id": 1,
              "title": "Meet distributed actors in Swift - WWDC22 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/videos/play/wwdc2022/110356/",
              "text": "Discover distributed actors — an extension of Swift's actor model that simplifies development of distributed systems. We'll explore how...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/124/6710/6710_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/videos/play/wwdc2022/110356/",
              "original_url": "https://developer.apple.com/videos/play/wwdc2022/110356/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JE2L47J8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RGYq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Distributed Actors is designed to work across multiple transport mechanisms and with different ways of encoding/decoding data, so it should be possible to build an XPC transport that integrates fully with the language feature. The session \"Meet distributed actors in Swift\" ("
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2022/110356/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ") discusses several transport mechanisms."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4de3aa7b-eca9-4aca-9979-44a64d54821b",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "Thanks. This session is top of my list. I'm looking for ways to clean up my XPC communication code between processes.",
          "ts": "1654627790.951069",
          "thread_ts": "1654627343.698679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "al2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks. This session is top of my list. I'm looking for ways to clean up my XPC communication code between processes."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bbe922aa-7a84-4512-a734-78109cefe902",
          "type": "message",
          "user": "U03J7B27ADD",
          "text": "is this Distributed framework in the docs a repackaged version of \u003chttps://github.com/apple/swift-distributed-actors\u003e",
          "ts": "1654627826.800489",
          "thread_ts": "1654627343.698679",
          "attachments": [
            {
              "fallback": "GitHub: GitHub - apple/swift-distributed-actors: Peer-to-peer cluster implementation for Swift Distributed Actors",
              "id": 1,
              "title": "GitHub - apple/swift-distributed-actors: Peer-to-peer cluster implementation for Swift Distributed Actors",
              "title_link": "https://github.com/apple/swift-distributed-actors",
              "text": "Peer-to-peer cluster implementation for Swift Distributed Actors - GitHub - apple/swift-distributed-actors: Peer-to-peer cluster implementation for Swift Distributed Actors",
              "image_url": "https://opengraph.githubassets.com/701328aa20ccebb4e774ff4cac77d17a67b6b6b25b8fedb85f64e131d12f8ded/apple/swift-distributed-actors",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/apple/swift-distributed-actors",
              "original_url": "https://github.com/apple/swift-distributed-actors",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JE2L47J8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eo/v",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "is this Distributed framework in the docs a repackaged version of "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-distributed-actors",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "33f601c7-013b-4baa-af6b-64559c027909",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "No, they are different things. The `Distributed` module provides the basic protocols and types needed to interact with the `distributed actor` feature of the language, e.g., the `DistributedActor` protocol, `DistributedActorSystem` protocol, etc. The swift-distributed-actors package you reference is one implementation of a distributed actor system (what I referred to as a \"transport\" above) for clusters. Other packages could provide alternative distributed actor system implementations for different environments.",
          "ts": "1654628055.881979",
          "thread_ts": "1654627343.698679",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "the_horns",
              "count": 1,
              "users": [
                "U03JE2L47J8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "J4j",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "No, they are different things. The "
                    },
                    {
                      "type": "text",
                      "text": "Distributed",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " module provides the basic protocols and types needed to interact with the "
                    },
                    {
                      "type": "text",
                      "text": "distributed actor",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " feature of the language, e.g., the "
                    },
                    {
                      "type": "text",
                      "text": "DistributedActor",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " protocol, "
                    },
                    {
                      "type": "text",
                      "text": "DistributedActorSystem",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " protocol, etc. The swift-distributed-actors package you reference is one implementation of a distributed actor system (what I referred to as a \"transport\" above) for clusters. Other packages could provide alternative distributed actor system implementations for different environments."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7bf7da9a-e948-4c61-a698-b7218a85eaa5",
          "type": "message",
          "user": "U03J7B27ADD",
          "text": "so if i wanted to implement a server-side distributed counterpart to a mac app, say, i’d want to use something like the above, as long as it conforms to the DistributedActors protocols?",
          "ts": "1654628206.904059",
          "thread_ts": "1654627343.698679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/VsZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "so if i wanted to implement a server-side distributed counterpart to a mac app, say, i’d want to use something like the above, as long as it conforms to the DistributedActors protocols?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bb8d2f96-885a-44f1-ad71-e6335880ae35",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "Can the Distributed module be baked in to an app if targeting macOS 12?",
          "ts": "1654628794.485889",
          "thread_ts": "1654627343.698679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/eWg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Can the Distributed module be baked in to an app if targeting macOS 12?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fffa23f6-a8a2-4240-ab32-c0a18a8e990e",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "Yes, you could implement a new type that conforms to `DistributedActorSystem`, which communicates over HTTP or sockets or whatever with your server, and then your `distributed actor` types could communicate over that. I expect other packages with implementations of `DistributedActorSystem` will crop up in time.",
          "ts": "1654628805.938469",
          "thread_ts": "1654627343.698679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "U+qX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, you could implement a new type that conforms to "
                    },
                    {
                      "type": "text",
                      "text": "DistributedActorSystem",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", which communicates over HTTP or sockets or whatever with your server, and then your "
                    },
                    {
                      "type": "text",
                      "text": "distributed actor",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " types could communicate over that. I expect other packages with implementations of "
                    },
                    {
                      "type": "text",
                      "text": "DistributedActorSystem",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " will crop up in time."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "de0bcd08-1728-450d-96fb-cda1804a875d",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "No, the `Distributed` module cannot be baked into an app for targeting macOS 12. It's only available in macOS 13 / iOS 16-era OS's",
          "ts": "1654628845.517669",
          "thread_ts": "1654627343.698679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "B3r",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "No, the "
                    },
                    {
                      "type": "text",
                      "text": "Distributed",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " module cannot be baked into an app for targeting macOS 12. It's only available in macOS 13 / iOS 16-era OS's"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "66229ab7-c2f5-463a-a6b4-aa0a2a435cec",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "Thanks. Is this a macOS/iOS only feature at this point or will it be available to Linux too?",
          "ts": "1654628915.798089",
          "thread_ts": "1654627343.698679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "K3Ok",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks. Is this a macOS/iOS only feature at this point or will it be available to Linux too?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "220dbbff-4ee0-4759-bce3-835a6c13e58d",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "It's also available on Linux!",
          "ts": "1654628962.045709",
          "thread_ts": "1654627343.698679",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "the_horns",
              "count": 1,
              "users": [
                "U03JE2L47J8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZgMw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It's also available on Linux!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e0179382-651a-4621-80ad-1ac58590cd46",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "Any recent Swift 5.7 Linux toolchain from \u003chttps://www.swift.org/download/\u003e provides support for distributed actors",
          "ts": "1654628998.189499",
          "thread_ts": "1654627343.698679",
          "attachments": [
            {
              "fallback": "Swift.org",
              "id": 1,
              "title": "Swift.org",
              "title_link": "https://www.swift.org/download/",
              "text": "Swift is a general-purpose programming language built using a modern approach to safety, performance, and software design patterns.",
              "thumb_url": "https://swift.org/apple-touch-icon-180x180.png",
              "service_name": "swift.org",
              "service_icon": "https://www.swift.org/apple-touch-icon.png",
              "from_url": "https://www.swift.org/download/",
              "original_url": "https://www.swift.org/download/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Xxi67",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Any recent Swift 5.7 Linux toolchain from "
                    },
                    {
                      "type": "link",
                      "url": "https://www.swift.org/download/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " provides support for distributed actors"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRQ81NEL\u003e asked\n\u0026gt; When converting a blocking method to async like `Foundation.Process`’s `waitUntilExit()` will block the current thread, so do we embed that logic to a continuation block, or just making function async is enough?",
      "ts": "1654627437.134729",
      "thread_ts": "1654627437.134729",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654629937.813419",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "F08Jo",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRQ81NEL"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"When converting a blocking method to async like `Foundation.Process`\\u2019s `waitUntilExit()` will block the current thread, so do we embed that logic to a continuation block, or just making function async is enough?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "2e9ab265-a25b-42ea-9a7b-7c8e1c0f0d83",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "You are correct that `waitUntilExit()` will block the current thread, and is therefore not appropriate. You can use Process.terminationHandler as an appropriate place to resume the continuation \u003chttps://developer.apple.com/documentation/foundation/process/1408746-terminationhandler\u003e",
          "ts": "1654627450.364139",
          "thread_ts": "1654627437.134729",
          "edited": {
            "user": "U03HWDCSCHX",
            "ts": "1654627489.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03JRQ81NEL"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mx=zI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You are correct that "
                    },
                    {
                      "type": "text",
                      "text": "waitUntilExit()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " will block the current thread, and is therefore not appropriate. You can use Process.terminationHandler as an appropriate place to resume the continuation "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/foundation/process/1408746-terminationhandler",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "88093AE5-F43E-4418-AA9A-4FD7F0148A34",
          "type": "message",
          "user": "U03JRQ81NEL",
          "text": "Awesome, that sounds perfect :star-struck:",
          "ts": "1654627555.200589",
          "thread_ts": "1654627437.134729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "NcOcy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Awesome"
                    },
                    {
                      "type": "text",
                      "text": ","
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "sounds"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "perfect"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "emoji",
                      "name": "star-struck",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "C703008D-6E0B-4A69-B28A-E575A5A37734",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "An extra note: you may want to set the termination handler from a thread that has a run loop running, which is hard to guarantee using a task. The easiest way is to set up your task on the main actor before launching it.",
          "ts": "1654628308.446099",
          "thread_ts": "1654627437.134729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zdcm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "An"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "extra"
                    },
                    {
                      "type": "text",
                      "text": " note"
                    },
                    {
                      "type": "text",
                      "text": ":"
                    },
                    {
                      "type": "text",
                      "text": " you "
                    },
                    {
                      "type": "text",
                      "text": "may"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "want"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " set the "
                    },
                    {
                      "type": "text",
                      "text": "termination"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "handler"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "from"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " thread "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "has"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " run "
                    },
                    {
                      "type": "text",
                      "text": "loop"
                    },
                    {
                      "type": "text",
                      "text": " running"
                    },
                    {
                      "type": "text",
                      "text": ","
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "which"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "hard"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "guarantee"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "using"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "task. The"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "easiest"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "way"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "set"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "up"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "your"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "task"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "main"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "actor"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "before"
                    },
                    {
                      "type": "text",
                      "text": " launching "
                    },
                    {
                      "type": "text",
                      "text": "it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "69B0C30F-3736-47C8-93F3-083008D5F271",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "You also can use continuations to convert your termination handler use to async/await; check out withCheckedContinuation(…) for that.",
          "ts": "1654628392.158109",
          "thread_ts": "1654627437.134729",
          "edited": {
            "user": "U03HWDD6RED",
            "ts": "1654628444.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KQlj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You also can use continuations to convert your termination handler use to async/await; check out withCheckedContinuation(…)"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for that."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "44BFB78A-44BE-423C-B827-C943EE32FBAE",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "\u003chttps://developer.apple.com/documentation/swift/withcheckedcontinuation(function:_:)|https://developer.apple.com/documentation/swift/withcheckedcontinuation(function:_:)\u003e",
          "ts": "1654628448.989349",
          "thread_ts": "1654627437.134729",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JRQ81NEL"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "clR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/swift/withcheckedcontinuation(function:_:)",
                      "text": "https://developer.apple.com/documentation/swift/withcheckedcontinuation(function:_:)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "032FAD87-937F-4193-81AB-F5D609A0E186",
          "type": "message",
          "user": "U03JRQ81NEL",
          "text": "Thanks. I think I need to request for lab appointment for more details :sweat_smile::crossed_fingers::skin-tone-2:.",
          "ts": "1654629937.813419",
          "thread_ts": "1654627437.134729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OA1RI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks"
                    },
                    {
                      "type": "text",
                      "text": "."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "think"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "need"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " request "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "lab"
                    },
                    {
                      "type": "text",
                      "text": " appointment "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "more"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "details"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "emoji",
                      "name": "sweat_smile",
                      "skin_tone": 0
                    },
                    {
                      "type": "emoji",
                      "name": "crossed_fingers",
                      "skin_tone": 2
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03K110VCN5\u003e asked\n\u0026gt; There is a lot of different architectural patterns out there used to separate UI from businesslogic like MVVM, MVC, VIPER and so on..  Apple still seems to be favouring MVC as the preferred style. Is that correct or are you more considering your self as agnostics in that matter?",
      "ts": "1654627474.818129",
      "thread_ts": "1654627474.818129",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654627767.928949",
      "reactions": [
        {
          "name": "eyes",
          "count": 4,
          "users": [
            "U03JBCWHJF8",
            "U03J88TDVC6",
            "U03JTMA2FUH",
            "U03JGPGBQTV"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "6Glu=",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K110VCN5"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"There is a lot of different architectural patterns out there used to separate UI from businesslogic like MVVM, MVC, VIPER and so on..  Apple still seems to be favouring MVC as the preferred style. Is that correct or are you more considering your self as agnostics in that matter?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "31a1ddbe-63b1-4ed1-8443-34ff327cbc62",
          "type": "message",
          "user": "U03HB5XE9K8",
          "text": "This would be better answered by a UI toolkit team, but note that the standard library designers want to support every reasonable use case, including all useful app architectures.",
          "ts": "1654627547.744099",
          "thread_ts": "1654627474.818129",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 3,
              "users": [
                "U03K110VCN5",
                "U03JRQ81NEL",
                "U03HHPMJCDR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BbKm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This would be better answered by a UI toolkit team, but note that the standard library designers want to support every reasonable use case, including all useful app architectures."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "59755adc-f4ad-4bfe-a6ad-817fa719f0ad",
          "type": "message",
          "user": "U03JBCWHJF8",
          "text": ":popcorn: - SwiftUI feels like it gels much more with an MVVM approach where your view is directly driven by the data massaged and bound directly in some ViewModel :thinking_face: but driven by a model.  I'm actually really curious about this too.",
          "ts": "1654627607.605799",
          "thread_ts": "1654627474.818129",
          "edited": {
            "user": "U03JBCWHJF8",
            "ts": "1654627639.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Rzm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "emoji",
                      "name": "popcorn",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " - SwiftUI feels like it gels much more with an MVVM approach where your view is directly driven by the data massaged and bound directly in some ViewModel "
                    },
                    {
                      "type": "emoji",
                      "name": "thinking_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " but driven by a model.  I'm actually really curious about this too."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9bd7c6c7-1355-4f97-9571-fd14d75fccea",
          "type": "message",
          "user": "U03HB5XE9K8",
          "text": "I would suggest asking this in the SwiftUI lounge; there would be better answers from that team.",
          "ts": "1654627767.928949",
          "thread_ts": "1654627474.818129",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1::skin-tone-4",
              "count": 1,
              "users": [
                "U03JBCWHJF8"
              ]
            },
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03J88TDVC6",
                "U03JTMA2FUH"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LNoY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I would suggest asking this in the SwiftUI lounge; there would be better answers from that team."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ3L66QM\u003e asked\n\u0026gt; Saw Foundation team merged the Foundation Swift Overlay into Foundation.framework. \n\u0026gt; Does it mean entire Swift runtime will be loaded and linked as part of Foundation (for a pure Obj-C project) for iOS 16 unconditionally?  Trying to understand what extra cost there will be during app launch (for a zero-swift project but import Foundation).",
      "ts": "1654627895.121579",
      "thread_ts": "1654627895.121579",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654630169.261569",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "NAco",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ3L66QM"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Saw Foundation team merged the Foundation Swift Overlay into Foundation.framework. \\nDoes it mean entire Swift runtime will be loaded and linked as part of Foundation (for a pure Obj-C project) for iOS 16 unconditionally?  Trying to understand what extra cost there will be during app launch (for a zero-swift project but import Foundation).\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "2c063b1f-9720-4db8-bec0-c3bd5fd8713b",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Hi \u003c@U03HZ3L66QM\u003e! Great question, thanks for asking. We’ve done a lot of measurements on this with the apps that ship with the system and made a ton of small improvements all over the place to make sure that any additional dirty memory cost was ‘paid for’",
          "ts": "1654628002.520749",
          "thread_ts": "1654627895.121579",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 3,
              "users": [
                "U03HHPMJCDR",
                "U03JE2L47J8",
                "U03HZ3L66QM"
              ]
            },
            {
              "name": "raised_hands",
              "count": 2,
              "users": [
                "U03HWDCSCHX",
                "U03JE2L47J8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1s=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HZ3L66QM"
                    },
                    {
                      "type": "text",
                      "text": "! Great question, thanks for asking. We’ve done a lot of measurements on this with the apps that ship with the system and made a ton of small improvements all over the place to make sure that any additional dirty memory cost was ‘paid for’"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "74a00bb7-6a48-4b29-8ea5-bf1383e8ce6f",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "If you see any regressions or other issues, please do reach out so we can investigate. Probably via a bug report if it’s after this lab is done",
          "ts": "1654628113.956199",
          "thread_ts": "1654627895.121579",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TYs4P",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you see any regressions or other issues, please do reach out so we can investigate. Probably via a bug report if it’s after this lab is done"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b3b91d04-49f7-4cb7-8116-c373f1d01083",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "One thing to note here is that part of what we did is swap around some dependencies that previously were brought in when you `import Foundation`. That will bring in a lot fewer other libraries now",
          "ts": "1654628170.718289",
          "thread_ts": "1654627895.121579",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "the_horns",
              "count": 3,
              "users": [
                "U03JE2L47J8",
                "U03HZ3L66QM",
                "U03HJ9NBK7D"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "QXMf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "One thing to note here is that part of what we did is swap around some dependencies that previously were brought in when you "
                    },
                    {
                      "type": "text",
                      "text": "import Foundation",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". That will bring in a lot fewer other libraries now"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9557551C-47E5-4628-A798-7977466445EA",
          "type": "message",
          "user": "U03HZ3L66QM",
          "text": "Thanks for answering this the measurement works!\nNot sure if I understand it correctly. Do you mean that\n“though now whole Swift runtime is linked even for a pure objc project, there will be less dependencies. So the overall impact is neutral” ?",
          "ts": "1654628483.708599",
          "thread_ts": "1654627895.121579",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "QRi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for answering this the measurement works!\nNot sure if I understand it correctly. Do you mean that\n“though now whole Swift runtime is linked even for a pure objc project, there will be less dependencies. So the overall impact is neutral” ?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "C550241E-CB1A-435C-9796-F6A5A063B332",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "It turns out that “the whole swift runtime” is actually not that big of a dependency, basically",
          "ts": "1654629818.857629",
          "thread_ts": "1654627895.121579",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HZ3L66QM"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "A2Y28",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "turns"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "out"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "“the"
                    },
                    {
                      "type": "text",
                      "text": " whole swift "
                    },
                    {
                      "type": "text",
                      "text": "runtime”"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " actually not "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " big "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "dependency,"
                    },
                    {
                      "type": "text",
                      "text": " basically"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "19A754D1-6097-44D9-9297-89E1A2541D7E",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "It's a small runtime library plus the standard library",
          "ts": "1654629836.245879",
          "thread_ts": "1654627895.121579",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "q=XqT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It's "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "small"
                    },
                    {
                      "type": "text",
                      "text": " runtime "
                    },
                    {
                      "type": "text",
                      "text": "library"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "plus"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "standard"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "library"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "A52CB71F-A780-442C-A354-E5579C5E6798",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "We add in a few more like the overlays for dispatch and XPC; but on Apple’s platforms these are all cached and the impact to launch should be really small, if it's even measurable",
          "ts": "1654629881.416099",
          "thread_ts": "1654627895.121579",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RM=lm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "add"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "few"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "more"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "like"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " overlays "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "dispatch"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "XPC;"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "but"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Apple’s"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "platforms"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "these"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "are"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "all"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "cached"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " the "
                    },
                    {
                      "type": "text",
                      "text": "impact"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "launch"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "should"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "really"
                    },
                    {
                      "type": "text",
                      "text": " small"
                    },
                    {
                      "type": "text",
                      "text": ","
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "if"
                    },
                    {
                      "type": "text",
                      "text": " it's "
                    },
                    {
                      "type": "text",
                      "text": "even"
                    },
                    {
                      "type": "text",
                      "text": " measurable"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cbe3e873-d209-4406-974d-3a5889f757ce",
          "type": "message",
          "user": "U03HZ3L66QM",
          "text": "\u003c@U03HL5K6L04\u003e Really appreciate the detailed answers and all the amazing works you’ve done!",
          "ts": "1654630169.261569",
          "thread_ts": "1654627895.121579",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HL5K6L04"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2g9vG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HL5K6L04"
                    },
                    {
                      "type": "text",
                      "text": " Really appreciate the detailed answers and all the amazing works you’ve done!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JKD29SCV\u003e asked\n\u0026gt; There are so many different means to approach concurrency, or even asynchronous development in iOS today. Does GCD and operations still have their place in a project today, or could that all be trumped by focussing on Combine and/or async/await?",
      "ts": "1654628350.752979",
      "thread_ts": "1654628350.752979",
      "is_starred": true,
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654628901.982339",
      "reactions": [
        {
          "name": "+1",
          "count": 3,
          "users": [
            "U03JTMA2FUH",
            "U03HX9ZTNQ7",
            "U03JP1ADKGA"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "q91M",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JKD29SCV"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"There are so many different means to approach concurrency, or even asynchronous development in iOS today. Does GCD and operations still have their place in a project today, or could that all be trumped by focussing on Combine and\\/or async\\/await?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ba9d2c87-342d-46a6-a4c9-f610248a4d3d",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Great question, thanks \u003c@U03JKD29SCV\u003e. You’re 100% correct that there are a lot of ways to add concurrency to your project. It’s been a long-standing challenge to make concurrency safe and easy to understand. I hope you’ll forgive my bias, but given the channel we’re in I’ll say this — async/await is the best way to use concurrency in your app. If you can use it, use that first. You’ve probably seen that we’re actively improving it over time as well, with more support for `Sendable` this year, additional algorithms for Async Sequence, and more.",
          "ts": "1654628520.096709",
          "thread_ts": "1654628350.752979",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wWND",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Great question, thanks "
                    },
                    {
                      "type": "user",
                      "user_id": "U03JKD29SCV"
                    },
                    {
                      "type": "text",
                      "text": ". You’re 100% correct that there are a lot of ways to add concurrency to your project. It’s been a long-standing challenge to make concurrency safe and easy to understand. I hope you’ll forgive my bias, but given the channel we’re in I’ll say this — async/await is the best way to use concurrency in your app. If you can use it, use that first. You’ve probably seen that we’re actively improving it over time as well, with more support for "
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " this year, additional algorithms for Async Sequence, and more."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4915a0d3-a02c-433b-b12a-0408e4ba7218",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "What I love most about async/await is the deep integration with the language that it provides. That allows the highest level of safety because the compiler and language can help point out places where there may have otherwise been a concurrency bug. For example, using actors to isolate state",
          "ts": "1654628580.964059",
          "thread_ts": "1654628350.752979",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VaPi2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "What I love most about async/await is the deep integration with the language that it provides. That allows the highest level of safety because the compiler and language can help point out places where there may have otherwise been a concurrency bug. For example, using actors to isolate state"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1fa4be93-d234-44a4-ba94-ab2e1bcd110b",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Now, do other things still have a place today? I think the answer is yes if you’re deploying to platforms that don’t support async/await (although with back deployment and the rapid uptake of new OSes, this should hopefully be a short lived problem). Another reason is just supporting legacy code that you don’t want to refactor right away. We hope that there are enough pieces available that you can start to adopt it incrementally where possible as well",
          "ts": "1654628688.910149",
          "thread_ts": "1654628350.752979",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kL2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Now, do other things still have a place today? I think the answer is yes if you’re deploying to platforms that don’t support async/await (although with back deployment and the rapid uptake of new OSes, this should hopefully be a short lived problem). Another reason is just supporting legacy code that you don’t want to refactor right away. We hope that there are enough pieces available that you can start to adopt it incrementally where possible as well"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "970380af-6d30-4795-9c39-5ea16e142c10",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Hope that helps!",
          "ts": "1654628702.089969",
          "thread_ts": "1654628350.752979",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AnRi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hope that helps!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4d418065-7c94-4245-a398-8f6c9a75e382",
          "type": "message",
          "user": "U03JKD29SCV",
          "text": "Thanks a ton \u003c@U03HL5K6L04\u003e, it helps yeah. I’ve been diving quite deep into the new async algorithms, hence the question. I’ve personally always been a fan of operations. Not just for concurrency or asynchronous tasks, but also just to plainly schedule a flow to happen in a certain order, that might be a different conversation though :sweat_smile: . I’m excited to (hopefully soon) start incorporating these swift async algorithms.",
          "ts": "1654628901.982339",
          "thread_ts": "1654628350.752979",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 4,
              "users": [
                "U03HL5K6L04",
                "U03JTMA2FUH",
                "U03K308A2TS",
                "U03JRRA06AU"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qNH3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks a ton "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HL5K6L04"
                    },
                    {
                      "type": "text",
                      "text": ", it helps yeah. I’ve been diving quite deep into the new async algorithms, hence the question. I’ve personally always been a fan of operations. Not just for concurrency or asynchronous tasks, but also just to plainly schedule a flow to happen in a certain order, that might be a different conversation though "
                    },
                    {
                      "type": "emoji",
                      "name": "sweat_smile",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " . I’m excited to (hopefully soon) start incorporating these swift async algorithms."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "03260c37-7da0-4690-95d2-fa480805dbb9",
      "type": "message",
      "user": "U03HESHJ945",
      "text": ":watch: This is just a reminder that we’re at the halfway mark with one hour left. We’ve received great questions so far! Keep them coming!",
      "ts": "1654628533.422499",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "heart",
          "count": 3,
          "users": [
            "U03H36U6JHM",
            "U03J7HE00BA",
            "U03JTMA2FUH"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ReJ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "emoji",
                  "name": "watch",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " This is just a reminder that we’re at the halfway mark with one hour left. We’ve received great questions so far! Keep them coming!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J1R49EVB\u003e asked\n\u0026gt; Has it been considered to have a type like instancetype that could be used as a return type for a method? Use case: methods that return self (or other instances of the same class), that subclasses could override, and the type checker would know it was an instance of the subclass. Currently working around it with generics, but that requires explicitly typing the receiving variable…",
      "ts": "1654629566.835109",
      "thread_ts": "1654629566.835109",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 11,
      "latest_reply": "1654630397.623909",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "FE9",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J1R49EVB"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Has it been considered to have a type like instancetype that could be used as a return type for a method? Use case: methods that return self (or other instances of the same class), that subclasses could override, and the type checker would know it was an instance of the subclass. Currently working around it with generics, but that requires explicitly typing the receiving variable\\u2026\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6068c387-1fb9-44a8-8364-93898bef180c",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "Hi Amy! I hope your WWDC is going well so far!\n\nGenerally speaking, the equivalent to `instancetype` in Swift is `Self`. For example:\n\n```class Animal {\n  class func adopt() -\u0026gt; Self {\n    ...\n  }\n}\n\nclass Dog: Animal {\n  override class func adopt() -\u0026gt; Self {\n    ...\n  }\n}```\nAre you running into a scenario where `Self` isn't the right tool or isn't building? If I'm misunderstanding the issue, please let me know! :slightly_smiling_face:",
          "ts": "1654629798.970999",
          "thread_ts": "1654629566.835109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "IYS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Amy! I hope your WWDC is going well so far!\n\nGenerally speaking, the equivalent to "
                    },
                    {
                      "type": "text",
                      "text": "instancetype",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in Swift is "
                    },
                    {
                      "type": "text",
                      "text": "Self",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". For example:\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"class Animal {\\n  class func adopt() -\u003e Self {\\n    ...\\n  }\\n}\\n\\nclass Dog: Animal {\\n  override class func adopt() -\u003e Self {\\n    ...\\n  }\\n}\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\nAre you running into a scenario where "
                    },
                    {
                      "type": "text",
                      "text": "Self",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " isn't the right tool or isn't building? If I'm misunderstanding the issue, please let me know! "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "AED94862-5070-4675-887B-44E2681C7062",
          "type": "message",
          "user": "U03J1R49EVB",
          "text": "Can this be used on an instance method?",
          "ts": "1654629832.503409",
          "thread_ts": "1654629566.835109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ECN3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Can"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "this"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "used"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "an"
                    },
                    {
                      "type": "text",
                      "text": " instance "
                    },
                    {
                      "type": "text",
                      "text": "method?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "955da32f-9472-4ebe-b434-f358f9cc0b54",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "Yes! I couldn't think of a specific example to share, but it should work with instance methods as well. You just need to drop the `class` specifier on the function(s).",
          "ts": "1654629903.086589",
          "thread_ts": "1654629566.835109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9jWa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes! I couldn't think of a specific example to share, but it should work with instance methods as well. You just need to drop the "
                    },
                    {
                      "type": "text",
                      "text": "class",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " specifier on the function(s)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3591C961-8FCB-43A1-B953-D6161739968B",
          "type": "message",
          "user": "U03J1R49EVB",
          "text": "The specifics: I'm porting Lexical (originally JavaScript text editor library). We have a clone-on-write pattern for our node classes. You call node.getWriteable() and it should return either the same node (if it's already writeable) or a mutable copy. \n\nI could have sworn I investigated Self as a type, but maybe I overlooked it! I will check it out. Thanks. ",
          "ts": "1654629981.436169",
          "thread_ts": "1654629566.835109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cleem",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The"
                    },
                    {
                      "type": "text",
                      "text": " specifics"
                    },
                    {
                      "type": "text",
                      "text": ":"
                    },
                    {
                      "type": "text",
                      "text": " I'm porting "
                    },
                    {
                      "type": "text",
                      "text": "Lexical"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "(originally"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "JavaScript"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "text"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "editor"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "library). We"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "have"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "clone-on-write"
                    },
                    {
                      "type": "text",
                      "text": " pattern "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "our"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "node"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "classes. You"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "call"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "node.getWriteable()"
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "should"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "return"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "either"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "same"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "node"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "(if"
                    },
                    {
                      "type": "text",
                      "text": " it's "
                    },
                    {
                      "type": "text",
                      "text": "already"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "writeable)"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "or"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " mutable copy"
                    },
                    {
                      "type": "text",
                      "text": ". "
                    },
                    {
                      "type": "text",
                      "text": "\n\n"
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "could"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "have"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "sworn"
                    },
                    {
                      "type": "text",
                      "text": " I "
                    },
                    {
                      "type": "text",
                      "text": "investigated"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Self"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "as"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "type,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "but"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "maybe"
                    },
                    {
                      "type": "text",
                      "text": " I "
                    },
                    {
                      "type": "text",
                      "text": "overlooked"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "will"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "check"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "out. Thanks. "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0fae0154-50b3-4c73-b05b-fa7ee4f12b08",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "Happy to help!",
          "ts": "1654630001.260839",
          "thread_ts": "1654629566.835109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "QNT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Happy to help!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "788AD87F-1D15-4DE8-A995-BF648D4962D4",
          "type": "message",
          "user": "U03J1R49EVB",
          "text": "(If this does work, why don't the multiple foundation mutablecopy methods use it?)",
          "ts": "1654630011.360799",
          "thread_ts": "1654629566.835109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jwKz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(If"
                    },
                    {
                      "type": "text",
                      "text": " this does "
                    },
                    {
                      "type": "text",
                      "text": "work,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "why"
                    },
                    {
                      "type": "text",
                      "text": " don't "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "multiple"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "foundation"
                    },
                    {
                      "type": "text",
                      "text": " mutable"
                    },
                    {
                      "type": "text",
                      "text": "copy"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "methods"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "use"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it?)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c017cb23-462b-4d3d-8fc4-de9882eb0401",
          "type": "message",
          "user": "U03HESHGASH",
          "text": "Those are imported from ObjC, rather than written natively in Swift",
          "ts": "1654630116.257149",
          "thread_ts": "1654629566.835109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GrVFI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Those are imported from ObjC, rather than written natively in Swift"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "117458FD-3042-4E80-9ACA-BB97ECC6F5CB",
          "type": "message",
          "user": "U03J1R49EVB",
          "text": "Ah gotcha!",
          "ts": "1654630267.104439",
          "thread_ts": "1654629566.835109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XhQq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ah"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "gotcha!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "170a9dd4-8e30-4062-8c06-d8261de6b750",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "As David says. `mutableCopy()` is an interface into Objective-C's `NSMutableCopying` protocol rather than being a Swift feature. One constraint here is that `mutableCopy()` does _not_ necessarily return an instance of `Self`—it could, for instance, return an instance of a type elsewhere in the class hierarchy. Compare `copy()` which often _cannot_ return `Self`:\n\n```let a: NSMutableString = ...\nlet b = a.copy() // type of `b` is `NSString`, not `NSMutableString`.```\n",
          "ts": "1654630362.609229",
          "thread_ts": "1654629566.835109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "E=Re",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "As David says. "
                    },
                    {
                      "type": "text",
                      "text": "mutableCopy()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is an interface into Objective-C's "
                    },
                    {
                      "type": "text",
                      "text": "NSMutableCopying",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " protocol rather than being a Swift feature. One constraint here is that "
                    },
                    {
                      "type": "text",
                      "text": "mutableCopy()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " does "
                    },
                    {
                      "type": "text",
                      "text": "not",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " necessarily return an instance of "
                    },
                    {
                      "type": "text",
                      "text": "Self",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "—it could, for instance, return an instance of a type elsewhere in the class hierarchy. Compare "
                    },
                    {
                      "type": "text",
                      "text": "copy()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " which often "
                    },
                    {
                      "type": "text",
                      "text": "cannot",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " return "
                    },
                    {
                      "type": "text",
                      "text": "Self",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ":\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"let a: NSMutableString = ...\\nlet b = a.copy() \\/\\/ type of `b` is `NSString`, not `NSMutableString`.\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": []
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "736087bc-b05c-4d61-9816-24164e1e6efb",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "`-copy` and `-mutableCopy` in Objective-C don't use `instancetype`, either, because they don't fulfill the contract: `-copy` on an `NSMutableString` returns some subclass of `NSString` that won't necessarily by an `NSMutableString`. And `-mutableCopy` will return some `NSMutableString` or subclass thereof that might not be related to the `NSString` (or subclass) it was called from.",
          "ts": "1654630387.474319",
          "thread_ts": "1654629566.835109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8xE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "-copy",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "text",
                      "text": "-mutableCopy",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in Objective-C don't use "
                    },
                    {
                      "type": "text",
                      "text": "instancetype",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", either, because they don't fulfill the contract: "
                    },
                    {
                      "type": "text",
                      "text": "-copy",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " on an "
                    },
                    {
                      "type": "text",
                      "text": "NSMutableString",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " returns some subclass of "
                    },
                    {
                      "type": "text",
                      "text": "NSString",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " that won't necessarily by an "
                    },
                    {
                      "type": "text",
                      "text": "NSMutableString",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". And "
                    },
                    {
                      "type": "text",
                      "text": "-mutableCopy",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " will return some "
                    },
                    {
                      "type": "text",
                      "text": "NSMutableString",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " or subclass thereof that might not be related to the "
                    },
                    {
                      "type": "text",
                      "text": "NSString",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " (or subclass) it was called from."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9b63d644-392f-4601-865c-9be1d8230c28",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "There's no generic way to express the relationship between the types of `a` and `a.copy()` in Objective-C, so `id` is used, and that's imported into Swift as `Any`.",
          "ts": "1654630397.623909",
          "thread_ts": "1654629566.835109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ncj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There's no generic way to express the relationship between the types of "
                    },
                    {
                      "type": "text",
                      "text": "a",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "text",
                      "text": "a.copy()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in Objective-C, so "
                    },
                    {
                      "type": "text",
                      "text": "id",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is used, and that's imported into Swift as "
                    },
                    {
                      "type": "text",
                      "text": "Any",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HWEGHRKR\u003e asked\n\u0026gt; with xcode 14, \n\u0026gt; ```\n\u0026gt; @available(iOS 15.0, *)\n\u0026gt; private(set) lazy var myVar: \u0026lt;Some type only available on iOS15.0+\u0026gt;\n\u0026gt; ```\n\u0026gt; gives `Stored properties cannot be marked potentially unavailable with '@available'` error. what is the new workaround we should use to have a stored property of a type that is only available on some versions?",
      "ts": "1654629893.473599",
      "thread_ts": "1654629893.473599",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654630324.583839",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "M9Ddv",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HWEGHRKR"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"with xcode 14, \\n```\\n@available(iOS 15.0, *)\\nprivate(set) lazy var myVar: \u003cSome type only available on iOS15.0+\u003e\\n```\\ngives `Stored properties cannot be marked potentially unavailable with '@available'` error. what is the new workaround we should use to have a stored property of a type that is only available on some versions?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "f9c844c7-4657-429e-9135-9cd59c64e1a5",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "The solution is generally to hide the true underlying type of the variable. One potential solution is:\n```final class Foo {\n  private lazy var _myBackingVar: Any { ... }\n  @available(iOS 15.0, *)\n  var myConditionallyAvailableVar: RealType { _myBackingVar as! RealType }\n}```",
          "ts": "1654629936.672339",
          "thread_ts": "1654629893.473599",
          "edited": {
            "user": "U03HWDCSCHX",
            "ts": "1654629998.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U03HWEGHRKR"
              ]
            },
            {
              "name": "+1",
              "count": 3,
              "users": [
                "U03HWEGHRKR",
                "U03HB5XE9K8",
                "U03J8QZS7J9"
              ]
            },
            {
              "name": "question",
              "count": 2,
              "users": [
                "U03JRRALV08",
                "U03JTMA2FUH"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "C05ZU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The solution is generally to hide the true underlying type of the variable. One potential solution is:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"final class Foo {\\n  private lazy var _myBackingVar: Any { ... }\\n  @available(iOS 15.0, *)\\n  var myConditionallyAvailableVar: RealType { _myBackingVar as! RealType }\\n}\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8aeebd02-7907-454c-b8c2-435656282464",
          "type": "message",
          "user": "U03HB5WK03G",
          "text": "Another option that is sometimes useful is to define separate types for the cases with/without the partially available stored property, and to define a protocol over them that covers common members and can hold extension methods",
          "ts": "1654630324.583839",
          "thread_ts": "1654629893.473599",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U03HWEGHRKR"
              ]
            },
            {
              "name": "+1",
              "count": 3,
              "users": [
                "U03HWEGHRKR",
                "U03J4D3NPD2",
                "U03J8QZS7J9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "HJnO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Another option that is sometimes useful is to define separate types for the cases with/without the partially available stored property, and to define a protocol over them that covers common members and can hold extension methods"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J2C8ER9Q\u003e asked\n\u0026gt; I've been using RxSwift and Combine, and am starting to really like Swift Async Algorithms. Would you say that's the way forward for async sequences, superceding even Combine?",
      "ts": "1654630707.233939",
      "thread_ts": "1654630707.233939",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654632540.568809",
      "reactions": [
        {
          "name": "eyes",
          "count": 3,
          "users": [
            "U03JBCWHJF8",
            "U03HZ3RKC6R",
            "U03JJ0NS3NZ"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "zqV",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J2C8ER9Q"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I've been using RxSwift and Combine, and am starting to really like Swift Async Algorithms. Would you say that's the way forward for async sequences, superceding even Combine?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "38111bd8-bfd3-4b35-8bf9-44ac264e9113",
          "type": "message",
          "user": "U03JJ0NS3NZ",
          "text": "I would like to extend the question about back pressure support :slightly_smiling_face:",
          "ts": "1654630995.001439",
          "thread_ts": "1654630707.233939",
          "edited": {
            "user": "U03JJ0NS3NZ",
            "ts": "1654631025.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9+Ke",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I would like to extend the question about back pressure support "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bdee5567-dd2c-496e-8e6e-a45ad0691c72",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "I think the commentary in \u003chttps://wwdc22.slack.com/archives/C03H0JN431U/p1654628520096709?thread_ts=1654628350.752979\u0026amp;cid=C03H0JN431U\u003e applies here as well: async/await and async sequences integrate really well into the language, such that we can give stronger guarantees, and it makes control flow easier to reason about. The Async Algorithms package provides a wealth of algorithms to work with async sequences.",
          "ts": "1654631475.175359",
          "thread_ts": "1654630707.233939",
          "attachments": [
            {
              "fallback": "[June 7th, 2022 12:02 PM] 7425066227075992085: Great question, thanks \u003c@U03JKD29SCV\u003e. You’re 100% correct that there are a lot of ways to add concurrency to your project. It’s been a long-standing challenge to make concurrency safe and easy to understand. I hope you’ll forgive my bias, but given the channel we’re in I’ll say this — async/await is the best way to use concurrency in your app. If you can use it, use that first. You’ve probably seen that we’re actively improving it over time as well, with more support for `Sendable` this year, additional algorithms for Async Sequence, and more.",
              "id": 1,
              "author_id": "U03HL5K6L04",
              "author_name": "Tony P (Apple)",
              "author_subname": "Tony P (Apple)",
              "author_link": "https://wwdc22.slack.com/team/U03HL5K6L04",
              "author_icon": "https://avatars.slack-edge.com/2022-06-03/3604899662887_b4ae2b3bf77ae5b0ec0e_48.png",
              "text": "Great question, thanks \u003c@U03JKD29SCV\u003e. You’re 100% correct that there are a lot of ways to add concurrency to your project. It’s been a long-standing challenge to make concurrency safe and easy to understand. I hope you’ll forgive my bias, but given the channel we’re in I’ll say this — async/await is the best way to use concurrency in your app. If you can use it, use that first. You’ve probably seen that we’re actively improving it over time as well, with more support for `Sendable` this year, additional algorithms for Async Sequence, and more.",
              "from_url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654628520096709?thread_ts=1654628350.752979\u0026amp;cid=C03H0JN431U",
              "original_url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654628520096709?thread_ts=1654628350.752979\u0026amp;cid=C03H0JN431U",
              "mrkdwn_in": [
                "text"
              ],
              "blocks": null,
              "footer": "From a thread in #devtools-and-swift-lounge",
              "ts": 1654628520.096709
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "So2r",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I think the commentary in "
                    },
                    {
                      "type": "link",
                      "url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654628520096709?thread_ts=1654628350.752979\u0026cid=C03H0JN431U",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " applies here as well: async/await and async sequences integrate really well into the language, such that we can give stronger guarantees, and it makes control flow easier to reason about. The Async Algorithms package provides a wealth of algorithms to work with async sequences."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a6c5fefc-21ac-4af6-8253-a8859426d5f1",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "For back pressure specifically, check out the Channel type within the Async Algorithms package: \u003chttps://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides/Channel.md\u003e",
          "ts": "1654631504.955589",
          "thread_ts": "1654630707.233939",
          "is_starred": true,
          "attachments": [
            {
              "fallback": "GitHub: swift-async-algorithms/Channel.md at main · apple/swift-async-algorithms",
              "id": 1,
              "title": "swift-async-algorithms/Channel.md at main · apple/swift-async-algorithms",
              "title_link": "https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides/Channel.md",
              "text": "Async Algorithms for Swift. Contribute to apple/swift-async-algorithms development by creating an account on GitHub.",
              "image_url": "https://opengraph.githubassets.com/19d7dd6c437028a2ceba3f280c326dcb6529129b1a432bd4380b277312a2baef/apple/swift-async-algorithms",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides/Channel.md",
              "original_url": "https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides/Channel.md",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mcwBr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "For back pressure specifically, check out the Channel type within the Async Algorithms package: "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides/Channel.md",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9b242a57-bf68-46ff-98b5-4c3108de1da9",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "And where you do hit friction in using async sequences, or are missing functionality, please do tell us.",
          "ts": "1654631558.911759",
          "thread_ts": "1654630707.233939",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zlrt/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "And where you do hit friction in using async sequences, or are missing functionality, please do tell us."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ff11b95b-f569-4020-962e-b8af26a5d462",
          "type": "message",
          "user": "U03J2C8ER9Q",
          "text": "That makes sense to me. Sorry I missed that thread above. We haven’t converted anything in production to async sequences yet (we started with RxSwift because iOS 12 back in the day, but we have quite a few Combine usages)",
          "ts": "1654631628.671079",
          "thread_ts": "1654630707.233939",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FaJ2O",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That makes sense to me. Sorry I missed that thread above. We haven’t converted anything in production to async sequences yet (we started with RxSwift because iOS 12 back in the day, but we have quite a few Combine usages)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "CE651CC5-D1B7-4FE8-9655-AB8FCEBCEFD7",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Beyond the Slack channels this week, we have a place on the Swift forums to discuss Async Algorithms",
          "ts": "1654631728.778309",
          "thread_ts": "1654630707.233939",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 3,
              "users": [
                "U03J2C8ER9Q",
                "U03HHPMJCDR",
                "U03J0FC43JA"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "HKx51",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Beyond "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Slack"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "channels"
                    },
                    {
                      "type": "text",
                      "text": " this week"
                    },
                    {
                      "type": "text",
                      "text": ","
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "we"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "have"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "place"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Swift"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "forums"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "discuss"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Async"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Algorithms"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ce5f975f-b45d-47f0-867e-223fe110f6de",
          "type": "message",
          "user": "U03JJ0NS3NZ",
          "text": "Oh, I wasn't aware of the async-algorithms. Nice, I will try it.",
          "ts": "1654632004.414129",
          "thread_ts": "1654630707.233939",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PWB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oh, I wasn't aware of the async-algorithms. Nice, I will try it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1954E211-3BBA-4E1D-BC5C-0B0A2BD66539",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "We have a talk about it today too! Meet Async Algorithms. And a live watch party here at 2pm PDT (50 min from now)",
          "ts": "1654632540.568809",
          "thread_ts": "1654630707.233939",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nz+gV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "have"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "talk"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "about"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " today "
                    },
                    {
                      "type": "text",
                      "text": "too!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Meet"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Async"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Algorithms. And"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "live"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "watch"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "party"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "here"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "at"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "2pm"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "PDT"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "(50"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "min"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "from"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "now)"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JUCK9B16\u003e asked\n\u0026gt; Just wondering if asking for Swift Regex to be back-ported to older OSes is practical? Seems like it 'should' be simpler than back-porting async/await was.",
      "ts": "1654630826.006259",
      "thread_ts": "1654630826.006259",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654631063.423679",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "uG95b",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JUCK9B16"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Just wondering if asking for Swift Regex to be back-ported to older OSes is practical? Seems like it 'should' be simpler than back-porting async\\/await was.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6f40b61a-490c-445a-ae01-02751fa6201d",
          "type": "message",
          "user": "U03HB5WK03G",
          "text": "The `Regex` type is built on core Standard Library features for Unicode processing that were not available in previous releases. Please file a feedback if you’d like the new regex functionality be made available on earlier OS releases!",
          "ts": "1654630873.402549",
          "thread_ts": "1654630826.006259",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JENZF5S5",
                "U03JQ7H3K6W"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KzQv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The "
                    },
                    {
                      "type": "text",
                      "text": "Regex",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " type is built on core Standard Library features for Unicode processing that were not available in previous releases. Please file a feedback if you’d like the new regex functionality be made available on earlier OS releases!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9b30dcba-0a74-424e-b8c8-d9d16001d6c1",
          "type": "message",
          "user": "U03J2C8ER9Q",
          "text": "Is that part of the redesign to a smaller embeddable library, you mentioned removing a dependency to an external unicode library in “What’s new in Swift”",
          "ts": "1654630963.994139",
          "thread_ts": "1654630826.006259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nB9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is that part of the redesign to a smaller embeddable library, you mentioned removing a dependency to an external unicode library in “What’s new in Swift”"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "53b0e028-449c-4682-a3ba-8f2dc7f1c189",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "Will do, Sadly I suspect I’ll have to support iOS 14 for a few more years due to my market.",
          "ts": "1654630988.623849",
          "thread_ts": "1654630826.006259",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03HB5WK03G",
                "U03JQ7H3K6W"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BU6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Will do, Sadly I suspect I’ll have to support iOS 14 for a few more years due to my market."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b30878a9-ed65-4bd3-b4e6-b37aae57843c",
          "type": "message",
          "user": "U03HHPMJCSX",
          "text": "Yes, some of the work needed to remove that dependency allows us to implement core regex features that are not available on older platforms.",
          "ts": "1654631063.423679",
          "thread_ts": "1654630826.006259",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J2C8ER9Q"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "G4AXa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, some of the work needed to remove that dependency allows us to implement core regex features that are not available on older platforms."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMD22287\u003e asked\n\u0026gt; First I want to thank everyone who worked on the new regex APIs. It is so Apple that you went back to first principles and asked how programming with regexes could be improved, and the result is so above and beyond what I expected!\n\u0026gt; \n\u0026gt; My question: I usually forget about `lazy` when writing collection code. I know in principle what it means, but I haven't gotten in the habit of using it when I should. Are there simple rules of thumb to memorize, or is it more complicated than that? How does a StdLib expert think about this topic?",
      "ts": "1654630915.588489",
      "thread_ts": "1654630915.588489",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654631052.467529",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "PWDCl",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMD22287"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"First I want to thank everyone who worked on the new regex APIs. It is so Apple that you went back to first principles and asked how programming with regexes could be improved, and the result is so above and beyond what I expected!\\n\\nMy question: I usually forget about `lazy` when writing collection code. I know in principle what it means, but I haven't gotten in the habit of using it when I should. Are there simple rules of thumb to memorize, or is it more complicated than that? How does a StdLib expert think about this topic?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "195a3d22-b21e-413d-ac51-37f04f28c986",
          "type": "message",
          "user": "U03HESHGASH",
          "text": "Whether to use `lazy` is pretty situational, but here’s what I look for:\n• am I going to access the resulting collection more than once? -\u0026gt; probably not lazy\n• am I *not* going to access the entire collection? -\u0026gt; consider lazy\n• am I chaining multiple collection operations? -\u0026gt; consider lazy\n• do my collection operation closures have side effects? -\u0026gt; *lazy can be dangerous here*\nAlso note that you can combine things! For example, you could do `Array(someCollection.lazy.filter {…}.map {…})` to avoid some intermediate allocations but ultimately end up with the same result as if it was eager",
          "ts": "1654630934.648909",
          "thread_ts": "1654630915.588489",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HWQNU65D"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qb0Hd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Whether to use "
                    },
                    {
                      "type": "text",
                      "text": "lazy",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is pretty situational, but here’s what I look for:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"am I going to access the resulting collection more than once? -\u003e probably not lazy\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"am I \"},{\"type\":\"text\",\"text\":\"not\",\"style\":{\"bold\":true}},{\"type\":\"text\",\"text\":\" going to access the entire collection? -\u003e consider lazy\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"am I chaining multiple collection operations? -\u003e consider lazy\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"do my collection operation closures have side effects? -\u003e \"},{\"type\":\"text\",\"text\":\"lazy can be dangerous here\",\"style\":{\"bold\":true}}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also note that you can combine things! For example, you could do "
                    },
                    {
                      "type": "text",
                      "text": "Array(someCollection.lazy.filter {…}.map {…})",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to avoid some intermediate allocations but ultimately end up with the same result as if it was eager"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b13ff281-8652-49da-af20-d2a8c9a0ea1f",
          "type": "message",
          "user": "U03HMD22287",
          "text": "Thank you, this is helpful!",
          "ts": "1654631052.467529",
          "thread_ts": "1654630915.588489",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VvGLs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you, this is helpful!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "f01dc1b4-8b10-4784-81a0-a715e75d1d3e",
      "type": "message",
      "user": "U03J7HE00BA",
      "text": "Hi everyone, our time for the *Swift Standard Library Q\u0026amp;A* is wrapping up. If your question didn’t get answered, you can check to see if there are other Developer Tools Lounge times that can cover your question, sign up for a 1-on-1 Developer Lab, or head over to the \u003chttps://developer.apple.com/forums/|Developer Forums\u003e. Thanks for joining us, and have a great WWDC22! :wwdc22: :tada:",
      "ts": "1654632055.268599",
      "attachments": [
        {
          "fallback": "Apple Developer Forums",
          "id": 1,
          "title": "Apple Developer Forums",
          "title_link": "https://developer.apple.com/forums/",
          "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
          "service_name": "developer.apple.com",
          "service_icon": "https://forums.developer.apple.com/forums/build-05312022-1/public/assets/favicon.ico",
          "from_url": "https://developer.apple.com/forums/",
          "original_url": "https://developer.apple.com/forums/",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "wave::skin-tone-3",
          "count": 1,
          "users": [
            "U03HL553PNG"
          ]
        },
        {
          "name": "wave",
          "count": 5,
          "users": [
            "U03HWEGHRKR",
            "U03J7HE00BA",
            "U03JKD29SCV",
            "U03J2C8ER9Q",
            "U03J21EKNSE"
          ]
        },
        {
          "name": "pray",
          "count": 1,
          "users": [
            "U03J2C8ER9Q"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "=Pqh",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hi everyone, our time for the "
                },
                {
                  "type": "text",
                  "text": "Swift Standard Library Q\u0026A ",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "is wrapping up. If your question didn’t get answered, you can check to see if there are other Developer Tools Lounge times that can cover your question, sign up for a 1-on-1 Developer Lab, or head over to the "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": ". Thanks for joining us, and have a great WWDC22! "
                },
                {
                  "type": "emoji",
                  "name": "wwdc22",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " "
                },
                {
                  "type": "emoji",
                  "name": "tada",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "1ed6d82c-0cbd-496f-a1f9-446f843224a9",
      "type": "message",
      "user": "U03HERY4SN9",
      "text": "Hi everyone! Welcome to the _*Build your first app in Swift Playgrounds*_ *Watch Party* :partying_face:! We’re so happy to have you all here! In this hour, we invite everyone to watch *Build your first app in Swift Playgrounds* together! Queue up the video and get ready to hit play at 1:05 PDT:\n\n\u003chttps://developer.apple.com/videos/play/wwdc2022/110348/\u003e",
      "ts": "1654632104.435139",
      "attachments": [
        {
          "fallback": "Apple Developer: Build your first app in Swift Playgrounds - WWDC22 - Videos - Apple Developer",
          "id": 1,
          "title": "Build your first app in Swift Playgrounds - WWDC22 - Videos - Apple Developer",
          "title_link": "https://developer.apple.com/videos/play/wwdc2022/110348/",
          "text": "Learn how you can easily prototype and build apps with Swift Playgrounds. We'll show you how to create an app from a blank project, build...",
          "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/124/6702/6702_wide_250x141_2x.jpg",
          "service_name": "Apple Developer",
          "service_icon": "https://developer.apple.com/favicon.ico",
          "from_url": "https://developer.apple.com/videos/play/wwdc2022/110348/",
          "original_url": "https://developer.apple.com/videos/play/wwdc2022/110348/",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "oIo",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hi everyone! Welcome to the"
                },
                {
                  "type": "text",
                  "text": " ",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "Build your first app in Swift Playgrounds",
                  "style": {
                    "bold": true,
                    "italic": true
                  }
                },
                {
                  "type": "text",
                  "text": " "
                },
                {
                  "type": "text",
                  "text": "Watch Party ",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "emoji",
                  "name": "partying_face",
                  "skin_tone": 0,
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "! We’re so happy to have you all here! In this hour, we invite everyone to watch "
                },
                {
                  "type": "text",
                  "text": "Build your first app in Swift Playgrounds",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " together! Queue up the video and get ready to hit play at 1:05 PDT:\n\n"
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/videos/play/wwdc2022/110348/",
                  "text": ""
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "98589861-72b0-4f85-9c30-dba06f71f4c9",
      "type": "message",
      "user": "U03HERY4SN9",
      "text": "In the meantime, I’m so excited to introduce you all to the speakers, Collett and Connor. In addition to Collett and Connor, we’re joined here by the Swift Playgrounds team, ready to answer your questions!",
      "ts": "1654632130.375269",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "/Ywp",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "In the meantime, I’m so excited to introduce you all to the speakers, Collett and Connor. In addition to Collett and Connor, we’re joined here by the Swift Playgrounds team, ready to answer your questions!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "16aa943d-2209-4651-826c-1b607f898272",
      "type": "message",
      "user": "U03JF5LHNTS",
      "text": "Hi! I'm Connor, one of the engineers on the Swift Playgrounds team and one of the presenters for today's session! Excited to share Swift Playgrounds with you",
      "ts": "1654632177.684659",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "heart",
          "count": 6,
          "users": [
            "U03HV47RD8X",
            "U03J8R58KJP",
            "U03JRDB98KB",
            "U03J22ZLFUJ",
            "U03JRP87THN",
            "U03HB5C4DHC"
          ]
        },
        {
          "name": "wave",
          "count": 2,
          "users": [
            "U03J4EJ0CVA",
            "U03DF5L7S30"
          ]
        },
        {
          "name": "orange_heart",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "6r5",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hi! I'm Connor, one of the engineers on the Swift Playgrounds team and one of the presenters for today's session! Excited to share Swift Playgrounds with you"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "a8c2a668-05f4-4ee7-9e85-b8705ee6f820",
      "type": "message",
      "user": "U03HHPNR942",
      "text": "Hi everyone! I'm Collett, an engineer on the Swift Playgrounds team as well and one of the presenters. I am super excited for our session today and I hope you enjoy it!",
      "ts": "1654632240.403019",
      "edited": {
        "user": "U03HHPNR942",
        "ts": "1654632278.000000"
      },
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 3,
          "users": [
            "U03J22ZLFUJ",
            "U03HV47RD8X",
            "U03JRP87THN"
          ]
        },
        {
          "name": "wave",
          "count": 1,
          "users": [
            "U03J4EJ0CVA"
          ]
        },
        {
          "name": "orange_heart",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "IUtBo",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hi everyone! I'm Collett, an engineer on the Swift Playgrounds team as well and one of the presenters. I am super excited for our session today and I hope you enjoy it!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "0507b50c-2a19-4013-a3e8-2b3675f043c6",
      "type": "message",
      "user": "U03HERY4SN9",
      "text": "As the video progresses, we will be creating threads associated with each section of the talk, where everyone can chat and ask questions (sorry to you 2x speed warriors! This is a no-spoiler zone! :laughing:).\n\nWhen the video finishes, we’ll have some time left over for additional targeted Q\u0026amp;A, which we will explain when we get there. So for the next few minutes, grab your popcorn:popcorn:, get comfortable, and get ready to hit that play button!",
      "ts": "1654632248.074129",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "HqCpJ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "As the video progresses, we will be creating threads associated with each section of the talk, where everyone can chat and ask questions (sorry to you 2x speed warriors! This is a no-spoiler zone! "
                },
                {
                  "type": "emoji",
                  "name": "laughing",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": ").\n\nWhen the video finishes, we’ll have some time left over for additional targeted Q\u0026A, which we will explain when we get there. So for the next few minutes, grab your popcorn"
                },
                {
                  "type": "emoji",
                  "name": "popcorn",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": ", get comfortable, and get ready to hit that play button!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "8661aedb-ea66-4a9e-b22c-8f475715882e",
      "type": "message",
      "user": "U03HERY4SN9",
      "text": "And hit play in 3….2….1…. GO!",
      "ts": "1654632302.725849",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "bBAU",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "And hit play in 3….2….1…. GO!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JN6QRJ11\u003e asked\n\u0026gt; Is this trending of placing new developments into packages separate from the standard library, like async sequences and collections, going to be more common going forward? I was wondering if the aim is to allow for more frequent updates like what’s been going in the android ecosystem with the jetpack suite of libraries",
      "ts": "1654632304.998129",
      "thread_ts": "1654632304.998129",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654632564.985319",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "KQ4JB",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JN6QRJ11"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is this trending of placing new developments into packages separate from the standard library, like async sequences and collections, going to be more common going forward? I was wondering if the aim is to allow for more frequent updates like what\\u2019s been going in the android ecosystem with the jetpack suite of libraries\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "7d57dee4-edd7-4f43-a8f1-8bea8ef4fc11",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "BTW this question is from the previous Swift Standard Library lounge but we still wanted to answer it. :slightly_smiling_face:",
          "ts": "1654632425.612629",
          "thread_ts": "1654632304.998129",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=B=Ol",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "BTW this question is from the previous Swift Standard Library lounge but we still wanted to answer it. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "aacde8b7-f9e0-4b55-9ffd-05d014b74124",
          "type": "message",
          "user": "U03HHPMJCSX",
          "text": "Hi! We love our packages and would be more than excited to make more if it made sense as a package. Some things make more sense in the standard library and others as standalone packages. We’re also using packages to get feedback on things we’d like to eventually add to the standard library.",
          "ts": "1654632564.985319",
          "thread_ts": "1654632304.998129",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 3,
              "users": [
                "U03HHPMJCDR",
                "U03JN6QRJ11",
                "U03J457MUA3"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+d5RJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi! We love our packages and would be more than excited to make more if it made sense as a package. Some things make more sense in the standard library and others as standalone packages. We’re also using packages to get feedback on things we’d like to eventually add to the standard library."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "f3121672-eb39-41c8-b3f3-1a42bd42ec37",
      "type": "message",
      "user": "U03HL551ATW",
      "text": "General Excitement — Are you excited? Us too! Use this thread to talk about it! :thread: :popcorn:",
      "ts": "1654632307.245589",
      "thread_ts": "1654632307.245589",
      "reply_count": 7,
      "latest_reply": "1654634137.297949",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 6,
          "users": [
            "U03J22ZLFUJ",
            "U03JE2L47J8",
            "U03JRP87THN",
            "U03JKFBJG69",
            "U03HB5C4DHC",
            "U03JMEECDKK"
          ]
        },
        {
          "name": "partying_face",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "99q=",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "General Excitement — Are you excited? Us too! Use this thread to talk about it! "
                },
                {
                  "type": "emoji",
                  "name": "thread",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " "
                },
                {
                  "type": "emoji",
                  "name": "popcorn",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "585B2A2F-B6DA-4DBE-8799-0A514D6EF7DB",
          "type": "message",
          "user": "U03J8R58KJP",
          "text": "I’m excited! ",
          "ts": "1654632345.166569",
          "thread_ts": "1654632307.245589",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heartpulse",
              "count": 2,
              "users": [
                "U03HERY4SN9",
                "U03HERY1BMK"
              ]
            },
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JF5LHNTS"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "h6Qn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’m"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "excited!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2AB039F5-3D04-42A5-B308-F35D46029ADD",
          "type": "message",
          "user": "U03HV47RD8X",
          "text": "I am always excited about Swift Playgrounds. It’s one of the coolest things Apple makes. :heartbeat: ",
          "ts": "1654632353.441689",
          "thread_ts": "1654632307.245589",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JF5LHNTS"
              ]
            },
            {
              "name": "heartpulse",
              "count": 2,
              "users": [
                "U03HERY4SN9",
                "U03HERY1BMK"
              ]
            },
            {
              "name": "orange_heart",
              "count": 2,
              "users": [
                "U03HB5C4DHC",
                "U03HL551ATW"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "s3v",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "am"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "always"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "excited"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "about"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Swift"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Playgrounds."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "It’s"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "one"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "coolest"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "things"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Apple"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "makes."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "emoji",
                      "name": "heartbeat",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "879C245B-B97F-430E-A0AF-30B335CA27F2",
          "type": "message",
          "user": "U03J8R58KJP",
          "text": "Ah - I’ve never unlocked their magic - they scare me. I wanna make friends with them now! ",
          "ts": "1654632381.187379",
          "thread_ts": "1654632307.245589",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TJ7j",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ah"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "-"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I’ve"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "never"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "unlocked"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "their"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "magic"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "-"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "they"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "scare"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "me."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "wanna"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "make"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "friends"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "with"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "them"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "now!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "377CEF4C-C9CB-480A-8E40-338D9CA604A8",
          "type": "message",
          "user": "U03J8R58KJP",
          "text": "But someone on the other thread pointed out to me that the version downloaded from the App Store had templates – so I’m already feeling more positive!",
          "ts": "1654632405.081459",
          "thread_ts": "1654632307.245589",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "tada",
              "count": 2,
              "users": [
                "U03HERY4SN9",
                "U03HERY1BMK"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "iJ+=+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "But someone on the other thread pointed out to me that the version downloaded from the App Store had templates – so I’m already feeling more positive!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "AE097B14-D425-4F7F-B11C-9117E7BCD7FE",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "I already did an app release using iPad and Swift Playgrounds:slightly_smiling_face: Love it!",
          "ts": "1654632430.401399",
          "thread_ts": "1654632307.245589",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heartpulse",
              "count": 2,
              "users": [
                "U03HERY4SN9",
                "U03HERY1BMK"
              ]
            },
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JF5LHNTS"
              ]
            },
            {
              "name": "exploding_head",
              "count": 1,
              "users": [
                "U03HB5C4DHC"
              ]
            },
            {
              "name": "orange_heart",
              "count": 2,
              "users": [
                "U03HB5C4DHC",
                "U03HL551ATW"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "km2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " already "
                    },
                    {
                      "type": "text",
                      "text": "did"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "an"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "app"
                    },
                    {
                      "type": "text",
                      "text": " release "
                    },
                    {
                      "type": "text",
                      "text": "using"
                    },
                    {
                      "type": "text",
                      "text": " iPad "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " Swift Playground"
                    },
                    {
                      "type": "text",
                      "text": "s"
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Love"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0AF25D41-1A0F-49DF-B561-6E58FFBDA460",
          "type": "message",
          "user": "U03J8R58KJP",
          "text": "Can you mix and match. If you end up making something properly good, can you then put it into Xcode if you need to add extra features?",
          "ts": "1654632467.186969",
          "thread_ts": "1654632307.245589",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5k2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Can you mix and match. If you end up making something properly good, can you then put it in"
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " Xcode if you need to add extra features?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "273c4172-d3f4-42bb-b8f1-40d30bf3ca8b",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "You can open app projects created by Swift Playgrounds in Xcode!",
          "ts": "1654634137.297949",
          "thread_ts": "1654632307.245589",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Pg4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can open app projects created by Swift Playgrounds in Xcode!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "568b69d8-fb90-440d-bc21-84b33a0427ac",
      "type": "message",
      "user": "U03HL551ATW",
      "text": "The app development features are new to Swift Playgrounds on macOS this year! Has anyone built something fun for Mac yet?",
      "ts": "1654632389.962359",
      "thread_ts": "1654632389.962359",
      "reply_count": 1,
      "latest_reply": "1654632571.205729",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "BHq",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "The app development features are new to Swift Playgrounds on macOS this year! Has anyone built something fun for Mac yet?"
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "7453b324-ae0b-4949-a627-0acef43ff176",
          "type": "message",
          "user": "U03HVC6M81L",
          "text": "LOVE the update on the Mac, especially… It’s brilliant for teaching and really fun for building apps you want to share over to your iPad to keep working on the go…",
          "ts": "1654632571.205729",
          "thread_ts": "1654632389.962359",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "orange_heart",
              "count": 3,
              "users": [
                "U03HB5C4DHC",
                "U03HHPNR942",
                "U03HL551ATW"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LgHMb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "LOVE the update on the Mac, especially… It’s brilliant for teaching and really fun for building apps you want to share over to your iPad to keep working on the go…"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HWEGHRKR\u003e asked\n\u0026gt; is accessing the projected value publisher of a `@Published` variable thread safe? and does that publisher emit the current value as the first event?",
      "ts": "1654632442.087219",
      "thread_ts": "1654632442.087219",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654632523.839809",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "5TG",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HWEGHRKR"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"is accessing the projected value publisher of a `@Published` variable thread safe? and does that publisher emit the current value as the first event?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "5912ed53-5527-4561-9cc6-99c122a24913",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "so to clarify the behavior of `@Published` - accessing the value at any time is thread safe, however the transition from the state of unsubscribed to subscribed is technically not thread safe; ideally those transitions should be bound to the main actor",
          "ts": "1654632503.701249",
          "thread_ts": "1654632442.087219",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HWEGHRKR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+dZVb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "so to clarify the behavior of "
                    },
                    {
                      "type": "text",
                      "text": "@Published",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " - accessing the value at any time is thread safe, however the transition from the state of unsubscribed to subscribed is technically not thread safe; ideally those transitions should be bound to the main actor"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2c0d4ed7-079e-4f19-b39b-089c7066f817",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "This question was also left over from the previous Swift StdLib lounge. :slightly_smiling_face:",
          "ts": "1654632523.839809",
          "thread_ts": "1654632442.087219",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZEV=7",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This question was also left over from the previous Swift StdLib lounge. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "8b28af5a-40a9-4662-950a-44cc3e701396",
      "type": "message",
      "user": "U03HL551ATW",
      "text": "Packages are a great way to take your apps farther using resources from the community! What are some of your favorite packages?",
      "ts": "1654632556.834809",
      "thread_ts": "1654632556.834809",
      "reply_count": 6,
      "latest_reply": "1654632951.355119",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "+1",
          "count": 2,
          "users": [
            "U03HVDDBP0W",
            "U03J8R58KJP"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "8yNu",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Packages are a great way to take your apps farther using resources from the community! What are some of your favorite packages?"
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "B4FBE0CA-DDD7-46AE-B593-3131A68C693A",
          "type": "message",
          "user": "U03J8R58KJP",
          "text": "Not answering the question – but is it possible to search for packages without leaving Playgrounds?",
          "ts": "1654632764.930349",
          "thread_ts": "1654632556.834809",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8eK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Not answering the question – but is it possible to search for packages with"
                    },
                    {
                      "type": "text",
                      "text": "out"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "leaving"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Playgrounds"
                    },
                    {
                      "type": "text",
                      "text": "?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "07c0da08-49c2-446e-9e40-3b5e8314bf33",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "No, there isn't a way to do that. Please file a Feedback at \u003chttp://feedbackassistant.apple.com|feedbackassistant.apple.com\u003e to request such functionality!",
          "ts": "1654632807.028029",
          "thread_ts": "1654632556.834809",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Sha",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "No, there isn't a way to do that. Please file a Feedback at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "feedbackassistant.apple.com"
                    },
                    {
                      "type": "text",
                      "text": " to request such functionality!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1F9A12D5-785D-48A2-A0A5-6E218658E536",
          "type": "message",
          "user": "U03J8R58KJP",
          "text": "I got git error GITERR_SSL untrusted connection error",
          "ts": "1654632843.020179",
          "thread_ts": "1654632556.834809",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XKED",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "got"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "git"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "error"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "GITERR_SSL"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "untrusted"
                    },
                    {
                      "type": "text",
                      "text": " connection error"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "860CA002-92D6-44BF-88DA-972D57447EB8",
          "type": "message",
          "user": "U03J8R58KJP",
          "text": "Any tips for why that happened?",
          "ts": "1654632857.545619",
          "thread_ts": "1654632556.834809",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KtUVv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Any tips for why that happened?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "75D97B23-9154-48A7-8E22-8658B953D7BC",
          "type": "message",
          "user": "U03J8R58KJP",
          "text": "It works fine when I tried again",
          "ts": "1654632931.499079",
          "thread_ts": "1654632556.834809",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZWk+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "works"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "fine"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "when"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "tried"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "again"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "00d3ebc7-08aa-4d89-85cc-adab7e15ccb3",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "My tip was going to be to try again, so glad you got it working!",
          "ts": "1654632951.355119",
          "thread_ts": "1654632556.834809",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=boJ+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "My tip was going to be to try again, so glad you got it working!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "91360c89-6909-4a5d-969c-968671ae6cef",
      "type": "message",
      "user": "U03HL551ATW",
      "text": "Collett's using a Shared Folder in iCloud Drive to share the Tea Time project with Connor; you can also use a number of third-party file providers to fit your specific workflows!",
      "ts": "1654632731.655209",
      "thread_ts": "1654632731.655209",
      "reply_count": 2,
      "latest_reply": "1654632871.208999",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "MZHE",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Collett's using a Shared Folder in iCloud Drive to share the Tea Time project with Connor; you can also use a number of third-party file providers to fit your specific workflows!"
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "DD347ED1-152A-4D1E-B714-A9EAAD5DA822",
          "type": "message",
          "user": "U03HV47RD8X",
          "text": "This is so cool and I had no idea! I’m going to use Working Copy to sync my project with git",
          "ts": "1654632770.793079",
          "thread_ts": "1654632731.655209",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 6,
              "users": [
                "U03HL551ATW",
                "U03HERY1BMK",
                "U03DF5L7S30",
                "U03HHPNR942",
                "U03JF5LHNTS",
                "U03HVC6M81L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "E4PWc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "so"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "cool"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "had"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "no"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "idea!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I’m"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "going"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "use"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Working"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Copy"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "sync"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "project"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "with"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "git"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8FC60EF8-B0DE-4F7D-B81D-16645D3A2E02",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "I also found I can drag and drop using Universal Control from my iPad to my Mac Desktop for the My Playgrounds folder on iPad. ",
          "ts": "1654632871.208999",
          "thread_ts": "1654632731.655209",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JF5LHNTS",
                "U03HHPNR942"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zWC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "also"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "found"
                    },
                    {
                      "type": "text",
                      "text": " I "
                    },
                    {
                      "type": "text",
                      "text": "can"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "drag"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "drop"
                    },
                    {
                      "type": "text",
                      "text": " using Universal Control "
                    },
                    {
                      "type": "text",
                      "text": "from"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " iPad "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Mac"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Desktop"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "My"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Playgrounds"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "folder"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " iPad"
                    },
                    {
                      "type": "text",
                      "text": ". "
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "57ca7a07-f7c7-49df-9442-29ceee6c86fd",
      "type": "message",
      "user": "U03HL551ATW",
      "text": "Connor typed \"PreviewProvider\" to insert a snippet for a new preview provider—but that's not the only one! You can also type \"View\" on a blank line and accept the code completion to create a new View and PreviewProvider pair :sparkles:",
      "ts": "1654632850.852199",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "exclamation",
          "count": 2,
          "users": [
            "U03HV47RD8X",
            "U03J4EJ0CVA"
          ]
        },
        {
          "name": "slightly_smiling_face",
          "count": 1,
          "users": [
            "U03JELKJH6V"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "8iUQs",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Connor typed \"PreviewProvider\" to insert a snippet for a new preview provider—but that's not the only one! You can also type \"View\" on a blank line and accept the code completion to create a new View and PreviewProvider pair "
                },
                {
                  "type": "emoji",
                  "name": "sparkles",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "40efc136-c890-474b-bc86-490d356a790b",
      "type": "message",
      "user": "U03HL551ATW",
      "text": "Gotta' love that brace dragging! :heart_eyes:",
      "ts": "1654632881.299939",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "+1",
          "count": 2,
          "users": [
            "U03J4EJ0CVA",
            "U03HV47RD8X"
          ]
        },
        {
          "name": "heart_eyes",
          "count": 1,
          "users": [
            "U03DF5L7S30"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "QkPh",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Gotta' love that brace dragging! "
                },
                {
                  "type": "emoji",
                  "name": "heart_eyes",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "996a421a-af3f-4305-a803-b67618397887",
      "type": "message",
      "user": "U03HL551ATW",
      "text": "What a beautiful wheel indeed! :man-cartwheeling:",
      "ts": "1654632927.623209",
      "thread_ts": "1654632927.623209",
      "reply_count": 2,
      "latest_reply": "1654633074.475599",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "heartbeat",
          "count": 1,
          "users": [
            "U03HERY4SN9"
          ]
        },
        {
          "name": "star-struck",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        },
        {
          "name": "white_check_mark",
          "count": 1,
          "users": [
            "U03J225HUN6"
          ]
        },
        {
          "name": "eyes",
          "count": 1,
          "users": [
            "U03J225HUN6"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "fqF",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "What a beautiful wheel indeed! "
                },
                {
                  "type": "emoji",
                  "name": "man-cartwheeling",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "924C1717-DB59-4301-9C00-7E610D4D3113",
          "type": "message",
          "user": "U03HV47RD8X",
          "text": "I’d love to see how it was built. Swift’s canvas API from last year? Shapes?",
          "ts": "1654632966.299909",
          "thread_ts": "1654632927.623209",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lUDdu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’d"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "love"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "see"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "how"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "was"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "built."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Swift’s"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "canvas"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "API"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "from"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "last"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "year?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Shapes?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "73959784-0069-4a5d-89bc-52dcb5824ecc",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "It's all Shapes! We don't have the sample code published currently, but we'll update the session notes on the website if that changes",
          "ts": "1654633074.475599",
          "thread_ts": "1654632927.623209",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03HV47RD8X"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "EllP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It's all Shapes! We don't have the sample code published currently, but we'll update the session notes on the website if that changes"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "86305335-22c5-4527-8cef-a907a9ed0f3d",
      "type": "message",
      "user": "U03HL551ATW",
      "text": "Using a view preview to debug complex issues like this is a great way to isolate which part of your app the bug is actually in :hammer_and_wrench:",
      "ts": "1654633027.790809",
      "thread_ts": "1654633027.790809",
      "reply_count": 1,
      "latest_reply": "1654633263.115899",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ZQhXh",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Using a view preview to debug complex issues like this is a great way to isolate which part of your app the bug is actually in "
                },
                {
                  "type": "emoji",
                  "name": "hammer_and_wrench",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "1c08ef41-733b-43cb-84d1-da3961176460",
          "type": "message",
          "user": "U03J225HUN6",
          "text": "Swift Playgrounds can preview and show print to the console. It’s very cool!",
          "ts": "1654633263.115899",
          "thread_ts": "1654633027.790809",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pLB96",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Swift Playgrounds can preview and show print to the console. It’s very cool!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "37caf5ba-f383-434d-b814-f2d0de15215c",
      "type": "message",
      "user": "U03HL551ATW",
      "text": "Hitting the play button runs your app in its own window, which is a great way to try out different multitasking configurations and size classes! And on macOS, it actually runs the app itself :partying_face:",
      "ts": "1654633131.419779",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "hugging_face",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        },
        {
          "name": "star-struck",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "8LE",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hitting the play button runs your app in its own window, which is a great way to try out different multitasking configurations and size classes! And on macOS, it actually runs the app itself "
                },
                {
                  "type": "emoji",
                  "name": "partying_face",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "1a5b3e4a-5228-4c3d-8cb7-459a76b1d8f6",
      "type": "message",
      "user": "U03HL551ATW",
      "text": "TestFlight is a super useful way to try your app on any device you own (and share it with your team!)",
      "ts": "1654633181.939849",
      "thread_ts": "1654633181.939849",
      "reply_count": 1,
      "latest_reply": "1654633239.361349",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "rolling_on_the_floor_laughing",
          "count": 2,
          "users": [
            "U03J225HUN6",
            "U03J1V52JQK"
          ]
        },
        {
          "name": "raised_hands",
          "count": 1,
          "users": [
            "U03JRP87THN"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "5LKK",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "TestFlight is a super useful way to try your app on any device you own (and share it with your team!)"
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "73A5443C-8FF1-45BD-81DB-E0FC16A737DA",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "Agree. Seems like an easier way to test app on device vs. Xcode on device build and run. Faster for me. ",
          "ts": "1654633239.361349",
          "thread_ts": "1654633181.939849",
          "parent_user_id": "U03HL551ATW",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "100",
              "count": 1,
              "users": [
                "U03HB5C4DHC"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "394",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Agree. Seems"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "like"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "an"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "easier"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "way"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "test"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "app"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "device"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "vs. Xcode"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "device"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "build"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "run. Faster"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "me. "
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "72c62b68-b779-459c-bbd2-bdb0444b8878",
      "type": "message",
      "user": "U03HL551ATW",
      "text": ":clap::clap::clap: What a great session! Who wants some tea?",
      "ts": "1654633246.499599",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "tea",
          "count": 5,
          "users": [
            "U03DF5L7S30",
            "U03HWEGHRKR",
            "U03J225HUN6",
            "U03HB5C4DHC",
            "U03J22ZLFUJ"
          ]
        },
        {
          "name": "+1",
          "count": 2,
          "users": [
            "U03J4EJ0CVA",
            "U03KFA1T68Y"
          ]
        },
        {
          "name": "hand::skin-tone-2",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        },
        {
          "name": "raising_hand::skin-tone-2",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        },
        {
          "name": "teapot",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "v/AG",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "emoji",
                  "name": "clap",
                  "skin_tone": 0
                },
                {
                  "type": "emoji",
                  "name": "clap",
                  "skin_tone": 0
                },
                {
                  "type": "emoji",
                  "name": "clap",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " What a great session! Who wants some tea?"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "3eec6317-52fc-4379-906e-911e5b71edae",
      "type": "message",
      "user": "U03HERY4SN9",
      "text": "That was so fun!! :laughing: Thank you all so much for watching with us! :pray:\n\nWe now ask that you move any additional questions to the Workflow built in to Slack.\n\nFind the lightning bolt icon :workflowbolt:at the lower left and select *Ask a question*. Your question will be delivered directly to the Swift Playgrounds team, and we’ll repost and answer as many of them as we can.",
      "ts": "1654633250.774029",
      "thread_ts": "1654633250.774029",
      "reply_count": 3,
      "latest_reply": "1654633449.227709",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "orange_heart",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        },
        {
          "name": "partying_face",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        },
        {
          "name": "raised_hands::skin-tone-2",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        },
        {
          "name": "star-struck",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ePz",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "That was so fun!! "
                },
                {
                  "type": "emoji",
                  "name": "laughing",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " Thank you all so much for watching with us! "
                },
                {
                  "type": "emoji",
                  "name": "pray",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "\n\nWe now ask that you move any additional questions to the Workflow built in to Slack.\n\nFind the lightning bolt icon "
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "at the lower left and select "
                },
                {
                  "type": "text",
                  "text": "Ask a question",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": ". Your question will be delivered directly to the Swift Playgrounds team, and we’ll repost and answer as many of them as we can."
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "F3309AD3-78E1-4E26-A196-24C3BABEB7E9",
          "type": "message",
          "user": "U03J8R58KJP",
          "text": "My mind is proper blown by all the capabilities!",
          "ts": "1654633324.608439",
          "thread_ts": "1654633250.774029",
          "parent_user_id": "U03HERY4SN9",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ocq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "My mind is proper blown by all the capabilities!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "33D528C9-3450-4E20-92DA-019691476CBF",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "I can't seem to ask a question. when I click ask a question it just says you used the Ask a Question shortcut but doesn't let me submit a question. ",
          "ts": "1654633435.072729",
          "thread_ts": "1654633250.774029",
          "parent_user_id": "U03HERY4SN9",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "y55M",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " can't "
                    },
                    {
                      "type": "text",
                      "text": "seem"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "ask"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " question"
                    },
                    {
                      "type": "text",
                      "text": ". when"
                    },
                    {
                      "type": "text",
                      "text": " I "
                    },
                    {
                      "type": "text",
                      "text": "click"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "ask"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " question "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "just"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "says"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " used "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Ask"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " Question shortcut "
                    },
                    {
                      "type": "text",
                      "text": "but"
                    },
                    {
                      "type": "text",
                      "text": " doesn't "
                    },
                    {
                      "type": "text",
                      "text": "let"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "me"
                    },
                    {
                      "type": "text",
                      "text": " submit "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " question"
                    },
                    {
                      "type": "text",
                      "text": ". "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fb006867-3177-41f3-b7df-87c6b9d45542",
          "type": "message",
          "user": "U03J225HUN6",
          "text": "I’m using Swift Playgrounds with a group of kids, and we’re all really, really loving this year’s version 4.1!",
          "ts": "1654633449.227709",
          "thread_ts": "1654633250.774029",
          "parent_user_id": "U03HERY4SN9",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "orange_heart",
              "count": 1,
              "users": [
                "U03HWD56KG9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "g4r2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’m using Swift Playgrounds with a group of kids, and we’re all really, really loving this year’s version 4.1!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JE2L47J8\u003e asked\n\u0026gt; Is there a way to use new iPadOS 16 features in Swift Playgrounds? I love to use it to learn new APIs and early prototyping.",
      "ts": "1654633416.304819",
      "thread_ts": "1654633416.304819",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654633730.675699",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 2,
          "users": [
            "U03J225HUN6",
            "U03HMCMHXGF"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "w4g",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JE2L47J8"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a way to use new iPadOS 16 features in Swift Playgrounds? I love to use it to learn new APIs and early prototyping.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "beeab92c-0fda-4910-a94e-009a70e882ae",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "At this time, the shipping versions of Swift Playgrounds contain only the iOS 15 and macOS 12 SDKs.",
          "ts": "1654633421.858299",
          "thread_ts": "1654633416.304819",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 3,
              "users": [
                "U03JE2L47J8",
                "U03J22ZLFUJ",
                "U03HVC6M81L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Loj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "At this time, the shipping versions of Swift Playgrounds contain only the iOS 15 and macOS 12 SDKs."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4768932C-0962-4087-8948-54A69C154408",
          "type": "message",
          "user": "U03HV47RD8X",
          "text": "Is there a way to run Swift Playgrounds on iPadOS 16 at all?",
          "ts": "1654633448.559659",
          "thread_ts": "1654633416.304819",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Aty1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "there"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "way"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "run"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Swift"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Playgrounds"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "iPadOS"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "16"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "at"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "all?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "24d7fe8d-f287-44ef-b04d-2238a82f13a0",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "\u003c@U03HV47RD8X\u003e I think it works fine with the older SDKs. It seems to work fine on my test iPad running iPadOS 16.",
          "ts": "1654633635.174649",
          "thread_ts": "1654633416.304819",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "point_up_2",
              "count": 1,
              "users": [
                "U03HVC6M81L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "U=eA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HV47RD8X"
                    },
                    {
                      "type": "text",
                      "text": " I think it works fine with the older SDKs. It seems to work fine on my test iPad running iPadOS 16."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "F86FF924-E5A2-4C15-8C59-8B74A6D6E0B7",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "Confirmed for me. iPadOS 16",
          "ts": "1654633689.477439",
          "thread_ts": "1654633416.304819",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dNl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Confirmed"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "me. "
                    },
                    {
                      "type": "text",
                      "text": "iPadOS "
                    },
                    {
                      "type": "text",
                      "text": "16"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "FBACBBF5-F3C0-48BB-B62B-685E53B66963",
          "type": "message",
          "user": "U03HV47RD8X",
          "text": "Hmmmmmmm I wonder what I did wrong? I haven’t been able to see anything and everything crashes (and these are previous projects that run under iPadOS 15 fine)",
          "ts": "1654633730.675699",
          "thread_ts": "1654633416.304819",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VhiZx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hmmmmmmm"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "wonder"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "what"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "did"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "wrong?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "haven’t"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "been"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "able"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "see"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "anything"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "everything"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "crashes"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "(and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "these"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "are"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "previous"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "projects"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "run"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "under"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "iPadOS"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "15"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "fine)"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J22ZLFUJ\u003e asked\n\u0026gt; Do the steps described in the video work on iOS 15? Thank you for an excellent presentation.",
      "ts": "1654633536.778149",
      "thread_ts": "1654633536.778149",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654633541.890679",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "utE",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J22ZLFUJ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Do the steps described in the video work on iOS 15? Thank you for an excellent presentation.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "fed340d2-3a1b-4069-bae5-063c33880b43",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "They do indeed!",
          "ts": "1654633541.890679",
          "thread_ts": "1654633536.778149",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03J22ZLFUJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "a+dm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "They do indeed!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J225HUN6\u003e asked\n\u0026gt; I would really like to find a help document for the code in Swift Playgrounds. Now is this only done through the documentation search, there is no shortcut to do this, similar to Xcode's right click menu.",
      "ts": "1654633592.967539",
      "thread_ts": "1654633592.967539",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 10,
      "latest_reply": "1654638553.101099",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Kz6hF",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J225HUN6"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I would really like to find a help document for the code in Swift Playgrounds. Now is this only done through the documentation search, there is no shortcut to do this, similar to Xcode's right click menu.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "508cf354-9705-4c3c-98e8-5d4185576da8",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "If you tap on something in the source editor, there should be a Help option which brings up Quick Help, which will let you see documentation for that symbol and which will let you view that symbol in the full documentation window.",
          "ts": "1654633604.536379",
          "thread_ts": "1654633592.967539",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "sweat_smile",
              "count": 1,
              "users": [
                "U03J225HUN6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "w06",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you tap on something in the source editor, there should be a Help option which brings up Quick Help, which will let you see documentation for that symbol and which will let you view that symbol in the full documentation window."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4204631e-ff00-4155-874c-ea897a84b931",
          "type": "message",
          "user": "U03J225HUN6",
          "text": "sorry, I didn’t see any Help option.",
          "ts": "1654633827.563089",
          "thread_ts": "1654633592.967539",
          "files": [
            {
              "id": "F03JP4TCA8K",
              "created": 1654633770,
              "timestamp": 1654633770,
              "name": "image.png",
              "title": "image.png",
              "mimetype": "image/png",
              "image_exif_rotation": 0,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03J225HUN6",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 216836,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03JP4TCA8K-image.png",
              "url_private_download": "C03H0JN431U/F03JP4TCA8K-image.png",
              "original_h": 1448,
              "original_w": 1582,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP4TCA8K-eeddb3a104/image_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP4TCA8K-eeddb3a104/image_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP4TCA8K-eeddb3a104/image_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP4TCA8K-eeddb3a104/image_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 360,
              "thumb_360_h": 330,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP4TCA8K-eeddb3a104/image_480.png",
              "thumb_480_w": 480,
              "thumb_480_h": 439,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP4TCA8K-eeddb3a104/image_720.png",
              "thumb_720_w": 720,
              "thumb_720_h": 659,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP4TCA8K-eeddb3a104/image_960.png",
              "thumb_960_w": 960,
              "thumb_960_h": 879,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP4TCA8K-eeddb3a104/image_1024.png",
              "thumb_1024_w": 1024,
              "thumb_1024_h": 937,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03J225HUN6/F03JP4TCA8K/image.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03JP4TCA8K-04f9caee25",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4BB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "sorry, I didn’t see any Help option."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "56a5551b-2abc-44dc-944a-70cb0896b493",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "Ah, you'll need to right-click on something from an Apple SDK -- try right-clicking on `View` there instead of on your symbol named `ContentView`",
          "ts": "1654634247.288729",
          "thread_ts": "1654633592.967539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "QSr33",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ah, you'll need to right-click on something from an Apple SDK -- try right-clicking on "
                    },
                    {
                      "type": "text",
                      "text": "View",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " there instead of on your symbol named "
                    },
                    {
                      "type": "text",
                      "text": "ContentView",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5bf787da-712b-481e-b3d3-217d1861c547",
          "type": "message",
          "user": "U03J225HUN6",
          "text": "This is a screenshot from my mac, and it really isn’t either.Whether it is View or struct",
          "ts": "1654634399.593019",
          "thread_ts": "1654633592.967539",
          "files": [
            {
              "id": "F03KD143TK2",
              "created": 1654634325,
              "timestamp": 1654634325,
              "name": "image.png",
              "title": "image.png",
              "mimetype": "image/png",
              "image_exif_rotation": 0,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03J225HUN6",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 201063,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03KD143TK2-image.png",
              "url_private_download": "C03H0JN431U/F03KD143TK2-image.png",
              "original_h": 1448,
              "original_w": 1582,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KD143TK2-e8cbdf899c/image_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KD143TK2-e8cbdf899c/image_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KD143TK2-e8cbdf899c/image_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KD143TK2-e8cbdf899c/image_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 360,
              "thumb_360_h": 330,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KD143TK2-e8cbdf899c/image_480.png",
              "thumb_480_w": 480,
              "thumb_480_h": 439,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KD143TK2-e8cbdf899c/image_720.png",
              "thumb_720_w": 720,
              "thumb_720_h": 659,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KD143TK2-e8cbdf899c/image_960.png",
              "thumb_960_w": 960,
              "thumb_960_h": 879,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KD143TK2-e8cbdf899c/image_1024.png",
              "thumb_1024_w": 1024,
              "thumb_1024_h": 937,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03J225HUN6/F03KD143TK2/image.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03KD143TK2-1f4934b5d6",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            },
            {
              "id": "F03JLB2C3PF",
              "created": 1654634343,
              "timestamp": 1654634343,
              "name": "image.png",
              "title": "image.png",
              "mimetype": "image/png",
              "image_exif_rotation": 0,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03J225HUN6",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 185875,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03JLB2C3PF-image.png",
              "url_private_download": "C03H0JN431U/F03JLB2C3PF-image.png",
              "original_h": 1448,
              "original_w": 1582,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JLB2C3PF-dcb8006262/image_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JLB2C3PF-dcb8006262/image_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JLB2C3PF-dcb8006262/image_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JLB2C3PF-dcb8006262/image_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 360,
              "thumb_360_h": 330,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JLB2C3PF-dcb8006262/image_480.png",
              "thumb_480_w": 480,
              "thumb_480_h": 439,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JLB2C3PF-dcb8006262/image_720.png",
              "thumb_720_w": 720,
              "thumb_720_h": 659,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JLB2C3PF-dcb8006262/image_960.png",
              "thumb_960_w": 960,
              "thumb_960_h": 879,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JLB2C3PF-dcb8006262/image_1024.png",
              "thumb_1024_w": 1024,
              "thumb_1024_h": 937,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03J225HUN6/F03JLB2C3PF/image.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03JLB2C3PF-72273d2c15",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Cj+e",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is a screenshot from my mac, and it really isn’t either.Whether it is View or struct"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4837d539-cfe5-4747-ba26-61a77e8e870b",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "Oh interesting! I would've expected a \"Help\" option when you right-clicked on `View`. Would you mind filing a feedback at \u003chttp://feedbackassistant.apple.com|feedbackassistant.apple.com\u003e?",
          "ts": "1654634580.311839",
          "thread_ts": "1654633592.967539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ju3t",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oh interesting! I would've expected a \"Help\" option when you right-clicked on "
                    },
                    {
                      "type": "text",
                      "text": "View",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". Would you mind filing a feedback at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "feedbackassistant.apple.com"
                    },
                    {
                      "type": "text",
                      "text": "?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f1a9247c-9ad9-44fc-b363-aac94ec96aa8",
          "type": "message",
          "user": "U03J225HUN6",
          "text": "ok, I will create a feedback. I’ve been using Xcode for a long time and am very familiar with it, but the kids really need this kind of help information.",
          "ts": "1654634701.200119",
          "thread_ts": "1654633592.967539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1hgjG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "ok, I will create a feedback. I’ve been using Xcode for a long time and am very familiar with it, but the kids really need this kind of help information."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8527e15f-29fa-42dc-adf1-6289dca1afeb",
          "type": "message",
          "user": "U03J225HUN6",
          "text": "I submitted a feedback. I hope this will help to improve the problem",
          "ts": "1654635505.972729",
          "thread_ts": "1654633592.967539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VRSa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I submitted a feedback. I hope this will help to improve the problem"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9913385b-5a26-41e6-8501-60101fa5164b",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "If you still have the FB number handy, mind sharing it?",
          "ts": "1654635538.710539",
          "thread_ts": "1654633592.967539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LOc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you still have the FB number handy, mind sharing it?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7c951901-88f2-4316-9078-757b3e3a8301",
          "type": "message",
          "user": "U03J225HUN6",
          "text": "The number is FB10080275",
          "ts": "1654636620.502879",
          "thread_ts": "1654633592.967539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=1ISU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The number is FB10080275"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "edba34bf-da7b-4a3c-90b4-15a33ab4b630",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "Thank you!",
          "ts": "1654638553.101099",
          "thread_ts": "1654633592.967539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uWnAV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HV47RD8X\u003e asked\n\u0026gt; Does Swift playgrounds integrate with Xcode cloud?",
      "ts": "1654633712.190439",
      "thread_ts": "1654633712.190439",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654633716.667509",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "+aDf",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HV47RD8X"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Does Swift playgrounds integrate with Xcode cloud?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "d751937f-7223-47d8-a2b8-6563ee444066",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "At this time, Swift Playgrounds does not have any integration with Xcode Cloud.",
          "ts": "1654633716.667509",
          "thread_ts": "1654633712.190439",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03HV47RD8X",
                "U03J225HUN6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2dD1K",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "At this time, Swift Playgrounds does not have any integration with Xcode Cloud."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JBMMB10A\u003e asked\n\u0026gt; How was the debugging working in the preview? Can you tell us a little about that? Looks super helpful.",
      "ts": "1654633776.097729",
      "thread_ts": "1654633776.097729",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654633903.453159",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "bLw",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JBMMB10A"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"How was the debugging working in the preview? Can you tell us a little about that? Looks super helpful.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "7288a11b-b262-466a-aa0d-1ec67862bb43",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "In Swift Playgrounds, the App Preview is always running, so every change you make reflects immediately and automatically! You can also use `print` statements, which show as message bubbles in the console.",
          "ts": "1654633781.845619",
          "thread_ts": "1654633776.097729",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03J225HUN6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "REgY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In Swift Playgrounds, the App Preview is always running, so every change you make reflects immediately and automatically! You can also use "
                    },
                    {
                      "type": "text",
                      "text": "print",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " statements, which show as message bubbles in the console."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "448dce77-a183-4222-8833-69806456119a",
          "type": "message",
          "user": "U03JBMMB10A",
          "text": "Cool! Thank you.",
          "ts": "1654633903.453159",
          "thread_ts": "1654633776.097729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8Enet",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Cool! Thank you."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HV47RD8X\u003e asked\n\u0026gt; Suuuuuper minor but is there any way to tighten up the line spacing on iPad so more code is visible on screen? I always feel like there’s not quite enough visible",
      "ts": "1654633786.493049",
      "thread_ts": "1654633786.493049",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654634133.438489",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "=gON",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HV47RD8X"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Suuuuuper minor but is there any way to tighten up the line spacing on iPad so more code is visible on screen? I always feel like there\\u2019s not quite enough visible\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "763afb30-643e-488c-a489-7dfe8f362d78",
          "type": "message",
          "user": "U03HHPNR942",
          "text": "Yes, you are able to change the font size of text in the editor on both the iPad and the Mac.",
          "ts": "1654633798.214569",
          "thread_ts": "1654633786.493049",
          "edited": {
            "user": "U03HHPNR942",
            "ts": "1654633892.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4Vd2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, you are able to change the font size of text in the editor on both the iPad and the Mac."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f26c16c3-1b3d-40ab-8bc6-d71895984451",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "Try the \"...\" button.",
          "ts": "1654633865.209419",
          "thread_ts": "1654633786.493049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "z713Y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Try the \"...\" button."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "df75fa5e-1418-42c1-a066-8b4f6a1c0963",
          "type": "message",
          "user": "U03HHPNR942",
          "text": "You can use the View Menu on macOS and the ••• option on iPad.",
          "ts": "1654634133.438489",
          "thread_ts": "1654633786.493049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "3k=w",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can use the View Menu on macOS and the ••• option on iPad."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HV47RD8X\u003e asked\n\u0026gt; What’s the right way to add Info.plist settings to an app? For stuff like export restrictions?\n\u0026gt; ",
      "ts": "1654633814.780239",
      "thread_ts": "1654633814.780239",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654633959.727889",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "UmG1N",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HV47RD8X"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What\\u2019s the right way to add Info.plist settings to an app? For stuff like export restrictions?\\n\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "5c33dcf7-31b7-4804-a8dc-ca633bd20cd9",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "If you edit the Package.swift inside of the project, you can add the `additionalInfoPlistContentFilePath` parameter to the app initializer. This is the path within the project to a file which contains additional Info.plist key-value pairs, and they'll be added to the app you build.",
          "ts": "1654633822.144829",
          "thread_ts": "1654633814.780239",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "exclamation",
              "count": 1,
              "users": [
                "U03HV47RD8X"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hw2I",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you edit the Package.swift inside of the project, you can add the "
                    },
                    {
                      "type": "text",
                      "text": "additionalInfoPlistContentFilePath",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " parameter to the app initializer. This is the path within the project to a file which contains additional Info.plist key-value pairs, and they'll be added to the app you build."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4AC69417-2767-4C37-A05D-F7706959F7AA",
          "type": "message",
          "user": "U03HV47RD8X",
          "text": "Can you say more about that? I can’t find the Package.swift in playgrounds",
          "ts": "1654633867.316009",
          "thread_ts": "1654633814.780239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1pY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Can"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "say"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "more"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "about"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "can’t"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "find"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Package.swift"
                    },
                    {
                      "type": "text",
                      "text": " in playgrounds"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9619a96d-a615-40db-9836-5078b10b136f",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "The Package.swift file isn't visible inside of Swift Playgrounds, but if you have a Mac you can right-click it and choose \"Show Package Contents\" and then edit the Package.swift file from there",
          "ts": "1654633959.727889",
          "thread_ts": "1654633814.780239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Rs2vV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The Package.swift file isn't visible inside of Swift Playgrounds, but if you have a Mac you can right-click it and choose \"Show Package Contents\" and then edit the Package.swift file from there"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HV47RD8X\u003e asked\n\u0026gt; How do we run Swift playgrounds on iPad OS 16? I can’t seem to get it to run previews or apps even with developer mode on\n\u0026gt; ",
      "ts": "1654633887.894339",
      "thread_ts": "1654633887.894339",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 9,
      "latest_reply": "1654637130.961539",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "xsEQ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HV47RD8X"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"How do we run Swift playgrounds on iPad OS 16? I can\\u2019t seem to get it to run previews or apps even with developer mode on\\n\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "72906206-34dc-43c8-b17d-aa06bb52f2df",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "Please file a Feedback Assistant report! In Swift Playgrounds in the ••• menu, there's a Send Feedback option that will gather some additional diagnostics from Previews.",
          "ts": "1654633893.955119",
          "thread_ts": "1654633887.894339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=b7K1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Please file a Feedback Assistant report! In Swift Playgrounds in the ••• menu, there's a Send Feedback option that will gather some additional diagnostics from Previews."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e9337403-8df9-4f4f-b4eb-5694dcb83580",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "Is developer mode required for Playgrounds? I thought that was just for Xcode.",
          "ts": "1654634112.096299",
          "thread_ts": "1654633887.894339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LeE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is developer mode required for Playgrounds? I thought that was just for Xcode."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6ee3fb25-e1d6-4844-b242-2065bc6b5fed",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "Developer Mode is not required for Swift Playgrounds.",
          "ts": "1654634152.538079",
          "thread_ts": "1654633887.894339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AHXH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Developer Mode is not required for Swift Playgrounds."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "DF0B876D-2825-4F75-93A7-140CB1DD2E08",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "Is the more menu ••• available on iPad Swift Plagrounds? I don't see it. ",
          "ts": "1654634154.818229",
          "thread_ts": "1654633887.894339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fD3v",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "more"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "menu"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "•••"
                    },
                    {
                      "type": "text",
                      "text": " available "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " iPad Swift "
                    },
                    {
                      "type": "text",
                      "text": "Plagrounds?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " don't "
                    },
                    {
                      "type": "text",
                      "text": "see"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it. "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "22ed0b60-fe85-40e8-85b2-1c09fab79624",
          "type": "message",
          "user": "U03JE2L47J8",
          "text": "Actually, it looks like if you turn Developer mode on Playgrounds crashes. I force closed it and relaunched and it started working again. I'm not sure how stable it is with dev mode on.",
          "ts": "1654634214.450709",
          "thread_ts": "1654633887.894339",
          "edited": {
            "user": "U03JE2L47J8",
            "ts": "1654634349.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lg5Zs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Actually, it looks like if you turn Developer mode on Playgrounds crashes. I force closed it and relaunched and it started working again. I'm not sure how stable it is with dev mode on."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3C81C29B-3B42-4004-8951-9673B1E2074D",
          "type": "message",
          "user": "U03HV47RD8X",
          "text": ":face_palm: Ok. That’s what I need to do. Thank you so much",
          "ts": "1654634276.125569",
          "thread_ts": "1654633887.894339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Z4E",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "emoji",
                      "name": "face_palm",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " Ok."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "That’s"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "what"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "need"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "do."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Thank"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "so"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "much"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6bd564be-22a8-4aa4-aeeb-b2b6d403e248",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "Whoa! That's a great discovery \u003c@U03JE2L47J8\u003e; \u003c@U03HV47RD8X\u003e I wonder if that solution will work for you?",
          "ts": "1654634284.256539",
          "thread_ts": "1654633887.894339",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03HV47RD8X"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "w0T2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Whoa! That's a great discovery "
                    },
                    {
                      "type": "user",
                      "user_id": "U03JE2L47J8"
                    },
                    {
                      "type": "text",
                      "text": "; "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HV47RD8X"
                    },
                    {
                      "type": "text",
                      "text": " I wonder if that solution will work for you?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "55E42359-769A-4B2F-BE97-70121462D751",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "Never mind. I see the Send Feedback from within the Swift Playground app itself. ",
          "ts": "1654634361.698709",
          "thread_ts": "1654633887.894339",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JE2L47J8",
                "U03HL551ATW"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "f9pF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Never mind"
                    },
                    {
                      "type": "text",
                      "text": ". I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "see"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Send"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Feedback"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "from"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "within"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Swift"
                    },
                    {
                      "type": "text",
                      "text": " Playground "
                    },
                    {
                      "type": "text",
                      "text": "app"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "itself. "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "28B75C1B-415E-4E5E-8B10-98876DCC5FC1",
          "type": "message",
          "user": "U03HV47RD8X",
          "text": "Followup: Yes! Turning off developer mode has fixed things up for me and I can run Swift Playgrounds. Thank you, all",
          "ts": "1654637130.961539",
          "thread_ts": "1654633887.894339",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "white_check_mark",
              "count": 1,
              "users": [
                "U03HL551ATW"
              ]
            },
            {
              "name": "grinning",
              "count": 1,
              "users": [
                "U03JE2L47J8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "n2W",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Followup:"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Yes!"
                    },
                    {
                      "type": "text",
                      "text": " Turning "
                    },
                    {
                      "type": "text",
                      "text": "off"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "developer"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "mode"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "has"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "fixed"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "things"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "up"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "me"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "can"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "run"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Swift"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Playgrounds."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Thank"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "all"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4EJ0CVA\u003e asked\n\u0026gt; Any new features in Swift playgrounds beyond version 4.1… e.g. more capabilities like Core Data and CloudKit integration?",
      "ts": "1654633917.347529",
      "thread_ts": "1654633917.347529",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654635552.839319",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "x=1c",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4EJ0CVA"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Any new features in Swift playgrounds beyond version 4.1\\u2026 e.g. more capabilities like Core Data and CloudKit integration?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "54f10579-5b5a-4a26-8312-38684f3ddc90",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "Swift Playgrounds 4.1 is the current version of Swift Playgrounds. Please file feedback reports at \u003chttp://feedbackassistant.apple.com|feedbackassistant.apple.com\u003e for any features you'd like to see in Swift Playgrounds!",
          "ts": "1654633924.655009",
          "thread_ts": "1654633917.347529",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J225HUN6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hdH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Swift Playgrounds 4.1 is the current version of Swift Playgrounds. Please file feedback reports at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "feedbackassistant.apple.com"
                    },
                    {
                      "type": "text",
                      "text": " for any features you'd like to see in Swift Playgrounds!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "40663467-54A0-4BC6-9D00-5E5E1E809915",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "Feedback Request submitted. Thanks. ",
          "ts": "1654635105.270139",
          "thread_ts": "1654633917.347529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/4x",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Feedback Request submitted"
                    },
                    {
                      "type": "text",
                      "text": ". Thanks. "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "55d5cc30-0ccf-4bd4-a0ef-9e546228a126",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "Thank you! If you still have it handy, can you share the FB number that it gave you?",
          "ts": "1654635134.457829",
          "thread_ts": "1654633917.347529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qPPVO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you! If you still have it handy, can you share the FB number that it gave you?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "572E596B-0275-4321-B359-FDCA74F80C3A",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "Standby…",
          "ts": "1654635173.620869",
          "thread_ts": "1654633917.347529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4Ey6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Standby…"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "D1E3545F-E52F-4BB8-ACB7-0C35FB1D9BE2",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "FB10079951",
          "ts": "1654635220.799989",
          "thread_ts": "1654633917.347529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dDzZA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "FB10079951"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "91CE62BB-BCBD-40CB-8B93-AFA9A7297326",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "Great job on presenting. I appreciate it. Same to Collette. ",
          "ts": "1654635360.964439",
          "thread_ts": "1654633917.347529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "erv4D",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Great"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "job"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " presenting"
                    },
                    {
                      "type": "text",
                      "text": ". I"
                    },
                    {
                      "type": "text",
                      "text": " appreciate "
                    },
                    {
                      "type": "text",
                      "text": "it. Same"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Collette. "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2cdd0263-44b0-49cd-8b73-4261c554b97e",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "Thank you!",
          "ts": "1654635552.839319",
          "thread_ts": "1654633917.347529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AgH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HV47RD8X\u003e asked\n\u0026gt; Is there a way to use asset catalogs? Or a right away to include @2x and @3x assets?",
      "ts": "1654633943.037009",
      "thread_ts": "1654633943.037009",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654634041.046679",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "hwd5",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HV47RD8X"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a way to use asset catalogs? Or a right away to include @2x and @3x assets?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "c0f4c517-37a5-41a7-afb4-a6db2a9ae13f",
          "type": "message",
          "user": "U03HERY1BMK",
          "text": "Yes! Importing your first image to the app creates an asset catalog for ya. The app imports it as a universal asset. You can add the @2x \u0026amp; @3x assets to the project when opened in Xcode.",
          "ts": "1654633966.901219",
          "thread_ts": "1654633943.037009",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J22ZLFUJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rus",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes! Importing your first image to the app creates an asset catalog for ya. The app imports it as a universal asset. You can add the @2x \u0026 @3x assets to the project when opened in Xcode."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7874F1DD-0388-4A58-886E-E8460A38CDAC",
          "type": "message",
          "user": "U03HV47RD8X",
          "text": "Y’all are champs. Thank you for answering my million questions!",
          "ts": "1654634041.046679",
          "thread_ts": "1654633943.037009",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lK+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Y’all"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "are"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "champs."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Thank"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "answering"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "million"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "questions!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J225HUN6\u003e asked\n\u0026gt; I want to use CoreData or Realm in Swift Playgrounds App project, any good suggestions? My student very like Swift Playgrounds 4.1.Because it has very fast preview and very little resource requirements on Mac.",
      "ts": "1654634124.492729",
      "thread_ts": "1654634124.492729",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654634159.569539",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "CURA",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J225HUN6"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I want to use CoreData or Realm in Swift Playgrounds App project, any good suggestions? My student very like Swift Playgrounds 4.1.Because it has very fast preview and very little resource requirements on Mac.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "3d162d3f-d928-4aa2-80d8-de2684761dee",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "You can use the CoreData framework by importing it, but Swift Playgrounds does not support managed object model files at this time. Please file a feedback at \u003chttp://feedbackassistant.apple.com|feedbackassistant.apple.com\u003e to request this functionality.",
          "ts": "1654634131.048879",
          "thread_ts": "1654634124.492729",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J225HUN6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sgZni",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can use the CoreData framework by importing it, but Swift Playgrounds does not support managed object model files at this time. Please file a feedback at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "feedbackassistant.apple.com"
                    },
                    {
                      "type": "text",
                      "text": " to request this functionality."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "341af8b9-ab69-403a-8332-3972af254b6e",
          "type": "message",
          "user": "U03J225HUN6",
          "text": "thank you",
          "ts": "1654634159.569539",
          "thread_ts": "1654634124.492729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LmLT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "thank you"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J22ZLFUJ\u003e asked\n\u0026gt; Can Swift Playgrounds be opened inside an Xcode project? Is that the best first step in moving code developed in a playground to Xcode?",
      "ts": "1654634155.104109",
      "thread_ts": "1654634155.104109",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 9,
      "latest_reply": "1654635252.389339",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "uHO7D",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J22ZLFUJ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can Swift Playgrounds be opened inside an Xcode project? Is that the best first step in moving code developed in a playground to Xcode?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a81fae44-1fa4-49aa-ad09-24c83e084e7e",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "The new app project format used by Swift Playgrounds can also be opened by Xcode directly! Does that answer your question?",
          "ts": "1654634159.839909",
          "thread_ts": "1654634155.104109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qwaEU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The new app project format used by Swift Playgrounds can also be opened by Xcode directly! Does that answer your question?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bfe0a450-e1ea-4a6b-8bf9-5a893cf1c7d8",
          "type": "message",
          "user": "U03J22ZLFUJ",
          "text": "Yes, thank you!",
          "ts": "1654634191.727939",
          "thread_ts": "1654634155.104109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FhUE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1C8317A2-AA13-4E8E-A030-1181029ADF8B",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "I've done this but it remains a playground in Xcode. Is there any way that it will automatically create a Xcode project from the swift playgrounds? ",
          "ts": "1654634274.481999",
          "thread_ts": "1654634155.104109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+2WMO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I've "
                    },
                    {
                      "type": "text",
                      "text": "done"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "this"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "but"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " remains "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " playground "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Xcode. "
                    },
                    {
                      "type": "text",
                      "text": "Is there any way that it will automatically create a Xcode project from the swift playgrounds"
                    },
                    {
                      "type": "text",
                      "text": "?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "85d77fbe-ceda-4d49-91cd-d456aa6c9847",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "There is no feature to do that at this time. You can submit your feedback at \u003chttp://feedbackassistant.apple.com|feedbackassistant.apple.com\u003e to request it!",
          "ts": "1654634328.392589",
          "thread_ts": "1654634155.104109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YVEV5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There is no feature to do that at this time. You can submit your feedback at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "feedbackassistant.apple.com"
                    },
                    {
                      "type": "text",
                      "text": " to request it!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5D3F3C21-49DF-4E6F-AB85-F00DE476CA76",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "Thanks :pray: ",
          "ts": "1654634380.516809",
          "thread_ts": "1654634155.104109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "F6qEz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks "
                    },
                    {
                      "type": "emoji",
                      "name": "pray",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9eef5d86-bce8-4f13-8e66-4882703ae9e2",
          "type": "message",
          "user": "U03J22ZLFUJ",
          "text": "One clarification  - if I open a playground inside an Xcode project, does Xcode  modify the file so that it no longer works properly as a Playground document? and assuming I don't mess up the document myself, obviously. :slightly_smiling_face:",
          "ts": "1654634655.723009",
          "thread_ts": "1654634155.104109",
          "edited": {
            "user": "U03J22ZLFUJ",
            "ts": "1654634724.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "g5q4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "One clarification  - if I open a playground inside an Xcode project, does Xcode  modify the file so that it no longer works properly as a Playground document? and assuming I don't mess up the document myself, obviously. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c3855f70-ce3e-4861-82bc-3b815b28d3d2",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "In general, Xcode won't make any changes to your app project that make it incompatible with Swift Playgrounds! There are some things that you could do that are only supported in Xcode, but you'll get a warning if you do any of those",
          "ts": "1654634793.338599",
          "thread_ts": "1654634155.104109",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03J22ZLFUJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xdm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In general, Xcode won't make any changes to your app project that make it incompatible with Swift Playgrounds! There are some things that you could do that are only supported in Xcode, but you'll get a warning if you do any of those"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "333A422C-17D4-4E0F-9B2F-018ED3AD8861",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "Feedback Request submitted. Thanks. ",
          "ts": "1654635054.320889",
          "thread_ts": "1654634155.104109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zc4/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Feedback Request submitted"
                    },
                    {
                      "type": "text",
                      "text": ". Thanks. "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "91360D62-4B74-40D6-93F6-0EA871BF84C1",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "FB10080022",
          "ts": "1654635252.389339",
          "thread_ts": "1654634155.104109",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "white_check_mark",
              "count": 1,
              "users": [
                "U03HL551ATW"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CFaFW",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "FB10080022"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JSFUKL2U\u003e asked\n\u0026gt; Can swift playground handle unsupported file formats? I wanna use similar with Resource.copy(\"\"). In this case I can manage files like CoreData Model, metal shaders files and anything I want!",
      "ts": "1654634469.037909",
      "thread_ts": "1654634469.037909",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654634963.429189",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "rPz",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JSFUKL2U"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can swift playground handle unsupported file formats? I wanna use similar with Resource.copy(\\\"\\\"). In this case I can manage files like CoreData Model, metal shaders files and anything I want!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "43282803-c548-4da9-b3b9-bf28008de16c",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "Yes! If you manually edit the Package.swift file, you can set up explicit `Resource.copy` rules for resources which Swift Playgrounds doesn't know how to process.",
          "ts": "1654634479.693849",
          "thread_ts": "1654634469.037909",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JE2L47J8",
                "U03J225HUN6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Q8lV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes! If you manually edit the Package.swift file, you can set up explicit "
                    },
                    {
                      "type": "text",
                      "text": "Resource.copy",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " rules for resources which Swift Playgrounds doesn't know how to process."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "efcb09b2-9ee0-46be-9586-4955da27d760",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Great! But warning note on top said: “Don’t change it file manually, because Package.swift is generated automatically”.  Should I scare this note or Swift Playground smart enough?",
          "ts": "1654634670.756989",
          "thread_ts": "1654634469.037909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kZJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Great! But warning note on top said: “Don’t change it file manually, because Package.swift is generated automatically”.  Should I scare this note or Swift Playground smart enough?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6b959af4-27b2-4596-9c3f-dc3aa07491eb",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "You should be careful when editing the file, and making changes in the App Settings sheet may cause your edits to be lost, but _generally_ Swift Playgrounds should preserve them.",
          "ts": "1654634784.768529",
          "thread_ts": "1654634469.037909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "D9kY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You should be careful when editing the file, and making changes in the App Settings sheet may cause your edits to be lost, but "
                    },
                    {
                      "type": "text",
                      "text": "generally",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " Swift Playgrounds should preserve them."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a4737326-4618-45d3-a28d-51a7758c7288",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Wow! Thats sound great!",
          "ts": "1654634957.038249",
          "thread_ts": "1654634469.037909",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "grinning",
              "count": 1,
              "users": [
                "U03J225HUN6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "HcJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Wow! Thats sound great!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "75eab61e-c23a-486e-aa54-c87cdc2a4928",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Thanks a lot, Connor!",
          "ts": "1654634963.429189",
          "thread_ts": "1654634469.037909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "St0q",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks a lot, Connor!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J22ZLFUJ\u003e asked\n\u0026gt; Not a question -- just a message of thanks to the entire team for beautiful, elegant work. I am definitely going to be playing in Swift Playgrounds this summer.",
      "ts": "1654634534.021709",
      "thread_ts": "1654634534.021709",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654634538.304309",
      "reactions": [
        {
          "name": "+1",
          "count": 4,
          "users": [
            "U03HV47RD8X",
            "U03J4EJ0CVA",
            "U03JRP87THN",
            "U03HVCSF7B8"
          ]
        },
        {
          "name": "heart",
          "count": 10,
          "users": [
            "U03HHPNR942",
            "U03HL553PNG",
            "U03HERY1BMK",
            "U03HWD56KG9",
            "U03HL551ATW",
            "U03HB5RVBQW",
            "U03JE2L47J8",
            "U03HVCSF7B8",
            "U03HB5C4DHC",
            "U03HL5H29CL"
          ]
        },
        {
          "name": "orange_heart",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        },
        {
          "name": "star-struck",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        },
        {
          "name": "partying_face",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "nPz",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J22ZLFUJ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Not a question -- just a message of thanks to the entire team for beautiful, elegant work. I am definitely going to be playing in Swift Playgrounds this summer.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "72482a7c-f368-45d3-a66a-a3fa2f0750bd",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "Thank you so much for your kind words! We've got the whole team sitting here reading along. :relaxed: Can't wait to see what you build!",
          "ts": "1654634538.304309",
          "thread_ts": "1654634534.021709",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "T4E",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you so much for your kind words! We've got the whole team sitting here reading along. "
                    },
                    {
                      "type": "emoji",
                      "name": "relaxed",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " Can't wait to see what you build!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HB5RVBQW\u003e asked\n\u0026gt; What is each of your favorite type of tea? :)",
      "ts": "1654634821.992229",
      "thread_ts": "1654634821.992229",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 16,
      "latest_reply": "1654640459.595129",
      "reactions": [
        {
          "name": "tea",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        },
        {
          "name": "teapot",
          "count": 1,
          "users": [
            "U03HB5C4DHC"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "fic",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HB5RVBQW"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What is each of your favorite type of tea? :)\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "dcf1c5a5-8d2a-43f0-8d0f-4d9fe0a65cb9",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "Either a nice English Breakfast or a good oolong!",
          "ts": "1654634842.353669",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03HB5RVBQW"
              ]
            },
            {
              "name": "heavy_plus_sign",
              "count": 1,
              "users": [
                "U03HB5C4DHC"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PTT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Either a nice English Breakfast or a good oolong!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "10478c51-9c22-4228-ac42-b91a31aeb83e",
          "type": "message",
          "user": "U03HERY1BMK",
          "text": "mint :^)",
          "ts": "1654634846.589799",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03HB5RVBQW",
                "U03HB5C4DHC"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ndpZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "mint :^)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5c52b69d-e341-4c81-a46e-824c8e25f556",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "That's a tough question! I'm partial to darjeeling a lot of the time",
          "ts": "1654634848.194619",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03HB5RVBQW",
                "U03HB5C4DHC"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zUEm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That's a tough question! I'm partial to darjeeling a lot of the time"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c50b6be6-f2fe-49b3-a8c8-2a2700dac31e",
          "type": "message",
          "user": "U03HHPNR942",
          "text": "Ginger or Green tea. :smile:",
          "ts": "1654634884.615769",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 3,
              "users": [
                "U03HB5RVBQW",
                "U03HWDCSCHX",
                "U03HB5C4DHC"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mznFx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ginger or Green tea. "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1d0d8306-a9fb-41b6-8e15-d8069857d69f",
          "type": "message",
          "user": "U03HHP2237V",
          "text": "Sencha/English Breakfast!",
          "ts": "1654634886.865099",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03HB5RVBQW"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mbJ6l",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sencha/English Breakfast!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "428f9438-dec3-42f8-b7d7-faf0f7fdd39b",
          "type": "message",
          "user": "U03HERY4SN9",
          "text": "Matcha, Sencha, Butterfly Pea",
          "ts": "1654634890.489879",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03HB5RVBQW",
                "U03J223TNSE"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pcgVm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Matcha, Sencha, Butterfly Pea"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9ab3275e-66ac-4e51-8283-c3bd18732114",
          "type": "message",
          "user": "U03HWD56KG9",
          "text": "Chamomile :slightly_smiling_face:",
          "ts": "1654634904.756859",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03HB5RVBQW",
                "U03HB5C4DHC"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lYH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Chamomile "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7247d608-bcc8-4187-b1d6-bb2af115e896",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "Tetley Decaf",
          "ts": "1654634998.190369",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03HB5RVBQW"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6raP0",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Tetley Decaf"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3b1f5a8c-f968-4431-af64-c4d349fb6857",
          "type": "message",
          "user": "U03JRP87THN",
          "text": "Hard to pick",
          "ts": "1654635003.546459",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "IBKwk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hard to pick"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f7a05806-9c20-41cc-9c5d-dff9211f6a38",
          "type": "message",
          "user": "U03JRP87THN",
          "text": " apple tea?:grin:",
          "ts": "1654635038.597949",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "joy",
              "count": 4,
              "users": [
                "U03HB5RVBQW",
                "U03HERY4SN9",
                "U03HERY1BMK",
                "U03JN80PFRQ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nVg3B",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": " apple tea?"
                    },
                    {
                      "type": "emoji",
                      "name": "grin",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "61422b61-6bc7-4835-9cb9-11f179f5733b",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Ivan Chai",
          "ts": "1654635087.408559",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03HB5RVBQW"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "L6z",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ivan Chai"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3866fdb5-8db8-43aa-b26e-859eb3ae4710",
          "type": "message",
          "user": "U03J22ZLFUJ",
          "text": "Harney and Sons Earl Grey",
          "ts": "1654635106.423539",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 3,
              "users": [
                "U03HB5RVBQW",
                "U03HL551ATW",
                "U03JN80PFRQ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sqSd0",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Harney and Sons Earl Grey"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "00ea61fc-301c-4649-b91f-96100e51ee6e",
          "type": "message",
          "user": "U03HERY4SN9",
          "text": "I think we are going to need a bigger wheel! Too many great options :smile:",
          "ts": "1654635171.226239",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "sweat_smile",
              "count": 4,
              "users": [
                "U03JRP87THN",
                "U03HHPNR942",
                "U03J22ZLFUJ",
                "U03HB5C4DHC"
              ]
            },
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03HB5RVBQW",
                "U03HB5C4DHC"
              ]
            },
            {
              "name": "100",
              "count": 2,
              "users": [
                "U03HB5C4DHC",
                "U03JRP87THN"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TtV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I think we are going to need a bigger wheel! Too many great options "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9EEF8925-4E92-4EC0-9611-24B2620203F3",
          "type": "message",
          "user": "U03HB5C4DHC",
          "text": "Jasmine Pearls!",
          "ts": "1654635355.559429",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03HB5RVBQW",
                "U03HL551ATW"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Owem",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Jasmine"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Pearls!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6FAF5AA1-BCB8-4F2A-8037-BD72607FE2F3",
          "type": "message",
          "user": "U03HB5C4DHC",
          "text": "Oolong is a _*very*_ close second…",
          "ts": "1654635426.212789",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03HHPNR942",
                "U03JZ218ZUY"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YFm4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oolong"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "very",
                      "style": {
                        "bold": true,
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "close"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "second…"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0e48158d-22dd-42c3-86c3-b4bc811eadf5",
          "type": "message",
          "user": "U03J7BXV8KA",
          "text": "Hibiscus and pu'er",
          "ts": "1654640459.595129",
          "thread_ts": "1654634821.992229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "orange_heart",
              "count": 1,
              "users": [
                "U03HB5C4DHC"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AHT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hibiscus and pu'er"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J225HUN6\u003e asked\n\u0026gt; swift playground book have any upgrade?",
      "ts": "1654635372.442539",
      "thread_ts": "1654635372.442539",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654635376.907419",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "SpT",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J225HUN6"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"swift playground book have any upgrade?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "4a1ef93b-5529-4d32-9b80-f61139b282a1",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "There are no updates to the playground book format at this time",
          "ts": "1654635376.907419",
          "thread_ts": "1654635372.442539",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9TkS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There are no updates to the playground book format at this time"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "1ffe6a65-26e3-4259-bd7a-c3b017535ab9",
      "type": "message",
      "user": "U03HL551ATW",
      "text": "What a great session! Thanks for hanging out with us this afternoon :smiling_face_with_3_hearts: It's time for all of us to go get some tea. :bubble_tea:\n\nIf your question didn't get answered, you can check to see if there are \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/|other Developer Tools Sessions, Labs, or Lounges\u003e that might be better suited to your questions. For topics not covered there, you can also post your questions in the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e.\n\nAlso, be sure to check out the \u003chttps://developer.apple.com/wwdc22/110974|“You can build an app for that!”\u003e challenge! The \u003c#C03JPCE9ZED|\u003e is open all day today to talk through your ideas and ask questions. Have a great rest of your WWDC!",
      "ts": "1654635510.785429",
      "attachments": [
        {
          "fallback": "Developer Tools - Topics - WWDC22",
          "id": 1,
          "title": "Developer Tools - Topics - WWDC22",
          "title_link": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "text": "Everything you need to know to build the next great app or game.",
          "image_url": "https://developer.apple.com/wwdc22/topics/images/og/developer-tools-og.png",
          "service_name": "developer.apple.com",
          "service_icon": "https://developer.apple.com/favicon.ico",
          "from_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "original_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "blocks": null
        },
        {
          "fallback": "Apple Developer Forums",
          "id": 2,
          "title": "Apple Developer Forums",
          "title_link": "http://developer.apple.com/forums/",
          "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
          "service_name": "developer.apple.com",
          "service_icon": "https://forums.developer.apple.com/forums/build-05312022-1/public/assets/favicon.ico",
          "from_url": "http://developer.apple.com/forums/",
          "original_url": "http://developer.apple.com/forums/",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "tea",
          "count": 4,
          "users": [
            "U03HB5C4DHC",
            "U03HHPNR942",
            "U03HERY1BMK",
            "U03HWD56KG9"
          ]
        },
        {
          "name": "bubble_tea",
          "count": 5,
          "users": [
            "U03HERY1BMK",
            "U03HB5C4DHC",
            "U03HHPNR942",
            "U03HERY4SN9",
            "U03HWD56KG9"
          ]
        },
        {
          "name": "teapot",
          "count": 5,
          "users": [
            "U03HB5C4DHC",
            "U03HERY1BMK",
            "U03HHPNR942",
            "U03HWD56KG9",
            "U03HV47RD8X"
          ]
        },
        {
          "name": "100",
          "count": 2,
          "users": [
            "U03HB5C4DHC",
            "U03HHPNR942"
          ]
        },
        {
          "name": "partying_face",
          "count": 2,
          "users": [
            "U03HB5C4DHC",
            "U03HHPNR942"
          ]
        },
        {
          "name": "fire",
          "count": 2,
          "users": [
            "U03HB5C4DHC",
            "U03HHPNR942"
          ]
        },
        {
          "name": "exploding_head",
          "count": 2,
          "users": [
            "U03HB5C4DHC",
            "U03HHPNR942"
          ]
        },
        {
          "name": "pray",
          "count": 2,
          "users": [
            "U03HVC6M81L",
            "U03HB5C4DHC"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "nbuV",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "What a great session! Thanks for hanging out with us this afternoon "
                },
                {
                  "type": "emoji",
                  "name": "smiling_face_with_3_hearts",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " It's time for all of us to go get some tea. "
                },
                {
                  "type": "emoji",
                  "name": "bubble_tea",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "\n\nIf your question didn't get answered, you can check to see if there are "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
                  "text": "other Developer Tools Sessions, Labs, or Lounges"
                },
                {
                  "type": "text",
                  "text": " that might be better suited to your questions. For topics not covered there, you can also post your questions in the "
                },
                {
                  "type": "link",
                  "url": "http://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": ".\n\nAlso, be sure to check out the "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/110974",
                  "text": "“You can build an app for that!”"
                },
                {
                  "type": "text",
                  "text": " challenge! The "
                },
                {
                  "type": "channel",
                  "channel_id": "C03JPCE9ZED"
                },
                {
                  "type": "text",
                  "text": " is open all day today to talk through your ideas and ask questions. Have a great rest of your WWDC!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "c2d19eb8-f093-4e02-8a39-c7418047d8a1",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "Hello! Welcome to *Meet the Presenter: Meet Swift Async Algorithms*. My name is Tony and I’m a manager on the Swift team at Apple. With me today is our amazing presenter Philippe, along with many other members of the Swift team.\n\nI hope you’re all exited for the watch party! At 2:05pm PDT we’ll all start the video together, so make sure you’re all set up to start with me. I’ll be creating some threads as the video progresses that align with sections. Use those to talk and ask questions! When the video finishes we will have plenty of time for more in-depth Q\u0026amp;A.\n\nIn the meantime, here are some useful links:\n\nSwift Async Algorithms on GitHub: \u003chttps://github.com/apple/swift-async-algorithms\u003e (we use GitHub Issues and Pull Requests)\t\nSwift Async Algorithms on the Swift Forums: \u003chttps://forums.swift.org/c/related-projects/swift-async-algorithms/\u003e\n\nSet your new Swift `Clock` for a 5 minute countdown...",
      "ts": "1654635755.452979",
      "edited": {
        "user": "U03HL5K6L04",
        "ts": "1654635777.000000"
      },
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "sWzQx",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hello! Welcome to "
                },
                {
                  "type": "text",
                  "text": "Meet the Presenter: Meet Swift Async Algorithms",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": ". My name is Tony and I’m a manager on the Swift team at Apple. With me today is our amazing presenter Philippe, along with many other members of the Swift team.\n\nI hope you’re all exited for the watch party! At 2:05pm PDT we’ll all start the video together, so make sure you’re all set up to start with me. I’ll be creating some threads as the video progresses that align with sections. Use those to talk and ask questions! When the video finishes we will have plenty of time for more in-depth Q\u0026A.\n\nIn the meantime, here are some useful links:\n\nSwift Async Algorithms on GitHub: "
                },
                {
                  "type": "link",
                  "url": "https://github.com/apple/swift-async-algorithms",
                  "text": ""
                },
                {
                  "type": "text",
                  "text": " (we use GitHub Issues and Pull Requests)\t\nSwift Async Algorithms on the Swift Forums: "
                },
                {
                  "type": "link",
                  "url": "https://forums.swift.org/c/related-projects/swift-async-algorithms/",
                  "text": ""
                },
                {
                  "type": "text",
                  "text": "\n\nSet your new Swift `Clock` for a 5 minute countdown..."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "f16d89be-2966-4529-b59e-f453224767fa",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "And… the video of course :slightly_smiling_face: \u003chttps://developer.apple.com/videos/play/wwdc2022/110355/\u003e",
      "ts": "1654635858.325359",
      "attachments": [
        {
          "fallback": "Apple Developer: Meet Swift Async Algorithms - WWDC22 - Videos - Apple Developer",
          "id": 1,
          "title": "Meet Swift Async Algorithms - WWDC22 - Videos - Apple Developer",
          "title_link": "https://developer.apple.com/videos/play/wwdc2022/110355/",
          "text": "Discover the latest open source Swift package from Apple: Swift Async Algorithms. We'll explore algorithms from this package that you can...",
          "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/124/6709/6709_wide_250x141_2x.jpg",
          "service_name": "Apple Developer",
          "service_icon": "https://developer.apple.com/favicon.ico",
          "from_url": "https://developer.apple.com/videos/play/wwdc2022/110355/",
          "original_url": "https://developer.apple.com/videos/play/wwdc2022/110355/",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "partying_face",
          "count": 8,
          "users": [
            "U03JRP87THN",
            "U03JKD29SCV",
            "U03HWEGHRKR",
            "U03HVDF8N6A",
            "U03HL553PNG",
            "U03HN9FSVT9",
            "U03JFEBN4MP",
            "U03JEMCCQ57"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "OJu",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "And… the video of course "
                },
                {
                  "type": "emoji",
                  "name": "slightly_smiling_face",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/videos/play/wwdc2022/110355/",
                  "text": ""
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "d35b5e7d-2cd4-4835-a812-3a3ad6de967a",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "Are you ready? Press play in 3... 2... 1... go!",
      "ts": "1654635906.768299",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "HE6L",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Are you ready? Press play in 3... 2... 1... go!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "7c7b9755-6971-48e4-98b4-971761358c01",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": ":tv:",
      "ts": "1654635912.530069",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "u9y",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "emoji",
                  "name": "tv",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "4afeac35-df85-49ca-b97b-c62d828a6f6e",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "*Multi-input Algorithms* :thread:",
      "ts": "1654636054.903109",
      "thread_ts": "1654636054.903109",
      "reply_count": 2,
      "latest_reply": "1654636095.061749",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ylJRz",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Multi-input Algorithms",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " "
                },
                {
                  "type": "emoji",
                  "name": "thread",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "15245213-57b7-4b73-ab9b-6f6eeb7531dc",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "These are things like merge, zip, or combineLatest",
          "ts": "1654636075.216429",
          "thread_ts": "1654636054.903109",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GYNU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "These are things like merge, zip, or combineLatest"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b940c38f-2f92-4f3e-ba3d-fb3b8099f1ab",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "all things that take multiple input AsyncSequences and produce one output",
          "ts": "1654636095.061749",
          "thread_ts": "1654636054.903109",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "WUX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "all things that take multiple input AsyncSequences and produce one output"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "0333063a-c26e-4649-a43c-53a9cbb75cf5",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "*Clock, instant, duration* :thread:",
      "ts": "1654636270.468879",
      "thread_ts": "1654636270.468879",
      "reply_count": 1,
      "latest_reply": "1654636326.091939",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "IP19o",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Clock, instant, duration",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " "
                },
                {
                  "type": "emoji",
                  "name": "thread",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "09f46ab2-0dcc-4203-a698-5ce9a0ac741c",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "These are standard library primitives for sleeping tasks and gathering information on the time of execution",
          "ts": "1654636326.091939",
          "thread_ts": "1654636270.468879",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lhTd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "These are standard library primitives for sleeping tasks and gathering information on the time of execution"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "5ba606ff-d1cf-46ce-a00a-c3540d1afe3b",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "*Algorithms using time* :thread:",
      "ts": "1654636408.001039",
      "thread_ts": "1654636408.001039",
      "reply_count": 1,
      "latest_reply": "1654636480.836679",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "mjM",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Algorithms using time",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " "
                },
                {
                  "type": "emoji",
                  "name": "thread",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "791bf225-51d2-4849-8eee-4bc5c669e8dc",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "These are AsyncSequences that do things like rate limiting. Like debounce or throttle.",
          "ts": "1654636480.836679",
          "thread_ts": "1654636408.001039",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5/P",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "These are AsyncSequences that do things like rate limiting. Like debounce or throttle."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "6430d931-e1bf-431b-b169-b5cf1b94b66a",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "*Chunks!* :thread:",
      "ts": "1654636510.726039",
      "thread_ts": "1654636510.726039",
      "reply_count": 1,
      "latest_reply": "1654636565.003429",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "pRN",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Chunks! ",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "emoji",
                  "name": "thread",
                  "skin_tone": 0,
                  "style": {
                    "bold": true
                  }
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "5ae0b3a2-f614-4990-a1a2-97b1ca911ca2",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "These AsyncSequences up into collections of values by certain methods or combinations of those methods.",
          "ts": "1654636565.003429",
          "thread_ts": "1654636510.726039",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0xC3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "These AsyncSequences up into collections of values by certain methods or combinations of those methods."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "804201e2-635d-4673-9657-e30390b6ba9f",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "*Collections* :thread:",
      "ts": "1654636575.345919",
      "thread_ts": "1654636575.345919",
      "reply_count": 1,
      "latest_reply": "1654636625.026409",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "i/eAF",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Collections ",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "emoji",
                  "name": "thread",
                  "skin_tone": 0,
                  "style": {
                    "bold": true
                  }
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "9918f3ca-8140-474d-b7ff-8489a8ac9114",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "The collection initializers let you create common collection types with AsyncSequences so you can use them later or with existing code.",
          "ts": "1654636625.026409",
          "thread_ts": "1654636575.345919",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03J22ZLFUJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "blT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The collection initializers let you create common collection types with AsyncSequences so you can use them later or with existing code."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "7bff8596-ceca-4f29-94c5-d6261a5a9951",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "That’s a wrap :package: !\n\nThanks for watching everyone! We’re not done yet, though -- let’s use the rest of the time here for more detailed Q\u0026amp;A. Feel free to use that ‘Ask a Question’ workflow and we’ll keep everything organized in threads. Let’s go!",
      "ts": "1654636698.853419",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "uEm1G",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "That’s a wrap "
                },
                {
                  "type": "emoji",
                  "name": "package",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " !\n\nThanks for watching everyone! We’re not done yet, though -- let’s use the rest of the time here for more detailed Q\u0026A. Feel free to use that ‘Ask a Question’ workflow and we’ll keep everything organized in threads. Let’s go!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JSFUKL2U\u003e asked\n\u0026gt; Why AsyncStream can't use multiple subscribers? Swift crashed with unstopped task error. I wanna see same result as in Combine Publisher.",
      "ts": "1654636838.973459",
      "thread_ts": "1654636838.973459",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654637071.979699",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "JCpL",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JSFUKL2U"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Why AsyncStream can't use multiple subscribers? Swift crashed with unstopped task error. I wanna see same result as in Combine Publisher.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "d18613c9-08b5-4fe7-b038-23cb4895ba21",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "That got changed in swift 5.7: originally the problem was that the case that multiple consumers was undefined behavior, but we refined that to now allow for multiple consumers. But note: each consumer will consume the iteration independently so they will not share the values.",
          "ts": "1654636897.761789",
          "thread_ts": "1654636838.973459",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mfhLG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That got changed in swift 5.7: originally the problem was that the case that multiple consumers was undefined behavior, but we refined that to now allow for multiple consumers. But note: each consumer will consume the iteration independently so they will not share the values."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d4cb7c46-e85e-4489-bf61-51abee1ced4f",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Sound great!\nI will wait Swift 5.7.\n\nP.S. Your hair color is great!",
          "ts": "1654636983.354959",
          "thread_ts": "1654636838.973459",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "v/+p",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sound great!\nI will wait Swift 5.7.\n\nP.S. Your hair color is great!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "68df3c10-666b-4d48-886e-bc461440be71",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "thanks!",
          "ts": "1654637026.181399",
          "thread_ts": "1654636838.973459",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "yXHK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "218dec31-2e8d-42ae-929b-76f890f198b1",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "Note: if you are using an AsyncStream pre 5.7 you have nothing to worry about if the stream is used just by one task",
          "ts": "1654637071.979699",
          "thread_ts": "1654636838.973459",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JSFUKL2U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fl3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Note: if you are using an AsyncStream pre 5.7 you have nothing to worry about if the stream is used just by one task"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HWEGHRKR\u003e asked\n\u0026gt; Are these new algorithms compatible with earlier versions of iOS?",
      "ts": "1654636905.926829",
      "thread_ts": "1654636905.926829",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654636956.122009",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "LXASz",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HWEGHRKR"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Are these new algorithms compatible with earlier versions of iOS?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "d558400f-81e0-44d0-a0ab-25a9f0d036a6",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "A good amount of them can be used before the most recent releases; the ones that use time need OS level support to do it",
          "ts": "1654636937.766579",
          "thread_ts": "1654636905.926829",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03HWEGHRKR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TeU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "A good amount of them can be used before the most recent releases; the ones that use time need OS level support to do it"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "96df561d-02e1-4a28-aa0a-519e74ca59bf",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "so for example `zip` can be used as far back as Swift concurrency can",
          "ts": "1654636956.122009",
          "thread_ts": "1654636905.926829",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JP1ADKGA",
                "U03HWEGHRKR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "45dAZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "so for example "
                    },
                    {
                      "type": "text",
                      "text": "zip",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " can be used as far back as Swift concurrency can"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4BG14R2\u003e asked\n\u0026gt; What would be Combine's place with Swift concurrency now released? How to choose between the two? Will Combine be mainly used behind the scenes for SwiftUI only?",
      "ts": "1654637104.419019",
      "thread_ts": "1654637104.419019",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654638996.442189",
      "reactions": [
        {
          "name": "+1",
          "count": 6,
          "users": [
            "U03HX9ZTNQ7",
            "U03JP1ADKGA",
            "U03JE2L47J8",
            "U03HN9FSVT9",
            "U03J1TUA799",
            "U03JEM1AW0Z"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "P/Ac",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4BG14R2"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What would be Combine's place with Swift concurrency now released? How to choose between the two? Will Combine be mainly used behind the scenes for SwiftUI only?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "39992f87-ec66-4fb5-a862-00dc7d8396be",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Thanks for the question \u003c@U03J4BG14R2\u003e — we actually talked about this a bit earlier today over here, which I think answers it: \u003chttps://wwdc22.slack.com/archives/C03H0JN431U/p1654628520096709?thread_ts=1654628350.752979\u0026amp;cid=C03H0JN431U\u003e",
          "ts": "1654637132.342199",
          "thread_ts": "1654637104.419019",
          "attachments": [
            {
              "fallback": "[June 7th, 2022 12:02 PM] 7425066227075992085: Great question, thanks \u003c@U03JKD29SCV\u003e. You’re 100% correct that there are a lot of ways to add concurrency to your project. It’s been a long-standing challenge to make concurrency safe and easy to understand. I hope you’ll forgive my bias, but given the channel we’re in I’ll say this — async/await is the best way to use concurrency in your app. If you can use it, use that first. You’ve probably seen that we’re actively improving it over time as well, with more support for `Sendable` this year, additional algorithms for Async Sequence, and more.",
              "id": 1,
              "author_id": "U03HL5K6L04",
              "author_name": "Tony P (Apple)",
              "author_subname": "Tony P (Apple)",
              "author_link": "https://wwdc22.slack.com/team/U03HL5K6L04",
              "author_icon": "https://avatars.slack-edge.com/2022-06-03/3604899662887_b4ae2b3bf77ae5b0ec0e_48.png",
              "text": "Great question, thanks \u003c@U03JKD29SCV\u003e. You’re 100% correct that there are a lot of ways to add concurrency to your project. It’s been a long-standing challenge to make concurrency safe and easy to understand. I hope you’ll forgive my bias, but given the channel we’re in I’ll say this — async/await is the best way to use concurrency in your app. If you can use it, use that first. You’ve probably seen that we’re actively improving it over time as well, with more support for `Sendable` this year, additional algorithms for Async Sequence, and more.",
              "from_url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654628520096709?thread_ts=1654628350.752979\u0026amp;cid=C03H0JN431U",
              "original_url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654628520096709?thread_ts=1654628350.752979\u0026amp;cid=C03H0JN431U",
              "mrkdwn_in": [
                "text"
              ],
              "blocks": null,
              "footer": "From a thread in #devtools-and-swift-lounge",
              "ts": 1654628520.096709
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03J22ZLFUJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "99WjT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the question "
                    },
                    {
                      "type": "user",
                      "user_id": "U03J4BG14R2"
                    },
                    {
                      "type": "text",
                      "text": " — we actually talked about this a bit earlier today over here, which I think answers it: "
                    },
                    {
                      "type": "link",
                      "url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654628520096709?thread_ts=1654628350.752979\u0026cid=C03H0JN431U",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "96a6f230-99af-448e-b474-38727c2d018d",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "To add a bit more about Combine specifically, we think that the AsyncSequence-based API in Async Algorithms, deeply integrating into the language support, is going to be the best way to use these algorithms",
          "ts": "1654637205.701329",
          "thread_ts": "1654637104.419019",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "ok_hand",
              "count": 2,
              "users": [
                "U03J4BG14R2",
                "U03HVD5Q8DC"
              ]
            },
            {
              "name": "+1",
              "count": 3,
              "users": [
                "U03HWEGHRKR",
                "U03JP1ADKGA",
                "U03HMEG5T7Z"
              ]
            },
            {
              "name": "raised_hands",
              "count": 2,
              "users": [
                "U03J22ZLFUJ",
                "U03JE2L47J8"
              ]
            },
            {
              "name": "hugging_face",
              "count": 1,
              "users": [
                "U03JKD29SCV"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Mica",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "To add a bit more about Combine specifically, we think that the AsyncSequence-based API in Async Algorithms, deeply integrating into the language support, is going to be the best way to use these algorithms"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e8193185-98b5-4413-8f7c-aaaa2ab57d3a",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "I talked a bit about it here too: \u003chttps://www.swift.org/blog/swift-async-algorithms/\u003e",
          "ts": "1654637242.194929",
          "thread_ts": "1654637104.419019",
          "attachments": [
            {
              "fallback": "Swift.org: Introducing Swift Async Algorithms",
              "id": 1,
              "title": "Introducing Swift Async Algorithms",
              "title_link": "https://www.swift.org/blog/swift-async-algorithms/",
              "text": "As part of Swift’s move toward safe, simple, and performant asynchronous programming, we are pleased to introduce a new package of algorithms for AsyncSequence. It is called Swift Async Algorithms and it is available now on GitHub.",
              "thumb_url": "https://swift.org/apple-touch-icon-180x180.png",
              "service_name": "Swift.org",
              "service_icon": "https://www.swift.org/apple-touch-icon.png",
              "from_url": "https://www.swift.org/blog/swift-async-algorithms/",
              "original_url": "https://www.swift.org/blog/swift-async-algorithms/",
              "blocks": null,
              "ts": 1648119600
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03J22ZLFUJ"
              ]
            },
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HX9ZTNQ7"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "J9d",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I talked a bit about it here too: "
                    },
                    {
                      "type": "link",
                      "url": "https://www.swift.org/blog/swift-async-algorithms/",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ba5d1bf4-228f-4f1f-8266-cf10d0e8aa11",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Another big bonus: Async Algorithms is open source and cross-platform",
          "ts": "1654637292.653749",
          "thread_ts": "1654637104.419019",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "star-struck",
              "count": 3,
              "users": [
                "U03JKD29SCV",
                "U03JE2L47J8",
                "U03HB5WGZU6"
              ]
            },
            {
              "name": "heart",
              "count": 4,
              "users": [
                "U03JP1ADKGA",
                "U03HVD5Q8DC",
                "U03HMD15W07",
                "U03HB5WGZU6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vAR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Another big bonus: Async Algorithms is open source and cross-platform"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1a154dcf-ca66-4bb2-a80b-71af4deea3fa",
          "type": "message",
          "user": "U03HVC03PC6",
          "text": "But does Async Algorithms provide an equivalent to @Published/CurrentValueSubject, i.e. a way to do state observation?",
          "ts": "1654638575.073229",
          "thread_ts": "1654637104.419019",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CMG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "But does Async Algorithms provide an equivalent to @Published/CurrentValueSubject, i.e. a way to do state observation?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6de9efb7-74bd-466f-903a-bedf9f3f8885",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "There isnt a property wrapper for changes in AsyncAlgorithms but there is a thing similar to subjects",
          "ts": "1654638901.778959",
          "thread_ts": "1654637104.419019",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fT4qH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There isnt a property wrapper for changes in AsyncAlgorithms but there is a thing similar to subjects"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "01bf6ebf-888c-4cf7-9931-3da1f5b1eb53",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Specifically for SwiftUI, those remain the way to notify views of state that needs to change",
          "ts": "1654638941.472799",
          "thread_ts": "1654637104.419019",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "EEH4S",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Specifically for SwiftUI, those remain the way to notify views of state that needs to change"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "65eabbb6-98d1-4860-ad44-a3981d5a9bfc",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "the thing similar to subjects is `AsyncChannel` . That is a way to send values between tasks. But as Tony points out for the SwiftUI side of things `ObservableObject` and `@Published` are good ways to still communicate events.",
          "ts": "1654638996.442189",
          "thread_ts": "1654637104.419019",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 2,
              "users": [
                "U03HVC03PC6",
                "U03J22AU6DQ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Di5G",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "the thing similar to subjects is "
                    },
                    {
                      "type": "text",
                      "text": "AsyncChannel",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " . That is a way to send values between tasks. But as Tony points out for the SwiftUI side of things "
                    },
                    {
                      "type": "text",
                      "text": "ObservableObject",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "text",
                      "text": "@Published",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " are good ways to still communicate events."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KD24FB40\u003e asked\n\u0026gt; Does the new Swift Package give us anything akin to a Parallel For-Loop?",
      "ts": "1654637364.342499",
      "thread_ts": "1654637364.342499",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654637668.658479",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "=Qs",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KD24FB40"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Does the new Swift Package give us anything akin to a Parallel For-Loop?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "3f02036d-2300-4e2e-8ff2-882969f1488c",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "This package does not have a way to do that because swift concurrency already has a pretty good tool to do it already: `withTaskGroup` - that allows parallel iteration and manages the lifetime of that iteration accordingly",
          "ts": "1654637410.495399",
          "thread_ts": "1654637364.342499",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hBD",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This package does not have a way to do that because swift concurrency already has a pretty good tool to do it already: "
                    },
                    {
                      "type": "text",
                      "text": "withTaskGroup",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " - that allows parallel iteration and manages the lifetime of that iteration accordingly"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "79076293-c07e-416c-b27e-5bbc15397419",
          "type": "message",
          "user": "U03KD24FB40",
          "text": "That's good to know thanks!",
          "ts": "1654637452.676089",
          "thread_ts": "1654637364.342499",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/5j",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That's good to know thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "82bc4650-5890-47f7-b2e4-90b9f1416bd2",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "The docs for it are at \u003chttps://developer.apple.com/documentation/swift/withtaskgroup(of:returning:body:)\u003e if you’re interested.",
          "ts": "1654637453.946859",
          "thread_ts": "1654637364.342499",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qZpF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The docs for it are at "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/swift/withtaskgroup(of:returning:body:)",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " if you’re interested."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f5d2e0b4-4be6-46fe-b791-2244e92299f0",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "Bonus: this is part of the base async/await implementation, so it works with iOS 15 and Big Sur :slightly_smiling_face:",
          "ts": "1654637484.235819",
          "thread_ts": "1654637364.342499",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "clap",
              "count": 1,
              "users": [
                "U03KD24FB40"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "o/UA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Bonus: this is part of the base async/await implementation, so it works with iOS 15 and Big Sur "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "90b29f8c-f330-40ae-bddb-56a4b807d187",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "all the way back to 10.15 and iOS 13, actually, thanks to back-deployment.",
          "ts": "1654637506.993599",
          "thread_ts": "1654637364.342499",
          "edited": {
            "user": "U03HWDD6RED",
            "ts": "1654637520.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Nyn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "all the way back to 10.15 and iOS 13, actually, thanks to back-deployment."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "be30fe50-ea12-4e26-a16d-0873a2d66724",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "You can look at \u003chttps://github.com/JohnSundell/CollectionConcurrencyKit\u003e if you want examples of parallel collection operations.",
          "ts": "1654637650.518529",
          "thread_ts": "1654637364.342499",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KY3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can look at "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/JohnSundell/CollectionConcurrencyKit",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " if you want examples of parallel collection operations."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6ec46da4-da84-4558-985a-e5835a8c2606",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Also note that `withTaskGroup` may not perform well for large collections in the Swift 5.5 runtime IIRC.",
          "ts": "1654637668.658479",
          "thread_ts": "1654637364.342499",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "SIm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also note that "
                    },
                    {
                      "type": "text",
                      "text": "withTaskGroup",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " may not perform well for large collections in the Swift 5.5 runtime IIRC."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JEKFMT4Z\u003e asked\n\u0026gt; What are ways to define async work that returns an AsyncSequence, which is lazy. So it only runs later when explicitly requested or started?",
      "ts": "1654637584.964259",
      "thread_ts": "1654637584.964259",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654637651.516579",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "plo",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JEKFMT4Z"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What are ways to define async work that returns an AsyncSequence, which is lazy. So it only runs later when explicitly requested or started?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "f5856ea8-49e9-4301-91aa-b80433c03b8c",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "AsyncSequences are by nature very similar to lazy algorithms because they process things via their next function of their iterators",
          "ts": "1654637621.810489",
          "thread_ts": "1654637584.964259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7t5G",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "AsyncSequences are by nature very similar to lazy algorithms because they process things via their next function of their iterators"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e1dd47d1-2f4f-443a-9e90-89696511695a",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "so that first call to next is that request for things to be done; and that function is mutating so that it can know if it has started or not",
          "ts": "1654637651.516579",
          "thread_ts": "1654637584.964259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hSh6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "so that first call to next is that request for things to be done; and that function is mutating so that it can know if it has started or not"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KD24FB40\u003e asked\n\u0026gt; Which algorithm in the package are you most proud of?",
      "ts": "1654637696.795879",
      "thread_ts": "1654637696.795879",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654637935.729309",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "TdI8",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KD24FB40"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Which algorithm in the package are you most proud of?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "bd631a6e-7f32-4557-af26-5b18410c43c7",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "Merge was really fun to write",
          "ts": "1654637744.733119",
          "thread_ts": "1654637696.795879",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "COU9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Merge was really fun to write"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ab412c91-e594-4981-8483-0c6cee4c187a",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "AsyncBuffer and the AsyncBufferSequence was probably the one that really was the most tricky and perhaps the most impressive in my mind.",
          "ts": "1654637779.008729",
          "thread_ts": "1654637696.795879",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cZPA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "AsyncBuffer and the AsyncBufferSequence was probably the one that really was the most tricky and perhaps the most impressive in my mind."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3df6c8f5-f8f5-4f19-96d9-60d6f7cb15aa",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "I like the test cases!",
          "ts": "1654637784.310209",
          "thread_ts": "1654637696.795879",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OeP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I like the test cases!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d9d8bcd4-636d-4edc-887c-1cf5d009acdc",
          "type": "message",
          "user": "U03KD24FB40",
          "text": "Cool stuff, thanks!",
          "ts": "1654637826.254639",
          "thread_ts": "1654637696.795879",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8Jlw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Cool stuff, thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b795cf34-b742-4cb9-b061-23990760f54f",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "\u003chttps://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncMerge2Sequence.swift|Merge\u003e",
          "ts": "1654637853.508529",
          "thread_ts": "1654637696.795879",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2/1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncMerge2Sequence.swift",
                      "text": "Merge"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dc598b88-e2b5-4ea6-9316-503f708eff42",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "\u003chttps://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncBufferSequence.swift|AsyncBufferSequence\u003e",
          "ts": "1654637871.959879",
          "thread_ts": "1654637696.795879",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "h2GUd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncBufferSequence.swift",
                      "text": "AsyncBufferSequence"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f3deb1a2-ebc3-40d3-a2f3-c3939bea655a",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "and the tests \u003chttps://github.com/apple/swift-async-algorithms/blob/main/Tests/AsyncAlgorithmsTests/TestMerge.swift#L314|look like this\u003e",
          "ts": "1654637903.977659",
          "thread_ts": "1654637696.795879",
          "attachments": [
            {
              "fallback": "GitHub: swift-async-algorithms/TestMerge.swift at main · apple/swift-async-algorithms",
              "id": 1,
              "title": "swift-async-algorithms/TestMerge.swift at main · apple/swift-async-algorithms",
              "title_link": "https://github.com/apple/swift-async-algorithms/blob/main/Tests/AsyncAlgorithmsTests/TestMerge.swift#L314",
              "text": "Async Algorithms for Swift. Contribute to apple/swift-async-algorithms development by creating an account on GitHub.",
              "image_url": "https://opengraph.githubassets.com/11f1cf1ce3796746b294106de2c762fba21603ab0cc2aadaefc29f23b5fe0c62/apple/swift-async-algorithms",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/apple/swift-async-algorithms/blob/main/Tests/AsyncAlgorithmsTests/TestMerge.swift#L314",
              "original_url": "https://github.com/apple/swift-async-algorithms/blob/main/Tests/AsyncAlgorithmsTests/TestMerge.swift#L314",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8dnT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "and the tests "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-async-algorithms/blob/main/Tests/AsyncAlgorithmsTests/TestMerge.swift#L314",
                      "text": "look like this"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e15ec461-b64d-4959-a86b-99f584ec156b",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "yup, with docs \u003chttps://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncSequenceValidation/AsyncSequenceValidation.docc/Validation.md|here\u003e",
          "ts": "1654637935.729309",
          "thread_ts": "1654637696.795879",
          "attachments": [
            {
              "fallback": "GitHub: swift-async-algorithms/Validation.md at main · apple/swift-async-algorithms",
              "id": 1,
              "title": "swift-async-algorithms/Validation.md at main · apple/swift-async-algorithms",
              "title_link": "https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncSequenceValidation/AsyncSequenceValidation.docc/Validation.md",
              "text": "Async Algorithms for Swift. Contribute to apple/swift-async-algorithms development by creating an account on GitHub.",
              "image_url": "https://opengraph.githubassets.com/11f1cf1ce3796746b294106de2c762fba21603ab0cc2aadaefc29f23b5fe0c62/apple/swift-async-algorithms",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncSequenceValidation/AsyncSequenceValidation.docc/Validation.md",
              "original_url": "https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncSequenceValidation/AsyncSequenceValidation.docc/Validation.md",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UpHmK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "yup, with docs "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncSequenceValidation/AsyncSequenceValidation.docc/Validation.md",
                      "text": "here"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "306d928a-3255-4733-9128-d57283825c1e",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "`Clock` check — 20 minutes left. Food truck :doughnut:  to anyone who can tell me which `Clock` to use to measure it!",
      "ts": "1654638011.741479",
      "thread_ts": "1654638011.741479",
      "reply_count": 16,
      "latest_reply": "1654639443.579089",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "+1",
          "count": 1,
          "users": [
            "U03HX9ZTNQ7"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Y9xM=",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Clock",
                  "style": {
                    "code": true
                  }
                },
                {
                  "type": "text",
                  "text": " check — 20 minutes left. Food truck "
                },
                {
                  "type": "emoji",
                  "name": "doughnut",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "  to anyone who can tell me which "
                },
                {
                  "type": "text",
                  "text": "Clock",
                  "style": {
                    "code": true
                  }
                },
                {
                  "type": "text",
                  "text": " to use to measure it!"
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "257b1536-dc5e-46f6-9920-27d96691db25",
          "type": "message",
          "user": "U03KD24FB40",
          "text": "ContinuousClock!",
          "ts": "1654638058.432549",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TSowF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "ContinuousClock!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1b12e967-70dd-4edd-9100-d7b6175cdde8",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Let’s ask \u003c@U03H36UD5QX\u003e to be the judge",
          "ts": "1654638069.390749",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Kn8UE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Let’s ask "
                    },
                    {
                      "type": "user",
                      "user_id": "U03H36UD5QX"
                    },
                    {
                      "type": "text",
                      "text": " to be the judge"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "20aceb3a-e6d0-4620-ab76-edb0b4bc2a34",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": ":drum_with_drumsticks:",
          "ts": "1654638090.845809",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "O5A",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "emoji",
                      "name": "drum_with_drumsticks",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "E3D0ADE1-4469-48B2-AE70-ECC72FA934A3",
          "type": "message",
          "user": "U03HX9ZTNQ7",
          "text": "SuspendingClock() ... I may lose conscience before those 20 mins",
          "ts": "1654638122.522989",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0la7J",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "SuspendingClock()"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "..."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "may"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "lose"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "conscience"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "before"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "those"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "20"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "mins"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a678a6df-f233-4100-9e7d-35a4eac3c76b",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "This is a really long `delay` before we get our answer",
          "ts": "1654638148.560989",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "laughing",
              "count": 1,
              "users": [
                "U03KD24FB40"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "WE1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is a really long "
                    },
                    {
                      "type": "text",
                      "text": "delay",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " before we get our answer"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dc3c6951-c780-4254-ac1c-6e9da5e91b16",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Ok, well you’re right. :doughnut: for everyone",
          "ts": "1654638176.233859",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "28wV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok, well you’re right. "
                    },
                    {
                      "type": "emoji",
                      "name": "doughnut",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " for everyone"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "A4A4C5D7-4390-4D3D-8E1D-022C837EFF1C",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "Definitely continuous ",
          "ts": "1654638184.102549",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "z4RA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Definitely continuous "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "440bd33e-3d10-4753-a949-c1a285a98a44",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "oh no, a race condition!",
          "ts": "1654638194.388159",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "laughing",
              "count": 2,
              "users": [
                "U03J4CWFAN8",
                "U03HWEGHRKR"
              ]
            },
            {
              "name": "joy",
              "count": 2,
              "users": [
                "U03KD24FB40",
                "U03J4CTEDHA"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4fnmf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "oh no, a race condition!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b371f7f6-0a52-411f-80ef-6373adcdf7fd",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "Swift 6 can’t come soon enough!",
          "ts": "1654638215.824259",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6kVF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Swift 6 can’t come soon enough!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "99A6D663-F0DC-4EDF-B91C-006337B2729A",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "Should have used an actor",
          "ts": "1654638224.198239",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RsQo",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Should"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "have"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "used"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "an"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "actor"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f7ee05e7-b939-44d7-8fd3-b55ddd6b12be",
          "type": "message",
          "user": "U03KD24FB40",
          "text": "Since I got the right answer, do I win an internship? :laughing:",
          "ts": "1654638254.153509",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HX9ZTNQ7"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TsA3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Since I got the right answer, do I win an internship? "
                    },
                    {
                      "type": "emoji",
                      "name": "laughing",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "BC1473C1-4CC7-416D-A352-DB4DE4E2EE6D",
          "type": "message",
          "user": "U03HX9ZTNQ7",
          "text": "It sounds fair",
          "ts": "1654638308.540279",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+LV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "sounds"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "fair"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ba292089-4099-454b-9879-088f054b72f3",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "It’s certainly a great start. Lots of great options over at \u003chttps://www.apple.com/careers/us/\u003e :slightly_smiling_face:",
          "ts": "1654638313.728519",
          "thread_ts": "1654638011.741479",
          "attachments": [
            {
              "fallback": "Apple: Careers at Apple: Join us. Be you.",
              "id": 1,
              "title": "Careers at Apple: Join us. Be you.",
              "title_link": "https://www.apple.com/careers/us/",
              "text": "Learn why this is where individual imaginations gather together.",
              "image_url": "https://www.apple.com/careers/images/fy22-og-refresh/careers_index_OG/desktop.png",
              "service_name": "Apple",
              "service_icon": "https://www.apple.com/favicon.ico",
              "from_url": "https://www.apple.com/careers/us/",
              "original_url": "https://www.apple.com/careers/us/",
              "blocks": null
            }
          ],
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "clap",
              "count": 1,
              "users": [
                "U03KD24FB40"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hIN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It’s certainly a great start. Lots of great options over at "
                    },
                    {
                      "type": "link",
                      "url": "https://www.apple.com/careers/us/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "25BF44E3-9727-4F43-9A19-EEDD64D4FD88",
          "type": "message",
          "user": "U03J201SFAP",
          "text": "I need some help!  I downloaded Ventura, and Xcode 14 beta - but I need to compile my app for app review submission - and AppStoreConnect won’t accept a build form Xcode beta.  I downloaded Xcode 13 - but Ventura says it’s not compatible with earlier Xcodes.  Any thoughts?",
          "ts": "1654639294.381159",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ODch3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "need"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "some"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "help!"
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "downloaded"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Ventura,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Xcode"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "14"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "beta"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "-"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "but"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "need"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " compile "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "app"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "app"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "review"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "submission"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "-"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "AppStoreConnect"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "won’t"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "accept"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "build"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "form"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Xcode"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "beta."
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "downloaded"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Xcode"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "13"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "-"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "but"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Ventura"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "says"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it’s"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "not"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "compatible"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "with"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "earlier"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Xcodes."
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "text",
                      "text": "A"
                    },
                    {
                      "type": "text",
                      "text": "n"
                    },
                    {
                      "type": "text",
                      "text": "y"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "thoughts?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a63585a1-6e92-42e9-bd0b-5bf12f6f3f1e",
          "type": "message",
          "user": "U03HELZ3GUD",
          "text": "Usually the beta Xcode’s only are supported in TestFlight off the bat",
          "ts": "1654639410.176269",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "M9M",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Usually the beta Xcode’s only are supported in TestFlight off the bat"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4ba1090d-2351-4d17-aa57-6d40cdb7585f",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Let’s go ahead and move that question over to \u003c#C03JPCE9ZED|\u003e",
          "ts": "1654639443.579089",
          "thread_ts": "1654638011.741479",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "white_check_mark",
              "count": 1,
              "users": [
                "U03HELZ3GUD"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2Q/S",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Let’s go ahead and move that question over to "
                    },
                    {
                      "type": "channel",
                      "channel_id": "C03JPCE9ZED"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JXD1AQRE\u003e asked\n\u0026gt; I’m struggling to grasp what is go on behind the scenes during an await for an AsyncSequence like in your examples from today’s session with Zip and Merge. Could you show an example similar to those on how to build an AsyncSequence that can take advantage of these new algorithms?",
      "ts": "1654639017.294109",
      "thread_ts": "1654639017.294109",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 18,
      "latest_reply": "1654640763.087659",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "K0I",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JXD1AQRE"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I\\u2019m struggling to grasp what is go on behind the scenes during an await for an AsyncSequence like in your examples from today\\u2019s session with Zip and Merge. Could you show an example similar to those on how to build an AsyncSequence that can take advantage of these new algorithms?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "7a381569-2249-4098-aaf4-8a66d33858ea",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "So AsyncSequence is nothing more than just a fancy way of having multiple await calls to a single function; `next`. Those awaits are suspension points for the concurrency runtime to say; hey suspend here and go potentially do work somewhere else and resume me when you have something",
          "ts": "1654639094.630399",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JXD1AQRE"
              ]
            },
            {
              "name": "green_heart",
              "count": 2,
              "users": [
                "U03JXD1AQRE",
                "U03J22AU6DQ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8/Gut",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So AsyncSequence is nothing more than just a fancy way of having multiple await calls to a single function; "
                    },
                    {
                      "type": "text",
                      "text": "next",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". Those awaits are suspension points for the concurrency runtime to say; hey suspend here and go potentially do work somewhere else and resume me when you have something"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "A3164983-8239-4335-A668-49BC31CD4763",
          "type": "message",
          "user": "U03JXD1AQRE",
          "text": "Is there an example somewhere I could reference? In the docs or somewhere else?",
          "ts": "1654639173.822519",
          "thread_ts": "1654639017.294109",
          "edited": {
            "user": "U03JXD1AQRE",
            "ts": "1654639229.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "HGbH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is there an example somewhere I could reference? In"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the docs or somewhere else?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "feaf4b79-a662-46c1-9fb6-e7ab3ff494e5",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "There’s some discussion up at \u003chttps://developer.apple.com/documentation/swift/asyncsequence\u003e",
          "ts": "1654639197.781709",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2AOu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There’s some discussion up at "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/swift/asyncsequence",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "554755f6-50f1-4ad0-bbd9-b400758ab4ac",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "we have a ton of documentation on each algorithm; \u003chttps://github.com/apple/swift-async-algorithms/tree/main/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides\u003e",
          "ts": "1654639207.364489",
          "thread_ts": "1654639017.294109",
          "attachments": [
            {
              "fallback": "GitHub: swift-async-algorithms/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides at main · apple/swift-async-algorithms",
              "id": 1,
              "title": "swift-async-algorithms/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides at main · apple/swift-async-algorithms",
              "title_link": "https://github.com/apple/swift-async-algorithms/tree/main/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides",
              "text": "Async Algorithms for Swift. Contribute to apple/swift-async-algorithms development by creating an account on GitHub.",
              "image_url": "https://opengraph.githubassets.com/11f1cf1ce3796746b294106de2c762fba21603ab0cc2aadaefc29f23b5fe0c62/apple/swift-async-algorithms",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/apple/swift-async-algorithms/tree/main/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides",
              "original_url": "https://github.com/apple/swift-async-algorithms/tree/main/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "G/n2L",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "we have a ton of documentation on each algorithm; "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-async-algorithms/tree/main/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "255BF40A-02B8-4DC4-A836-9FB18E59FDFC",
          "type": "message",
          "user": "U03JXD1AQRE",
          "text": "Like an example of setting up the next for the primaryAccount.messages",
          "ts": "1654639207.774639",
          "thread_ts": "1654639017.294109",
          "files": [
            {
              "id": "F03JPGKFQD9",
              "created": 1654639178,
              "timestamp": 1654639178,
              "name": "Image from iOS.jpg",
              "title": "Image from iOS",
              "mimetype": "image/jpeg",
              "image_exif_rotation": 0,
              "filetype": "jpg",
              "pretty_type": "JPEG",
              "user": "U03JXD1AQRE",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 56614,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03JPGKFQD9-Image from iOS.jpg",
              "url_private_download": "C03H0JN431U/F03JPGKFQD9-Image from iOS.jpg",
              "original_h": 352,
              "original_w": 2532,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPGKFQD9-5c9aed739b/image_from_ios_64.jpg",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPGKFQD9-5c9aed739b/image_from_ios_80.jpg",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPGKFQD9-5c9aed739b/image_from_ios_160.jpg",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPGKFQD9-5c9aed739b/image_from_ios_360.jpg",
              "thumb_360_gif": "",
              "thumb_360_w": 360,
              "thumb_360_h": 50,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPGKFQD9-5c9aed739b/image_from_ios_480.jpg",
              "thumb_480_w": 480,
              "thumb_480_h": 67,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPGKFQD9-5c9aed739b/image_from_ios_720.jpg",
              "thumb_720_w": 720,
              "thumb_720_h": 100,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPGKFQD9-5c9aed739b/image_from_ios_960.jpg",
              "thumb_960_w": 960,
              "thumb_960_h": 133,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPGKFQD9-5c9aed739b/image_from_ios_1024.jpg",
              "thumb_1024_w": 1024,
              "thumb_1024_h": 142,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03JXD1AQRE/F03JPGKFQD9/image_from_ios.jpg",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03JPGKFQD9-6b3da0f6f4",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rL7R",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Like"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "an"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "example"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "setting"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "up"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "next"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "primaryAccount.messages"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "be3f09a6-f3ca-42b6-9922-22e00191f1c5",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "ah so the bases in that example are `AsyncStream`",
          "ts": "1654639243.725179",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JXD1AQRE"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "HXV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "ah so the bases in that example are "
                    },
                    {
                      "type": "text",
                      "text": "AsyncStream",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c156517f-2bc5-46e2-9189-4a0a6c8bd571",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "\u003chttps://developer.apple.com/documentation/swift/asyncstream/\u003e",
          "ts": "1654639265.316359",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kBv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/swift/asyncstream/",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a75b0232-238e-4f4b-b337-e7ac3bfe8ccb",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "but they could be anything",
          "ts": "1654639280.675839",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "K2o",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "but they could be anything"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "28add668-ea4a-49b2-8c51-5f0c03e5ae4a",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "Building an async sequence from scratch may or may not be trivial — starting is not very hard, as all you need to do is to build a type that conforms to `AsyncSequence`, but coordinating with asynchronous processes can be a little difficult. `AsyncStream` is a very easy way to take a traditional, callback-based or delegate-based asynchronous process and make repeated results available as a ready-made async sequence that does that work for you.",
          "ts": "1654639419.988859",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oA+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Building an async sequence from scratch may or may not be trivial — starting is not very hard, as all you need to do is to build a type that conforms to "
                    },
                    {
                      "type": "text",
                      "text": "AsyncSequence",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", but coordinating with asynchronous processes can be a little difficult. "
                    },
                    {
                      "type": "text",
                      "text": "AsyncStream",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is a very easy way to take a traditional, callback-based or delegate-based asynchronous process and make repeated results available as a ready-made async sequence that does that work for you."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f002bdd1-ed33-4581-ac97-22c7e40d71c6",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "This package exists so that the more complicated cases — the more complicated implementations of `next()` — are handled for you, and you need only combine them :slightly_smiling_face:",
          "ts": "1654639443.589489",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ffO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This package exists so that the more complicated cases — the more complicated implementations of "
                    },
                    {
                      "type": "text",
                      "text": "next()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " — are handled for you, and you need only combine them "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f767d045-59aa-4cba-a720-8f7d0333fcf8",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "Thankfully, if you’re curious, it’s open source — just look at the GitHub link above :slightly_smiling_face:",
          "ts": "1654639467.490459",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JXD1AQRE"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "q+QPa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thankfully, if you’re curious, it’s open source — just look at the GitHub link above "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8C4B7F53-F715-4C80-A30F-57934035B377",
          "type": "message",
          "user": "U03JXD1AQRE",
          "text": "Oh I see so with *AsyncStream* it's basically a collection of continuations. ",
          "ts": "1654639599.089289",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1HqWf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oh"
                    },
                    {
                      "type": "text",
                      "text": " I "
                    },
                    {
                      "type": "text",
                      "text": "see"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "so"
                    },
                    {
                      "type": "text",
                      "text": " with "
                    },
                    {
                      "type": "text",
                      "text": "AsyncStream ",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "it's basically a collection of "
                    },
                    {
                      "type": "text",
                      "text": "continuations."
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7a8389b3-ce4f-49dc-b79b-511985c74b69",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "Well, just the one, but it can be invoked repeatedly.",
          "ts": "1654639617.154649",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sCuC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Well, just the one, but it can be invoked repeatedly."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "379C734C-E6AC-4EEB-893D-8DF26D8960E5",
          "type": "message",
          "user": "U03JXD1AQRE",
          "text": "That quake example reminds me of subscribing to a combine Future. ",
          "ts": "1654639756.728259",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kLY2k",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "quake"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "example"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "reminds"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "me"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " subscribing "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "combine"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Future."
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7fc7fdcc-4b65-4cff-8d61-c4f24b1460f4",
          "type": "message",
          "user": "U03JXD1AQRE",
          "text": "So basically to make an `AsyncSequence` you create a `struct` that wraps a `struct` that conforms to the `AsyncIteratorProtocol` that provides the `mutating func next() async` function that performs some asynchronous action and returns the expected `Element`?",
          "ts": "1654640599.397799",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PK+r",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So basically to make an "
                    },
                    {
                      "type": "text",
                      "text": "AsyncSequence",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " you create a "
                    },
                    {
                      "type": "text",
                      "text": "struct",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " that wraps a "
                    },
                    {
                      "type": "text",
                      "text": "struct",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " that conforms to the "
                    },
                    {
                      "type": "text",
                      "text": "AsyncIteratorProtocol",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " that provides the "
                    },
                    {
                      "type": "text",
                      "text": "mutating func next() async",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " function that performs some asynchronous action and returns the expected "
                    },
                    {
                      "type": "text",
                      "text": "Element",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fd906c5d-a74d-49b8-af5d-7e0064c95a2f",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "Correct :slightly_smiling_face:",
          "ts": "1654640635.289309",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=V0a",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Correct "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2439f082-8b2d-4d11-9580-a05f4f12164f",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "I’ll be moving on from this lounge to give space to the new topic — but you got the gist of it.",
          "ts": "1654640656.936089",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "a7D",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’ll be moving on from this lounge to give space to the new topic — but you got the gist of it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "deccf389-c19c-4793-b101-2dd4a94d2ef2",
          "type": "message",
          "user": "U03JXD1AQRE",
          "text": "Thank you",
          "ts": "1654640763.087659",
          "thread_ts": "1654639017.294109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rjM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "9a308aaa-2226-4281-801e-b3e01537f2e3",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "Thanks once more for joining us today. This isn’t the end, though! We would love to hear from you in the future on GitHub \u003chttps://github.com/apple/swift-async-algorithms\u003e and the Swift Forums \u003chttps://forums.swift.org/c/related-projects/swift-async-algorithms/\u003e. See you there!",
      "ts": "1654639221.728399",
      "attachments": [
        {
          "fallback": "GitHub: GitHub - apple/swift-async-algorithms: Async Algorithms for Swift",
          "id": 1,
          "title": "GitHub - apple/swift-async-algorithms: Async Algorithms for Swift",
          "title_link": "https://github.com/apple/swift-async-algorithms",
          "text": "Async Algorithms for Swift. Contribute to apple/swift-async-algorithms development by creating an account on GitHub.",
          "image_url": "https://opengraph.githubassets.com/11f1cf1ce3796746b294106de2c762fba21603ab0cc2aadaefc29f23b5fe0c62/apple/swift-async-algorithms",
          "service_name": "GitHub",
          "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
          "from_url": "https://github.com/apple/swift-async-algorithms",
          "original_url": "https://github.com/apple/swift-async-algorithms",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "GmdJ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Thanks once more for joining us today. This isn’t the end, though! We would love to hear from you in the future on GitHub "
                },
                {
                  "type": "link",
                  "url": "https://github.com/apple/swift-async-algorithms",
                  "text": ""
                },
                {
                  "type": "text",
                  "text": " and the Swift Forums "
                },
                {
                  "type": "link",
                  "url": "https://forums.swift.org/c/related-projects/swift-async-algorithms/",
                  "text": ""
                },
                {
                  "type": "text",
                  "text": ". See you there!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "e49e7d3d-bd32-478f-8afc-4256e782f7d4",
      "type": "message",
      "user": "U03H36EMD2B",
      "text": "*Hi! We’re ready to start the C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker Q\u0026amp;A. We have a number of engineers here that work on build tools to answer your questions. Submit your questions with the* :workflowbolt: *button below. We will review your questions and then post them here for everyone to see.*\n\n*We might not be able to get to all of your questions but we’ll do our best. As a reminder, please keep the content professional and within our code of conduct.*\n\n*If you have questions on other topics, you can check to see if there are other \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/|Developer Tools Sessions, Labs, or Lounges\u003e that might be better suited to your questions. For topics not covered there, you can also post your questions in the \u003chttps://developer.apple.com/forums/|Developer Forums\u003e.*",
      "ts": "1654639362.699379",
      "attachments": [
        {
          "fallback": "Developer Tools - Topics - WWDC22",
          "id": 1,
          "title": "Developer Tools - Topics - WWDC22",
          "title_link": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "text": "Everything you need to know to build the next great app or game.",
          "image_url": "https://developer.apple.com/wwdc22/topics/images/og/developer-tools-og.png",
          "service_name": "developer.apple.com",
          "service_icon": "https://developer.apple.com/favicon.ico",
          "from_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "original_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "blocks": null
        },
        {
          "fallback": "Apple Developer Forums",
          "id": 2,
          "title": "Apple Developer Forums",
          "title_link": "https://developer.apple.com/forums/",
          "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
          "service_name": "developer.apple.com",
          "service_icon": "https://forums.developer.apple.com/forums/build-05312022-1/public/assets/favicon.ico",
          "from_url": "https://developer.apple.com/forums/",
          "original_url": "https://developer.apple.com/forums/",
          "blocks": null
        }
      ],
      "edited": {
        "user": "U03H36EMD2B",
        "ts": "1654639543.000000"
      },
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Nxh",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hi! We’re ready to start the C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker Q\u0026A. We have a number of engineers here that work on build tools to answer your questions. Submit your questions with the ",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0,
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " button below. We will review your questions and then post them here for everyone to see.",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "\n\n"
                },
                {
                  "type": "text",
                  "text": "We might not be able to get to all of your questions but we’ll do our best. As a reminder, please keep the content professional and within our code of conduct.",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "\n\n"
                },
                {
                  "type": "text",
                  "text": "If you have questions on other topics, you can check to see if there are other ",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
                  "text": "Developer Tools Sessions, Labs, or Lounges",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " that might be better suited to your questions. For topics not covered there, you can also post your questions in the ",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/forums/",
                  "text": "Developer Forums",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": ".",
                  "style": {
                    "bold": true
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "user": "U03HL553PNG",
      "text": "set the channel topic: C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker Q\u0026amp;A",
      "ts": "1654639438.679379",
      "subtype": "channel_topic",
      "topic": "C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker Q\u0026amp;A",
      "replace_original": false,
      "delete_original": false,
      "blocks": null
    },
    {
      "type": "message",
      "text": "\u003c@U03J5DFGJNT\u003e asked\n\u0026gt; Hello Everybody!\n\u0026gt; Why XCode 14 is deprecating the use of bitcode? Is it will be enabled automatically?",
      "ts": "1654639882.774179",
      "thread_ts": "1654639882.774179",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 11,
      "latest_reply": "1654640404.747809",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "S96",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J5DFGJNT"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hello Everybody!\\nWhy XCode 14 is deprecating the use of bitcode? Is it will be enabled automatically?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "eb255d70-f240-4603-b9be-818b4eabbaa2",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Yes, that is correct.  We announced bitcode deprecation in the \u0026lt;https://developer.apple.com/go/?id=xcode-14-sdk-rn\n|Xcode 14 Release Notes\u0026gt;.  We can't comment on those decisions but do you have any particular concerns around this deprecation or are you seeing any issues that we can help you work through?",
          "ts": "1654639899.998529",
          "thread_ts": "1654639882.774179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "y2S7",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, that is correct.  We announced bitcode deprecation in the "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/go/?id=xcode-14-sdk-rn\n",
                      "text": "Xcode 14 Release Notes"
                    },
                    {
                      "type": "text",
                      "text": ".  We can't comment on those decisions but do you have any particular concerns around this deprecation or are you seeing any issues that we can help you work through?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dcc13e17-a16b-4182-98fb-a1d34ebc1dd1",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "If your project contains bitcode, you will get a warning message asking you to remove it.  IPAs that contain bitcode will have the bitcode stripped before being submitted to the App Store.",
          "ts": "1654639949.924249",
          "thread_ts": "1654639882.774179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "a5m",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If your project contains bitcode, you will get a warning message asking you to remove it.  IPAs that contain bitcode will have the bitcode stripped before being submitted to the App Store."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ab77ecb6-5335-4933-8eb3-22d62585e6bc",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "\u003c@U03HVE965FY\u003e asked a similar question so tagging them so they see this.",
          "ts": "1654639966.254179",
          "thread_ts": "1654639882.774179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bc0",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HVE965FY"
                    },
                    {
                      "type": "text",
                      "text": " asked a similar question so tagging them so they see this."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "931de92c-8979-42cc-b99c-d9e4e8638f63",
          "type": "message",
          "user": "U03HVE965FY",
          "text": "No concerns from my side, part of my curiosity also ties into some of those issues that were present in older version of Xcode with back-deployed swift concurrency.",
          "ts": "1654640020.158889",
          "thread_ts": "1654639882.774179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "G+lM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "No concerns from my side, part of my curiosity also ties into some of those issues that were present in older version of Xcode with back-deployed swift concurrency."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "958e61a1-52bb-4a93-b01a-7e58fd8e0d8b",
          "type": "message",
          "user": "U03J5DFGJNT",
          "text": "No concerns either, I knew that bitcode optimizes the size of our application and deliver only the necessary elements to a specific device, but if it will be considered by default I don't have any worries",
          "ts": "1654640163.537129",
          "thread_ts": "1654639882.774179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zuCl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "No concerns either, I knew that bitcode optimizes the size of our application and deliver only the necessary elements to a specific device, but if it will be considered by default I don't have any worries"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "65c2af72-7be3-46fd-8b0e-391cf9d8734b",
          "type": "message",
          "user": "U03JELM0ZNV",
          "text": ":grinning: I got burned by that swift concurrency bug, utterly unintentionally because a Realm update linked it in. My app was broken for iOS13 \u0026amp; 14 for 2 months until I found out!\n\n\u0026gt; IPAs that contain bitcode will have the bitcode stripped before being submitted to the App Store.\nAre we _strongly encouraged_ to remove bitcode settings rather than relying on this?",
          "ts": "1654640186.354199",
          "thread_ts": "1654639882.774179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2+I8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "emoji",
                      "name": "grinning",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " I got burned by that swift concurrency bug, utterly unintentionally because a Realm update linked it in. My app was broken for iOS13 \u0026 14 for 2 months until I found out!\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"IPAs that contain bitcode will have the bitcode stripped before being submitted to the App Store.\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Are we "
                    },
                    {
                      "type": "text",
                      "text": "strongly encouraged",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to remove bitcode settings rather than relying on this?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d8160b20-7806-4191-842c-859a94eddb2a",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "\u003c@U03J5DFGJNT\u003e - Bitcode is actually not needed for \"app thinning\" which is what you're talking about.  We will continue to produce different versions of your app with only the necessary architectures and resources on the Store side.",
          "ts": "1654640245.131549",
          "thread_ts": "1654639882.774179",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "white_check_mark",
              "count": 4,
              "users": [
                "U03JELM0ZNV",
                "U03J4CWFAN8",
                "U03JEMN82JV",
                "U03JSFUKL2U"
              ]
            },
            {
              "name": "100",
              "count": 1,
              "users": [
                "U03J5DFGJNT"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Lt/UB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03J5DFGJNT"
                    },
                    {
                      "type": "text",
                      "text": " - Bitcode is actually not needed for \"app thinning\" which is what you're talking about.  We will continue to produce different versions of your app with only the necessary architectures and resources on the Store side."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9c7f2d29-5639-47fc-b0ce-a4e7ee46caff",
          "type": "message",
          "user": "U03HVE965FY",
          "text": "to \u003c@U03JELM0ZNV\u003e's point there, with supporting Swift concurrency I would probably want to tell our customers to not enable bitcode regardless. I imagine the bitcode stripping would occur regardless of Xcode version since it's probably happening store side?",
          "ts": "1654640288.002079",
          "thread_ts": "1654639882.774179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "K+Z",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "to "
                    },
                    {
                      "type": "user",
                      "user_id": "U03JELM0ZNV"
                    },
                    {
                      "type": "text",
                      "text": "'s point there, with supporting Swift concurrency I would probably want to tell our customers to not enable bitcode regardless. I imagine the bitcode stripping would occur regardless of Xcode version since it's probably happening store side?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7355f832-d2f0-4a9a-a79e-1c98006cbe46",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "\u003c@U03JELM0ZNV\u003e at some point in the future, we will remove the option for you so yes, might as well just turn it off now.  If there's some reason why you need to have it turned on, we'd love to know more.",
          "ts": "1654640317.734869",
          "thread_ts": "1654639882.774179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "o/1S",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03JELM0ZNV"
                    },
                    {
                      "type": "text",
                      "text": " at some point in the future, we will remove the option for you so yes, might as well just turn it off now.  If there's some reason why you need to have it turned on, we'd love to know more."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9f9f444c-e121-47b6-aabd-76a6e6c629da",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Bitcode stripping happens on the client side with Xcode 14.  If you are submitting your app with an older version of Xcode, you can continue to submit bitcode.  But at some point, those SDKs will no longer be supported and you will need to update your Xcode.",
          "ts": "1654640382.427049",
          "thread_ts": "1654639882.774179",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03HVE965FY"
              ]
            },
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JELM0ZNV",
                "U03JG50CYLR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KkxC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Bitcode stripping happens on the client side with Xcode 14.  If you are submitting your app with an older version of Xcode, you can continue to submit bitcode.  But at some point, those SDKs will no longer be supported and you will need to update your Xcode."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f2bcaa70-8aeb-40ce-a54e-6bb9c5c4ae23",
          "type": "message",
          "user": "U03HVE965FY",
          "text": "Thank you for that clarification",
          "ts": "1654640404.747809",
          "thread_ts": "1654639882.774179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9Vu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for that clarification"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JNEZB0TU\u003e asked\n\u0026gt; Hello. I am trying to build with both ASAN and UBSAN turned on, but when I do that I can't launch my app. Turning on only one or the other works fine. Any ideas?",
      "ts": "1654639961.672609",
      "thread_ts": "1654639961.672609",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 48,
      "latest_reply": "1654644032.599909",
      "reactions": [
        {
          "name": "white_check_mark",
          "count": 1,
          "users": [
            "U03HL55GTQU"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "NzwEB",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JNEZB0TU"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hello. I am trying to build with both ASAN and UBSAN turned on, but when I do that I can't launch my app. Turning on only one or the other works fine. Any ideas?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "052e6e6d-4c8b-47e7-856b-6db0e8536f13",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "Hi Michael, you should be able to use Address Sanitizer and Undefined Behavior Sanitizer at the same time.  Can you provide more information which error you are seeing?\n• Is it a compile-time error, or\n• Failure to launch app, or\n• Runtime crash?\nIn any case, are you able to file a feedback ticket with a standalone reproducer of your issue?",
          "ts": "1654640021.161059",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Tog",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Michael, you should be able to use Address Sanitizer and Undefined Behavior Sanitizer at the same time.  Can you provide more information which error you are seeing?\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Is it a compile-time error, or\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Failure to launch app, or\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Runtime crash?\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\nIn any case, are you able to file a feedback ticket with a standalone reproducer of your issue?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a699da87-196d-4271-bc6d-00eaa0c66d38",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "I get this at startup of my app:",
          "ts": "1654640049.669859",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hbk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I get this at startup of my app:"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fad49973-880b-4776-b3bf-7d0efb5669ca",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "*dyld[43500]: dyld cache ‘/System/Library/dyld/dyld_shared_cache_arm64e’ not loaded: syscall to map cache into shared region failed*\n*dyld[43500]: Library not loaded: /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate*\n *Referenced from: /Users/hecht/Library/Developer/Xcode/DerivedData/JMP-dgmxmeayjbgthlckfcezeplzucmk/Build/Products/Debug/JMP.app/Contents/MacOS/JMP*\n *Reason: tried: ‘/Users/hecht/Library/Developer/Xcode/DerivedData/JMP-dgmxmeayjbgthlckfcezeplzucmk/Build/Products/Debug/Accelerate.framework/Versions/A/Accelerate’ (no such file), ‘/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate’ (no such file), ‘/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate’ (no such file)*\n*(lldb)*",
          "ts": "1654640062.805979",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Z1d31",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "dyld[43500]: dyld cache ‘/System/Library/dyld/dyld_shared_cache_arm64e’ not loaded: syscall to map cache into shared region failed",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "dyld[43500]: Library not loaded: /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": " Referenced from: /Users/hecht/Library/Developer/Xcode/DerivedData/JMP-dgmxmeayjbgthlckfcezeplzucmk/Build/Products/Debug/JMP.app/Contents/MacOS/JMP",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": " Reason: tried: ‘/Users/hecht/Library/Developer/Xcode/DerivedData/JMP-dgmxmeayjbgthlckfcezeplzucmk/Build/Products/Debug/Accelerate.framework/Versions/A/Accelerate’ (no such file), ‘/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate’ (no such file), ‘/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate’ (no such file)",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "(lldb)",
                      "style": {
                        "bold": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1e8d8d46-9ad1-4e2e-a145-9df0b948c95e",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "Reported as FB9981185",
          "ts": "1654640123.882919",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U03HL55GTQU"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Nyn9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Reported as FB9981185"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9546e49f-70ce-4ca8-b972-008aeab584e0",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "I cannot create a standalone reproducer. I was hoping to show my project that fails here.",
          "ts": "1654640191.439759",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "InL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I cannot create a standalone reproducer. I was hoping to show my project that fails here."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fa3f06eb-6fd3-49dd-a5fd-cbe0ee1fa1b2",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "Oh, I see that this feedback ticket already has some history, my understanding is that:\n• You have a large, existing project that shows the issue\n• Newly-created projects (same Xcode, same OS version, on same machine) don't show this\n• Trying to extract a smaller reproducer to share with us is not feasible\n• Another apple engineer has investigated this and concluded that binary size shouldn't be the issue here\n• Comparing build settings between the existing and new projects hasn't been fruitful so far",
          "ts": "1654640732.166799",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jDY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oh, I see that this feedback ticket already has some history, my understanding is that:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"You have a large, existing project that shows the issue\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Newly-created projects (same Xcode, same OS version, on same machine) don't show this\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Trying to extract a smaller reproducer to share with us is not feasible\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Another apple engineer has investigated this and concluded that binary size shouldn't be the issue here\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Comparing build settings between the existing and new projects hasn't been fruitful so far\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "05570b30-e52d-4802-87bc-4891b2c24f74",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "Correct. Any way I can have someone look at my actual project which is failing during WWDC?",
          "ts": "1654640827.124889",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ytl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Correct. Any way I can have someone look at my actual project which is failing during WWDC?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d6b7b38c-3ca7-4202-b355-c0ab7eb0160b",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "Unfortunately, we don't have a way to connect with you in a way that allows you to show us your setup via screen sharing in this Q\u0026amp;A session.  There are additional lab sessions with 1:1 calls in which you can share your screen.",
          "ts": "1654640931.941379",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9kjh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Unfortunately, we don't have a way to connect with you in a way that allows you to show us your setup via screen sharing in this Q\u0026A session.  There are additional lab sessions with 1:1 calls in which you can share your screen."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "babebaf1-9a15-49f3-9b0c-72ac87399edc",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "Let me confirm how you can register for those.",
          "ts": "1654640963.262849",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0gNI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Let me confirm how you can register for those."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "92232bdd-4261-4a4c-8dc6-955e2fa4c0a3",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "My request for lab time was denied and I was told to come here.",
          "ts": "1654640967.464809",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zxA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "My request for lab time was denied and I was told to come here."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dfca23d1-55df-4f09-b6a6-9e82332b944a",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "That was for today’s Xcode open hours lab. Is there a better lab I should try, and specific wording I need to use to get my request accepted?",
          "ts": "1654641007.987059",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+8VAc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That was for today’s Xcode open hours lab. Is there a better lab I should try, and specific wording I need to use to get my request accepted?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d2c6634f-259f-45b5-bca7-d84cc642851b",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "We have the \"1:1 lab\" version of this Q\u0026amp;A on Thursday, 09:00-13:00.",
          "ts": "1654641151.891599",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eLA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We have the \"1:1 lab\" version of this Q\u0026A on Thursday, 09:00-13:00."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b7d92c09-0323-49e3-93fa-b37a3dce796a",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "OK, I will try to sign up for that one.",
          "ts": "1654641171.505439",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "s+H",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "OK, I will try to sign up for that one."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "333f1633-9f0a-4ef1-b18a-d8194983c21e",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "Yes, please do.  Let me also try to come up with some additional suggestions, especially because we haven't been able to be all to helpful w.r.t. to your problem.",
          "ts": "1654641213.481539",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "grinning",
              "count": 1,
              "users": [
                "U03JNEZB0TU"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YVzi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, please do.  Let me also try to come up with some additional suggestions, especially because we haven't been able to be all to helpful w.r.t. to your problem."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "931df0d7-e89b-4fac-a01b-d2abe35a4547",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "The above errors you posted are dyld (dynamic loader) errors.  So if we go back to the idea of comparing the 2 projects: large existing, with error vs. new, from template, that works.",
          "ts": "1654641317.204309",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qH4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The above errors you posted are dyld (dynamic loader) errors.  So if we go back to the idea of comparing the 2 projects: large existing, with error vs. new, from template, that works."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f0071a87-f93f-48f0-8ff1-87f3ff74e00b",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "Any differences in build/configuration settings that pertain to the \"linker\", \"dyld\", \"loader\", \"rpath\", or \"deployment target\" would be worth investigating.",
          "ts": "1654641381.239769",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Mu9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Any differences in build/configuration settings that pertain to the \"linker\", \"dyld\", \"loader\", \"rpath\", or \"deployment target\" would be worth investigating."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7d11a42f-4043-4f7d-87ef-d0f92f473987",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "OK, I will try to gather that information in the hopes that I can obtain a lab slot.",
          "ts": "1654641457.055789",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wH7V",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "OK, I will try to gather that information in the hopes that I can obtain a lab slot."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a1741068-cbbd-40e9-9113-5fa8cdb70237",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "Ideally, we could somehow find a way to reduce the larger project until it works (and then investigate the step that triggers the change), or go from the other way: make the empty project more and more complicated to resemble your project until it fails.",
          "ts": "1654641458.707939",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rjN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ideally, we could somehow find a way to reduce the larger project until it works (and then investigate the step that triggers the change), or go from the other way: make the empty project more and more complicated to resemble your project until it fails."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "305dc603-09d0-49e7-98e9-7445c41f44f3",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "Unfortunately, there is no good way to remove individual elements from the project, because of interdependencies.",
          "ts": "1654641515.155329",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "3yN2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Unfortunately, there is no good way to remove individual elements from the project, because of interdependencies."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a171da3b-5f52-460e-8f2d-844f72651d0d",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "Can we go from the other way; complicating the empty project until it resembles the existing one?",
          "ts": "1654641547.541399",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "aChO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Can we go from the other way; complicating the empty project until it resembles the existing one?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b05c0cb6-6d90-4071-86a6-908afc519e36",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "This is a macOS app, correct?",
          "ts": "1654641605.995319",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1PEmT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is a macOS app, correct?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "44a1f0fb-9b5e-4df7-9529-646c44fc7010",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "Perhaps, but not easily. My executable is 2.28 GB with both ASAN and UBSAN turned on, so it would take some doing to generate that much code. Yes, macOS.",
          "ts": "1654641664.010579",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CVvm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Perhaps, but not easily. My executable is 2.28 GB with both ASAN and UBSAN turned on, so it would take some doing to generate that much code. Yes, macOS."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d5597dea-1cb2-47d2-9876-35bb5b3bb858",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "```LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/../Frameworks```",
          "ts": "1654641683.359169",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "L+a8",
              "elements": [
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path\\/..\\/Frameworks\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fde7aaea-e761-440e-86d5-aacbf5d1087b",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "Not seeing anything else that is non-default",
          "ts": "1654641775.027159",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pYd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Not seeing anything else that is non-default"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dc52e46c-0436-4f67-8a90-c234ee7bcaa9",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "I was thinking screen share is the path of least resistance.",
          "ts": "1654641826.692239",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "et8J",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I was thinking screen share is the path of least resistance."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "58ff7f10-3365-4ede-a0a0-a38ae745aa76",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "(I am not a dyld/linker person, but it seems `LD_RUNPATH_SEARCH_PATHS` might be an old setting.)",
          "ts": "1654641922.564899",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vgY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(I am not a dyld/linker person, but it seems "
                    },
                    {
                      "type": "text",
                      "text": "LD_RUNPATH_SEARCH_PATHS",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " might be an old setting.)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1f39e39b-3c43-4990-9868-e333db9f1636",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "In the above error message it says that we fail to find/load Accelerate.framework.",
          "ts": "1654642037.346639",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "X5D",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In the above error message it says that we fail to find/load Accelerate.framework."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "02d8023a-8a71-410b-9998-d89df952445c",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "Maybe setting `DYLD_FRAMEWORK_PATH` can help here.",
          "ts": "1654642094.505779",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rsRxl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Maybe setting "
                    },
                    {
                      "type": "text",
                      "text": "DYLD_FRAMEWORK_PATH",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " can help here."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0fe9f94b-e142-4701-b75d-ca4dec569319",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "Yes. But it is looking in the right place for it. Accelerate.framework lives in the dyld_shared_cache as of Monterey. And also, it works with only ASAN or only UBSAN or with neither.",
          "ts": "1654642113.964379",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JtZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes. But it is looking in the right place for it. Accelerate.framework lives in the dyld_shared_cache as of Monterey. And also, it works with only ASAN or only UBSAN or with neither."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7ce7ef95-3fd3-49ae-a681-1386f57d46c5",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "That's a good point and lends more credence to the \"binary too big\" theory.",
          "ts": "1654642152.807069",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JNEZB0TU"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/eN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That's a good point and lends more credence to the \"binary too big\" theory."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c95ca42b-b5d4-437e-a66b-f9b4063b8c43",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "So then our working theory is that this fails, because the instrumented code is too big.  :thinking_face:\n\n```dyld cache '/System/Library/dyld/dyld_shared_cache_arm64e' not loaded: syscall to map cache into shared region failed```",
          "ts": "1654642219.905699",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "q4g",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So then our working theory is that this fails, because the instrumented code is too big.  "
                    },
                    {
                      "type": "emoji",
                      "name": "thinking_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"dyld cache '\\/System\\/Library\\/dyld\\/dyld_shared_cache_arm64e' not loaded: syscall to map cache into shared region failed\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5cd8f928-08c6-4762-a99d-266b7399723c",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "That was my initial guess, but as you saw in the FB, it was ruled out. Maybe it shouldn’t have been?",
          "ts": "1654642264.663609",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ulKU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That was my initial guess, but as you saw in the FB, it was ruled out. Maybe it shouldn’t have been?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9d79eb4d-576d-4233-bcdc-0bd6a015e83f",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "I know we have suggested this before: any chance we can reduce the size of the project, to verify/give us another data points there.",
          "ts": "1654642273.177439",
          "thread_ts": "1654639961.672609",
          "edited": {
            "user": "U03HL55GTQU",
            "ts": "1654642285.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "E7=35",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I know we have suggested this before: any chance we can reduce the size of the project, to verify/give us another data points there."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c2a96985-30f6-4687-aa1a-81e9732e01af",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "To be clear, we need to reduce the size of the executable which dyld is mapping, right? Just tossing out resources, for example, wouldn’t really help.",
          "ts": "1654642327.073189",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xQWK4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "To be clear, we need to reduce the size of the executable which dyld is mapping, right? Just tossing out resources, for example, wouldn’t really help."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7f3f2db3-e417-4e10-93bb-5ae343dab450",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "That's my understanding, yes.",
          "ts": "1654642376.933369",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UYyu4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That's my understanding, yes."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "38877d77-17b0-4755-8c29-13c8ce0ef0b6",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "I could try building it as Release configuration instead of Debug configuration. That might slim it down enough to make a difference.",
          "ts": "1654642405.207969",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HL55GTQU"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JOm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I could try building it as Release configuration instead of Debug configuration. That might slim it down enough to make a difference."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "787ea7db-adbc-43e4-ae1d-338e49d8d3ae",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "Building now, but it will take a while. I’ll update here when I’m able to try it.",
          "ts": "1654642549.431959",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZROs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Building now, but it will take a while. I’ll update here when I’m able to try it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "24ed1c06-520f-4bc5-a241-4de6a22271bb",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "Sounds good.  One more angle of attack would be to observe what dyld is doing and compare between \"ASan only\" and \"ASan \u0026amp; UBSan\", e.g., by using the `DYLD_PRINT_LIBRARIES=1` environment variable.",
          "ts": "1654642858.875269",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "SX+0x",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sounds good.  One more angle of attack would be to observe what dyld is doing and compare between \"ASan only\" and \"ASan \u0026 UBSan\", e.g., by using the "
                    },
                    {
                      "type": "text",
                      "text": "DYLD_PRINT_LIBRARIES=1",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " environment variable."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c0e32be9-4a93-4431-be80-f1d23379ddcf",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "See the dyld man pages: `man dyld`",
          "ts": "1654642877.102849",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Y3TI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "See the dyld man pages: "
                    },
                    {
                      "type": "text",
                      "text": "man dyld",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a3dcdbf0-5792-477a-afac-9396ff32b05e",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "OK, I can collect that too. Each variant requires a rebuild which might take more time than is available in this session.",
          "ts": "1654643022.853409",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eY5t",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "OK, I can collect that too. Each variant requires a rebuild which might take more time than is available in this session."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a32859a7-c3df-4ab3-a847-cb81fae6e392",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "Release build with ASAN + UBSAN launches. Executable size is 813.5 MB",
          "ts": "1654643537.783149",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "tada",
              "count": 1,
              "users": [
                "U03HL55GTQU"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9q26J",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Release build with ASAN + UBSAN launches. Executable size is 813.5 MB"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c37dc9f5-bce0-4b3f-87d4-4d59d9628de5",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "I connected with the dyld team and they confirmed that binary size can indeed be a problem and most likely _*is*_ the culprit here!  Unfortunately, we don't have a way to \"fix\" this in the short term.\n\nThe suggested workarounds are:\n• If possible, you could move some of your code into a *.dylib to split up the large executable.\n• (Keep what you are doing right now:) Use ASan/UBSan separately\n• Use Release for testing with sanitizer/CI",
          "ts": "1654643576.104189",
          "thread_ts": "1654639961.672609",
          "edited": {
            "user": "U03HL55GTQU",
            "ts": "1654643631.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JRQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I connected with the dyld team and they confirmed that binary size can indeed be a problem and most likely "
                    },
                    {
                      "type": "text",
                      "text": "is",
                      "style": {
                        "bold": true,
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " the culprit here!  Unfortunately, we don't have a way to \"fix\" this in the short term.\n\nThe suggested workarounds are:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"If possible, you could move some of your code into a *.dylib to split up the large executable.\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"(Keep what you are doing right now:) Use ASan\\/UBSan separately\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Use Release for testing with sanitizer\\/CI\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b1726854-f0ed-46e2-bbf1-c5b250106ef1",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "I've associated your feedback ticket to our internal ticket that tracks the underlying issue.  You should be notified via the Feedback website if this issue is resolved.",
          "ts": "1654643733.260169",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KdH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I've associated your feedback ticket to our internal ticket that tracks the underlying issue.  You should be notified via the Feedback website if this issue is resolved."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "84e4c1a6-e10a-4394-bfc3-574d0a6f6694",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "OK, thanks for checking into that! It makes me feel like the world makes sense again. :slightly_smiling_face: We currently do separate Debug CI builds for ASAN and UBSAN, and run them against our test suite. It is just for those individual developers who like to run with both options turned on all the time, that I am investigating. I have signed up for the Thursday lab, so I will follow up there in case someone from Apple wants to confirm with the actual project.",
          "ts": "1654643833.231189",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HL55GTQU"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "DYBm9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "OK, thanks for checking into that! It makes me feel like the world makes sense again. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " We currently do separate Debug CI builds for ASAN and UBSAN, and run them against our test suite. It is just for those individual developers who like to run with both options turned on all the time, that I am investigating. I have signed up for the Thursday lab, so I will follow up there in case someone from Apple wants to confirm with the actual project."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9f18b6d2-7ebd-4831-96cc-e36e2baa311c",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "Also to keep in mind: in case your binary grows, the \"ASan only\" version might run into the same issue in the future.",
          "ts": "1654643908.897419",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vqM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also to keep in mind: in case your binary grows, the \"ASan only\" version might run into the same issue in the future."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9a88addd-ce34-4bf1-abb5-05d28bf57e0a",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "Maybe I’ll be retired by then! :grinning:",
          "ts": "1654643954.576469",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "laughing",
              "count": 1,
              "users": [
                "U03HL55GTQU"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Uh8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Maybe I’ll be retired by then! "
                    },
                    {
                      "type": "emoji",
                      "name": "grinning",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "915b7b79-84d7-40dc-9f2c-3eb93e059118",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "Thanks so much for your help. Have a great week!",
          "ts": "1654643996.025179",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2GTt",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks so much for your help. Have a great week!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d9c46c21-1429-44a8-94f0-96f16133189c",
          "type": "message",
          "user": "U03HL55GTQU",
          "text": "Thank you Michael, your intuition was correct from the start! :male-detective:",
          "ts": "1654644032.599909",
          "thread_ts": "1654639961.672609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+CC1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you Michael, your intuition was correct from the start! "
                    },
                    {
                      "type": "emoji",
                      "name": "male-detective",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JMF1GFV0\u003e asked\n\u0026gt; Hello, does using optimization  level (e.g. [-Oz]) generate any negative impact on the performance of the app?",
      "ts": "1654640758.321779",
      "thread_ts": "1654640758.321779",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654643085.078429",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "uG9",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JMF1GFV0"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hello, does using optimization  level (e.g. [-Oz]) generate any negative impact on the performance of the app?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "8f289853-e763-4229-b6f4-dfb46aabfe95",
          "type": "message",
          "user": "U03HHP2ESQK",
          "text": "Different optimization levels have different tradeoffs they attempt to make, but the compiler can’t know precisely the impact that a given optimization decision will have. In general -Oz will trade runtime performance for codesize when the two are in opposition, but still generates faster code than -O0 or -O1 (in rare cases even faster than -O2 or -O3). The default (-Os) is usually best, but the optimization level can affect both size and performance. Benchmarking with your app is the best way to know for sure. You can use Instruments to analyze the performance of your app and compare multiple optimization levels.",
          "ts": "1654640773.703079",
          "thread_ts": "1654640758.321779",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "t+Rl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Different optimization levels have different tradeoffs they attempt to make, but the compiler can’t know precisely the impact that a given optimization decision will have. In general -Oz will trade runtime performance for codesize when the two are in opposition, but still generates faster code than -O0 or -O1 (in rare cases even faster than -O2 or -O3). The default (-Os) is usually best, but the optimization level can affect both size and performance. Benchmarking with your app is the best way to know for sure. You can use Instruments to analyze the performance of your app and compare multiple optimization levels."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "671322df-11e7-4fbe-bf48-da52714fd470",
          "type": "message",
          "user": "U03J5DFGJNT",
          "text": "Do you recommend to set (-Os) in Apple Clang and (-Osize) in Swift Compiler to make a difference in the size of application?",
          "ts": "1654641333.607569",
          "thread_ts": "1654640758.321779",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+9E",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Do you recommend to set (-Os) in Apple Clang and (-Osize) in Swift Compiler to make a difference in the size of application?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d18f67b6-6da3-48f7-b754-01bba6c33395",
          "type": "message",
          "user": "U03HERYFK6H",
          "text": "On Apple platforms -Os is the default optimization level.",
          "ts": "1654641424.760679",
          "thread_ts": "1654640758.321779",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KIdQG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "On Apple platforms -Os is the default optimization level."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f9d355b4-c302-4f49-baac-4cd246d52c20",
          "type": "message",
          "user": "U03J5DFGJNT",
          "text": "Thank you!",
          "ts": "1654641704.844069",
          "thread_ts": "1654640758.321779",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nTY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "df8846de-678d-4b7e-8039-357c22181dd3",
          "type": "message",
          "user": "U03JMF1GFV0",
          "text": "And using Asset Catalog Compiler - Options (space) what is the impact in the assets quality? Thank you.",
          "ts": "1654641792.317959",
          "thread_ts": "1654640758.321779",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uBY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "And using Asset Catalog Compiler - Options (space) what is the impact in the assets quality? Thank you."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "57e90f9c-e630-484f-99db-6e488734574a",
          "type": "message",
          "user": "U03HERYFK6H",
          "text": "This question might be better suited for the Interface Builder Lab (Jun 10, 9am).",
          "ts": "1654642375.679209",
          "thread_ts": "1654640758.321779",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Q/t",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This question might be better suited for the Interface Builder Lab (Jun 10, 9am)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fb9f59ec-13b5-404e-8b7e-09fa172c3739",
          "type": "message",
          "user": "U03JMF1GFV0",
          "text": "Thank you,",
          "ts": "1654643085.078429",
          "thread_ts": "1654640758.321779",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rQt",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you,"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "4178cde9-6549-402a-b048-e3442cf83aef",
      "type": "message",
      "user": "U03HL55EG84",
      "text": "We are getting great questions so far. Keep them coming, our build tools team is all ready to answer them! :grinning:\n\nTo keep up with the excitement, let’s do a quick icebreaker.\n\u0026gt; What’s your fav C stdlib function?\nReply in :thread: The best answer will not see any segmentation faults for a week! :tada:",
      "ts": "1654642555.683699",
      "thread_ts": "1654642555.683699",
      "edited": {
        "user": "U03HL55EG84",
        "ts": "1654642607.000000"
      },
      "reply_count": 10,
      "latest_reply": "1654646308.340069",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "VAsLd",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "We are getting great questions so far. Keep them coming, our build tools team is all ready to answer them! "
                },
                {
                  "type": "emoji",
                  "name": "grinning",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "\n\nTo keep up with the excitement, let’s do a quick icebreaker.\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What\\u2019s your fav C stdlib function?\"}]}"
            },
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Reply in "
                },
                {
                  "type": "emoji",
                  "name": "thread",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " The best answer will not see any segmentation faults for a week! "
                },
                {
                  "type": "emoji",
                  "name": "tada",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "d565b96a-db68-4725-9b93-c657cd0c3b2b",
          "type": "message",
          "user": "U03HHP2A17V",
          "text": "`sprintf` :man-running:",
          "ts": "1654642725.416499",
          "thread_ts": "1654642555.683699",
          "parent_user_id": "U03HL55EG84",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "smile",
              "count": 2,
              "users": [
                "U03HL55EG84",
                "U03H36EUL95"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/J6xJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "sprintf",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "emoji",
                      "name": "man-running",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6a05392f-4c9e-44d7-a007-c3e953de36b9",
          "type": "message",
          "user": "U03HWCUKPB3",
          "text": "`qsort` because that is how I first learned how function pointers worked in C",
          "ts": "1654642756.164189",
          "thread_ts": "1654642555.683699",
          "parent_user_id": "U03HL55EG84",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 2,
              "users": [
                "U03HL55EG84",
                "U03H36EUL95"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1xL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "qsort",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " because that is how I first learned how function pointers worked in C"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "082cf9a6-dfe6-415c-8743-11419a034662",
          "type": "message",
          "user": "U03HHP2KWBV",
          "text": "`exit` because I know my program won't have any bugs after it",
          "ts": "1654642839.862969",
          "thread_ts": "1654642555.683699",
          "parent_user_id": "U03HL55EG84",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "joy",
              "count": 9,
              "users": [
                "U03H36EMD2B",
                "U03HHP2A17V",
                "U03HL55CCSG",
                "U03HL55EG84",
                "U03HWCUKPB3",
                "U03HHP2GAE7",
                "U03HL55GTQU",
                "U03H36EUL95",
                "U03JELDBMT3"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "W0T2P",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "exit",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " because I know my program won't have any bugs after it"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8ef1c333-758b-4563-a250-4ce9cc2ad685",
          "type": "message",
          "user": "U03H36EUL95",
          "text": "_*`atexit()` has entered the chat*_",
          "ts": "1654642895.288779",
          "thread_ts": "1654642555.683699",
          "parent_user_id": "U03HL55EG84",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "grimacing",
              "count": 6,
              "users": [
                "U03HHP2KWBV",
                "U03HHP2A17V",
                "U03HHP2GAE7",
                "U03J7LBB9DM",
                "U03HL55GTQU",
                "U03HL5A4YA0"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xdFY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "*",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "atexit()",
                      "style": {
                        "italic": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " has entered the chat*",
                      "style": {
                        "italic": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "97ef4cfa-85fd-448b-955d-f9b96e98dfd8",
          "type": "message",
          "user": "U03JNEZB0TU",
          "text": "`longjmp` for when I can’t use try/catch.",
          "ts": "1654642929.532669",
          "thread_ts": "1654642555.683699",
          "parent_user_id": "U03HL55EG84",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AVs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "longjmp",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " for when I can’t use try/catch."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "765153ca-cac7-4edf-82e9-c85429418a45",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "`setjmp()` for when Michael wants to use `longjmp()`.",
          "ts": "1654643035.253729",
          "thread_ts": "1654642555.683699",
          "parent_user_id": "U03HL55EG84",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "kangaroo",
              "count": 4,
              "users": [
                "U03HHP2GAE7",
                "U03HWCUKPB3",
                "U03HHP2KWBV",
                "U03HHP2A17V"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fPU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "setjmp()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " for when Michael wants to use "
                    },
                    {
                      "type": "text",
                      "text": "longjmp()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "50732e33-b012-4e32-bc0f-768b48a79181",
          "type": "message",
          "user": "U03HHPPAY58",
          "text": "I prefer using `signal()` and `kill()` to do my function calls via signals.",
          "ts": "1654643069.693419",
          "thread_ts": "1654642555.683699",
          "parent_user_id": "U03HL55EG84",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "m38",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I prefer using "
                    },
                    {
                      "type": "text",
                      "text": "signal()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "text",
                      "text": "kill()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to do my function calls via signals."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f2f9c9c1-e0fc-46a7-b67f-839cf12f82e9",
          "type": "message",
          "user": "U03HERYFK6H",
          "text": "`ungetc()` because I wasn't sure.",
          "ts": "1654643384.153139",
          "thread_ts": "1654642555.683699",
          "parent_user_id": "U03HL55EG84",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qOe3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "ungetc()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " because I wasn't sure."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b6d61a36-4465-4be8-bf02-e363f3de3826",
          "type": "message",
          "user": "U03H36Z4LQP",
          "text": "`memcpy()` because at the end of the day, all programs are just really elaborate variations on `memcpy()`.",
          "ts": "1654643688.248479",
          "thread_ts": "1654642555.683699",
          "parent_user_id": "U03HL55EG84",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "exploding_head",
              "count": 4,
              "users": [
                "U03H36EUL95",
                "U03HHP2GAE7",
                "U03HHP2KWBV",
                "U03HHP2A17V"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2tdUA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "memcpy()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " because at the end of the day, all programs are just really elaborate variations on "
                    },
                    {
                      "type": "text",
                      "text": "memcpy()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3207c556-db10-4ecd-bd10-5826f903de40",
          "type": "message",
          "user": "U03J5J0TUN9",
          "text": "`system` because you can run your swift-sh scripts using that.",
          "ts": "1654646308.340069",
          "thread_ts": "1654642555.683699",
          "parent_user_id": "U03HL55EG84",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "sweat_smile",
              "count": 2,
              "users": [
                "U03HL55EG84",
                "U03H36EUL95"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ww5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "system",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " because you can run your swift-sh scripts using that."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J7LBB9DM\u003e asked\n\u0026gt; Hey all, congrats on shipping and thanks for all the great code and features! I'm working to compile clang PCMs in a remote build system and consume them in Xcode tooling. Do you have any pro tops for how to compile PCMS for the Apple SDKs in Xcode? Currently seems like the dependency graph needs to be generated for these SDKs. Any suggestions here would be appreciated",
      "ts": "1654645085.981879",
      "thread_ts": "1654645085.981879",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654646751.072459",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "TrKrO",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J7LBB9DM"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hey all, congrats on shipping and thanks for all the great code and features! I'm working to compile clang PCMs in a remote build system and consume them in Xcode tooling. Do you have any pro tops for how to compile PCMS for the Apple SDKs in Xcode? Currently seems like the dependency graph needs to be generated for these SDKs. Any suggestions here would be appreciated\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "985bd483-f29f-4a7b-adb6-87b5b0aaed3d",
          "type": "message",
          "user": "U03HHP2ESQK",
          "text": "You can explicitly compile Clang modules by using the internal -cc1 command line and various flags. You would need to discover the module build graph to know which modules are needed when building each module and for the final translation unit. Explicitly building modules this way is not supported by Xcode or the various platform SDKs and will likely not work in all cases.",
          "ts": "1654645111.369509",
          "thread_ts": "1654645085.981879",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03J7LBB9DM"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tC0iX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can explicitly compile Clang modules by using the internal -cc1 command line and various flags. You would need to discover the module build graph to know which modules are needed when building each module and for the final translation unit. Explicitly building modules this way is not supported by Xcode or the various platform SDKs and will likely not work in all cases."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1b00e05a-aa8d-4fab-843e-eed7009e9b81",
          "type": "message",
          "user": "U03J7LBB9DM",
          "text": "Hey \u003c@U03HHP2ESQK\u003e - cool, thanks for sharing! Awesome, yep I'm looking into the tooling side of it as well. It looks like it will be a fine dance to make this work end to end.  We're attempting to try and make all paths in the PCMs relative. Do you suggest this or use chroot?",
          "ts": "1654646214.984039",
          "thread_ts": "1654645085.981879",
          "edited": {
            "user": "U03J7LBB9DM",
            "ts": "1654646417.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LvpCu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hey "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HHP2ESQK"
                    },
                    {
                      "type": "text",
                      "text": " - cool, thanks for sharing! Awesome, yep I'm looking into the tooling side of it as well. It looks like it will be a fine dance to make this work end to end.  We're attempting to try and make all paths in the PCMs relative. Do you suggest this or use chroot?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3b950741-8cb5-428e-ab64-448db5606679",
          "type": "message",
          "user": "U03HHP2ESQK",
          "text": "Making the paths the same everywhere is going to work much better, there are lots of paths that show up in modules.",
          "ts": "1654646459.662299",
          "thread_ts": "1654645085.981879",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tjtwx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Making the paths the same everywhere is going to work much better, there are lots of paths that show up in modules."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6e56cedf-0c94-4ba8-8f20-bde789c88fa2",
          "type": "message",
          "user": "U03J7LBB9DM",
          "text": "Ok cool, thanks for the tip! I'll give it a try",
          "ts": "1654646751.072459",
          "thread_ts": "1654645085.981879",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "A5gMk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok cool, thanks for the tip! I'll give it a try"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "25c958de-1147-4609-afc7-74e1c70d7c73",
      "type": "message",
      "user": "U03HL55EG84",
      "text": "We are almost at the end of the build tools session. Get your questions in soon before our team goes back to making Xcode better! :runner:",
      "ts": "1654646031.104079",
      "thread_ts": "1654646031.104079",
      "reply_count": 1,
      "latest_reply": "1654646169.898859",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "M2H",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "We are almost at the end of the build tools session. Get your questions in soon before our team goes back to making Xcode better! "
                },
                {
                  "type": "emoji",
                  "name": "runner",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "639260D2-115B-4DCF-8138-5C65462B4316",
          "type": "message",
          "user": "U03J6AKH19V",
          "text": "I’ve sent questions using  +:zap: not sure if they went through :grimacing:",
          "ts": "1654646169.898859",
          "thread_ts": "1654646031.104079",
          "edited": {
            "user": "U03J6AKH19V",
            "ts": "1654646193.000000"
          },
          "parent_user_id": "U03HL55EG84",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2bmuH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’ve sent questions using "
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "+"
                    },
                    {
                      "type": "emoji",
                      "name": "zap",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " not sure if they went through "
                    },
                    {
                      "type": "emoji",
                      "name": "grimacing",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "bffa9239-aa5c-4768-8359-478f24bbc255",
      "type": "message",
      "user": "U03HL55EG84",
      "text": "That’s a wrap on the build tools session. Thank you so much for joining us and asking amazing questions. :tada: If we couldn’t get to your questions, please check out other Developer Tools Sessions, Labs, or Lounges that might be better suited to your questions. Hope you enjoy the rest of the WWDC week! :grinning:",
      "ts": "1654646594.993289",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "clap",
          "count": 9,
          "users": [
            "U03HHP2GAE7",
            "U03J7LBB9DM",
            "U03H36EUL95",
            "U03HHP2KWBV",
            "U03HERYQ353",
            "U03JMEECDKK",
            "U03JP7J0A2E",
            "U03JEMCCQ57",
            "U03HL59SQ8L"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "MCC+",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "That’s a wrap on the build tools session. Thank you so much for joining us and asking amazing questions. "
                },
                {
                  "type": "emoji",
                  "name": "tada",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " If we couldn’t get to your questions, please check out other Developer Tools Sessions, Labs, or Lounges that might be better suited to your questions. Hope you enjoy the rest of the WWDC week! "
                },
                {
                  "type": "emoji",
                  "name": "grinning",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "d747db2c-d6ca-424b-8736-17f9105fae2f",
      "type": "message",
      "user": "U03HL553PNG",
      "text": "And that's also all we have for today too!  Come back and see us tomorrow morning.  Our full Digital Lounge schedule is posted as part of the \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/#current|Developer Tools Topics\u003e but just to summarize for tomorrow:\n• 9am to 11am: Q\u0026amp;A for Swift Playgrounds\n• 11am to 1pm: Q\u0026amp;A for C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker\n• 1pm to 3pm: Q\u0026amp;A for Swift Concurrency\n• 3pm to 5pm: Q\u0026amp;A for Xcode\nAll times Pacific.  Have a good night!  Hope you all are having a great WWDC!",
      "ts": "1654646785.393039",
      "attachments": [
        {
          "fallback": "Developer Tools - Topics - WWDC22",
          "id": 1,
          "title": "Developer Tools - Topics - WWDC22",
          "title_link": "https://developer.apple.com/wwdc22/topics/developer-tools/#current",
          "text": "Everything you need to know to build the next great app or game.",
          "image_url": "https://developer.apple.com/wwdc22/topics/images/og/developer-tools-og.png",
          "service_name": "developer.apple.com",
          "service_icon": "https://developer.apple.com/favicon.ico",
          "from_url": "https://developer.apple.com/wwdc22/topics/developer-tools/#current",
          "original_url": "https://developer.apple.com/wwdc22/topics/developer-tools/#current",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "tada",
          "count": 2,
          "users": [
            "U03JEMCCQ57",
            "U03JQ7PU1L1"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "585xz",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "And that's also all we have for today too!  Come back and see us tomorrow morning.  Our full Digital Lounge schedule is posted as part of the "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/#current",
                  "text": "Developer Tools Topics"
                },
                {
                  "type": "text",
                  "text": " but just to summarize for tomorrow:\n"
                }
              ]
            },
            {
              "Type": "rich_text_list",
              "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"9am to 11am: Q\u0026A for Swift Playgrounds\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"11am to 1pm: Q\u0026A for C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"1pm to 3pm: Q\u0026A for Swift Concurrency\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"3pm to 5pm: Q\u0026A for Xcode\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
            },
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "\nAll times Pacific.  Have a good night!  Hope you all are having a great WWDC!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "db9b895f-6cf4-4825-b4cf-9322c295ac48",
      "type": "message",
      "user": "U03HES8CXHB",
      "text": "Good morning everyone! Welcome to *Swift Playgrounds Q\u0026amp;A*. We have several engineers who work on Swift Playgrounds to answer your questions. For questions, use the lightning bolt icon :workflowbolt: at the lower left and select *Ask a question*. Your questions are shared with the Swift Playgrounds team who will do their best to get all your questions answered!",
      "ts": "1654703969.535839",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "gZp",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Good morning everyone! Welcome to "
                },
                {
                  "type": "text",
                  "text": "Swift Playgrounds Q\u0026A",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": ". We have several engineers who work on Swift Playgrounds to answer your questions. For questions, use the lightning bolt icon "
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " at the lower left and select "
                },
                {
                  "type": "text",
                  "text": "Ask a question",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": ". Your questions are shared with the Swift Playgrounds team who will do their best to get all your questions answered!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "c7ba6f63-0859-471d-929f-f37359332395",
      "type": "message",
      "user": "U03H36R325D",
      "text": "We might not be able to get to all of your questions but we’ll do our best. As a reminder, please keep the content professional and within our code of conduct.\n\nIf you have questions on other topics, you can check to see if there are \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/|other Developer Tools Sessions, Labs, or Lounges\u003e that might be better suited to your questions. For topics not covered there, you can also post your questions in the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e.",
      "ts": "1654704141.465489",
      "attachments": [
        {
          "fallback": "Developer Tools - Topics - WWDC22",
          "id": 1,
          "title": "Developer Tools - Topics - WWDC22",
          "title_link": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "text": "Everything you need to know to build the next great app or game.",
          "image_url": "https://developer.apple.com/wwdc22/topics/images/og/developer-tools-og.png",
          "service_name": "developer.apple.com",
          "service_icon": "https://developer.apple.com/favicon.ico",
          "from_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "original_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "blocks": null
        },
        {
          "fallback": "Apple Developer Forums",
          "id": 2,
          "title": "Apple Developer Forums",
          "title_link": "http://developer.apple.com/forums/",
          "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
          "service_name": "developer.apple.com",
          "service_icon": "https://forums.developer.apple.com/forums/build-05312022-1/public/assets/favicon.ico",
          "from_url": "http://developer.apple.com/forums/",
          "original_url": "http://developer.apple.com/forums/",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 2,
          "users": [
            "U03JRP87THN",
            "U03JFEZ9BJR"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "4Mc",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "We might not be able to get to all of your questions but we’ll do our best. As a reminder, please keep the content professional and within our code of conduct.\n\nIf you have questions on other topics, you can check to see if there are "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
                  "text": "other Developer Tools Sessions, Labs, or Lounges"
                },
                {
                  "type": "text",
                  "text": " that might be better suited to your questions. For topics not covered there, you can also post your questions in the "
                },
                {
                  "type": "link",
                  "url": "http://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "user": "U03HL553PNG",
      "text": "set the channel topic: Swift Playgrounds Q\u0026amp;A",
      "ts": "1654704584.515929",
      "subtype": "channel_topic",
      "topic": "Swift Playgrounds Q\u0026amp;A",
      "replace_original": false,
      "delete_original": false,
      "blocks": null
    },
    {
      "type": "message",
      "text": "\u003c@U03J4DJHVL3\u003e asked\n\u0026gt; Is there a way to disable/workaround the need for public qualifiers on classes/funcs in the Source folder? Often I pull a swift class out of an existing project to experiment against it, and end up having to change this.",
      "ts": "1654705380.893879",
      "thread_ts": "1654705380.893879",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654705724.618689",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "VuKe4",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4DJHVL3"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a way to disable\\/workaround the need for public qualifiers on classes\\/funcs in the Source folder? Often I pull a swift class out of an existing project to experiment against it, and end up having to change this.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "fd519d9a-c19c-449a-b882-17c2951ef28b",
          "type": "message",
          "user": "U03JF5LHNTS",
          "text": "It is not possible to disable \u003chttps://docs.swift.org/swift-book/LanguageGuide/AccessControl.html|access control\u003e for separate modules, including the module created for sources in the Sources folder of a playground.\n\nSwift Playgrounds supports creating app projects, which you can do by creating a new \"app\" instead of a new \"playground\" using the button at the bottom-left of the document browser. In an app project, by default all sources are part of a single module, so you don't need to use `public` to make things visible. App projects are also great for experimentation thanks to the live SwiftUI previews!",
          "ts": "1654705724.618689",
          "thread_ts": "1654705380.893879",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "white_check_mark",
              "count": 4,
              "users": [
                "U03J4DJHVL3",
                "U03J21EKNSE",
                "U03HVC6M81L",
                "U03JEKRK5UH"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "p6xp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It is not possible to disable "
                    },
                    {
                      "type": "link",
                      "url": "https://docs.swift.org/swift-book/LanguageGuide/AccessControl.html",
                      "text": "access control"
                    },
                    {
                      "type": "text",
                      "text": " for separate modules, including the module created for sources in the Sources folder of a playground.\n\nSwift Playgrounds supports creating app projects, which you can do by creating a new \"app\" instead of a new \"playground\" using the button at the bottom-left of the document browser. In an app project, by default all sources are part of a single module, so you don't need to use "
                    },
                    {
                      "type": "text",
                      "text": "public",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to make things visible. App projects are also great for experimentation thanks to the live SwiftUI previews!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J2004PGT\u003e asked\n\u0026gt; Hi y’all! First of all, thanks so much for your work on Swift Playgrounds, especially the latest ability to make apps!\n\u0026gt; \n\u0026gt; Are there recommendations for being able to sync user data across different devices from within an app? Like a Swift Playgrounds app creating a list of objects that would automatically go to Mac, iPad, and iPhone",
      "ts": "1654705790.116029",
      "thread_ts": "1654705790.116029",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654706120.665479",
      "reactions": [
        {
          "name": "+1",
          "count": 1,
          "users": [
            "U03JFEZ9BJR"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "OAyhk",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J2004PGT"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi y\\u2019all! First of all, thanks so much for your work on Swift Playgrounds, especially the latest ability to make apps!\\n\\nAre there recommendations for being able to sync user data across different devices from within an app? Like a Swift Playgrounds app creating a list of objects that would automatically go to Mac, iPad, and iPhone\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "7035e682-a0fa-413e-8455-a30bb8a49b46",
          "type": "message",
          "user": "U03H32HJQEB",
          "text": "Some services (like CloudKit) are not supported in app projects at this time. But you can use `UIDocumentPickerViewController` to ask the user to pick a folder in iCloud drive. Save a bookmark of the folder's file `URL` and you will have sandbox permissions to read and write to that folder whenever you want. Then it will be synced over iCloud Drive.",
          "ts": "1654705834.011529",
          "thread_ts": "1654705790.116029",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fj/D",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Some services (like CloudKit) are not supported in app projects at this time. But you can use "
                    },
                    {
                      "type": "text",
                      "text": "UIDocumentPickerViewController",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to ask the user to pick a folder in iCloud drive. Save a bookmark of the folder's file "
                    },
                    {
                      "type": "text",
                      "text": "URL",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and you will have sandbox permissions to read and write to that folder whenever you want. Then it will be synced over iCloud Drive."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1B9D6AEE-4C0E-4EDB-A821-CE9BB403FE88",
          "type": "message",
          "user": "U03J2004PGT",
          "text": "Oooo, really cool idea",
          "ts": "1654706120.665479",
          "thread_ts": "1654705790.116029",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "slightly_smiling_face",
              "count": 1,
              "users": [
                "U03H32HJQEB"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1rVKK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oooo,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "really"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "cool"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "idea"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J21EKNSE\u003e asked\n\u0026gt; Hello! Question about how to build “guided instructional content”. Where is that done: Swift Playgrounds, or Xcode? Thanks!",
      "ts": "1654705865.568589",
      "thread_ts": "1654705865.568589",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 11,
      "latest_reply": "1654708211.541089",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ll9",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J21EKNSE"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hello! Question about how to build \\u201cguided instructional content\\u201d. Where is that done: Swift Playgrounds, or Xcode? Thanks!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "fc5dafb3-7901-4009-bdb1-6f01fd92423e",
          "type": "message",
          "user": "U03H36QJWG7",
          "text": "You can build guided content in either Swift Playgrounds or Xcode! If you do want to edit your guided content on Playgrounds, make sure to turn on Authoring Debug Mode in the app's settings. To see how our team writes content, check out \u003chttps://developer.apple.com/videos/play/wwdc2022/110349/\u003e",
          "ts": "1654705897.515889",
          "thread_ts": "1654705865.568589",
          "attachments": [
            {
              "fallback": "Apple Developer: Create engaging content for Swift Playgrounds - WWDC22 - Videos - Apple Developer",
              "id": 1,
              "title": "Create engaging content for Swift Playgrounds - WWDC22 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/videos/play/wwdc2022/110349/",
              "text": "Learn how you can build guided instructional content designed for Swift Playgrounds. Follow along with us as we explore how you can add a...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/124/6703/6703_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/videos/play/wwdc2022/110349/",
              "original_url": "https://developer.apple.com/videos/play/wwdc2022/110349/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ocQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can build guided content in either Swift Playgrounds or Xcode! If you do want to edit your guided content on Playgrounds, make sure to turn on Authoring Debug Mode in the app's settings. To see how our team writes content, check out "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2022/110349/",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8E23D3A9-C005-45BD-98A8-411C3F765813",
          "type": "message",
          "user": "U03J21EKNSE",
          "text": "Thank you for your reply! I managed to watch half of your talk, then raced to the lounge. In the older Playgrounds you could get in trouble when trying to use Markup’s invisible writing (the moment you closed the line it would vanish!). Has that been taken care of?",
          "ts": "1654706011.585439",
          "thread_ts": "1654705865.568589",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "apep",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "your"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "reply!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "managed"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "watch"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "half"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "your"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "talk,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "then"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "raced"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "lounge."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "In"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "older"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Playgrounds"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "could"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "get"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "trouble"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "when"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "trying"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "use"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Markup’s"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "invisible"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "writing"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "(the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "moment"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "closed"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "line"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "would"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "vanish!)."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Has"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "been"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "taken"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "care"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d00084e3-5725-40e7-aa8a-4667f7f3278a",
          "type": "message",
          "user": "U03H36QJWG7",
          "text": "App projects no longer use the hidden code  block syntax that was available in playground books. All code in a source file is visible to learners. The only thing that is hidden is the code comments used to mark walkthrough and experiments",
          "ts": "1654706493.381579",
          "thread_ts": "1654705865.568589",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8JWRH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "App projects no longer use the hidden code  block syntax that was available in playground books. All code in a source file is visible to learners. The only thing that is hidden is the code comments used to mark walkthrough and experiments"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "22D0250B-E75E-434D-B443-35A80DF46D20",
          "type": "message",
          "user": "U03J21EKNSE",
          "text": "Thanks! And thanks for mentioning “code comments”: could not remember the correct terms! Do you just type the code comments in Playgrounds? I could never wrap my head around using Markup (without losing the content!). ",
          "ts": "1654706701.676869",
          "thread_ts": "1654705865.568589",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=f4f",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "And"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "thanks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " mention"
                    },
                    {
                      "type": "text",
                      "text": "ing"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "“code comments”:"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "could"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "not"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "remember"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "correct"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "terms!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Do"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "just"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "type"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "code"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "comments"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " Playgrounds"
                    },
                    {
                      "type": "text",
                      "text": "?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "could"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "never"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "wrap"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "head"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "around"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "using"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Markup"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "(without"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "losing"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "content!)."
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "414e3996-f04e-416b-9bb9-9cd7f49ef769",
          "type": "message",
          "user": "U03H36QJWG7",
          "text": "You can totally type them in on playgrounds! Just make sure you've entered the id before closing the comment `*/` for walkthroughs and `)` for experiments. If you do forget to add the ID before closing the comment, you can open the project in xcode and make that change there",
          "ts": "1654707154.623449",
          "thread_ts": "1654705865.568589",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bD9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can totally type them in on playgrounds! Just make sure you've entered the id before closing the comment "
                    },
                    {
                      "type": "text",
                      "text": "*/",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " for walkthroughs and "
                    },
                    {
                      "type": "text",
                      "text": ")",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " for experiments. If you do forget to add the ID before closing the comment, you can open the project in xcode and make that change there"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0FFB5530-4C0A-4400-B7DC-1BF6A7BA44FF",
          "type": "message",
          "user": "U03J21EKNSE",
          "text": "Apologies: “entered the id”?",
          "ts": "1654707416.701029",
          "thread_ts": "1654705865.568589",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dE7T",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Apologies:"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "“entered"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "id”?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5338813E-96EA-4B07-B61A-EFE188E173D1",
          "type": "message",
          "user": "U03J21EKNSE",
          "text": "Do you mean something like /*#-code-walkthrough(filename.swift)*/ ?",
          "ts": "1654707483.841149",
          "thread_ts": "1654705865.568589",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5Az",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Do"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "mean"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "something"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "like"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "/"
                    },
                    {
                      "type": "text",
                      "text": "#-code-walkthrough(filename.swift)",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "/"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7F859CFD-44D5-4E36-B17E-B37BEA181F8E",
          "type": "message",
          "user": "U03J21EKNSE",
          "text": "(It “ate” the asterisks before and after the “/“… I guess that’s Markup rendering? ",
          "ts": "1654707524.778089",
          "thread_ts": "1654705865.568589",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "s9l+Y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "("
                    },
                    {
                      "type": "text",
                      "text": "It "
                    },
                    {
                      "type": "text",
                      "text": "“"
                    },
                    {
                      "type": "text",
                      "text": "ate"
                    },
                    {
                      "type": "text",
                      "text": "”"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "asterisks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "before"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "after"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "“/“…"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "guess"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that’s"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Markup"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "rendering?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "30d0c021-18bc-4275-b3b5-cb6664085301",
          "type": "message",
          "user": "U03H36QJWG7",
          "text": "Sorry if I didn't explain that well. The id that goes in the comment should match the id of a page in your walkthrough task. You can see an example of that in our session video. When writing the comment in playgrounds write `/*#-code-walkthrough(id)`  part first before writing the `*/` part just to make sure the comment doesn't disappear before you're done editing it",
          "ts": "1654707916.294419",
          "thread_ts": "1654705865.568589",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eMGo",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sorry if I didn't explain that well. The id that goes in the comment should match the id of a page in your walkthrough task. You can see an example of that in our session video. When writing the comment in playgrounds write "
                    },
                    {
                      "type": "text",
                      "text": "/*#-code-walkthrough(id)",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "  part first before writing the "
                    },
                    {
                      "type": "text",
                      "text": "*/",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " part just to make sure the comment doesn't disappear before you're done editing it"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e080a913-a37e-46b8-b847-8782ca79fef9",
          "type": "message",
          "user": "U03H36QJWG7",
          "text": "It also sounds like you might be running into issues with the comments being partially hidden at the wrong times. If that is the case please file a feedback request so my team and I can look into it",
          "ts": "1654707987.918799",
          "thread_ts": "1654705865.568589",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GUYBX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It also sounds like you might be running into issues with the comments being partially hidden at the wrong times. If that is the case please file a feedback request so my team and I can look into it"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "039B955A-48B5-409F-B6B8-37195E675036",
          "type": "message",
          "user": "U03J21EKNSE",
          "text": "Thank you! I will try and see where things go. Have a good afternoon!",
          "ts": "1654708211.541089",
          "thread_ts": "1654705865.568589",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vRDN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "will"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "try"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "see"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "where"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "things"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "go."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Have"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "good"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "afternoon!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J21EKNSE\u003e asked\n\u0026gt; In previous versions of Playgrounds, touching the “Advanced” menu would take you to a menu to access “View Auxiliary Source Files”. From there you had access to the *.playgroundbook file, and the Chapters/UserModules. Is there anything similar in these educational content files? Thanks.",
      "ts": "1654706300.132909",
      "thread_ts": "1654706300.132909",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654706562.196449",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "jYqQV",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J21EKNSE"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"In previous versions of Playgrounds, touching the \\u201cAdvanced\\u201d menu would take you to a menu to access \\u201cView Auxiliary Source Files\\u201d. From there you had access to the *.playgroundbook file, and the Chapters\\/UserModules. Is there anything similar in these educational content files? Thanks.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "91a9f096-f825-4683-80b2-0ec0154a4e64",
          "type": "message",
          "user": "U03HWD4ACAD",
          "text": "Unlike Playground books, app projects show all their files in the source directory in the sidebar. In the case of an app project with guided learning content, the Guide directory can be made available in the sidebar as well by enabling the Authoring Debug switch in Playgrounds settings.",
          "ts": "1654706453.466079",
          "thread_ts": "1654706300.132909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fHR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Unlike Playground books, app projects show all their files in the source directory in the sidebar. In the case of an app project with guided learning content, the Guide directory can be made available in the sidebar as well by enabling the Authoring Debug switch in Playgrounds settings."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "278D2D8A-EF83-4EA2-966C-91716C15B015",
          "type": "message",
          "user": "U03J21EKNSE",
          "text": "Thank you for replying, and explaining the difference. Keeping track of the “original” and “edited” versions could get confusing! Even more so when we had to do some of the work in Xcode (Playgrounds could not see/work with lists).",
          "ts": "1654706562.196449",
          "thread_ts": "1654706300.132909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "I8qd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "replying,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "explaining"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "difference."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Keeping"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "track"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "“original”"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "“edited”"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "versions"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "could"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "get"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "confusing!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Even"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "more"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "so"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "when"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "we"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "had"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "do"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "some"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "work"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Xcode"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "(Playgrounds"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "could"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "not"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "see/work"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "with"
                    },
                    {
                      "type": "text",
                      "text": " lists"
                    },
                    {
                      "type": "text",
                      "text": ")."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J21EKNSE\u003e asked\n\u0026gt; Side note: if possible, please say hi to Jonathan P. He was very helpful in previous years when I asked questions about Swift Playgrounds 3!",
      "ts": "1654707056.082659",
      "thread_ts": "1654707056.082659",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654707225.402709",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "1N6Mz",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J21EKNSE"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Side note: if possible, please say hi to Jonathan P. He was very helpful in previous years when I asked questions about Swift Playgrounds 3!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "8a3ee52d-0e0b-4db7-ac6b-34803fcfbbee",
          "type": "message",
          "user": "U03H32HJQEB",
          "text": "Thank you! That means a lot. :heart: Glad to hear that this tool is working for you!",
          "ts": "1654707072.386449",
          "thread_ts": "1654707056.082659",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JPFQNX5K"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "MaEI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you! That means a lot. "
                    },
                    {
                      "type": "emoji",
                      "name": "heart",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " Glad to hear that this tool is working for you!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "B2F218C2-7FF8-40FC-896E-A2CE4AED1A5A",
          "type": "message",
          "user": "U03J21EKNSE",
          "text": "Jonathan! Thanks for saying hi; I know you are busy. I hope to be able to “sink my teeth” in this new version of educational material. I am looking forward to creating modules for physics students.",
          "ts": "1654707136.212169",
          "thread_ts": "1654707056.082659",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 2,
              "users": [
                "U03H32HJQEB",
                "U03J108Q0HL"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FILoM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Jonathan"
                    },
                    {
                      "type": "text",
                      "text": "!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Thanks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "saying"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "hi;"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "know"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "are"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "busy."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "hope"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "able"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "“sink"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "teeth”"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "this"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "new"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "version"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "educational"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "material."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "am"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "looking"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "forward"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "creating"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "modules"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "physics"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "students."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c135e3ef-deaf-4f02-999f-28c381a7eb2e",
          "type": "message",
          "user": "U03H32HJQEB",
          "text": "Ooooo, that sounds awesome!",
          "ts": "1654707152.584729",
          "thread_ts": "1654707056.082659",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XBh6m",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ooooo, that sounds awesome!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "C38E4CF3-19AF-4F17-B7B9-F8C49A91A637",
          "type": "message",
          "user": "U03J21EKNSE",
          "text": "I always hated the old paper strip/electric discharge experiments to calculate speed and acceleration. It would be good to build something to show how classical mechanics work. But I have to learn to crawl before running! Have a good afternoon.",
          "ts": "1654707225.402709",
          "thread_ts": "1654707056.082659",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "slightly_smiling_face",
              "count": 1,
              "users": [
                "U03H32HJQEB"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dVmDx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "always"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "hated"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "old"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "paper"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "strip/"
                    },
                    {
                      "type": "text",
                      "text": "electric "
                    },
                    {
                      "type": "text",
                      "text": "discharge"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "experiments"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "calculate"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "speed"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "acceleration."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "It"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "would"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "good"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "build"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "something"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "show"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "how"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "classical"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "mechanics"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "work."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "But"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "have"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " learn "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "crawl"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "before"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "running!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Have"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "good"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "afternoon."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMCH9D5M\u003e asked\n\u0026gt; The Swift Playground for Mac does not totally work for SwiftUI. Even if I just create a basic template or open a tutorial like \"Keep Going with Apps,\" it will show errors that shouldn't exist for the playground, like:\n\u0026gt; \n\u0026gt; Could not build Objective-C module 'SwiftUl'\n\u0026gt; \n\u0026gt; NSEvent\n\u0026gt; Could not build module 'ApplicationServices'\n\u0026gt; module\n\u0026gt; Umbrella for module 'ApplicationServices.ATSUl' already covers\n\u0026gt; this directory\n\u0026gt; Inferred submodules require a module with an umbrella\n\u0026gt; SwiftUl\n\u0026gt; Could not build module 'UlKit'\n\u0026gt; NSToolbar+UlKitAdditions\n\u0026gt; Could not build module 'AppKit'\n\u0026gt; \n\u0026gt; Please fix it since these playgrounds play perfectly on my iPad :sob:",
      "ts": "1654710485.335189",
      "thread_ts": "1654710485.335189",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654710490.909029",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "5bKF",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMCH9D5M"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"The Swift Playground for Mac does not totally work for SwiftUI. Even if I just create a basic template or open a tutorial like \\\"Keep Going with Apps,\\\" it will show errors that shouldn't exist for the playground, like:\\n\\nCould not build Objective-C module 'SwiftUl'\\n\\nNSEvent\\nCould not build module 'ApplicationServices'\\nmodule\\nUmbrella for module 'ApplicationServices.ATSUl' already covers\\nthis directory\\nInferred submodules require a module with an umbrella\\nSwiftUl\\nCould not build module 'UlKit'\\nNSToolbar+UlKitAdditions\\nCould not build module 'AppKit'\\n\\nPlease fix it since these playgrounds play perfectly on my iPad \"},{\"type\":\"emoji\",\"name\":\"sob\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "b27309a5-6290-45a9-814e-c3e57afd73f7",
          "type": "message",
          "user": "U03HL551ATW",
          "text": "Thanks for reporting! We have heard some rare reports of this happening to a small number of users. If you uninstall Swift Playgrounds and then reinstall from the Mac App Store, everything should be working great!",
          "ts": "1654710490.909029",
          "thread_ts": "1654710485.335189",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=F4l",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for reporting! We have heard some rare reports of this happening to a small number of users. If you uninstall Swift Playgrounds and then reinstall from the Mac App Store, everything should be working great!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "8ed51e0c-883a-494c-b9a7-eb3350433fa0",
      "type": "message",
      "user": "U03H36R325D",
      "text": "Reminder: We’re 5 minutes from wrapping up!",
      "ts": "1654710958.587989",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "oIJ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Reminder: We’re 5 minutes from wrapping up!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "b9b3e2e6-6cde-41cc-99c3-bdbf3231ef0b",
      "type": "message",
      "user": "U03HES8CXHB",
      "text": "It’s been a great session! Thank you, everyone, for joining us today in *Xcode Open Hours*! We hope you’ve have a good time getting your questions answered by the Swift Playgrounds team!\n\nIf your question wasn’t answered, check to see if there are \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/|other Developer Tools Sessions, Labs, or Lounges\u003e that may better fit your question. For topics not covered there, you can post your questions in the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e. Have a great rest of your WWDC!",
      "ts": "1654711242.482589",
      "attachments": [
        {
          "fallback": "Developer Tools - Topics - WWDC22",
          "id": 1,
          "title": "Developer Tools - Topics - WWDC22",
          "title_link": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "text": "Everything you need to know to build the next great app or game.",
          "image_url": "https://developer.apple.com/wwdc22/topics/images/og/developer-tools-og.png",
          "service_name": "developer.apple.com",
          "service_icon": "https://developer.apple.com/favicon.ico",
          "from_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "original_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "blocks": null
        },
        {
          "fallback": "Apple Developer Forums",
          "id": 2,
          "title": "Apple Developer Forums",
          "title_link": "http://developer.apple.com/forums/",
          "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
          "service_name": "developer.apple.com",
          "service_icon": "https://forums.developer.apple.com/forums/build-06082022-1/public/assets/favicon.ico",
          "from_url": "http://developer.apple.com/forums/",
          "original_url": "http://developer.apple.com/forums/",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Bbz3c",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "It’s been a great session! Thank you, everyone, for joining us today in "
                },
                {
                  "type": "text",
                  "text": "Xcode Open Hours",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "! We hope you’ve have a good time getting your questions answered by the Swift Playgrounds team!\n\nIf your question wasn’t answered, check to see if there are "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
                  "text": "other Developer Tools Sessions, Labs, or Lounges"
                },
                {
                  "type": "text",
                  "text": " that may better fit your question. For topics not covered there, you can post your questions in the "
                },
                {
                  "type": "link",
                  "url": "http://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": ". Have a great rest of your WWDC!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "ec0489e6-f4a4-431b-ac8f-2bc2b4f71ef1",
      "type": "message",
      "user": "U03HL59SQ8L",
      "text": "*Hello!* :smiley: *We’re ready to start the C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker Q\u0026amp;A.* \n\n*There are a number of engineers here that work on build tools to answer your questions. Please submit your questions with the* :workflowbolt: *button below. We will review your questions and then post them here for everyone to see.*\n\nWe might not be able to get to all of your questions but we’ll do our best. As a reminder, please keep the content professional and within our code of conduct.\n\nIf you have questions on other topics, you can check to see if there are other \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/|Developer Tools Sessions, Labs, or Lounges\u003e that might be better suited to your questions. For topics not covered there, you can also post your questions in the \u003chttps://developer.apple.com/forums/|Developer Forums\u003e.",
      "ts": "1654711328.280359",
      "attachments": [
        {
          "fallback": "Apple Developer Forums",
          "id": 2,
          "title": "Apple Developer Forums",
          "title_link": "https://developer.apple.com/forums/",
          "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
          "service_name": "developer.apple.com",
          "service_icon": "https://forums.developer.apple.com/forums/build-06082022-1/public/assets/favicon.ico",
          "from_url": "https://developer.apple.com/forums/",
          "original_url": "https://developer.apple.com/forums/",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "cfv",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hello! ",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "emoji",
                  "name": "smiley",
                  "skin_tone": 0,
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " We’re ready to start the C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker Q\u0026A. ",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "\n\n"
                },
                {
                  "type": "text",
                  "text": "There are a number of engineers here that work on build tools to answer your questions. Please submit your questions with the ",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0,
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " button below. We will review your questions and then post them here for everyone to see.",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "\n\nWe might not be able to get to all of your questions but we’ll do our best. As a reminder, please keep the content professional and within our code of conduct.\n\nIf you have questions on other topics, you can check to see if there are other "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
                  "text": "Developer Tools Sessions, Labs, or Lounges"
                },
                {
                  "type": "text",
                  "text": " that might be better suited to your questions. For topics not covered there, you can also post your questions in the "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "user": "U03HHP784Q3",
      "text": "set the channel topic: C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker Q\u0026amp;A",
      "ts": "1654711841.358849",
      "subtype": "channel_topic",
      "topic": "C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker Q\u0026amp;A",
      "replace_original": false,
      "delete_original": false,
      "blocks": null
    },
    {
      "type": "message",
      "text": "\u003c@U03JRN827HN\u003e asked\n\u0026gt; Do you have any tips or recommendations for improving the reliability \u0026amp; performance of LLDB? Anything in particular to watch out for? In my project, it sometimes takes up to 30-40 seconds (on M1 Max!) between pausing on a breakpoint and LLDB becoming responsive.",
      "ts": "1654712351.555149",
      "thread_ts": "1654712351.555149",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654714546.976399",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "1tNR",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRN827HN"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Do you have any tips or recommendations for improving the reliability \u0026 performance of LLDB? Anything in particular to watch out for? In my project, it sometimes takes up to 30-40 seconds (on M1 Max!) between pausing on a breakpoint and LLDB becoming responsive.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "0a254299-7f0f-4205-91ec-d37176b81d97",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "This, imagine still having an Intel Mac! :sweat_smile:",
          "ts": "1654712440.578549",
          "thread_ts": "1654712351.555149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fBV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This, imagine still having an Intel Mac! "
                    },
                    {
                      "type": "emoji",
                      "name": "sweat_smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b0cc352b-2368-4114-bb7d-bea8f7687f3e",
          "type": "message",
          "user": "U03HES2QKGV",
          "text": "We've worked to improve the performance of lldb in Xcode 14 when debugging Swift. Please try Xcode 14 and file a feedback if the performance is an issue. From there we can get profiling data and figure out the root cause.\n\nThere's also the opportunity to 1:1 on this. I'd suggest \u0026lt;https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming?q=C%2B%2B\n|making an appointment for a lab\u0026gt;.  We have a C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker lab tomorrow which would be great.",
          "ts": "1654712575.609619",
          "thread_ts": "1654712351.555149",
          "edited": {
            "user": "U03HES2QKGV",
            "ts": "1654712682.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U03JRN827HN"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wUQI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We've worked to improve the performance of lldb in Xcode 14 when debugging Swift. Please try Xcode 14 and file a feedback if the performance is an issue. From there we can get profiling data and figure out the root cause.\n\nThere's also the opportunity to 1:1 on this. I'd suggest "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming?q=C%2B%2B\n",
                      "text": "making an appointment for a lab"
                    },
                    {
                      "type": "text",
                      "text": ".  We have a C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker lab tomorrow which would be great."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "03e439d8-9e2c-4303-8bc8-63f6380b9fb0",
          "type": "message",
          "user": "U03JRN827HN",
          "text": "Thank you! I’ll make sure to request an appointment.",
          "ts": "1654712988.694979",
          "thread_ts": "1654712351.555149",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HES2QKGV"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "isQd=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you! I’ll make sure to request an appointment."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "821c2a39-ac22-4874-852e-2f2bd6015fbc",
          "type": "message",
          "user": "U03HHPTMS74",
          "text": "Great, we look forward to talking with you!  When you make the appointment, be sure to specify whether your app is Swift or C/C++/ObjC.  The right person to help you out will depend on what kind of code you are debugging.",
          "ts": "1654714057.103139",
          "thread_ts": "1654712351.555149",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "100",
              "count": 1,
              "users": [
                "U03HES2QKGV"
              ]
            },
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JRN827HN"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1L27",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Great, we look forward to talking with you!  When you make the appointment, be sure to specify whether your app is Swift or C/C++/ObjC.  The right person to help you out will depend on what kind of code you are debugging."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a10d7aa4-ba50-46f9-a422-e22ff6930a4b",
          "type": "message",
          "user": "U03JRN827HN",
          "text": "It’s a C/C++/Obj-C/Obj-C++/Swift framework. :smile:",
          "ts": "1654714084.786389",
          "thread_ts": "1654712351.555149",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "smile",
              "count": 1,
              "users": [
                "U03JPFQNX5K"
              ]
            },
            {
              "name": "scientist",
              "count": 2,
              "users": [
                "U03JPFQNX5K",
                "U03HES2QKGV"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OG6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It’s a C/C++/Obj-C/Obj-C++/Swift framework. "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c4871340-0a71-4790-a3d6-520c63f118fd",
          "type": "message",
          "user": "U03HHPTMS74",
          "text": "Note, there's also a WWDC session (it's up on the Sessions page, but will be posted tomorrow) called \"Debug Swift debugging with LLDB\" which covers some of the issues with Swift debugging in complex projects (which I'm guessing you might have...)  You might also find that helpful.",
          "ts": "1654714492.449279",
          "thread_ts": "1654712351.555149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gWT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Note, there's also a WWDC session (it's up on the Sessions page, but will be posted tomorrow) called \"Debug Swift debugging with LLDB\" which covers some of the issues with Swift debugging in complex projects (which I'm guessing you might have...)  You might also find that helpful."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "acfb1d01-3f59-4d04-a04e-f0668667ac79",
          "type": "message",
          "user": "U03JRN827HN",
          "text": "Already bookmarked! Thanks, I’ll make sure to watch it as well.",
          "ts": "1654714546.976399",
          "thread_ts": "1654712351.555149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bNsLd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Already bookmarked! Thanks, I’ll make sure to watch it as well."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J8GR73HT\u003e asked\n\u0026gt; I have some questions regarding virtualization. Not sure where to ask.",
      "ts": "1654712391.490049",
      "thread_ts": "1654712391.490049",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 17,
      "latest_reply": "1654721070.373999",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "4Sm",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J8GR73HT"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I have some questions regarding virtualization. Not sure where to ask.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "3c1939f3-6a14-4c30-8377-46973f7e2b1d",
          "type": "message",
          "user": "U03HB5H7E7Q",
          "text": "Can you please share the specific question you have? It’ll help us determine where does it suit the best.",
          "ts": "1654712413.312749",
          "thread_ts": "1654712391.490049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rcI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Can you please share the specific question you have? It’ll help us determine where does it suit the best."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ceee0a45-296b-4306-af27-fc2a963dad96",
          "type": "message",
          "user": "U03J8GR73HT",
          "text": "thanks Jan!\n1. Regarding the entitlement `com.apple.vm.networking` at \u003chttps://developer.apple.com/documentation/bundleresources/entitlements/com_apple_vm_networking\u003e\n\u0026gt; This entitlement is restricted to developers of virtualization software. To request this entitlement, contact your Apple representative.\nHow do I contact my _Apple representative_?",
          "ts": "1654712494.774449",
          "thread_ts": "1654712391.490049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "43Pq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "thanks Jan!\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Regarding the entitlement \"},{\"type\":\"text\",\"text\":\"com.apple.vm.networking\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" at \"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/documentation\\/bundleresources\\/entitlements\\/com_apple_vm_networking\"}]}],\"style\":\"ordered\",\"indent\":0,\"border\":0}"
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"This entitlement is restricted to developers of virtualization software. To request this entitlement, contact your Apple representative.\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "How do I contact my "
                    },
                    {
                      "type": "text",
                      "text": "Apple representative",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ee8e9291-1710-4560-abd2-c389293cf6da",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "You can reach out through \u003chttp://developer.apple.com/contact/\u003e",
          "ts": "1654712537.919459",
          "thread_ts": "1654712391.490049",
          "attachments": [
            {
              "fallback": "Sign In - Apple",
              "id": 1,
              "title": "Sign In - Apple",
              "title_link": "http://developer.apple.com/contact/",
              "text": "Sign in with your Apple ID",
              "service_name": "idmsa.apple.com",
              "service_icon": "https://appleid.cdn-apple.com/daw/IDMSWebAuth/static/20Apr2022/images/favicon.ico",
              "from_url": "http://developer.apple.com/contact/",
              "original_url": "http://developer.apple.com/contact/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RB=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can reach out through "
                    },
                    {
                      "type": "link",
                      "url": "http://developer.apple.com/contact/",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b19154cc-7760-475a-b3f8-8cf9496e8f7e",
          "type": "message",
          "user": "U03J8GR73HT",
          "text": "I did that and received a reply email:\n\u0026gt; I understand you are wanting to request an entitlement. You should have the option to request this entitlement on the webpage.\n",
          "ts": "1654712600.406219",
          "thread_ts": "1654712391.490049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "U5qiO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I did that and received a reply email:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I understand you are wanting to request an entitlement. You should have the option to request this entitlement on the webpage.\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": []
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5765ccd9-0dc6-40d3-8fc5-e5a033a6406f",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Did they give you a link to the webpage? :slightly_smiling_face:   I'm guessing that this specific entitlement is not listed there... is that right?",
          "ts": "1654712662.668279",
          "thread_ts": "1654712391.490049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "efPq4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Did they give you a link to the webpage? "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "   I'm guessing that this specific entitlement is not listed there... is that right?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "435b2eb9-98da-4da1-990f-0177ff0b5432",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Do you have a ticket number by any chance?",
          "ts": "1654712670.794859",
          "thread_ts": "1654712391.490049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nnEOV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Do you have a ticket number by any chance?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "41de02c4-95d1-40fb-9f7f-7a36315593d5",
          "type": "message",
          "user": "U03J8GR73HT",
          "text": "the case number is 101717476463",
          "ts": "1654712701.423109",
          "thread_ts": "1654712391.490049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KZz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "the case number is 101717476463"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "75dbb705-ec68-4322-ac07-06b62f4d9d84",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Thanks!  I'll see what I can figure out for you and circle back to this thread when I have an answer for you.",
          "ts": "1654712752.190149",
          "thread_ts": "1654712391.490049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ibW6y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks!  I'll see what I can figure out for you and circle back to this thread when I have an answer for you."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "809ddb74-61c2-41a9-b0d9-bda32da79737",
          "type": "message",
          "user": "U03J8GR73HT",
          "text": "I just went to _Development and Technical_ then _Certificates, Identifiers, and Provisioning Profile_ then filled out the text box with the request.",
          "ts": "1654712772.029379",
          "thread_ts": "1654712391.490049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "f9p",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I just went to "
                    },
                    {
                      "type": "text",
                      "text": "Development and Technical",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " then "
                    },
                    {
                      "type": "text",
                      "text": "Certificates, Identifiers, and Provisioning Profile",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " then filled out the text box with the request."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e4d78d9d-cbcc-4c48-abff-def4a62c9186",
          "type": "message",
          "user": "U03J8GR73HT",
          "text": "Thanks \u003c@U03HL553PNG\u003e I really appreciate it.",
          "ts": "1654712815.145779",
          "thread_ts": "1654712391.490049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "U7Vk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HL553PNG"
                    },
                    {
                      "type": "text",
                      "text": " I really appreciate it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "210d9ea5-5fbf-4399-9b0d-cd4c16a8c80d",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Alrighty!  I got some info for you.  It seems like we had an error in some of our documentation so we're working to correct that.  In the mean time, the actual right team to get the request is \u003chttps://developer.apple.com/contact/technical/\u003e .  Please mention that we spoke in the Slack Digital Lounges and also include your previous case number as well.  We'll keep an eye out for your request and make sure it goes to the right folks.  Sorry for that trouble!!",
          "ts": "1654713908.832169",
          "thread_ts": "1654712391.490049",
          "attachments": [
            {
              "fallback": "Sign In - Apple",
              "id": 1,
              "title": "Sign In - Apple",
              "title_link": "https://developer.apple.com/contact/technical/",
              "text": "Sign in with your Apple ID",
              "service_name": "idmsa.apple.com",
              "service_icon": "https://appleid.cdn-apple.com/daw/IDMSWebAuth/static/20Apr2022/images/favicon.ico",
              "from_url": "https://developer.apple.com/contact/technical/",
              "original_url": "https://developer.apple.com/contact/technical/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/a/O4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Alrighty!  I got some info for you.  It seems like we had an error in some of our documentation so we're working to correct that.  In the mean time, the actual right team to get the request is "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/contact/technical/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " .  Please mention that we spoke in the Slack Digital Lounges and also include your previous case number as well.  We'll keep an eye out for your request and make sure it goes to the right folks.  Sorry for that trouble!!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "290800d2-862a-4282-bfa2-aa7e4795f1ce",
          "type": "message",
          "user": "U03J8GR73HT",
          "text": "I accidentally submitted two tickets :disappointed: because I forgot to include the case number and the Slack mentioned.",
          "ts": "1654714255.687719",
          "thread_ts": "1654712391.490049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UM/fx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I accidentally submitted two tickets "
                    },
                    {
                      "type": "emoji",
                      "name": "disappointed",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " because I forgot to include the case number and the Slack mentioned."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ffdb1fa7-b196-4566-bf89-b42ff809974c",
          "type": "message",
          "user": "U03J8GR73HT",
          "text": "801648279 - with the case number and Slack mention\n801648226 - the one I forgot to",
          "ts": "1654714297.529099",
          "thread_ts": "1654712391.490049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GT7UT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "801648279 - with the case number and Slack mention\n801648226 - the one I forgot to"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0c033749-7a2f-4152-8644-9305deb8beba",
          "type": "message",
          "user": "U03J8GR73HT",
          "text": "Thanks \u003c@U03HL553PNG\u003e",
          "ts": "1654714302.693089",
          "thread_ts": "1654712391.490049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tz2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HL553PNG"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8e88e28d-297a-495f-b5da-2ee8c2028641",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "thanks!",
          "ts": "1654714574.490929",
          "thread_ts": "1654712391.490049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "y1U",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "440d1f7f-7ade-4375-a4ff-e6630ca8c9f5",
          "type": "message",
          "user": "U03J8GR73HT",
          "text": "I do have another question if I may about the API.",
          "ts": "1654720970.909539",
          "thread_ts": "1654712391.490049",
          "edited": {
            "user": "U03J8GR73HT",
            "ts": "1654720985.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZkeF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I do have another question if I may about the API."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a3876469-4553-493d-83f3-3eb58ee5b289",
          "type": "message",
          "user": "U03J8GR73HT",
          "text": "It seems we only have access to \u003chttps://developer.apple.com/documentation/virtualization/vzmacosrestoreimage/3835970-mostfeaturefulsupportedconfigura|t\u003ehe `fetchLatestSupported` is there a way to access previous versions of macOS and their respective restore images/`ipsw` files.",
          "ts": "1654721070.373999",
          "thread_ts": "1654712391.490049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ml1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It seems we only have access to "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/virtualization/vzmacosrestoreimage/3835970-mostfeaturefulsupportedconfigura",
                      "text": "t"
                    },
                    {
                      "type": "text",
                      "text": "he "
                    },
                    {
                      "type": "text",
                      "text": "fetchLatestSupported",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is there a way to access previous versions of macOS and their respective restore images/"
                    },
                    {
                      "type": "text",
                      "text": "ipsw",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " files."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J22A0C4S\u003e asked\n\u0026gt; I have (or rather a dependency has) an Obj-C type which has a core definition and many categories spread amongst many files. Xcode's new build visualizer shows this type can take many seconds to compile (at least when integrated through SPM). Is there any way to speed it up? (\u003chttps://github.com/google/promises/tree/master/Sources/FBLPromises)|https://github.com/google/promises/tree/master/Sources/FBLPromises)\u003e",
      "ts": "1654712650.801509",
      "thread_ts": "1654712650.801509",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 35,
      "latest_reply": "1654719216.503269",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "xQHO1",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J22A0C4S"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I have (or rather a dependency has) an Obj-C type which has a core definition and many categories spread amongst many files. Xcode's new build visualizer shows this type can take many seconds to compile (at least when integrated through SPM). Is there any way to speed it up? (\"},{\"type\":\"link\",\"url\":\"https:\\/\\/github.com\\/google\\/promises\\/tree\\/master\\/Sources\\/FBLPromises)\",\"text\":\"https:\\/\\/github.com\\/google\\/promises\\/tree\\/master\\/Sources\\/FBLPromises)\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "fa99d0ca-b7d0-4054-8758-64c813583253",
          "type": "message",
          "user": "U03HWCZ76SD",
          "text": "You mention SPM, so I want to clarify: are you talking about clang build times or Swift build times? Assuming that you are talking about clang build times, enabling modules for your project may improve build times (and it looks like there is already a clang module map for this library).",
          "ts": "1654712741.675569",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "NFt",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You mention SPM, so I want to clarify: are you talking about clang build times or Swift build times? Assuming that you are talking about clang build times, enabling modules for your project may improve build times (and it looks like there is already a clang module map for this library)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "883c0c2f-c076-4fda-ac9b-7c52be447cd8",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "This is an Obj-C framework integrated through SPM, so it presumably uses SPM's build system to call clang during builds.",
          "ts": "1654712803.585729",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pxr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is an Obj-C framework integrated through SPM, so it presumably uses SPM's build system to call clang during builds."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4aaaf81d-2a71-46f8-9cda-f057381123bd",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "According to the build log, that single library takes 5 seconds to build.",
          "ts": "1654712839.400709",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "y+F",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "According to the build log, that single library takes 5 seconds to build."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "245a32ea-8c34-450a-801d-1a4a790c2283",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "On an M1 Ultra.",
          "ts": "1654712879.572729",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "baZOb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "On an M1 Ultra."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5b974fd0-7f02-425f-a734-ca781be6a9a9",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Unfortunately the logs don't offer any additional detail as to why it's taking that long, but I wonder if the category usage might be part of it.",
          "ts": "1654712913.764379",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Gz=tm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Unfortunately the logs don't offer any additional detail as to why it's taking that long, but I wonder if the category usage might be part of it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7656469d-06ee-4eaf-9080-f4d70a77649d",
          "type": "message",
          "user": "U03HWCZ76SD",
          "text": "And this is just a dependency that you are using? Is the dependency getting re-built every time? I would expect that it would only be built once and then Swift could use the cached/already-built clang module.",
          "ts": "1654712996.467379",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Kd8j",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "And this is just a dependency that you are using? Is the dependency getting re-built every time? I would expect that it would only be built once and then Swift could use the cached/already-built clang module."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "71e498c3-ad77-4f78-b586-86a4d47fd392",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Right, and that works. However, clean builds are used when switching branches and on CI, so I'm optimizing for those cases. For something so simple this seems a disproportionate amount of time.",
          "ts": "1654713072.640439",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qmaB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Right, and that works. However, clean builds are used when switching branches and on CI, so I'm optimizing for those cases. For something so simple this seems a disproportionate amount of time."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d4f975da-8e99-4e43-b7ff-689c9cbba4b4",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Obj-C's supposed to be fast! :laughing:",
          "ts": "1654713095.374459",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JPFQNX5K"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qHg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Obj-C's supposed to be fast! "
                    },
                    {
                      "type": "emoji",
                      "name": "laughing",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ac89f360-5d3a-4dac-955e-1f20d63f580c",
          "type": "message",
          "user": "U03HWCZ76SD",
          "text": "I just downloaded the SPM package and tried building it locally, it took less than half a second to do a clean build. So, let's see what's going wrong here. Is this a regression or has it always been this slow?",
          "ts": "1654713412.945439",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sAOpn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I just downloaded the SPM package and tried building it locally, it took less than half a second to do a clean build. So, let's see what's going wrong here. Is this a regression or has it always been this slow?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d2b56d47-e313-4c08-9708-e199bfb189ef",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Hard to tell, previous versions of Xcode didn't have the visualizer. And Xcode 14 seems to have broken my ability to open this project in 13, so just a minute.",
          "ts": "1654713580.223969",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "J0x",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hard to tell, previous versions of Xcode didn't have the visualizer. And Xcode 14 seems to have broken my ability to open this project in 13, so just a minute."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "66be050d-94e9-453e-823a-26936fbcca3f",
          "type": "message",
          "user": "U03HWCZ76SD",
          "text": "No worries. Alternatively, would you be willing to run one of these clang invocations from the command line to see how long it takes?",
          "ts": "1654713632.371049",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "f4u",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "No worries. Alternatively, would you be willing to run one of these clang invocations from the command line to see how long it takes?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "72f1d25b-5c5d-4dfc-9f45-999857805576",
          "type": "message",
          "user": "U03HWCZ76SD",
          "text": "Another option: you can submit a question for tomorrow's 1:1 labs. Then we can spend half an hour debugging this over a WebEx call, which might be easier.",
          "ts": "1654713789.491549",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xI9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Another option: you can submit a question for tomorrow's 1:1 labs. Then we can spend half an hour debugging this over a WebEx call, which might be easier."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1204dff9-d5da-48f3-8667-2b0257e67593",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "I requested an open lab for today but was denied since it was a build performance issue. It was supposed to transfer me to another Xcode lab but I haven't heard anything. I'll make a request for the build performance lab tomorrow.",
          "ts": "1654713922.079259",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Wm2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I requested an open lab for today but was denied since it was a build performance issue. It was supposed to transfer me to another Xcode lab but I haven't heard anything. I'll make a request for the build performance lab tomorrow."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3c2d484b-2463-41dc-99bd-bcd870dec60f",
          "type": "message",
          "user": "U03HB5GP894",
          "text": "From my observation, SPM is using modules by default already. With the modules on, it should perform relatively good even the declarations of the categories are over lots of headers. But do note module build might sequentialize the module generation in the beginning of a clean build, so it might not  scale as well with the core count (since you are on a M1 Ultra)",
          "ts": "1654713952.725199",
          "thread_ts": "1654712650.801509",
          "edited": {
            "user": "U03HB5GP894",
            "ts": "1654714223.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "D37",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "From my observation, SPM is using modules by default already. With the modules on, it should perform relatively good even the declarations of the categories are over lots of headers. But do note module build might sequentialize the module generation in the beginning of a clean build, so it might not  scale as well with the core count (since you are on a M1 Ultra)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "338d4fd3-c77b-448b-b28c-b611e8f9bf59",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "I'll gather info again once SPM is done checking out my modules.",
          "ts": "1654713995.719269",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kjp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'll gather info again once SPM is done checking out my modules."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "be4be8e3-f91b-4ac6-8c72-f37d19113e9c",
          "type": "message",
          "user": "U03HB5GP894",
          "text": "Agree with Zoe, visiting a lab or submit a feedback report with detailed build visualization and data will help speed up the conversation.",
          "ts": "1654713996.637429",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Lmr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Agree with Zoe, visiting a lab or submit a feedback report with detailed build visualization and data will help speed up the conversation."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "aad0a6bf-11b5-4e2b-a5b4-d2614141e4bd",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "I'm also tracking overall build weirdness on this project where clean builds can take from 21s to 70s on my Ultra.",
          "ts": "1654714186.333639",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "o+lP/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'm also tracking overall build weirdness on this project where clean builds can take from 21s to 70s on my Ultra."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c7701b76-251e-400a-acdd-18a74b8f3c89",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "For instance, here's one where FBLPromise had parts take over 20s:",
          "ts": "1654714294.942719",
          "thread_ts": "1654712650.801509",
          "files": [
            {
              "id": "F03JURUAE8J",
              "created": 1654714261,
              "timestamp": 1654714261,
              "name": "Screen Shot 2022-06-08 at 2.50.33 PM.png",
              "title": "Screen Shot 2022-06-08 at 2.50.33 PM.png",
              "mimetype": "image/png",
              "image_exif_rotation": 0,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03J22A0C4S",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 2216197,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03JURUAE8J-Screen Shot 2022-06-08 at 2.50.33 PM.png",
              "url_private_download": "C03H0JN431U/F03JURUAE8J-Screen Shot 2022-06-08 at 2.50.33 PM.png",
              "original_h": 2408,
              "original_w": 1986,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JURUAE8J-1c0495a8f0/screen_shot_2022-06-08_at_2.50.33_pm_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JURUAE8J-1c0495a8f0/screen_shot_2022-06-08_at_2.50.33_pm_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JURUAE8J-1c0495a8f0/screen_shot_2022-06-08_at_2.50.33_pm_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JURUAE8J-1c0495a8f0/screen_shot_2022-06-08_at_2.50.33_pm_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 297,
              "thumb_360_h": 360,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JURUAE8J-1c0495a8f0/screen_shot_2022-06-08_at_2.50.33_pm_480.png",
              "thumb_480_w": 396,
              "thumb_480_h": 480,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JURUAE8J-1c0495a8f0/screen_shot_2022-06-08_at_2.50.33_pm_720.png",
              "thumb_720_w": 594,
              "thumb_720_h": 720,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JURUAE8J-1c0495a8f0/screen_shot_2022-06-08_at_2.50.33_pm_960.png",
              "thumb_960_w": 792,
              "thumb_960_h": 960,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JURUAE8J-1c0495a8f0/screen_shot_2022-06-08_at_2.50.33_pm_1024.png",
              "thumb_1024_w": 845,
              "thumb_1024_h": 1024,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03J22A0C4S/F03JURUAE8J/screen_shot_2022-06-08_at_2.50.33_pm.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03JURUAE8J-0c615e605d",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "02JT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "For instance, here's one where FBLPromise had parts take over 20s:"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1d0e92ac-af18-4255-9e3d-5f879d4c900d",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Of course, that seems batched with other commands that also take that long.",
          "ts": "1654714312.562289",
          "thread_ts": "1654712650.801509",
          "edited": {
            "user": "U03J22A0C4S",
            "ts": "1654714343.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "A1Tr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Of course, that seems batched with other commands that also take that long."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "712c5e1e-54ec-4019-a89b-dd4f3f0cec78",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Sorry, can't create a snippet in here.",
          "ts": "1654714369.312869",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "MQjM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sorry, can't create a snippet in here."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d44ae6d8-d008-4448-b5a3-7960ce1fff8b",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "```CompileC /Users/jshier/Library/Developer/Xcode/DerivedData/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj/Build/Intermediates.noindex/Promises.build/Debug-iphonesimulator/FBLPromises.build/Objects-normal/arm64/FBLPromise+Async.o /Users/jshier/Library/Developer/Xcode/DerivedData/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj/SourcePackages/checkouts/promises/Sources/FBLPromises/FBLPromise+Async.m normal arm64 objective-c com.apple.compilers.llvm.clang.1_0.compiler (in target 'FBLPromises' from project 'Promises')\n    cd /Users/jshier/Library/Developer/Xcode/DerivedData/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj/SourcePackages/checkouts/promises\n    /Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -x objective-c -target arm64-apple-ios9.0-simulator -fmessage-length\\=0 -fdiagnostics-show-note-include-stack -fmacro-backtrace-limit\\=0 -fobjc-arc -fmodules -gmodules -fmodules-cache-path\\=/Users/jshier/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -fmodules-prune-interval\\=86400 -fmodules-prune-after\\=345600 -fbuild-session-file\\=/Users/jshier/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -fmodules-validate-once-per-build-session -Wnon-modular-include-in-framework-module -Werror\\=non-modular-include-in-framework-module -fmodule-name\\=FBLPromises -Wno-trigraphs -fpascal-strings -O0 -Wno-missing-field-initializers -Wno-missing-prototypes -Wno-return-type -Wno-implicit-atomic-properties -Wno-objc-interface-ivars -Wno-arc-repeated-use-of-weak -Wno-missing-braces -Wparentheses -Wswitch -Wno-unused-function -Wno-unused-label -Wno-unused-parameter -Wno-unused-variable -Wunused-value -Wno-empty-body -Wno-uninitialized -Wno-unknown-pragmas -Wno-shadow -Wno-four-char-constants -Wno-conversion -Wno-constant-conversion -Wno-int-conversion -Wno-bool-conversion -Wno-enum-conversion -Wno-float-conversion -Wno-non-literal-null-conversion -Wno-objc-literal-conversion -Wshorten-64-to-32 -Wpointer-sign -Wno-newline-eof -Wno-selector -Wno-strict-selector-match -Wno-undeclared-selector -Wno-deprecated-implementations -DSWIFT_PACKAGE -DDEBUG\\=1 -DOBJC_OLD_DISPATCH_PROTOTYPES\\=1 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator16.0.sdk -fstrict-aliasing -Wprotocol -Wdeprecated-declarations -g -Wno-sign-conversion -Wno-infinite-recursion -Wno-comma -Wno-block-capture-autoreleasing -Wno-strict-prototypes -Wno-semicolon-before-method-body -fobjc-abi-version\\=2 -fobjc-legacy-dispatch -index-store-path /Users/jshier/Library/Developer/Xcode/DerivedData/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj/Index/DataStore -I/Users/jshier/Library/Developer/Xcode/DerivedData/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj/Build/Products/Debug-iphonesimulator/include -I/Users/jshier/Library/Developer/Xcode/DerivedData/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj/SourcePackages/checkouts/promises/Sources/FBLPromises/include -I/Users/jshier/Library/Developer/Xcode/DerivedData/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj/Build/Intermediates.noindex/Promises.build/Debug-iphonesimulator/FBLPromises.build/DerivedSources-normal/arm64 -I/Users/jshier/Library/Developer/Xcode/DerivedData/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj/Build/Intermediates.noindex/Promises.build/Debug-iphonesimulator/FBLPromises.build/DerivedSources/arm64 -I/Users/jshier/Library/Developer/Xcode/DerivedData/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj/Build/Intermediates.noindex/Promises.build/Debug-iphonesimulator/FBLPromises.build/DerivedSources -F/Users/jshier/Library/Developer/Xcode/DerivedData/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj/Build/Products/Debug-iphonesimulator -F/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks -iframework /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator16.0.sdk/Developer/Library/Frameworks -DXcode -MMD -MT dependencies -MF /Users/jshier/Library/Developer/Xcode/DerivedData/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj/Build/Intermediates.noindex/Promises.build/Debug-iphonesimulator/FBLPromises.build/Objects-normal/arm64/FBLPromise+Async.d --serialize-diagnostics /Users/jshier/Library/Developer/Xcode/DerivedData/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj/Build/Intermediates.noindex/Promises.build/Debug-iphonesimulator/FBLPromises.build/Objects-normal/arm64/FBLPromise+Async.dia -c /Users/jshier/Library/Developer/Xcode/DerivedData/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj/SourcePackages/checkouts/promises/Sources/FBLPromises/FBLPromise+Async.m -o /Users/jshier/Library/Developer/Xcode/DerivedData/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj/Build/Intermediates.noindex/Promises.build/Debug-iphonesimulator/FBLPromises.build/Objects-normal/arm64/FBLPromise+Async.o -index-unit-output-path /Promises.build/Debug-iphonesimulator/FBLPromises.build/Objects-normal/arm64/FBLPromise+Async.o```",
          "ts": "1654714373.338139",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mp+2A",
              "elements": [
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"CompileC \\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj\\/Build\\/Intermediates.noindex\\/Promises.build\\/Debug-iphonesimulator\\/FBLPromises.build\\/Objects-normal\\/arm64\\/FBLPromise+Async.o \\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj\\/SourcePackages\\/checkouts\\/promises\\/Sources\\/FBLPromises\\/FBLPromise+Async.m normal arm64 objective-c com.apple.compilers.llvm.clang.1_0.compiler (in target 'FBLPromises' from project 'Promises')\\n    cd \\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj\\/SourcePackages\\/checkouts\\/promises\\n    \\/Applications\\/Xcode-beta.app\\/Contents\\/Developer\\/Toolchains\\/XcodeDefault.xctoolchain\\/usr\\/bin\\/clang -x objective-c -target arm64-apple-ios9.0-simulator -fmessage-length\\\\=0 -fdiagnostics-show-note-include-stack -fmacro-backtrace-limit\\\\=0 -fobjc-arc -fmodules -gmodules -fmodules-cache-path\\\\=\\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/ModuleCache.noindex -fmodules-prune-interval\\\\=86400 -fmodules-prune-after\\\\=345600 -fbuild-session-file\\\\=\\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/ModuleCache.noindex\\/Session.modulevalidation -fmodules-validate-once-per-build-session -Wnon-modular-include-in-framework-module -Werror\\\\=non-modular-include-in-framework-module -fmodule-name\\\\=FBLPromises -Wno-trigraphs -fpascal-strings -O0 -Wno-missing-field-initializers -Wno-missing-prototypes -Wno-return-type -Wno-implicit-atomic-properties -Wno-objc-interface-ivars -Wno-arc-repeated-use-of-weak -Wno-missing-braces -Wparentheses -Wswitch -Wno-unused-function -Wno-unused-label -Wno-unused-parameter -Wno-unused-variable -Wunused-value -Wno-empty-body -Wno-uninitialized -Wno-unknown-pragmas -Wno-shadow -Wno-four-char-constants -Wno-conversion -Wno-constant-conversion -Wno-int-conversion -Wno-bool-conversion -Wno-enum-conversion -Wno-float-conversion -Wno-non-literal-null-conversion -Wno-objc-literal-conversion -Wshorten-64-to-32 -Wpointer-sign -Wno-newline-eof -Wno-selector -Wno-strict-selector-match -Wno-undeclared-selector -Wno-deprecated-implementations -DSWIFT_PACKAGE -DDEBUG\\\\=1 -DOBJC_OLD_DISPATCH_PROTOTYPES\\\\=1 -isysroot \\/Applications\\/Xcode-beta.app\\/Contents\\/Developer\\/Platforms\\/iPhoneSimulator.platform\\/Developer\\/SDKs\\/iPhoneSimulator16.0.sdk -fstrict-aliasing -Wprotocol -Wdeprecated-declarations -g -Wno-sign-conversion -Wno-infinite-recursion -Wno-comma -Wno-block-capture-autoreleasing -Wno-strict-prototypes -Wno-semicolon-before-method-body -fobjc-abi-version\\\\=2 -fobjc-legacy-dispatch -index-store-path \\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj\\/Index\\/DataStore -I\\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj\\/Build\\/Products\\/Debug-iphonesimulator\\/include -I\\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj\\/SourcePackages\\/checkouts\\/promises\\/Sources\\/FBLPromises\\/include -I\\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj\\/Build\\/Intermediates.noindex\\/Promises.build\\/Debug-iphonesimulator\\/FBLPromises.build\\/DerivedSources-normal\\/arm64 -I\\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj\\/Build\\/Intermediates.noindex\\/Promises.build\\/Debug-iphonesimulator\\/FBLPromises.build\\/DerivedSources\\/arm64 -I\\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj\\/Build\\/Intermediates.noindex\\/Promises.build\\/Debug-iphonesimulator\\/FBLPromises.build\\/DerivedSources -F\\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj\\/Build\\/Products\\/Debug-iphonesimulator -F\\/Applications\\/Xcode-beta.app\\/Contents\\/Developer\\/Platforms\\/iPhoneSimulator.platform\\/Developer\\/Library\\/Frameworks -iframework \\/Applications\\/Xcode-beta.app\\/Contents\\/Developer\\/Platforms\\/iPhoneSimulator.platform\\/Developer\\/SDKs\\/iPhoneSimulator16.0.sdk\\/Developer\\/Library\\/Frameworks -DXcode -MMD -MT dependencies -MF \\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj\\/Build\\/Intermediates.noindex\\/Promises.build\\/Debug-iphonesimulator\\/FBLPromises.build\\/Objects-normal\\/arm64\\/FBLPromise+Async.d --serialize-diagnostics \\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj\\/Build\\/Intermediates.noindex\\/Promises.build\\/Debug-iphonesimulator\\/FBLPromises.build\\/Objects-normal\\/arm64\\/FBLPromise+Async.dia -c \\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj\\/SourcePackages\\/checkouts\\/promises\\/Sources\\/FBLPromises\\/FBLPromise+Async.m -o \\/Users\\/jshier\\/Library\\/Developer\\/Xcode\\/DerivedData\\/CoinCraft-gwuknzufleeuswameyuiqpvmnuvj\\/Build\\/Intermediates.noindex\\/Promises.build\\/Debug-iphonesimulator\\/FBLPromises.build\\/Objects-normal\\/arm64\\/FBLPromise+Async.o -index-unit-output-path \\/Promises.build\\/Debug-iphonesimulator\\/FBLPromises.build\\/Objects-normal\\/arm64\\/FBLPromise+Async.o\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4fc9d9f1-d216-4578-94e4-eb3083338d35",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Other files from the module took just .3s",
          "ts": "1654714412.595509",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7t5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Other files from the module took just .3s"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3cf3b584-951b-4dbd-b583-98f8313ac352",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "If there are any additional flags I can add for additional build detail, I can investigate in preparation for the lab.",
          "ts": "1654714505.772859",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FPW",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If there are any additional flags I can add for additional build detail, I can investigate in preparation for the lab."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cd4b75a8-5f67-4459-852e-6cb179afe9a0",
          "type": "message",
          "user": "U03HB5GP894",
          "text": "Few things I will suggest to try. Run and time the compile command from terminal (for example, with `time` ) and see if that differs from the visualizer. Do that also after deleting Xcode DerivedData to make sure modules are rebuilt.",
          "ts": "1654714727.062149",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lXY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Few things I will suggest to try. Run and time the compile command from terminal (for example, with "
                    },
                    {
                      "type": "text",
                      "text": "time",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " ) and see if that differs from the visualizer. Do that also after deleting Xcode DerivedData to make sure modules are rebuilt."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f9da23c4-5182-4c40-b336-b093c9fc3b44",
          "type": "message",
          "user": "U03HB5GP894",
          "text": "Another useful flag to peek into time spent inside clang is to use `-ftime-trace` flag or use the timer profiler inside instruments for individual compile command",
          "ts": "1654714846.623469",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AotWg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Another useful flag to peek into time spent inside clang is to use "
                    },
                    {
                      "type": "text",
                      "text": "-ftime-trace",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " flag or use the timer profiler inside instruments for individual compile command"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9cf141ef-3c51-4581-b053-c503f4a20b6c",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Unfortunately clearing derived data also blows away the local SPM cache, so timing the regular build is thrown off by package resolution.",
          "ts": "1654714862.481169",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ibY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Unfortunately clearing derived data also blows away the local SPM cache, so timing the regular build is thrown off by package resolution."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b54d18dd-fd7b-4912-ad1e-bd5848b633a4",
          "type": "message",
          "user": "U03HB5GP894",
          "text": "You can just clear the path pointed by `-fmodules-cache-path`",
          "ts": "1654714916.143549",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6w8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can just clear the path pointed by "
                    },
                    {
                      "type": "text",
                      "text": "-fmodules-cache-path",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "46468859-0d1e-440e-a721-1985f34b43a3",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Building with `xcodebuild` directly shows the same performance differential between subsequent `clean` builds. I don't know what I need to delete to get back to my fast times.",
          "ts": "1654715864.598989",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6KCd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Building with "
                    },
                    {
                      "type": "text",
                      "text": "xcodebuild",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " directly shows the same performance differential between subsequent "
                    },
                    {
                      "type": "text",
                      "text": "clean",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " builds. I don't know what I need to delete to get back to my fast times."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0e58cdf8-7332-4162-a028-8e047639118b",
          "type": "message",
          "user": "U03HB5GP894",
          "text": "How about running each individual `clang` invocation from command-line? Does it match the number you see in timeline?",
          "ts": "1654716189.465369",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qFWp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "How about running each individual "
                    },
                    {
                      "type": "text",
                      "text": "clang",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " invocation from command-line? Does it match the number you see in timeline?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4d674a62-529e-4c24-b27b-986b38fe392b",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Is there a way to extract those commands so they can run by themselves? They seem to depend on a lot of stuff Xcode sets up.",
          "ts": "1654716648.298729",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2BXg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is there a way to extract those commands so they can run by themselves? They seem to depend on a lot of stuff Xcode sets up."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7f1d1d9f-0f4f-4d8f-95cf-131dabd0cc5d",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Well, I can't tell what's going on. What seems to happen is that, since all of these files are interdependent, they all get batched and timed together, even though the total build time for the batch is longer than it should be. So most of the files are shown as taking the time of the whole batch to build. Sometimes (seemingly after most cleans) this batch is broken up so some of these dependent files aren't built soon enough, so the overall build time for some files is huge. It doesn't just happen to this library, it's just most visible. But I can't tell why some files are charged for their batch while others aren't, or what is causing my build time regressions on clean builds. Having to constantly reset my packages isn't helping either.",
          "ts": "1654717259.242259",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JR5s1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Well, I can't tell what's going on. What seems to happen is that, since all of these files are interdependent, they all get batched and timed together, even though the total build time for the batch is longer than it should be. So most of the files are shown as taking the time of the whole batch to build. Sometimes (seemingly after most cleans) this batch is broken up so some of these dependent files aren't built soon enough, so the overall build time for some files is huge. It doesn't just happen to this library, it's just most visible. But I can't tell why some files are charged for their batch while others aren't, or what is causing my build time regressions on clean builds. Having to constantly reset my packages isn't helping either."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3beaa97e-fea5-49bf-a4e1-9fb8d2d0b123",
          "type": "message",
          "user": "U03HB5GP894",
          "text": "You can easily re-run clang commands after the build is finished (and after cleaning up module cache).",
          "ts": "1654717548.940509",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mQ5SV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can easily re-run clang commands after the build is finished (and after cleaning up module cache)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "283b777c-a843-4099-aa54-fe10c75c1903",
          "type": "message",
          "user": "U03HB5GP894",
          "text": "At this point, I will recommend visit our lab tomorrow if you still can't figure out.",
          "ts": "1654717581.477879",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hhrV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "At this point, I will recommend visit our lab tomorrow if you still can't figure out."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b68e8b62-a05f-4924-beab-fd83db55b3f2",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Right. Rerunning them right out of Xcode depends on various cache directories and I'm not sure which to remove to pretend it's a clean build. In any case, I'll try to get a lab time.",
          "ts": "1654717898.971109",
          "thread_ts": "1654712650.801509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "MPzA1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Right. Rerunning them right out of Xcode depends on various cache directories and I'm not sure which to remove to pretend it's a clean build. In any case, I'll try to get a lab time."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bc040b0f-df98-41aa-882b-e8c28949b520",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "Not sure how viable would that be for your use case, but I'd also try integrating the dependency (as maybe all external ones) as a binary package – we've been on that path for some time already \u0026amp; having an option to skip building Facebook, Firebase \u0026amp; other SDKs on different steps (mainly CI where time is really precious) is really a great helper.\n\nAt this point, it's not easy to manage local Swift packages referencing to binary artifacts (worked fine since Xcode 12.5 \u0026amp; 13.x) a bit hacky way, yet it's impossible at this point in Xcode 14, so the only option is fetching it from remote – that means hosting it on your GitHub/GitLab organisation, just a repo with `Package.swift` file referencing the binary stored in Releases/Packages/wherever you choose. :thumbsup:\n\nIf it's possible, I'd like to talk about the local binary package issue with some dev, hopefully I'll catch a proper session here. :smile:",
          "ts": "1654719216.503269",
          "thread_ts": "1654712650.801509",
          "edited": {
            "user": "U03JPFQNX5K",
            "ts": "1654719273.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8OEy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Not sure how viable would that be for your use case, but I'd also try integrating the dependency (as maybe all external ones) as a binary package – we've been on that path for some time already \u0026 having an option to skip building Facebook, Firebase \u0026 other SDKs on different steps (mainly CI where time is really precious) is really a great helper.\n\nAt this point, it's not easy to manage local Swift packages referencing to binary artifacts (worked fine since Xcode 12.5 \u0026 13.x) a bit hacky way, yet it's impossible at this point in Xcode 14, so the only option is fetching it from remote – that means hosting it on your GitHub/GitLab organisation, just a repo with "
                    },
                    {
                      "type": "text",
                      "text": "Package.swift",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " file referencing the binary stored in Releases/Packages/wherever you choose. "
                    },
                    {
                      "type": "emoji",
                      "name": "thumbsup",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\n\nIf it's possible, I'd like to talk about the local binary package issue with some dev, hopefully I'll catch a proper session here. "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ4PT2ER\u003e asked\n\u0026gt; What if the build timeline shows unusually long compile times for a source file when building an app target containing the subtarget, but building the subtarget alone is appropriately fast?",
      "ts": "1654713888.420969",
      "thread_ts": "1654713888.420969",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 30,
      "latest_reply": "1654716747.384289",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "beZ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ4PT2ER"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What if the build timeline shows unusually long compile times for a source file when building an app target containing the subtarget, but building the subtarget alone is appropriately fast?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a5c6a910-95fa-4aa2-9f90-2a18c10db898",
          "type": "message",
          "user": "U03HL5A4YA0",
          "text": "Here are a couple of suggestions for things to look for\n• Could the increased time when built with the rest of the app be related to higher overall system resource contention during the build? You could try to isolate this by copying the command-line used to build the file from the Build Log in the Report Navigator, and executing just that command in Terminal with the `time` utility.\n• It's possible that slightly different command-line arguments could have been used when building the file.  You could look in the Build Log in the Report Navigator for the two different builds and find the file that took a variable amount of time. Are the commands identical, or are there differences in the command-line arguments?\n",
          "ts": "1654713896.671889",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kelL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Here are a couple of suggestions for things to look for\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Could the increased time when built with the rest of the app be related to higher overall system resource contention during the build? You could try to isolate this by copying the command-line used to build the file from the Build Log in the Report Navigator, and executing just that command in Terminal with the \"},{\"type\":\"text\",\"text\":\"time\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" utility.\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"It's possible that slightly different command-line arguments could have been used when building the file.  You could look in the Build Log in the Report Navigator for the two different builds and find the file that took a variable amount of time. Are the commands identical, or are there differences in the command-line arguments?\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": []
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e0b6f322-0b14-412f-9ae8-04fb405a5ea5",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "Can resource contention really block a 200 line file for ~22s?",
          "ts": "1654714086.192319",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "V19v",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Can resource contention really block a 200 line file for ~22s?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8ce70e80-0b2c-467b-b3ce-a0c6ab9316e4",
          "type": "message",
          "user": "U03HL5A4YA0",
          "text": "It's possible, but if that is significantly slower than building the target in isolation and the overall machine still seems responsive during this time you could start with the other suggestion to compare compiler arguments.",
          "ts": "1654714216.209469",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fI8e2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It's possible, but if that is significantly slower than building the target in isolation and the overall machine still seems responsive during this time you could start with the other suggestion to compare compiler arguments."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2211cdb0-a1b7-49e0-a7be-a67f8358445b",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "For supertarget = ~22s, alone = ~0.1s",
          "ts": "1654714243.345659",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "q9kN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "For supertarget = ~22s, alone = ~0.1s"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f5a475b0-c477-49e7-9646-b0ee58639415",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "Comparing arguments now",
          "ts": "1654714257.208279",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HL5A4YA0"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "U=Ly",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Comparing arguments now"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "498db2b6-48f4-41a8-8f32-adfb5c053ca7",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "Looks like the supertarget adds another `-I`, and `-ivfsoverlay` with a yaml file",
          "ts": "1654714510.813819",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jDFV9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Looks like the supertarget adds another "
                    },
                    {
                      "type": "text",
                      "text": "-I",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", and "
                    },
                    {
                      "type": "text",
                      "text": "-ivfsoverlay",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " with a yaml file"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f067c26b-4555-4832-a13b-3455e37e38c3",
          "type": "message",
          "user": "U03J4DJHVL3",
          "text": "related question, I tested out the xcode beta and couldn’t find build timeline… how do you access that?",
          "ts": "1654714512.175579",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zU1Y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "related question, I tested out the xcode beta and couldn’t find build timeline… how do you access that?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "775a3350-c4f1-4e69-b139-d5fd0f636593",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "Right click on a line in the build log",
          "ts": "1654714525.931559",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J4DJHVL3"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "DIave",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Right click on a line in the build log"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dbbecfac-5d6a-4d88-9f3f-f9fa2c0a0f14",
          "type": "message",
          "user": "U03HL5A4YA0",
          "text": "\u0026gt; Looks like the supertarget adds another `-I`, and `-ivfsoverlay` with a yaml file\nInteresting. Are you about to run those two different commands from Terminal? Does that reproduce the performance issue?",
          "ts": "1654714775.286259",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/1jQO",
              "elements": [
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Looks like the supertarget adds another \"},{\"type\":\"text\",\"text\":\"-I\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\", and \"},{\"type\":\"text\",\"text\":\"-ivfsoverlay\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" with a yaml file\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Interesting. Are you about to run those two different commands from Terminal? Does that reproduce the performance issue?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "90aec970-68fe-4d96-be8c-0b3084df3a5a",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "Looks like it's waiting for all the other source files to finish?",
          "ts": "1654714895.898339",
          "thread_ts": "1654713888.420969",
          "files": [
            {
              "id": "F03K7HJPH7B",
              "created": 1654714885,
              "timestamp": 1654714885,
              "name": "Screen Shot 2022-06-08 at 2.57.00 PM.png",
              "title": "Screen Shot 2022-06-08 at 2.57.00 PM.png",
              "mimetype": "image/png",
              "image_exif_rotation": 1,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03HZ4PT2ER",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 693056,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03K7HJPH7B-Screen Shot 2022-06-08 at 2.57.00 PM.png",
              "url_private_download": "C03H0JN431U/F03K7HJPH7B-Screen Shot 2022-06-08 at 2.57.00 PM.png",
              "original_h": 1012,
              "original_w": 950,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K7HJPH7B-080f6a5cb9/screen_shot_2022-06-08_at_2.57.00_pm_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K7HJPH7B-080f6a5cb9/screen_shot_2022-06-08_at_2.57.00_pm_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K7HJPH7B-080f6a5cb9/screen_shot_2022-06-08_at_2.57.00_pm_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K7HJPH7B-080f6a5cb9/screen_shot_2022-06-08_at_2.57.00_pm_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 338,
              "thumb_360_h": 360,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K7HJPH7B-080f6a5cb9/screen_shot_2022-06-08_at_2.57.00_pm_480.png",
              "thumb_480_w": 451,
              "thumb_480_h": 480,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K7HJPH7B-080f6a5cb9/screen_shot_2022-06-08_at_2.57.00_pm_720.png",
              "thumb_720_w": 676,
              "thumb_720_h": 720,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K7HJPH7B-080f6a5cb9/screen_shot_2022-06-08_at_2.57.00_pm_960.png",
              "thumb_960_w": 901,
              "thumb_960_h": 960,
              "thumb_1024": "",
              "thumb_1024_w": 0,
              "thumb_1024_h": 0,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03HZ4PT2ER/F03K7HJPH7B/screen_shot_2022-06-08_at_2.57.00_pm.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03K7HJPH7B-b142801102",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "moVwA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Looks like it's waiting for all the other source files to finish?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0fe6f9e0-c74a-406d-8d44-22a271b4a315",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "I assume this virtual filesystem overlay is doing something",
          "ts": "1654714923.906029",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "K=d",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I assume this virtual filesystem overlay is doing something"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3bc4bf02-6762-41ed-ad97-855545399350",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "By the way, this is a qlgenerator in a macOS app",
          "ts": "1654714948.308099",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gezf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "By the way, this is a qlgenerator in a macOS app"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9e836805-537d-4cd5-8f43-c4ef774ea952",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "The two commands don't take the same amount of time in isolation using `time(1)`. Supertarget = 1.758s, alone = 0.136s",
          "ts": "1654715076.331399",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "enjnr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The two commands don't take the same amount of time in isolation using "
                    },
                    {
                      "type": "text",
                      "text": "time(1)",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". Supertarget = 1.758s, alone = 0.136s"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "57484b57-584b-42bf-9803-74544d2be68a",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "Solved it",
          "ts": "1654715600.659029",
          "thread_ts": "1654713888.420969",
          "files": [
            {
              "id": "F03JV01PG8J",
              "created": 1654715594,
              "timestamp": 1654715594,
              "name": "Screen Shot 2022-06-08 at 3.12.05 PM.png",
              "title": "Screen Shot 2022-06-08 at 3.12.05 PM.png",
              "mimetype": "image/png",
              "image_exif_rotation": 1,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03HZ4PT2ER",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 637359,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03JV01PG8J-Screen Shot 2022-06-08 at 3.12.05 PM.png",
              "url_private_download": "C03H0JN431U/F03JV01PG8J-Screen Shot 2022-06-08 at 3.12.05 PM.png",
              "original_h": 1058,
              "original_w": 860,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV01PG8J-1797b7a54d/screen_shot_2022-06-08_at_3.12.05_pm_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV01PG8J-1797b7a54d/screen_shot_2022-06-08_at_3.12.05_pm_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV01PG8J-1797b7a54d/screen_shot_2022-06-08_at_3.12.05_pm_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV01PG8J-1797b7a54d/screen_shot_2022-06-08_at_3.12.05_pm_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 293,
              "thumb_360_h": 360,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV01PG8J-1797b7a54d/screen_shot_2022-06-08_at_3.12.05_pm_480.png",
              "thumb_480_w": 390,
              "thumb_480_h": 480,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV01PG8J-1797b7a54d/screen_shot_2022-06-08_at_3.12.05_pm_720.png",
              "thumb_720_w": 585,
              "thumb_720_h": 720,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV01PG8J-1797b7a54d/screen_shot_2022-06-08_at_3.12.05_pm_960.png",
              "thumb_960_w": 780,
              "thumb_960_h": 960,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV01PG8J-1797b7a54d/screen_shot_2022-06-08_at_3.12.05_pm_1024.png",
              "thumb_1024_w": 832,
              "thumb_1024_h": 1024,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03HZ4PT2ER/F03JV01PG8J/screen_shot_2022-06-08_at_3.12.05_pm.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03JV01PG8J-2d88c16576",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+Jw9B",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Solved it"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c2dd5286-550a-45a7-a417-9c6052d56bdc",
          "type": "message",
          "user": "U03HL5A4YA0",
          "text": "What turned out to be the issue?",
          "ts": "1654715628.191339",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AhL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "What turned out to be the issue?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b0506eea-4676-4623-9adf-bdf5fdca4609",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "Still a bug in the build system I think, but the subtargets are old and came with PCHs from the template",
          "ts": "1654715632.991349",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ozm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Still a bug in the build system I think, but the subtargets are old and came with PCHs from the template"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2cd27c27-5079-4def-a4a5-2fc1cb398ac4",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "We use some in some targets but these were empty",
          "ts": "1654715644.269069",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "QEVs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We use some in some targets but these were empty"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7fe5c997-3680-47f4-9110-36b1dffa43ef",
          "type": "message",
          "user": "U03HL5A4YA0",
          "text": "To confirm: disabling Precompiled headers was the fix?",
          "ts": "1654715669.796569",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "V4Y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "To confirm: disabling Precompiled headers was the fix?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "46f1e19b-fc1a-4198-924a-85c4229f76c9",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "I noticed the build log had the PCH mentioned two or three times in each subtarget, even though precompile was turned on",
          "ts": "1654715696.897049",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vbpf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I noticed the build log had the PCH mentioned two or three times in each subtarget, even though precompile was turned on"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "929ea963-22c4-4453-b4a0-2dd247cebf69",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "since we're not using these, I just removed them from the build settings",
          "ts": "1654715712.606809",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qz9FV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "since we're not using these, I just removed them from the build settings"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e37afc13-6abb-4a7a-862a-d25f352002cd",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "Still a strange behavior, empty PCHs shouldn't cause this, esp if they're being precompiled",
          "ts": "1654715754.500979",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+uW",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Still a strange behavior, empty PCHs shouldn't cause this, esp if they're being precompiled"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d2c47db7-24e1-4313-aeb2-969dffef0978",
          "type": "message",
          "user": "U03HL5A4YA0",
          "text": "Thanks for following up!\n\nIt would be good to capture this issue in a Feedback report, where we can investigate in more depth what is going on.  Here are some details that would be helpful to include in the Feedback\n• The Build Logs (showing the exact command-line arguments) and the build timelines for the two builds that differ\n• Your findings RE: precompiled headers\n• If you can capture a `spindump` while the slow compilation is happening (E.g. Activity Monitor \u0026gt; Select Process \u0026gt; Spindump)\n• If possible, attaching the project that reproduced the issue (I understand this is not always possible).",
          "ts": "1654715917.022269",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oU9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for following up!\n\nIt would be good to capture this issue in a Feedback report, where we can investigate in more depth what is going on.  Here are some details that would be helpful to include in the Feedback\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"The Build Logs (showing the exact command-line arguments) and the build timelines for the two builds that differ\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Your findings RE: precompiled headers\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"If you can capture a \"},{\"type\":\"text\",\"text\":\"spindump\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" while the slow compilation is happening (E.g. Activity Monitor \u003e Select Process \u003e Spindump)\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"If possible, attaching the project that reproduced the issue (I understand this is not always possible).\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7e0bb770-8504-4b50-8e41-2a073ae397a8",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "\u003c@U03HL5A4YA0\u003e Should this be happening?",
          "ts": "1654716265.886789",
          "thread_ts": "1654713888.420969",
          "files": [
            {
              "id": "F03JV1R376E",
              "created": 1654716263,
              "timestamp": 1654716263,
              "name": "PCHs.png",
              "title": "PCHs.png",
              "mimetype": "image/png",
              "image_exif_rotation": 1,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03HZ4PT2ER",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 79905,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03JV1R376E-PCHs.png",
              "url_private_download": "C03H0JN431U/F03JV1R376E-PCHs.png",
              "original_h": 336,
              "original_w": 1050,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV1R376E-0c4c526408/pchs_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV1R376E-0c4c526408/pchs_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV1R376E-0c4c526408/pchs_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV1R376E-0c4c526408/pchs_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 360,
              "thumb_360_h": 115,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV1R376E-0c4c526408/pchs_480.png",
              "thumb_480_w": 480,
              "thumb_480_h": 154,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV1R376E-0c4c526408/pchs_720.png",
              "thumb_720_w": 720,
              "thumb_720_h": 230,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV1R376E-0c4c526408/pchs_960.png",
              "thumb_960_w": 960,
              "thumb_960_h": 307,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JV1R376E-0c4c526408/pchs_1024.png",
              "thumb_1024_w": 1024,
              "thumb_1024_h": 328,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03HZ4PT2ER/F03JV1R376E/pchs.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03JV1R376E-e8eb99567a",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "y9Bw5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HL5A4YA0"
                    },
                    {
                      "type": "text",
                      "text": " Should this be happening?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f8c81eeb-f119-43a1-94fa-662f9312f13b",
          "type": "message",
          "user": "U03HL5A4YA0",
          "text": "Not sure what you mean - if you disabled \"Precompile Prefix Header\" for the target, then no.",
          "ts": "1654716362.272339",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XsO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Not sure what you mean - if you disabled \"Precompile Prefix Header\" for the target, then no."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "42b8edbc-bb43-4b8e-9d76-482d0234ae1a",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "I'm referring to the multiple precompiles in a single pass for a single target",
          "ts": "1654716387.998959",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wdb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'm referring to the multiple precompiles in a single pass for a single target"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "65a42373-c708-4d23-850d-f77f6b07dc82",
          "type": "message",
          "user": "U03HL5A4YA0",
          "text": "I believe that happens when the same prefix header is used from files that require different compiler arguments that would affect how the PCH is built.  For example, if you create a `.m` file and `.cpp` file in the same target, they require separate builds of the precompiled header",
          "ts": "1654716638.937689",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "IZJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I believe that happens when the same prefix header is used from files that require different compiler arguments that would affect how the PCH is built.  For example, if you create a "
                    },
                    {
                      "type": "text",
                      "text": ".m",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " file and "
                    },
                    {
                      "type": "text",
                      "text": ".cpp",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " file in the same target, they require separate builds of the precompiled header"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d0ed649f-df8c-4364-878a-ed0be68d4e90",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "I see, so if we have ARC and MRR, those are separate",
          "ts": "1654716662.426799",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "I4ajL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I see, so if we have ARC and MRR, those are separate"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4ed1c2fb-0ac9-43cb-b839-5ff1371ad13d",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "I wonder what the third is",
          "ts": "1654716667.956759",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GxE4O",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I wonder what the third is"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b311e47d-c402-4d44-a541-1996462de34a",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "thanks again",
          "ts": "1654716674.110329",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tE7",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "thanks again"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3d48aeb8-dbea-432d-9ea5-e9c7c3a2463f",
          "type": "message",
          "user": "U03HL5A4YA0",
          "text": "Correct, `-fobjc-arc` will affect how the PCH is built, so it needs to build it twice",
          "ts": "1654716747.384289",
          "thread_ts": "1654713888.420969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "s+2l",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Correct, "
                    },
                    {
                      "type": "text",
                      "text": "-fobjc-arc",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " will affect how the PCH is built, so it needs to build it twice"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JFEZ9BJR\u003e asked\n\u0026gt; We Are working which is quite old. It has combination of objective c , c ++, Swift and even Swift ui now. It  had good compile time on Xcode 12. But performance has really degraded with Xcode 13. I have actually stopped indexing of project. I have using m1 MacBook Pro with 16 G-Block memory. It there something u can suggest which will help us in reducing our compile time.  We also use git for version control.",
      "ts": "1654713904.662679",
      "thread_ts": "1654713904.662679",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 16,
      "latest_reply": "1654715990.860059",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "l2l",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JFEZ9BJR"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We Are working which is quite old. It has combination of objective c , c ++, Swift and even Swift ui now. It  had good compile time on Xcode 12. But performance has really degraded with Xcode 13. I have actually stopped indexing of project. I have using m1 MacBook Pro with 16 G-Block memory. It there something u can suggest which will help us in reducing our compile time.  We also use git for version control.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "15e5a599-5ca2-476d-b99a-c765912e78ce",
          "type": "message",
          "user": "U03HWCZES3T",
          "text": "Xcode 14 includes a new build time visualizer for build logs that focuses on parallelism to help identify build performance issues. To view it go to the build log of your project, then select ‘Xcode menu -\u0026gt; Editor -\u0026gt; Assistant’; this should give you detailed information about where the time is spent during a build.\n\nIt is also useful to try your project with Xcode 14 to see if the build performance has improved on your project, since Xcode 14 also includes build improvements.",
          "ts": "1654713940.083239",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JFEZ9BJR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tJ01q",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Xcode 14 includes a new build time visualizer for build logs that focuses on parallelism to help identify build performance issues. To view it go to the build log of your project, then select ‘Xcode menu -\u003e Editor -\u003e Assistant’; this should give you detailed information about where the time is spent during a build.\n\nIt is also useful to try your project with Xcode 14 to see if the build performance has improved on your project, since Xcode 14 also includes build improvements."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "CEE54728-090A-4865-91F8-CF4D58DF25F5",
          "type": "message",
          "user": "U03JFEZ9BJR",
          "text": "I have downloaded beta version of Xcode 14. I will check that out for sure.thanks ",
          "ts": "1654714330.315669",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "njpa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "have"
                    },
                    {
                      "type": "text",
                      "text": " downloaded "
                    },
                    {
                      "type": "text",
                      "text": "beta"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "version"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Xcode"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "14."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "will"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "check"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "out"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "sure."
                    },
                    {
                      "type": "text",
                      "text": "t"
                    },
                    {
                      "type": "text",
                      "text": "hanks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b3c9ca05-4265-4646-907b-b3e838e31641",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "Just tried that here in my own project - Nothing shows up (except for “No Assistant results”)",
          "ts": "1654714472.191629",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rYB0i",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Just tried that here in my own project - Nothing shows up (except for “No Assistant results”)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "606a7db0-06b9-422c-bc2e-a5b972c5a5dd",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Click it again, it sometimes doesn't load it immediately.",
          "ts": "1654714537.509059",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zTER",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Click it again, it sometimes doesn't load it immediately."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "28b83d21-757a-4776-b84e-de94f26f0c95",
          "type": "message",
          "user": "U03HWCZES3T",
          "text": "also note clicking on an individual entry in the build log makes the visualizer to jump there, but if the entry is not included in the visualizer then you see “no results”. Try clicking on the top “Prepare build” entry",
          "ts": "1654714674.470189",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Sut",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "also note clicking on an individual entry in the build log makes the visualizer to jump there, but if the entry is not included in the visualizer then you see “no results”. Try clicking on the top “Prepare build” entry"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4cd9d681-fe77-44d6-8866-73ab22194a34",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "Nope :disappointed: . Intel MB Pro BTW - Its not Apple Silicon only is it?",
          "ts": "1654714862.395529",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=fI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Nope "
                    },
                    {
                      "type": "emoji",
                      "name": "disappointed",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " . Intel MB Pro BTW - Its not Apple Silicon only is it?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7782b514-f94e-441c-a2eb-5347b075ffcd",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "Ahh - OK it started working once I clicked an individual entry",
          "ts": "1654714901.319509",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eDWTF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ahh - OK it started working once I clicked an individual entry"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a4f15515-6633-4443-81cf-e74d1a170553",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "It looks really useful. Any way to zoom out, even if individual items become unreadable?",
          "ts": "1654715087.075399",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gm+Fq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It looks really useful. Any way to zoom out, even if individual items become unreadable?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fc7d3551-a17c-44b9-9752-ecf3a27bd2c3",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Hold option and scroll.",
          "ts": "1654715103.294389",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VRaC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hold option and scroll."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4ba3ace0-601c-4665-9656-5de269dc581a",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "It works like the Instruments graphs.",
          "ts": "1654715110.673239",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "SwdP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It works like the Instruments graphs."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "adb5198f-aafa-4c88-acd7-ce95418d8eb0",
          "type": "message",
          "user": "U03J2842ALS",
          "text": "Some general strategies, having gone through the same on a large project:\n• Reduce Objective-C importing -Swift.h header\n• Create Objective-C shims for Swift classes, so if you have Swift code used in a lot of Objective-C you only import the Objective-C shim rather than the Swift header\n• Reduce Objective-C in your bridging header",
          "ts": "1654715134.482919",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JbTfk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Some general strategies, having gone through the same on a large project:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Reduce Objective-C importing -Swift.h header\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Create Objective-C shims for Swift classes, so if you have Swift code used in a lot of Objective-C you only import the Objective-C shim rather than the Swift header\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Reduce Objective-C in your bridging header\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3d89ab86-a8c2-406f-a0ad-00b8613c222d",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "Option scroll:+1:I was thinking of shrinking vertically too.",
          "ts": "1654715202.663769",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "802",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Option scroll"
                    },
                    {
                      "type": "emoji",
                      "name": "+1",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "I was thinking of shrinking vertically too."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "D21C3DEC-4567-42CA-A4CA-478D4556ECB9",
          "type": "message",
          "user": "U03JFEZ9BJR",
          "text": "Real eye opener to see the visualiser. Thanks \u003c@U03HWCZES3T\u003e ",
          "ts": "1654715311.314989",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uy9su",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Real"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "eye"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "opener"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "see"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "visualiser."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Thanks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HWCZES3T"
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "56141bf4-dc20-4a3a-935d-df177ae98fba",
          "type": "message",
          "user": "U03HWCZES3T",
          "text": "Glad to help! For related build performance issues with Xcode 14 I highly recommend filing feedback reports that include build visualizations, so we can follow-up with you with the specifics of your project.",
          "ts": "1654715538.396159",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YiDXi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Glad to help! For related build performance issues with Xcode 14 I highly recommend filing feedback reports that include build visualizations, so we can follow-up with you with the specifics of your project."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "44C2D5C0-B977-423A-82F3-8BDCB3834C0E",
          "type": "message",
          "user": "U03JFEZ9BJR",
          "text": "Any labs u can recommend?",
          "ts": "1654715853.038249",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Q6PoR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Any"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "labs"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "u"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "can"
                    },
                    {
                      "type": "text",
                      "text": " recommend"
                    },
                    {
                      "type": "text",
                      "text": "?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a8ab3f46-51bd-4a0c-b70f-09f5f7d96d11",
          "type": "message",
          "user": "U03HWCZES3T",
          "text": "there’s “Xcode build performance lab” on Thursday",
          "ts": "1654715990.860059",
          "thread_ts": "1654713904.662679",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JFEZ9BJR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "G4VDi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "there’s “Xcode build performance lab” on Thursday"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JM92AMJ5\u003e asked\n\u0026gt; Are this year's linking improvements related to Swift-only codebases or should we see observe reduced linking time in mixed codebases (including objc++/c++) as well?",
      "ts": "1654715578.290709",
      "thread_ts": "1654715578.290709",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654715838.346079",
      "reactions": [
        {
          "name": "+1",
          "count": 2,
          "users": [
            "U03JA49DP9R",
            "U03JPFQNX5K"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "7Ml",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JM92AMJ5"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Are this year's linking improvements related to Swift-only codebases or should we see observe reduced linking time in mixed codebases (including objc++\\/c++) as well?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "9906a3b7-af71-462a-8e57-82a151903744",
          "type": "message",
          "user": "U03HHP6TTKM",
          "text": "The build time performance improvements in linking this year are mostly language independent, so you should see improvement in mixed codebases. The exact improvement will depend on the structure of your code. In particular, the way you use static libraries may greatly impact how much of an improvement you see.\n\nThe runtime dynamic linker improvements this year focus on Swift, but if you build with a new enough deployment target to take advantage of page in linking you should see some improvements for all types of code.\n\nFor more info please check out this years talk: \u003chttps://developer.apple.com/wwdc22/110362\u003e",
          "ts": "1654715838.346079",
          "thread_ts": "1654715578.290709",
          "attachments": [
            {
              "fallback": "Apple Developer: Link fast: Improve build and launch times - WWDC22 - Videos - Apple Developer",
              "id": 1,
              "title": "Link fast: Improve build and launch times - WWDC22 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/wwdc22/110362",
              "text": "Discover how to improve your app's build and runtime linking performance. We'll take you behind the scenes to learn more about linking,...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/124/6716/6716_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/wwdc22/110362",
              "original_url": "https://developer.apple.com/wwdc22/110362",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JFEZ9BJR",
                "U03JM92AMJ5"
              ]
            },
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03JM92AMJ5"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qOd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The build time performance improvements in linking this year are mostly language independent, so you should see improvement in mixed codebases. The exact improvement will depend on the structure of your code. In particular, the way you use static libraries may greatly impact how much of an improvement you see.\n\nThe runtime dynamic linker improvements this year focus on Swift, but if you build with a new enough deployment target to take advantage of page in linking you should see some improvements for all types of code.\n\nFor more info please check out this years talk: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc22/110362",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HTE8C8G7\u003e asked\n\u0026gt; Are there any improvements to PCH generation/use? It kind of looks like the clang pch don’t quite instantiate templates when generating them, so adding templates code to pch tends to pessimise build times. The performance profile is quite different compared to $COMPILER.\n\u0026gt; \n\u0026gt; Is the build time visualiser based on -ftime-report, or is it “just” the build system timings?",
      "ts": "1654715811.497509",
      "thread_ts": "1654715811.497509",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654857922.292259",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Zwj",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HTE8C8G7"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Are there any improvements to PCH generation\\/use? It kind of looks like the clang pch don\\u2019t quite instantiate templates when generating them, so adding templates code to pch tends to pessimise build times. The performance profile is quite different compared to $COMPILER.\\n\\nIs the build time visualiser based on -ftime-report, or is it \\u201cjust\\u201d the build system timings?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "1f4c8d5f-b688-40cc-9eca-72a40a81a48f",
          "type": "message",
          "user": "U03HL5A25FW",
          "text": "There are no changes in PCH generation/use. Do you have specific improvements in mind? Also you can always provide your suggestions through a feedback report.\nAs for the templates, you are correct, they are not instantiated until they are used. And if they are not used in PCH, it doesn't improve the instantiation time. Have you tried explicit template instantiation in PCH? Does it improve the build time?\nBuild time report doesn't take into account -ftime-report. You can still add the flag yourself and check the generated timing reports.",
          "ts": "1654715964.102179",
          "thread_ts": "1654715811.497509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Rkqf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There are no changes in PCH generation/use. Do you have specific improvements in mind? Also you can always provide your suggestions through a feedback report.\nAs for the templates, you are correct, they are not instantiated until they are used. And if they are not used in PCH, it doesn't improve the instantiation time. Have you tried explicit template instantiation in PCH? Does it improve the build time?\nBuild time report doesn't take into account -ftime-report. You can still add the flag yourself and check the generated timing reports."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "386dd4c1-8f21-4106-85de-c9c7b7233e55",
          "type": "message",
          "user": "U03HTE8C8G7",
          "text": "Haven’t done too deep exploration on the instantiation issue, analysing build times is a thankless job as it takes a long time to get any results, and separating signal from the noise is hard.\n\nWhich reminds me, when using `-ftime-report`, comparing two results from a bigger build job on a M1 is useless, as sometimes the timing can be from a performance core, and sometimes effeciency. Is there a way to peg a process, like `xcodebuild` and all its children processes to a certain type of a core?",
          "ts": "1654716604.226279",
          "thread_ts": "1654715811.497509",
          "edited": {
            "user": "U03HTE8C8G7",
            "ts": "1654716629.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4B7",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Haven’t done too deep exploration on the instantiation issue, analysing build times is a thankless job as it takes a long time to get any results, and separating signal from the noise is hard.\n\nWhich reminds me, when using "
                    },
                    {
                      "type": "text",
                      "text": "-ftime-report",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", comparing two results from a bigger build job on a M1 is useless, as sometimes the timing can be from a performance core, and sometimes effeciency. Is there a way to peg a process, like "
                    },
                    {
                      "type": "text",
                      "text": "xcodebuild",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and all its children processes to a certain type of a core?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6132dfbe-81b6-482a-8d3d-51afca98c64f",
          "type": "message",
          "user": "U03HL5A25FW",
          "text": "I don't know off top of my head about any mechanism for pegging a process to a certain type of a core. Let me ask around.",
          "ts": "1654716800.419089",
          "thread_ts": "1654715811.497509",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "bow",
              "count": 1,
              "users": [
                "U03HTE8C8G7"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/8cx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I don't know off top of my head about any mechanism for pegging a process to a certain type of a core. Let me ask around."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "10c13016-bcb6-4edb-851d-f2824599c7ff",
          "type": "message",
          "user": "U03HL5A25FW",
          "text": "And I totally agree that comparing results for the same file from different cores is frustrating. So close but not actionable.",
          "ts": "1654717034.845169",
          "thread_ts": "1654715811.497509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Lm3R",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "And I totally agree that comparing results for the same file from different cores is frustrating. So close but not actionable."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "75a755f0-0116-48b7-8748-3ec4063fcc99",
          "type": "message",
          "user": "U03HL5A25FW",
          "text": "Looks like you can try `taskpolicy` tool. Specifically force a process into the background to achieve consistent results. Other than that there are no guaranteed ways to force usage of a specific core type.",
          "ts": "1654717998.320539",
          "thread_ts": "1654715811.497509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=K3d",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Looks like you can try "
                    },
                    {
                      "type": "text",
                      "text": "taskpolicy",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " tool. Specifically force a process into the background to achieve consistent results. Other than that there are no guaranteed ways to force usage of a specific core type."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e2473302-f97e-4a53-90a4-aef9cfbca954",
          "type": "message",
          "user": "U03HTE8C8G7",
          "text": "Ah, sounds a bit slow, but I suppose better than useless timing diffs :slightly_smiling_face:\nSo I guess clamping to background QoS never chooses performance cores then",
          "ts": "1654718353.410409",
          "thread_ts": "1654715811.497509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "iP9+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ah, sounds a bit slow, but I suppose better than useless timing diffs "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\nSo I guess clamping to background QoS never chooses performance cores then"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "834d535d-845d-4203-b3d1-ae0679f393d0",
          "type": "message",
          "user": "U03HTE8C8G7",
          "text": "Thank you! :slightly_smiling_face:",
          "ts": "1654718414.625589",
          "thread_ts": "1654715811.497509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "THH3j",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you! "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "54b88b51-69a4-4fa8-8ebb-1429018a6711",
          "type": "message",
          "user": "U03HTE8C8G7",
          "text": "Bah, someone pointed out to me `-fpch-instantiate-templates`, which would then instantiate the templates in pch, time to experiment!",
          "ts": "1654857922.292259",
          "thread_ts": "1654715811.497509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tjs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Bah, someone pointed out to me "
                    },
                    {
                      "type": "text",
                      "text": "-fpch-instantiate-templates",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", which would then instantiate the templates in pch, time to experiment!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JA49DP9R\u003e asked\n\u0026gt; We have a large project written in C++ and Objective-C++ (and Kotlin and Typescript for Android and Web) and the artifacts we produce are XCFrameworks. We use CMake to generate the project (it’s the tool our C++ devs are using). We would like to embed some Swift inside to provide a more modern API to our Swift customers. With CMake we were not able to do that. Do you recommend any other tool for generating the Xcode project? Or do you have tips for CMake? Do you guys at Apple have an xcodeproj file in your fit repo? :smile: ",
      "ts": "1654715857.363349",
      "thread_ts": "1654715857.363349",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654716134.743289",
      "reactions": [
        {
          "name": "heart",
          "count": 1,
          "users": [
            "U03K7LKLB3K"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "5X0qc",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JA49DP9R"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We have a large project written in C++ and Objective-C++ (and Kotlin and Typescript for Android and Web) and the artifacts we produce are XCFrameworks. We use CMake to generate the project (it\\u2019s the tool our C++ devs are using). We would like to embed some Swift inside to provide a more modern API to our Swift customers. With CMake we were not able to do that. Do you recommend any other tool for generating the Xcode project? Or do you have tips for CMake? Do you guys at Apple have an xcodeproj file in your fit repo? \"},{\"type\":\"emoji\",\"name\":\"smile\"},{\"type\":\"text\",\"text\":\" \"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6d1fc2d1-55f9-44f8-b8e4-45b5adaa45f5",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "The easiest answer here is that `cmake` very recently added support for Swift if you’re willing to live on a nightly `cmake` build",
          "ts": "1654716002.694989",
          "thread_ts": "1654715857.363349",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03J2842ALS",
                "U03JSFUKL2U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "M1FI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The easiest answer here is that "
                    },
                    {
                      "type": "text",
                      "text": "cmake",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " very recently added support for Swift if you’re willing to live on a nightly "
                    },
                    {
                      "type": "text",
                      "text": "cmake",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " build"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a1830649-66a7-4682-a12e-8a5df6b370a9",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "Check out \u003chttps://forums.swift.org/t/announcing-swift-support-in-cmake/24792\u003e",
          "ts": "1654716007.214759",
          "thread_ts": "1654715857.363349",
          "attachments": [
            {
              "fallback": "Swift Forums: Announcing Swift support in CMake",
              "id": 1,
              "title": "Announcing Swift support in CMake",
              "title_link": "https://forums.swift.org/t/announcing-swift-support-in-cmake/24792",
              "text": "Hello again fellow Swift users, I know that build systems are generally contentious and inspire heated discussions. I do really hope that people will be kind enough to NOT derail this thread into discussions of build systems and the merits and demerits of CMake. There are existing projects which use CMake and this can be valuable for them. I am in no way instructing that this be the way that everyone builds their software. Over the past few years, CMake has really gained a significant amoun...",
              "thumb_url": "https://aws1.discourse-cdn.com/swift/original/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6.png",
              "service_name": "Swift Forums",
              "service_icon": "https://aws1.discourse-cdn.com/swift/optimized/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6_2_180x180.png",
              "from_url": "https://forums.swift.org/t/announcing-swift-support-in-cmake/24792",
              "original_url": "https://forums.swift.org/t/announcing-swift-support-in-cmake/24792",
              "fields": [
                {
                  "title": "Reading time",
                  "value": "1 mins :clock2:",
                  "short": true
                },
                {
                  "title": "Likes",
                  "value": "97 :heart:",
                  "short": true
                }
              ],
              "blocks": null,
              "ts": 1558629388
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JA49DP9R"
              ]
            },
            {
              "name": "crossed_fingers",
              "count": 1,
              "users": [
                "U03JA49DP9R"
              ]
            },
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JA49DP9R"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "WFb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Check out "
                    },
                    {
                      "type": "link",
                      "url": "https://forums.swift.org/t/announcing-swift-support-in-cmake/24792",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "eb7d1fc2-7530-4f72-b2fe-cda3a2778831",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "We (and Saleem in open source) are very interested in making that a seamless experience, so if that isn’t working well for you, please engage there",
          "ts": "1654716075.149419",
          "thread_ts": "1654715857.363349",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JEAD3SQ7"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tC546",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We (and Saleem in open source) are very interested in making that a seamless experience, so if that isn’t working well for you, please engage there"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3ABEDE35-22A5-4B7F-91A7-9E472BC6BE46",
          "type": "message",
          "user": "U03JA49DP9R",
          "text": "Thank you. I'll check that out!",
          "ts": "1654716134.743289",
          "thread_ts": "1654715857.363349",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UIu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you. "
                    },
                    {
                      "type": "text",
                      "text": "I'll "
                    },
                    {
                      "type": "text",
                      "text": "check"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " out"
                    },
                    {
                      "type": "text",
                      "text": "!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JM92AMJ5\u003e asked\n\u0026gt; What is the state of `std::filesystem` on Apple platforms? Do you have any recommendations for integrating with system-level file coordination mechanism AND doing so from c++?",
      "ts": "1654716061.737149",
      "thread_ts": "1654716061.737149",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654718845.257249",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "WEL5L",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JM92AMJ5"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What is the state of `std::filesystem` on Apple platforms? Do you have any recommendations for integrating with system-level file coordination mechanism AND doing so from c++?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a368808d-7931-4d52-89d2-b1b2547b024d",
          "type": "message",
          "user": "U03J7GZG8V6",
          "text": "`\u0026lt;filesystem\u0026gt;` has been available since macOS 10.15 (and other Apple OSes released in alignment). It is supported out-of-the-box with the C++ Standard Library shipped with Xcode: you should only make sure to compile as C++17 (or above) to get access to the library.\n\nIf you are deploying to an earlier target than macOS 10.15 (and aligned OSes), the compiler will complain at compile-time if you try to use something that would not be available on your deployment target.",
          "ts": "1654716192.990359",
          "thread_ts": "1654716061.737149",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "ok_hand",
              "count": 1,
              "users": [
                "U03JM92AMJ5"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "v5xT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "`\u003cfilesystem\u003e` has been available since macOS 10.15 (and other Apple OSes released in alignment). It is supported out-of-the-box with the C++ Standard Library shipped with Xcode: you should only make sure to compile as C++17 (or above) to get access to the library.\n\nIf you are deploying to an earlier target than macOS 10.15 (and aligned OSes), the compiler will complain at compile-time if you try to use something that would not be available on your deployment target."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "598497de-2b3d-4652-9e93-0f05232720e3",
          "type": "message",
          "user": "U03J7GZG8V6",
          "text": "Could you clarify what you mean by system-level file coordination mechanisms? I am not sure I understand exactly what is being referred to.",
          "ts": "1654716276.989529",
          "thread_ts": "1654716061.737149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jVv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Could you clarify what you mean by system-level file coordination mechanisms? I am not sure I understand exactly what is being referred to."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "beff84b7-0c17-4710-95fa-ecf7899da907",
          "type": "message",
          "user": "U03JM92AMJ5",
          "text": "I meant `NSFileCoordinator` specifically. To illustrate the problem: part of the app might use `NSFileCoordinator` to move the some file and other one (in c++, possibly much “lower level”) might use `\u0026lt;filesystem\u0026gt;` to attempt to read it at the same time. Is there any way for this c/c++ part to participate with system file coordination?",
          "ts": "1654717716.408999",
          "thread_ts": "1654716061.737149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/tw4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I meant "
                    },
                    {
                      "type": "text",
                      "text": "NSFileCoordinator",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " specifically. To illustrate the problem: part of the app might use "
                    },
                    {
                      "type": "text",
                      "text": "NSFileCoordinator",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to move the some file and other one (in c++, possibly much “lower level”) might use "
                    },
                    {
                      "type": "text",
                      "text": "\u003cfilesystem\u003e",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to attempt to read it at the same time. Is there any way for this c/c++ part to participate with system file coordination?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ec8952b6-3fc2-4063-854e-0fb9243b35e1",
          "type": "message",
          "user": "U03J7GZG8V6",
          "text": "Unfortunately, the `\u0026lt;filesystem\u0026gt;` library does not provide any utilities to coordinate reading and writing of files between various \"users\" of the file, so you'd have to implement that yourself on top of the `\u0026lt;filesystem\u0026gt;` API.",
          "ts": "1654718185.921149",
          "thread_ts": "1654716061.737149",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "ok_hand",
              "count": 1,
              "users": [
                "U03JM92AMJ5"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZHWZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Unfortunately, the "
                    },
                    {
                      "type": "text",
                      "text": "\u003cfilesystem\u003e",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " library does not provide any utilities to coordinate reading and writing of files between various \"users\" of the file, so you'd have to implement that yourself on top of the "
                    },
                    {
                      "type": "text",
                      "text": "\u003cfilesystem\u003e",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " API."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a4616580-ce66-45cf-94f6-3ad9dc88c5ea",
          "type": "message",
          "user": "U03J7GZG8V6",
          "text": "The root of the issue here is that the C++ Standard does not have provisions for `\u0026lt;filesystem\u0026gt;` to track changes to files, it's somewhat lower level than that.",
          "ts": "1654718275.055319",
          "thread_ts": "1654716061.737149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Xwa=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The root of the issue here is that the C++ Standard does not have provisions for "
                    },
                    {
                      "type": "text",
                      "text": "\u003cfilesystem\u003e",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to track changes to files, it's somewhat lower level than that."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d785b52f-dacb-4ad9-af2d-a2cf9a9ac884",
          "type": "message",
          "user": "U03JM92AMJ5",
          "text": "Makes sense! I wonder if there are any other public system headers with C API for achieving such integration without the need to use Foundation, but that’s another story :slightly_smiling_face: Thanks for the answer \u003c@U03J7GZG8V6\u003e! :slightly_smiling_face:",
          "ts": "1654718476.592399",
          "thread_ts": "1654716061.737149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xLqBd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Makes sense! I wonder if there are any other public system headers with C API for achieving such integration without the need to use Foundation, but that’s another story "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " Thanks for the answer "
                    },
                    {
                      "type": "user",
                      "user_id": "U03J7GZG8V6"
                    },
                    {
                      "type": "text",
                      "text": "! "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "89a9081d-403f-4b9d-b6fe-7ca241e98164",
          "type": "message",
          "user": "U03HESGTE77",
          "text": "NSFileCoordinator is a strictly Foundation-level concept, so at this time there isn’t any lower level API that interacts with the subsystem.",
          "ts": "1654718573.836699",
          "thread_ts": "1654716061.737149",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "ok_hand",
              "count": 1,
              "users": [
                "U03JM92AMJ5"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uAj+N",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "NSFileCoordinator is a strictly Foundation-level concept, so at this time there isn’t any lower level API that interacts with the subsystem."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "61aabedb-ed3c-4a75-b279-3f93b5118135",
          "type": "message",
          "user": "U03JM92AMJ5",
          "text": "Good to know! I always thought `NSFileCoordinator` in `Foundation` only provides a wrapper to some file system level functionality. But now I have no idea how `NSFileCoordinator` achieves coordination across processes :smile:",
          "ts": "1654718845.257249",
          "thread_ts": "1654716061.737149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VgR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Good to know! I always thought "
                    },
                    {
                      "type": "text",
                      "text": "NSFileCoordinator",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in "
                    },
                    {
                      "type": "text",
                      "text": "Foundation",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " only provides a wrapper to some file system level functionality. But now I have no idea how "
                    },
                    {
                      "type": "text",
                      "text": "NSFileCoordinator",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " achieves coordination across processes "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4D51VC4\u003e asked\n\u0026gt; Nice work with the build timeline! :tada:\n\u0026gt; \n\u0026gt; I see it shows file level details, is it possible to zoom out or change the view to show a summary timeline by target instead? Thanks :pray: ",
      "ts": "1654716508.310869",
      "thread_ts": "1654716508.310869",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654717322.358369",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "NP0K",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4D51VC4"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Nice work with the build timeline! \"},{\"type\":\"emoji\",\"name\":\"tada\"},{\"type\":\"text\",\"text\":\"\\n\\nI see it shows file level details, is it possible to zoom out or change the view to show a summary timeline by target instead? Thanks \"},{\"type\":\"emoji\",\"name\":\"pray\"},{\"type\":\"text\",\"text\":\" \"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "90e5f200-baac-4763-87e5-885425bf22de",
          "type": "message",
          "user": "U03HWCZES3T",
          "text": "If by ‘zoom-out’ you mean zoom-out from the UI view, you can hold option and scroll. Also I would highly recommend filing feedback reports with suggestions about how to improve the timeline to better fit your needs!",
          "ts": "1654716526.611419",
          "thread_ts": "1654716508.310869",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03J4D51VC4",
                "U03JX2GK70B"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RkNJr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If by ‘zoom-out’ you mean zoom-out from the UI view, you can hold option and scroll. Also I would highly recommend filing feedback reports with suggestions about how to improve the timeline to better fit your needs!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "729A9ED0-2070-426C-8164-7488AB873FF0",
          "type": "message",
          "user": "U03J4D51VC4",
          "text": "Meant zoom out a detail level from file to target (but I see now that is an overloaded term!) \n\nWill file a feedback with the suggestion, thanks!",
          "ts": "1654717322.358369",
          "thread_ts": "1654716508.310869",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HWCZES3T"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rZi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Meant"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "zoom"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "out"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "detail"
                    },
                    {
                      "type": "text",
                      "text": " level from "
                    },
                    {
                      "type": "text",
                      "text": "file"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "target"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "(but"
                    },
                    {
                      "type": "text",
                      "text": " I see "
                    },
                    {
                      "type": "text",
                      "text": "now"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "an"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "overloaded"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "term!)"
                    },
                    {
                      "type": "text",
                      "text": " \n\n"
                    },
                    {
                      "type": "text",
                      "text": "Will"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "file"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "feedback"
                    },
                    {
                      "type": "text",
                      "text": " with the suggestion"
                    },
                    {
                      "type": "text",
                      "text": ","
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ2VBE21\u003e asked\n\u0026gt; How do I activate the Build Timeline view? I can't seem to find it anywhere on Xcode 14. I see an option for \"Recent Build Timeline\" but it doesn't do anything.",
      "ts": "1654716755.506929",
      "thread_ts": "1654716755.506929",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 11,
      "latest_reply": "1654718640.522999",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Wfsj",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ2VBE21"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"How do I activate the Build Timeline view? I can't seem to find it anywhere on Xcode 14. I see an option for \\\"Recent Build Timeline\\\" but it doesn't do anything.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "32b7e85a-c929-4c58-8f1e-1ce29a254eda",
          "type": "message",
          "user": "U03HWCZES3T",
          "text": "Go to the build log of your project, then select an entry from the build log and do ‘right click -\u0026gt; Show in timeline’, or select ‘Xcode menu -\u0026gt; Editor -\u0026gt; Assistant’.",
          "ts": "1654716772.213849",
          "thread_ts": "1654716755.506929",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "white_check_mark",
              "count": 1,
              "users": [
                "U03HZ2VBE21"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZLYJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Go to the build log of your project, then select an entry from the build log and do ‘right click -\u003e Show in timeline’, or select ‘Xcode menu -\u003e Editor -\u003e Assistant’."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "160c153b-05e9-4f28-994b-38b6411e3e27",
          "type": "message",
          "user": "U03K908Q6DN",
          "text": "I also couldn't find it without instructions. It's hard to discover. Great feature though :+1:",
          "ts": "1654716930.723409",
          "thread_ts": "1654716755.506929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "psdO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I also couldn't find it without instructions. It's hard to discover. Great feature though "
                    },
                    {
                      "type": "emoji",
                      "name": "+1",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fa794de0-d8fc-45fc-8326-3f184fe68c7f",
          "type": "message",
          "user": "U03HWCZES3T",
          "text": "One of the best features of Xcode 14! :smile:",
          "ts": "1654717026.836749",
          "thread_ts": "1654716755.506929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LL3c2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "One of the best features of Xcode 14! "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0a8c2f8f-5d5a-4464-86ee-896dc81ddfa2",
          "type": "message",
          "user": "U03HZ2VBE21",
          "text": "Great! I found it. Now why do some (simple) Objective-C .m files take 7-seconds to compile! Any idea what to look for?",
          "ts": "1654717334.904289",
          "thread_ts": "1654716755.506929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VtK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Great! I found it. Now why do some (simple) Objective-C .m files take 7-seconds to compile! Any idea what to look for?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e3eb2928-3cfe-45c2-8355-464b6a4ef32c",
          "type": "message",
          "user": "U03HWCZES3T",
          "text": "are you able to reproduce taking this long by copying the command-line compiler invocation for one of the .m files from the build log and running it in terminal?",
          "ts": "1654717482.819979",
          "thread_ts": "1654716755.506929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kOL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "are you able to reproduce taking this long by copying the command-line compiler invocation for one of the .m files from the build log and running it in terminal?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e2990af7-d5f2-4990-b4c4-3e9a538311ba",
          "type": "message",
          "user": "U03HZ2VBE21",
          "text": "What's the command-link command for this?",
          "ts": "1654717698.948979",
          "thread_ts": "1654716755.506929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "HCMk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "What's the command-link command for this?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f6bed67c-c88d-4881-b00b-d509cf888540",
          "type": "message",
          "user": "U03HWCZES3T",
          "text": "I mean from the build log, if you select “All messages”, then find the entry for “Compile \u0026lt;file\u0026gt;.m” that you are interested in, then you expand the entry, you can see the full compiler invocation for that file.",
          "ts": "1654718004.619859",
          "thread_ts": "1654716755.506929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "3ge",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I mean from the build log, if you select “All messages”, then find the entry for “Compile \u003cfile\u003e.m” that you are interested in, then you expand the entry, you can see the full compiler invocation for that file."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1871dc4e-c7e9-462e-916e-cd2c97792979",
          "type": "message",
          "user": "U03HZ2VBE21",
          "text": "Hmm, if I\"m doing this correctly, I go to my source folder and type in a really long command that begins something like `/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -x objective-c -target arm64-apple-ios13.1-simulator -fmessage-length\\=0 -fdiagnostics-show-note-include-stack -fmacro-backtrace-limit\\=0 -std\\=c99 -fobjc-arc -fmodules -gmodules -fmodules-cache-path\\=/Users/zulfishah/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -fmodules-prune-interval\\=86400 -fmodules-prune-after\\=345600 -fbuild-session-file\\=/Users/zulfishah/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -fmodules-validate-once-per-build-session -fmodule-name\\=CJournal -Wno-trigraphs -fpascal-strings -O0 -fno-common -Wno-missing-field-initializers -Wno-missing-prototypes -Wunreachable-code -Wno-implicit-atomic-properties -Wno-objc-interface-ivars -Wno-arc-repeated-use-of-weak -Wduplicate-method-match -Wno-missing-braces -Wparentheses -Wswitch -Wunused-function -Wno-unused-label -Wno-unused-parameter -Wunused-variable -Wno-unused-value -Wempty-body -Wuninitialized -Wno-unknown-pragmas -Wno-shadow -Wno-four-char-constants -Wno-conversion -Wconstant-conversion -Wint-conversion -Wbool-conversion -Wenum-conversion -Wno-float-conversion -Wno-non-literal-null-conversion -Wno-objc-literal-conversion -Wshorten-64-to-32 -Wpointer-sign -Wno-newline-eof -Wno-selector -Wno-strict-selector-match -Wundeclared-selector -Wno-deprecated-implementations -DDEBUG -DCONFIGURATION_Debug -DOBJC_OLD_DISPATCH_PROTOTYPES\\=0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator16.0.sdk -fstrict-aliasing -Wprotocol -Wdeprecated-declarations -g -Wno-sign-conversion -Winfinite-recursion -Wno-comma -Wno-block-capture-autoreleasing -Wno-strict-prototypes -Wno-semicolon-before-method-body -fobjc-abi-version\\=2 -fobjc-legacy-dispat`",
          "ts": "1654718465.026859",
          "thread_ts": "1654716755.506929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vfx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hmm, if I\"m doing this correctly, I go to my source folder and type in a really long command that begins something like "
                    },
                    {
                      "type": "text",
                      "text": "/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -x objective-c -target arm64-apple-ios13.1-simulator -fmessage-length\\=0 -fdiagnostics-show-note-include-stack -fmacro-backtrace-limit\\=0 -std\\=c99 -fobjc-arc -fmodules -gmodules -fmodules-cache-path\\=/Users/zulfishah/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -fmodules-prune-interval\\=86400 -fmodules-prune-after\\=345600 -fbuild-session-file\\=/Users/zulfishah/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -fmodules-validate-once-per-build-session -fmodule-name\\=CJournal -Wno-trigraphs -fpascal-strings -O0 -fno-common -Wno-missing-field-initializers -Wno-missing-prototypes -Wunreachable-code -Wno-implicit-atomic-properties -Wno-objc-interface-ivars -Wno-arc-repeated-use-of-weak -Wduplicate-method-match -Wno-missing-braces -Wparentheses -Wswitch -Wunused-function -Wno-unused-label -Wno-unused-parameter -Wunused-variable -Wno-unused-value -Wempty-body -Wuninitialized -Wno-unknown-pragmas -Wno-shadow -Wno-four-char-constants -Wno-conversion -Wconstant-conversion -Wint-conversion -Wbool-conversion -Wenum-conversion -Wno-float-conversion -Wno-non-literal-null-conversion -Wno-objc-literal-conversion -Wshorten-64-to-32 -Wpointer-sign -Wno-newline-eof -Wno-selector -Wno-strict-selector-match -Wundeclared-selector -Wno-deprecated-implementations -DDEBUG -DCONFIGURATION_Debug -DOBJC_OLD_DISPATCH_PROTOTYPES\\=0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator16.0.sdk -fstrict-aliasing -Wprotocol -Wdeprecated-declarations -g -Wno-sign-conversion -Winfinite-recursion -Wno-comma -Wno-block-capture-autoreleasing -Wno-strict-prototypes -Wno-semicolon-before-method-body -fobjc-abi-version\\=2 -fobjc-legacy-dispat",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "697c4d7e-3926-4f99-871e-65c474ab08ab",
          "type": "message",
          "user": "U03HZ2VBE21",
          "text": "it goes on and on ... but eventually if I try it, it returns almost immediately",
          "ts": "1654718498.289599",
          "thread_ts": "1654716755.506929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wHsP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "it goes on and on ... but eventually if I try it, it returns almost immediately"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4ac9d615-435f-4040-a0cd-238ac9e5afa5",
          "type": "message",
          "user": "U03HWCZES3T",
          "text": "there’s an “Xcode build performance lab” tomorrow, I would highly recommend to join so an engineer can dig more into this",
          "ts": "1654718621.146949",
          "thread_ts": "1654716755.506929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "S5K2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "there’s an “Xcode build performance lab” tomorrow, I would highly recommend to join so an engineer can dig more into this"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "37aa7968-0f97-43b5-ac08-716d4f674399",
          "type": "message",
          "user": "U03HZ2VBE21",
          "text": "Ok cool, thanks!",
          "ts": "1654718640.522999",
          "thread_ts": "1654716755.506929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2Su",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok cool, thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03K7HG7GQH\u003e asked\n\u0026gt; We have a bug that occurs sometimes and it can be narrowed down to the fact that this code fails sometimes when running on the iOS 15 simulator:\n\u0026gt; \n\u0026gt; long double r = 1.0;\n\u0026gt; long double x = 100.0;\n\u0026gt; assert(!std::isnan(r * x));\n\u0026gt; \n\u0026gt; Can somebody help with this?",
      "ts": "1654716797.707619",
      "thread_ts": "1654716797.707619",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654718189.345359",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "p39",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K7HG7GQH"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We have a bug that occurs sometimes and it can be narrowed down to the fact that this code fails sometimes when running on the iOS 15 simulator:\\n\\nlong double r = 1.0;\\nlong double x = 100.0;\\nassert(!std::isnan(r * x));\\n\\nCan somebody help with this?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "c1fdabf2-c709-4d0d-83ec-f77af3c08d07",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "I think we’ll need a test case for this (a buildable project); we can’t see any reason it would happen with what you’ve written here",
          "ts": "1654716861.787849",
          "thread_ts": "1654716797.707619",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=Lu2G",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I think we’ll need a test case for this (a buildable project); we can’t see any reason it would happen with what you’ve written here"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8cbddf65-644d-40d6-a2e6-dd9b18c04456",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "With different values, the fact that `long double` is sometimes a different type on simulator platforms than it is on OS platforms might play a factor",
          "ts": "1654716946.873029",
          "thread_ts": "1654716797.707619",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mu4gW",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "With different values, the fact that "
                    },
                    {
                      "type": "text",
                      "text": "long double",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is sometimes a different type on simulator platforms than it is on OS platforms might play a factor"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2921906d-086b-4f92-99df-fc094260f514",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "But it should never matter for multiplying 1.0 by 100.0",
          "ts": "1654716968.186559",
          "thread_ts": "1654716797.707619",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0nw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "But it should never matter for multiplying 1.0 by 100.0"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e646757e-0b38-471d-8b7f-b46dfd6ca648",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "Please file a feedback report",
          "ts": "1654717011.764109",
          "thread_ts": "1654716797.707619",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "T/5+2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Please file a feedback report"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fbd5276a-6315-4f94-8534-2c9421556e4c",
          "type": "message",
          "user": "U03K7HG7GQH",
          "text": "Done, thanks",
          "ts": "1654717530.379789",
          "thread_ts": "1654716797.707619",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HHQ7T15Y"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=NVaV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Done, thanks"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b4a58bea-e988-40c0-ae87-291446efe816",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "Can we get the feedback number?",
          "ts": "1654718189.345359",
          "thread_ts": "1654716797.707619",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UuFET",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Can we get the feedback number?"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMEM4TM5\u003e asked\n\u0026gt; Can the \"any\" extential types be deployed to earlier OS versions, or does it require the 5.7 runtime? Thanks!",
      "ts": "1654717595.731579",
      "thread_ts": "1654717595.731579",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 10,
      "latest_reply": "1654891060.574219",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "EM67w",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMEM4TM5"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can the \\\"any\\\" extential types be deployed to earlier OS versions, or does it require the 5.7 runtime? Thanks!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "54fcf866-1764-4230-bf45-71d46cde8e81",
          "type": "message",
          "user": "U03HB5WSFRC",
          "text": "`any P` for any protocol type will work on older runtimes. With associated types it's a bit more complicated. You can't generally use `any P\u0026lt;Type\u0026gt;` as a first-class type without the 5.7 runtime, but you can use it in stored properties of other types, allowing you to write a wrapper struct that can be back deployed",
          "ts": "1654717678.820589",
          "thread_ts": "1654717595.731579",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OZwi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "any P",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " for any protocol type will work on older runtimes. With associated types it's a bit more complicated. You can't generally use "
                    },
                    {
                      "type": "text",
                      "text": "any P\u003cType\u003e",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " as a first-class type without the 5.7 runtime, but you can use it in stored properties of other types, allowing you to write a wrapper struct that can be back deployed"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "768d4012-cdef-44b5-aa4e-1f17d938eb70",
          "type": "message",
          "user": "U03HB5WSFRC",
          "text": "```// this will be back deployable\nstruct AnyP\u0026lt;T\u0026gt; {\n  var value: any P\u0026lt;T\u0026gt;\n}```",
          "ts": "1654717777.231199",
          "thread_ts": "1654717595.731579",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "thinking_face",
              "count": 3,
              "users": [
                "U03JRN827HN",
                "U03HMEM4TM5",
                "U03JPFQNX5K"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XmM",
              "elements": [
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"\\/\\/ this will be back deployable\\nstruct AnyP\u003cT\u003e {\\n  var value: any P\u003cT\u003e\\n}\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "C43FEE53-5F97-4F3A-BE07-ADFF905BE85D",
          "type": "message",
          "user": "U03JTPM78E7",
          "text": "Is there a concrete code example of what cannot be done without 5.7 and how this back deployable struct would work for older deployment targets?",
          "ts": "1654725799.275359",
          "thread_ts": "1654717595.731579",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7n4Y2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is there a concrete code example of what cannot be done without 5.7 and how this back deployable struct would work for older deployment targets?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5052d5cd-03d9-40c4-8fe8-2337819c7d94",
          "type": "message",
          "user": "U03HB5WSFRC",
          "text": "You won't be able to expose the property directly as public API, but it will behave as expected in your internal implementation—as long as you're using a new enough Xcode, you can call methods on it etc. internally. So you can use `any P\u0026lt;T\u0026gt;` as a way of more easily implementing a type-erasing wrapper that you might've used subclassing or closures for previously.",
          "ts": "1654729632.200629",
          "thread_ts": "1654717595.731579",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JTPM78E7"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qBGAj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You won't be able to expose the property directly as public API, but it will behave as expected in your internal implementation—as long as you're using a new enough Xcode, you can call methods on it etc. internally. So you can use "
                    },
                    {
                      "type": "text",
                      "text": "any P\u003cT\u003e",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " as a way of more easily implementing a type-erasing wrapper that you might've used subclassing or closures for previously."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fd0252c2-c1ed-4c1d-a59f-8c76cdccc3ec",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "Basically, you won’t be able to use those types as a “type argument”: if you’re calling a generic function or using a generic type over `\u0026lt;T\u0026gt;`, you can’t let `T` be `any Collection\u0026lt;Int\u0026gt;` (or any type that uses it as part of its identity, like `(any Collection\u0026lt;Int\u0026gt;)?` or `(Int, Float, any Collection\u0026lt;Int\u0026gt;)`)",
          "ts": "1654740859.602419",
          "thread_ts": "1654717595.731579",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "NfHo",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Basically, you won’t be able to use those types as a “type argument”: if you’re calling a generic function or using a generic type over "
                    },
                    {
                      "type": "text",
                      "text": "\u003cT\u003e",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", you can’t let "
                    },
                    {
                      "type": "text",
                      "text": "T",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " be "
                    },
                    {
                      "type": "text",
                      "text": "any Collection\u003cInt\u003e",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " (or any type that uses it as part of its identity, like "
                    },
                    {
                      "type": "text",
                      "text": "(any Collection\u003cInt\u003e)?",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " or "
                    },
                    {
                      "type": "text",
                      "text": "(Int, Float, any Collection\u003cInt\u003e)",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ")"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "416a5cd3-e85c-4ed2-8a54-ae165c3de89e",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "But the types of properties aren’t part of the *identity* of a `struct` or `class`, and `any` types have fixed static layouts, so it turns out that you can just wrap them inside other types and the runtime will get by just fine",
          "ts": "1654741033.815659",
          "thread_ts": "1654717595.731579",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zSip",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "But the types of properties aren’t part of the "
                    },
                    {
                      "type": "text",
                      "text": "identity",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " of a "
                    },
                    {
                      "type": "text",
                      "text": "struct",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " or "
                    },
                    {
                      "type": "text",
                      "text": "class",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", and "
                    },
                    {
                      "type": "text",
                      "text": "any",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " types have fixed static layouts, so it turns out that you can just wrap them inside other types and the runtime will get by just fine"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ffb7e35c-d384-4ba2-a774-8e19a53ea44f",
          "type": "message",
          "user": "U03JTPM78E7",
          "text": "Is the Swift 5.7 runtime iOS (16) bound or is it built in with the app?",
          "ts": "1654886829.811589",
          "thread_ts": "1654717595.731579",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "g3M",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is the Swift 5.7 runtime iOS (16) bound or is it built in with the app?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "882ef426-2071-45ec-9189-e3926d8c207e",
          "type": "message",
          "user": "U03HB5WSFRC",
          "text": "The runtime is part of the OS",
          "ts": "1654889222.569499",
          "thread_ts": "1654717595.731579",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "U+3L",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The runtime is part of the OS"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "aca89d12-25d6-4d42-a292-c8cf3618429d",
          "type": "message",
          "user": "U03JTPM78E7",
          "text": "I see on \u003chttps://www.swift.org/blog/abi-stability-and-apple/\u003e\n\n\u0026gt;  Apps deploying back to earlier OS releases will have a copy of the Swift runtime embedded inside them. Those copies of the runtime will be ignored — essentially inert — when running on OS releases that ship with the Swift runtime.\nThat seems to contradict. So if I build on Swift 5.7, I’ll bundle the 5.7 runtime, then if the OS has that runtime, the dylib in my bundle will be stripped and I’ll link the system one, and if it doesn’t I’ll just link the one I’ve bundled? Or you’re saying I don’t have access to the 5.7 runtime if I don’t target min iOS X.Y?",
          "ts": "1654890962.567439",
          "thread_ts": "1654717595.731579",
          "attachments": [
            {
              "fallback": "Swift.org: Evolving Swift On Apple Platforms After ABI Stability",
              "id": 1,
              "title": "Evolving Swift On Apple Platforms After ABI Stability",
              "title_link": "https://www.swift.org/blog/abi-stability-and-apple/",
              "text": "With the release of Swift 5.0, Swift is now ABI stable and is delivered as a core component of macOS, iOS, tvOS, and watchOS. ABI stability has been a goal for Swift since its inception, and brings with it many benefits for developers and users of these platforms:",
              "thumb_url": "https://swift.org/apple-touch-icon-180x180.png",
              "service_name": "Swift.org",
              "service_icon": "https://www.swift.org/apple-touch-icon.png",
              "from_url": "https://www.swift.org/blog/abi-stability-and-apple/",
              "original_url": "https://www.swift.org/blog/abi-stability-and-apple/",
              "blocks": null,
              "ts": 1549879200
            }
          ],
          "edited": {
            "user": "U03JTPM78E7",
            "ts": "1654890973.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=JTG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I see on "
                    },
                    {
                      "type": "link",
                      "url": "https://www.swift.org/blog/abi-stability-and-apple/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\" Apps deploying back to earlier OS releases will have a copy of the Swift runtime embedded inside them. Those copies of the runtime will be ignored \\u2014 essentially inert \\u2014 when running on OS releases that ship with the Swift runtime.\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\nThat seems to contradict. So if I build on Swift 5.7, I’ll bundle the 5.7 runtime, then if the OS has that runtime, the dylib in my bundle will be stripped and I’ll link the system one, and if it doesn’t I’ll just link the one I’ve bundled? Or you’re saying I don’t have access to the 5.7 runtime if I don’t target min iOS X.Y?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "992ed40d-e63c-410d-a946-ac6e6c1f5a39",
          "type": "message",
          "user": "U03JTPM78E7",
          "text": "What I’d love to know is if my team can use `any Collection\u0026lt;any P\u0026gt;` in public API when targeting iOS 13. We already know we can use `some Collection` in the iOS 13 runtime",
          "ts": "1654891060.574219",
          "thread_ts": "1654717595.731579",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cs1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "What I’d love to know is if my team can use "
                    },
                    {
                      "type": "text",
                      "text": "any Collection\u003cany P\u003e",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in public API when targeting iOS 13. We already know we can use "
                    },
                    {
                      "type": "text",
                      "text": "some Collection",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in the iOS 13 runtime"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "ee5c3b6b-db5f-4fc7-90c0-0873fa9c6be1",
      "type": "message",
      "user": "U03HHP784Q3",
      "text": "Reminder: We’re 10 minutes from wrapping up!",
      "ts": "1654717640.090879",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "nbL",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Reminder: We’re 10 minutes from wrapping up!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4CWFAN8\u003e asked\n\u0026gt; I have two, possibly obscure questions: 1) is the --disassembler-options=no-aliases not supported for objdump? and 2) Is there comprehensive documentation for the as assembler anywhere?",
      "ts": "1654718014.237389",
      "thread_ts": "1654718014.237389",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 23,
      "latest_reply": "1654720146.010349",
      "reactions": [
        {
          "name": "pray",
          "count": 1,
          "users": [
            "U03J4CWFAN8"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "9QW",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4CWFAN8"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I have two, possibly obscure questions: 1) is the --disassembler-options=no-aliases not supported for objdump? and 2) Is there comprehensive documentation for the as assembler anywhere?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "065a3f9c-55cc-49ed-8e1f-e49a9a61f731",
          "type": "message",
          "user": "U03HB5GP894",
          "text": "You can find the documentation for `objdump` here: \u003chttps://llvm.org/docs/CommandGuide/llvm-objdump.html\u003e\n`--disassembler-options` should work like following but it doesn't work for you, please file a feedback report to us:\n```objdump --macho --disassemble-all --disassembler-options=no-aliases arm64.o```",
          "ts": "1654718138.214669",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03J4CWFAN8",
                "U03J2842ALS"
              ]
            },
            {
              "name": "heavy_check_mark",
              "count": 1,
              "users": [
                "U03J4CWFAN8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uGX6+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can find the documentation for "
                    },
                    {
                      "type": "text",
                      "text": "objdump",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " here: "
                    },
                    {
                      "type": "link",
                      "url": "https://llvm.org/docs/CommandGuide/llvm-objdump.html",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "--disassembler-options",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " should work like following but it doesn't work for you, please file a feedback report to us:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"objdump --macho --disassemble-all --disassembler-options=no-aliases arm64.o\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "58c059d0-9249-4e40-8b62-5bc18596b9a6",
          "type": "message",
          "user": "U03HB5GP894",
          "text": "For `as` , it is just an alias to `clang`. You can just build your assembly file with `clang` instead.",
          "ts": "1654718170.438679",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lX6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "For "
                    },
                    {
                      "type": "text",
                      "text": "as",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " , it is just an alias to "
                    },
                    {
                      "type": "text",
                      "text": "clang",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". You can just build your assembly file with "
                    },
                    {
                      "type": "text",
                      "text": "clang",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " instead."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d8a9cb4b-a12d-4791-8372-0237f9255528",
          "type": "message",
          "user": "U03J4CWFAN8",
          "text": "True. What I was referring to was more the syntax and keywords. Like, gcc as will accept `\n```ADD X2, X1, X0, SXTB```\nclang needs\n```ADD X2, X1, W0, SXTB```\n",
          "ts": "1654718278.421609",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/MF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "True. What I was referring to was more the syntax and keywords. Like, gcc as will accept `\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"ADD X2, X1, X0, SXTB\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "clang needs\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"ADD X2, X1, W0, SXTB\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": []
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "609b596c-f013-47c5-b106-7e6cce44af4e",
          "type": "message",
          "user": "U03J4CWFAN8",
          "text": "or\n```MUL V6.4H, V0.4H, V3.4H[0]```\nvs\n```MUL.4H V6, V0, V3[0]```\n",
          "ts": "1654718306.415219",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2DJFS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "or\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"MUL V6.4H, V0.4H, V3.4H[0]\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "vs\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"MUL.4H V6, V0, V3[0]\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": []
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f8b04b79-7f77-4e11-9bcf-62e6d689a435",
          "type": "message",
          "user": "U03HB5GP894",
          "text": "`as` exists as an compatibility tool to binutils. You can find documentation by running `man as` on commandline",
          "ts": "1654718313.203149",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dAZv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "as",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " exists as an compatibility tool to binutils. You can find documentation by running "
                    },
                    {
                      "type": "text",
                      "text": "man as",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " on commandline"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "217518f5-77f0-4f82-ad10-f751c6f375c5",
          "type": "message",
          "user": "U03J4CWFAN8",
          "text": "As to objdump, thank you, I was doing it wrong!",
          "ts": "1654718433.745989",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=4tXk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "As to objdump, thank you, I was doing it wrong!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6bde0384-24ed-492b-a85b-afa5e5e593ef",
          "type": "message",
          "user": "U03J7GZQ8G0",
          "text": "To me, that looks like GCC is incorrect in accepting `ADD X2, X1, X0, SXTB`",
          "ts": "1654718515.606209",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xui",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "To me, that looks like GCC is incorrect in accepting "
                    },
                    {
                      "type": "text",
                      "text": "ADD X2, X1, X0, SXTB",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "746c9cb0-f726-47bc-8824-79dfbb921a34",
          "type": "message",
          "user": "U03J4CWFAN8",
          "text": "\u003c@U03J7GZQ8G0\u003e That may very well be the case! I would still be very happy to find the authoretive guide to the correct syntax and keywords. So far, I have figured that out on my own :wink:",
          "ts": "1654718620.394469",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "96y2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03J7GZQ8G0"
                    },
                    {
                      "type": "text",
                      "text": " That may very well be the case! I would still be very happy to find the authoretive guide to the correct syntax and keywords. So far, I have figured that out on my own "
                    },
                    {
                      "type": "emoji",
                      "name": "wink",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "da166bf2-17b2-4ba5-8a8f-2c9072107bbe",
          "type": "message",
          "user": "U03J7GZQ8G0",
          "text": "You can find the official assembler spec in the ARM architecture reference manual, for aarch64 in particular.",
          "ts": "1654718670.240199",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+Hd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can find the official assembler spec in the ARM architecture reference manual, for aarch64 in particular."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "eb22c349-4edd-4995-b433-4be9caaa3eaf",
          "type": "message",
          "user": "U03J7GZQ8G0",
          "text": "You can also see some assembler documentation from ARM's assembler docs: \u003chttps://developer.arm.com/documentation/dui0801/g/A64-General-Instructions/ADD--extended-register-\u003e the table at the bottom I believe shows that the extended reg should be `Wn`",
          "ts": "1654718724.982059",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heavy_check_mark",
              "count": 1,
              "users": [
                "U03J4CWFAN8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "p/8N",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can also see some assembler documentation from ARM's assembler docs: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.arm.com/documentation/dui0801/g/A64-General-Instructions/ADD--extended-register-",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " the table at the bottom I believe shows that the extended reg should be "
                    },
                    {
                      "type": "text",
                      "text": "Wn",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dfd43539-e19d-4b66-ae7d-de0439f0d22b",
          "type": "message",
          "user": "U03J4CWFAN8",
          "text": "\u003c@U03J7GZQ8G0\u003e And, I’m not saying you’d be wrong with that, any deviation that is in gcc is likely wrong?",
          "ts": "1654718739.277609",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6R9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03J7GZQ8G0"
                    },
                    {
                      "type": "text",
                      "text": " And, I’m not saying you’d be wrong with that, any deviation that is in gcc is likely wrong?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7e7af4de-155e-4f7e-a6b1-c96530d3739c",
          "type": "message",
          "user": "U03J7GZQ8G0",
          "text": "Perhaps incorrect/wrong is too strong of a term, especially for a project like GCC which we aren't associated with. They may well choose to do this on purpose as a convenience for developers.",
          "ts": "1654718858.062229",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heavy_check_mark",
              "count": 1,
              "users": [
                "U03J4CWFAN8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2PA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Perhaps incorrect/wrong is too strong of a term, especially for a project like GCC which we aren't associated with. They may well choose to do this on purpose as a convenience for developers."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cf5b2328-40e0-4522-8384-225000c2442d",
          "type": "message",
          "user": "U03J4CWFAN8",
          "text": "For `MUL`  though I find:\n`MUL Vd.T, Vn.T, Vm.Ts[index]`\nwhereas clang wants:\n`MUL.4H V6, V0, V3[0]`",
          "ts": "1654718877.117179",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bMqI6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "For "
                    },
                    {
                      "type": "text",
                      "text": "MUL",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "  though I find:\n"
                    },
                    {
                      "type": "text",
                      "text": "MUL Vd.T, Vn.T, Vm.Ts[index]",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\nwhereas clang wants:\n"
                    },
                    {
                      "type": "text",
                      "text": "MUL.4H V6, V0, V3[0]",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5b0cd494-cb2f-4a19-adab-0806da24ad95",
          "type": "message",
          "user": "U03J4CWFAN8",
          "text": "Here, the docs look exactly like what gcc is accepting: `MUL V6.4H, V0.4H, V3.4H[0]`",
          "ts": "1654718971.630419",
          "thread_ts": "1654718014.237389",
          "edited": {
            "user": "U03J4CWFAN8",
            "ts": "1654719000.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CDC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Here, the docs look exactly like what gcc is accepting: "
                    },
                    {
                      "type": "text",
                      "text": "MUL V6.4H, V0.4H, V3.4H[0]",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e5993ce0-0b67-43a6-a404-5d32a2a46f57",
          "type": "message",
          "user": "U03J7GZQ8G0",
          "text": "This is likely due to the assembler expecting Apple's NEON assembler syntax (due to historical...reasons).",
          "ts": "1654719342.652239",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heavy_check_mark",
              "count": 1,
              "users": [
                "U03J4CWFAN8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tW1R+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is likely due to the assembler expecting Apple's NEON assembler syntax (due to historical...reasons)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6b92a33c-b618-463d-aaf2-d710dead1a67",
          "type": "message",
          "user": "U03J7GZQ8G0",
          "text": "I'll check if there's a way to change that...",
          "ts": "1654719359.130969",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "blush",
              "count": 1,
              "users": [
                "U03J4CWFAN8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "QXAo",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'll check if there's a way to change that..."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "26e60195-c6d1-46f0-8843-469c0a217482",
          "type": "message",
          "user": "U03J7GZQ8G0",
          "text": "Oh it looks like it's not related to the Apple neon syntax actually. If you remove the `4` in `v3.4h[0]` it works",
          "ts": "1654719927.791759",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-thank-you",
              "count": 1,
              "users": [
                "U03J4CWFAN8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "alpOS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oh it looks like it's not related to the Apple neon syntax actually. If you remove the "
                    },
                    {
                      "type": "text",
                      "text": "4",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in "
                    },
                    {
                      "type": "text",
                      "text": "v3.4h[0]",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " it works"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4b060397-9c74-4e91-bb5b-03df05b9d212",
          "type": "message",
          "user": "U03J7GZQ8G0",
          "text": "\u003chttps://developer.arm.com/documentation/dui0801/g/A64-SIMD-Vector-Instructions/MUL--vector--by-element-\u003e",
          "ts": "1654719962.135879",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-danke",
              "count": 1,
              "users": [
                "U03J4CWFAN8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "d/6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "link",
                      "url": "https://developer.arm.com/documentation/dui0801/g/A64-SIMD-Vector-Instructions/MUL--vector--by-element-",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "00c12e4d-7499-43ce-9e13-484b3df8053d",
          "type": "message",
          "user": "U03J7GZQ8G0",
          "text": "That page says that the final type specifier is either `H` or `S`, not sure why GCC accepts `4H`. Maybe it's a bug, maybe it's a feature. :man-shrugging:",
          "ts": "1654720017.655659",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "EnI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That page says that the final type specifier is either "
                    },
                    {
                      "type": "text",
                      "text": "H",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " or "
                    },
                    {
                      "type": "text",
                      "text": "S",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", not sure why GCC accepts "
                    },
                    {
                      "type": "text",
                      "text": "4H",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". Maybe it's a bug, maybe it's a feature. "
                    },
                    {
                      "type": "emoji",
                      "name": "man-shrugging",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5a9f077a-6003-40a5-af2b-e55764116d45",
          "type": "message",
          "user": "U03J7GZQ8G0",
          "text": "But it also seems that `as` should accept the official ARM assembler syntax too, no need to do anything special.",
          "ts": "1654720057.461399",
          "thread_ts": "1654718014.237389",
          "edited": {
            "user": "U03J7GZQ8G0",
            "ts": "1654720065.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GmDRF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "But it also seems that "
                    },
                    {
                      "type": "text",
                      "text": "as",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " should accept the official ARM assembler syntax too, no need to do anything special."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "aa82dff8-5ec6-40e5-8b92-964c49b169b3",
          "type": "message",
          "user": "U03J4CWFAN8",
          "text": "Thank you so much, and thank you for all the tools! I will try all of this out, and I am publishing this so more people can benefit from this knowledge!",
          "ts": "1654720102.318069",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zw+K",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you so much, and thank you for all the tools! I will try all of this out, and I am publishing this so more people can benefit from this knowledge!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "15856c36-f03f-45ae-baeb-3d0c486407e9",
          "type": "message",
          "user": "U03J7GZQ8G0",
          "text": "Glad to help. I'm going to sign off now. If you have any issues you can also file a feedback report too.",
          "ts": "1654720131.778709",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heavy_check_mark",
              "count": 1,
              "users": [
                "U03J4CWFAN8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hTIXz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Glad to help. I'm going to sign off now. If you have any issues you can also file a feedback report too."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8647b067-fc37-413a-bef1-5ac079fc4a08",
          "type": "message",
          "user": "U03J4CWFAN8",
          "text": "Thank you for your time!",
          "ts": "1654720146.010349",
          "thread_ts": "1654718014.237389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5NRi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for your time!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "9a6be1e5-0ab4-49e5-92c2-97604c7f0f6b",
      "type": "message",
      "user": "U03HHP784Q3",
      "text": "It’s been a great session! Thank you, everyone, for joining us today in the *C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker Q\u0026amp;A*! We hope you’ve have a good time getting your questions answered by the Developer Tools team!\n\nIf your question wasn’t answered, check to see if there are \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/|other Developer Tools Sessions, Labs, or Lounges\u003e that may better fit your question. For topics not covered there, you can post your questions in the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e. Have a great rest of your WWDC!",
      "ts": "1654718453.709769",
      "attachments": [
        {
          "fallback": "Developer Tools - Topics - WWDC22",
          "id": 1,
          "title": "Developer Tools - Topics - WWDC22",
          "title_link": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "text": "Everything you need to know to build the next great app or game.",
          "image_url": "https://developer.apple.com/wwdc22/topics/images/og/developer-tools-og.png",
          "service_name": "developer.apple.com",
          "service_icon": "https://developer.apple.com/favicon.ico",
          "from_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "original_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "blocks": null
        },
        {
          "fallback": "Apple Developer Forums",
          "id": 2,
          "title": "Apple Developer Forums",
          "title_link": "http://developer.apple.com/forums/",
          "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
          "service_name": "forums.developer.apple.com",
          "service_icon": "https://forums.developer.apple.com/forums/build-06082022-1/public/assets/favicon.ico",
          "from_url": "http://developer.apple.com/forums/",
          "original_url": "http://developer.apple.com/forums/",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "of+t5",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "It’s been a great session! Thank you, everyone, for joining us today in the "
                },
                {
                  "type": "text",
                  "text": "C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker Q\u0026A",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "! We hope you’ve have a good time getting your questions answered by the Developer Tools team!\n\nIf your question wasn’t answered, check to see if there are "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
                  "text": "other Developer Tools Sessions, Labs, or Lounges"
                },
                {
                  "type": "text",
                  "text": " that may better fit your question. For topics not covered there, you can post your questions in the "
                },
                {
                  "type": "link",
                  "url": "http://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": ". Have a great rest of your WWDC!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "user": "U03HL553PNG",
      "text": "set the channel topic: Swift Concurrency",
      "ts": "1654718480.074099",
      "subtype": "channel_topic",
      "topic": "Swift Concurrency",
      "replace_original": false,
      "delete_original": false,
      "blocks": null
    },
    {
      "client_msg_id": "1cc81e16-cec9-4a18-9f18-e436e88352c3",
      "type": "message",
      "user": "U03HHPM3VQT",
      "text": "Afternoon. We welcome everyone to the Q\u0026amp;A session for *Swift Concurrency*! We have several engineers who are experts on this topic to answer your questions. *Please submit the questions using the*  :workflowbolt: *button below.* Our engineers will review the questions and then post the answers in the appropriate thread.\n\nWe will do our best to answer all of your questions. As a gentle reminder, please keep the content professional and within our code of conduct.\n\nIf you have questions on other topics, you can check to see if there are \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/|other Developer Tools Sessions, Labs, or Lounges\u003e that might be better suited to your questions. For topics not covered there, you can also post your questions in the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e",
      "ts": "1654718617.734969",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "vmaR",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Afternoon. We welcome everyone to the Q\u0026A session for "
                },
                {
                  "type": "text",
                  "text": "Swift Concurrency",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "! We have several engineers who are experts on this topic to answer your questions. "
                },
                {
                  "type": "text",
                  "text": "Please submit the questions using the  ",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0,
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " button below.",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " Our engineers will review the questions and then post the answers in the appropriate thread.\n\nWe will do our best to answer all of your questions. As a gentle reminder, please keep the content professional and within our code of conduct.\n\nIf you have questions on other topics, you can check to see if there are "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
                  "text": "other Developer Tools Sessions, Labs, or Lounges"
                },
                {
                  "type": "text",
                  "text": " that might be better suited to your questions. For topics not covered there, you can also post your questions in the "
                },
                {
                  "type": "link",
                  "url": "http://developer.apple.com/forums/",
                  "text": "Developer Forums"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ3HJAE9\u003e asked\n\u0026gt; Our system has a well defined data model with data structures and algorithms that are intuitive to understand and reason about for our business logic. I'm a bit dismayed at the prospect of being forced to carve these structures into other units (actors) to satisfy language requirements while undertaking the migration of our algorithms and processes to utilize Swift concurrency. This seems to impact readability, concise modeling, and ultimately maintainability. I'd like to maintain an open mind about this, though, since I've used async/await syntax so effectively in single-threaded languages.\n\u0026gt; And so I'm wondering if you have any best practices or guidelines to share in adding this new dimension to our data modeling. Should actors be long-lived objects? Are monolithic singletons as actors discouraged or should we model after MainActor? Should we be as\n\u0026gt; granular as possible?",
      "ts": "1654719920.679429",
      "thread_ts": "1654719920.679429",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654719945.370519",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "cikD5",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ3HJAE9"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Our system has a well defined data model with data structures and algorithms that are intuitive to understand and reason about for our business logic. I'm a bit dismayed at the prospect of being forced to carve these structures into other units (actors) to satisfy language requirements while undertaking the migration of our algorithms and processes to utilize Swift concurrency. This seems to impact readability, concise modeling, and ultimately maintainability. I'd like to maintain an open mind about this, though, since I've used async\\/await syntax so effectively in single-threaded languages.\\nAnd so I'm wondering if you have any best practices or guidelines to share in adding this new dimension to our data modeling. Should actors be long-lived objects? Are monolithic singletons as actors discouraged or should we model after MainActor? Should we be as\\ngranular as possible?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "9b42db29-e38b-4dcc-a8f2-e8be05533523",
          "type": "message",
          "user": "U03HB5WGZU6",
          "text": "Thanks for asking Paul, I'm sure this is on the mind of many devs as the new isolation features add a new \"axis\" to your design process.\n\nThe goal of Swift concurrency is to give you the tools to control how your data is accessed from different concurrent contexts. You’ve probably already made your code safe against concurrency, and you shouldn’t need to completely rewrite that around actors. Instead, you just need to tell Swift how you’re making things safe, and then the compiler will help enforce that you’re getting it right.\n\nAs a guide for granularity: you can carve out things which should be executed concurrently into independent actors; Things which definitely should NOT be executed concurrently, should live on the same actor. This way you'll navigate your way to the amount of actors that make sense for your use-case.\n\nThe \u003chttps://developer.apple.com/videos/play/wwdc2022/110351/|Eliminate data races using Swift Concurrency\u003e session from today is a good resource to get into this mindset.",
          "ts": "1654719945.370519",
          "thread_ts": "1654719920.679429",
          "attachments": [
            {
              "fallback": "Apple Developer: Eliminate data races using Swift Concurrency - WWDC22 - Videos - Apple Developer",
              "id": 1,
              "title": "Eliminate data races using Swift Concurrency - WWDC22 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/videos/play/wwdc2022/110351/",
              "text": "Join us as we explore one of the core concepts in Swift concurrency: isolation of tasks and actors. We'll take you through Swift's...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/124/6705/6705_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/videos/play/wwdc2022/110351/",
              "original_url": "https://developer.apple.com/videos/play/wwdc2022/110351/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "bow",
              "count": 1,
              "users": [
                "U03J22AU6DQ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rfx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for asking Paul, I'm sure this is on the mind of many devs as the new isolation features add a new \"axis\" to your design process.\n\nThe goal of Swift concurrency is to give you the tools to control how your data is accessed from different concurrent contexts. You’ve probably already made your code safe against concurrency, and you shouldn’t need to completely rewrite that around actors. Instead, you just need to tell Swift how you’re making things safe, and then the compiler will help enforce that you’re getting it right.\n\nAs a guide for granularity: you can carve out things which should be executed concurrently into independent actors; Things which definitely should NOT be executed concurrently, should live on the same actor. This way you'll navigate your way to the amount of actors that make sense for your use-case.\n\nThe "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2022/110351/",
                      "text": "Eliminate data races using Swift Concurrency"
                    },
                    {
                      "type": "text",
                      "text": " session from today is a good resource to get into this mindset."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVC03PC6\u003e asked\n\u0026gt; Hello, \n\u0026gt; You wrote that `AsyncChannel and AsyncThrowingChannel was heavily inspired from [Combine] Subject`\n\u0026gt; But is it possible to have multiple subscription to a single AsyncChannel ? It seems not. Why not?",
      "ts": "1654720077.995359",
      "thread_ts": "1654720077.995359",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654720405.590489",
      "reactions": [
        {
          "name": "+1",
          "count": 1,
          "users": [
            "U03J2019QTV"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "BDi",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVC03PC6"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hello, \\nYou wrote that `AsyncChannel and AsyncThrowingChannel was heavily inspired from [Combine] Subject`\\nBut is it possible to have multiple subscription to a single AsyncChannel ? It seems not. Why not?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "dc7ddf51-880f-42e7-bd19-e6a6168aa332",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "so i kinda touched on this a bit before",
          "ts": "1654720090.611049",
          "thread_ts": "1654720077.995359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RD6Wh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "so i kinda touched on this a bit before"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a482b186-9dbb-4bab-8f5b-01b571b14c24",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "\u003chttps://wwdc22.slack.com/archives/C03H0JN431U/p1654636897761789?thread_ts=1654636838.973459\u0026amp;cid=C03H0JN431U\u003e",
          "ts": "1654720104.489709",
          "thread_ts": "1654720077.995359",
          "attachments": [
            {
              "fallback": "[June 7th, 2022 2:21 PM] 5904347311516631352: That got changed in swift 5.7: originally the problem was that the case that multiple consumers was undefined behavior, but we refined that to now allow for multiple consumers. But note: each consumer will consume the iteration independently so they will not share the values.",
              "id": 1,
              "author_id": "U03H36UD5QX",
              "author_name": "Philippe H (Apple)",
              "author_subname": "Philippe H (Apple)",
              "author_link": "https://wwdc22.slack.com/team/U03H36UD5QX",
              "author_icon": "https://avatars.slack-edge.com/2022-06-07/3619902051223_0b8255c693436e9cceb4_48.png",
              "text": "That got changed in swift 5.7: originally the problem was that the case that multiple consumers was undefined behavior, but we refined that to now allow for multiple consumers. But note: each consumer will consume the iteration independently so they will not share the values.",
              "from_url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654636897761789?thread_ts=1654636838.973459\u0026amp;cid=C03H0JN431U",
              "original_url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654636897761789?thread_ts=1654636838.973459\u0026amp;cid=C03H0JN431U",
              "mrkdwn_in": [
                "text"
              ],
              "blocks": null,
              "footer": "From a thread in #devtools-and-swift-lounge",
              "ts": 1654636897.761789
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6cy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "link",
                      "url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654636897761789?thread_ts=1654636838.973459\u0026cid=C03H0JN431U",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bfd78632-3c12-429b-94db-1b611e313571",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "so they will support multiple consuming, but those consumers wont share the values as they are sent",
          "ts": "1654720133.571209",
          "thread_ts": "1654720077.995359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "DxX/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "so they will support multiple consuming, but those consumers wont share the values as they are sent"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7e09a2f4-76c3-419c-8bd5-bef57272773d",
          "type": "message",
          "user": "U03HVC03PC6",
          "text": "Sorry I didn't see this previous answer :pray:\nBut the question is still (somewhat :slightly_smiling_face: ) relevant : if the consumers don't receive the same values the behavior is different from Subject. Can you explain the advantage of this choice?",
          "ts": "1654720296.144769",
          "thread_ts": "1654720077.995359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rCACx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sorry I didn't see this previous answer "
                    },
                    {
                      "type": "emoji",
                      "name": "pray",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\nBut the question is still (somewhat "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " ) relevant : if the consumers don't receive the same values the behavior is different from Subject. Can you explain the advantage of this choice?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "594659b4-a87e-46c7-a7b7-cf9fbc9a0b0a",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "part of that is that the iteration is stateful; having them share the values would put a big burden on folks writing their own AsyncSequences - it would end up getting into some gnarly bits like using locks etc",
          "ts": "1654720364.117869",
          "thread_ts": "1654720077.995359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Zcs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "part of that is that the iteration is stateful; having them share the values would put a big burden on folks writing their own AsyncSequences - it would end up getting into some gnarly bits like using locks etc"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a19d7c41-f7f3-4cda-99ba-5c7bbdd21c96",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "now there is evolution of the swift-async-algorithms package and that is an ongoing discussion of what the solution for that will be",
          "ts": "1654720391.356319",
          "thread_ts": "1654720077.995359",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J2019QTV"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sEy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "now there is evolution of the swift-async-algorithms package and that is an ongoing discussion of what the solution for that will be"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7da8f376-ac99-440a-a825-f5c651a665ef",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "because sharing is something folks want and need (rightfully so)",
          "ts": "1654720405.590489",
          "thread_ts": "1654720077.995359",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 1,
              "users": [
                "U03HVC03PC6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "39mi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "because sharing is something folks want and need (rightfully so)"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "b4c5175f-5132-4ace-aa26-29b9f74419e0",
      "type": "message",
      "user": "U03HHPM3VQT",
      "text": "A few questions have come in and our engineers are typing out the responses. In the meantime, I hope everyone has been enjoying the event so far. I am sure there are folks here from different parts of the world. I would love to hear from exactly where though! Maybe we have representation from all of the continents? :world_map:",
      "ts": "1654720291.784719",
      "thread_ts": "1654720291.784719",
      "reply_count": 7,
      "latest_reply": "1654728011.891929",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "NTM",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "A few questions have come in and our engineers are typing out the responses. In the meantime, I hope everyone has been enjoying the event so far. I am sure there are folks here from different parts of the world. I would love to hear from exactly where though! Maybe we have representation from all of the continents? "
                },
                {
                  "type": "emoji",
                  "name": "world_map",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "4c79029b-cc93-4af8-b7c0-d76732fe7cc1",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "I've _been to_ all 7 continents but I'm currently in California. :slightly_smiling_face:",
          "ts": "1654720471.240099",
          "thread_ts": "1654720291.784719",
          "parent_user_id": "U03HHPM3VQT",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "3Ma3=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I've "
                    },
                    {
                      "type": "text",
                      "text": "been to",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " all 7 continents but I'm currently in California. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e429f8c5-cbac-4df0-a47e-4a5fb0f8a5d7",
          "type": "message",
          "user": "U03JEDKRZJ6",
          "text": "Europe, so I'm sure many here. Although I noticed a lack of external WWDC groups based in UK. Where  is the UK community for Swift?",
          "ts": "1654721021.154479",
          "thread_ts": "1654720291.784719",
          "parent_user_id": "U03HHPM3VQT",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "DNns",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Europe, so I'm sure many here. Although I noticed a lack of external WWDC groups based in UK. Where  is the UK community for Swift?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "42c5457a-e284-45de-9a32-b020de9233d3",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "Also the _non_-continents: Auckland New Zealand :flag-nz:",
          "ts": "1654721158.687809",
          "thread_ts": "1654720291.784719",
          "parent_user_id": "U03HHPM3VQT",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jRno",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also the "
                    },
                    {
                      "type": "text",
                      "text": "non",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "-continents: Auckland New Zealand "
                    },
                    {
                      "type": "emoji",
                      "name": "flag-nz",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c4b8e942-3d19-45ba-824e-d30b7fbdc6b4",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Oh... NZ is so beautiful!",
          "ts": "1654721239.554849",
          "thread_ts": "1654720291.784719",
          "parent_user_id": "U03HHPM3VQT",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "man_in_lotus_position::skin-tone-3",
              "count": 1,
              "users": [
                "U03J4D1FEP6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kJ2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oh... NZ is so beautiful!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fcfe43b5-44dc-4a6e-99a4-608db434db3c",
          "type": "message",
          "user": "U03J20RJQ2X",
          "text": "I’m from Austria :slightly_smiling_face:",
          "ts": "1654721347.176129",
          "thread_ts": "1654720291.784719",
          "parent_user_id": "U03HHPM3VQT",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5mfQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’m from Austria "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "D77E02F7-9717-4530-98D6-2C3D5C854514",
          "type": "message",
          "user": "U03JLV0E8RJ",
          "text": "Italy here :it: ",
          "ts": "1654721794.960889",
          "thread_ts": "1654720291.784719",
          "parent_user_id": "U03HHPM3VQT",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vUOiO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Italy"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "here"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "emoji",
                      "name": "it",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "840CA530-47C9-4A2F-B7E5-E8246B752CA1",
          "type": "message",
          "user": "U03JJQ3BMB7",
          "text": "I'm from Canada. Thank you for providing this online option! It's awesome that I I can participate in WWDC from afar!",
          "ts": "1654728011.891929",
          "thread_ts": "1654720291.784719",
          "parent_user_id": "U03HHPM3VQT",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=Rova",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'm from "
                    },
                    {
                      "type": "text",
                      "text": "Canada."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Thank"
                    },
                    {
                      "type": "text",
                      "text": " you "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " providing "
                    },
                    {
                      "type": "text",
                      "text": "this"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "online"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "option!"
                    },
                    {
                      "type": "text",
                      "text": " It's awesome "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " I I "
                    },
                    {
                      "type": "text",
                      "text": "can"
                    },
                    {
                      "type": "text",
                      "text": " participate in "
                    },
                    {
                      "type": "text",
                      "text": "WWDC"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "from"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "afar!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J21F2PQS\u003e asked\n\u0026gt; Is there any way to guarantee that a Task will run not on the main thread?",
      "ts": "1654720432.233599",
      "thread_ts": "1654720432.233599",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 17,
      "latest_reply": "1654721855.871489",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "5mt1a",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J21F2PQS"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there any way to guarantee that a Task will run not on the main thread?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "61dd9c1b-b828-4506-b50a-7062873d92de",
          "type": "message",
          "user": "U03HHPM6QLB",
          "text": "A task only runs on the main thread under the following circumstances:\n  * When it is running a main actor isolated function\n   * If the task has been created from the context of a main actor isolated function, then it will inherit the main actor and run on the main thread\n\nIf your task has none of these properties, it should not run on the main thread.",
          "ts": "1654720452.168769",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hHVvb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "A task only runs on the main thread under the following circumstances:\n  * When it is running a main actor isolated function\n   * If the task has been created from the context of a main actor isolated function, then it will inherit the main actor and run on the main thread\n\nIf your task has none of these properties, it should not run on the main thread."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "96bd8b2d-9562-4f97-96c2-53be5323bcaf",
          "type": "message",
          "user": "U03J21F2PQS",
          "text": "Thank you!",
          "ts": "1654720538.335399",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cD+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "F7846F05-9B76-43A2-8303-FB571ECAEFDC",
          "type": "message",
          "user": "U03JWQLN8RJ",
          "text": "Since a view controller is typically main actor isolated, you would need to use Task.detached(), right?",
          "ts": "1654720556.019459",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U03J21F2PQS"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ps/IF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Since"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "view"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "controller"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "typically"
                    },
                    {
                      "type": "text",
                      "text": " main a"
                    },
                    {
                      "type": "text",
                      "text": "ctor"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "isolated,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " would "
                    },
                    {
                      "type": "text",
                      "text": "need"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "use"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Task."
                    },
                    {
                      "type": "text",
                      "text": "detached"
                    },
                    {
                      "type": "text",
                      "text": "(),"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "right?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7659f5b9-d5e0-42e8-b88e-5aeda4d0fa4c",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "Tasks are designed to move fluidly between actors, running wherever the code needs it to run",
          "ts": "1654720563.857969",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bZU6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Tasks are designed to move fluidly between actors, running wherever the code needs it to run"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e6e7b807-2ac7-4422-8550-4fbff79cfb29",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "Sync functions that aren’t actor-isolated will run wherever their caller was running",
          "ts": "1654720596.862399",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "c1A",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sync functions that aren’t actor-isolated will run wherever their caller was running"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b5e46bdc-5d47-4597-a5b5-bf9172a2d717",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "Async functions, however, will actively switch off actors if they aren’t actor-isolated, so you can always tell where they’re running statically",
          "ts": "1654720653.538229",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ICy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Async functions, however, will actively switch off actors if they aren’t actor-isolated, so you can always tell where they’re running statically"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7d3ee777-42de-40c3-a833-d629e012b72e",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "So if you call an async function that isn’t part of an actor and doesn’t inherit actor isolation from its context, it will not run on an actor",
          "ts": "1654720700.269729",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YhX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So if you call an async function that isn’t part of an actor and doesn’t inherit actor isolation from its context, it will not run on an actor"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "53824302-349e-4e22-8075-93b9fc4b54e0",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "If you’re in a view controller, yeah, that’s likely main actor isolated, so `Task { /**this code**/ }`  will also be isolated.  But if that code calls something async that’s not isolated, then you can be confident that that code won’t be running on the main actor, and you don’t specifically need to detach to do that",
          "ts": "1654720798.051679",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Zhc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you’re in a view controller, yeah, that’s likely main actor isolated, so "
                    },
                    {
                      "type": "text",
                      "text": "Task { /*",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "this code*",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "/ }",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "  will also be isolated.  But if that code calls something async that’s not isolated, then you can be confident that that code won’t be running on the main actor, and you don’t specifically need to detach to do that"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b1820fd4-f577-4e79-b16d-fe2593cea11f",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "If you haven't seen it yet, we cover this in more detail in the session \"Eliminate data races with Swift Concurrency\": \u003chttps://developer.apple.com/videos/play/wwdc2022/110351/\u003e",
          "ts": "1654720915.233319",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oMzBr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you haven't seen it yet, we cover this in more detail in the session \"Eliminate data races with Swift Concurrency\": "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2022/110351/",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1ae38f0c-d3c7-451e-bfd0-5871e9d04a95",
          "type": "message",
          "user": "U03J21F2PQS",
          "text": "If I use `let v = await doSomething()` it execute in main thread. But if I use `async let v = doSomething()` it execute in secondary thread. And yes, I am in a view controller. Is it a normal behavior or I do something wrong?",
          "ts": "1654721049.403549",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "DL8Vk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If I use "
                    },
                    {
                      "type": "text",
                      "text": "let v = await doSomething()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " it execute in main thread. But if I use "
                    },
                    {
                      "type": "text",
                      "text": "async let v = doSomething()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " it execute in secondary thread. And yes, I am in a view controller. Is it a normal behavior or I do something wrong?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "13da2040-b89c-4ea5-b63e-0398de40e4f8",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "That is the intended behavior. The initializer for `async let` runs in a child task that is concurrent with the code that declared `v`",
          "ts": "1654721208.335939",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "c9j8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That is the intended behavior. The initializer for "
                    },
                    {
                      "type": "text",
                      "text": "async let",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " runs in a child task that is concurrent with the code that declared "
                    },
                    {
                      "type": "text",
                      "text": "v",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5c677373-6337-4cc4-ba43-bd3bdffb0042",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "If `doSomething()` is main-actor-isolated and the current function is also, what's the effect?",
          "ts": "1654721252.900729",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JhTu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If "
                    },
                    {
                      "type": "text",
                      "text": "doSomething()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is main-actor-isolated and the current function is also, what's the effect?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ea1c6c1e-7987-41bc-8ee2-c5df38045713",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "The child task will start and then immediately suspect until the main actor is available.",
          "ts": "1654721330.996719",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RNV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The child task will start and then immediately suspect until the main actor is available."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "50fc0227-ad7f-4d34-afb2-aff25bec8b9c",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "And if the caller awaits the value `v`, it should suspend the caller and start executing `doSomething()`?",
          "ts": "1654721402.592079",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "SvNL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "And if the caller awaits the value "
                    },
                    {
                      "type": "text",
                      "text": "v",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", it should suspend the caller and start executing "
                    },
                    {
                      "type": "text",
                      "text": "doSomething()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "44b7089d-0405-4524-8292-5f54ab2e9c81",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "Yes, the caller has to `await` to get the value of `v`, at which point the child task can execute `doSomething()`.",
          "ts": "1654721659.481869",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vgx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, the caller has to "
                    },
                    {
                      "type": "text",
                      "text": "await",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to get the value of "
                    },
                    {
                      "type": "text",
                      "text": "v",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", at which point the child task can execute "
                    },
                    {
                      "type": "text",
                      "text": "doSomething()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ec56dbe7-93d1-4d62-be06-f814ab60ceb0",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "Cool, thanks!",
          "ts": "1654721738.275849",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "EoYK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Cool, thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b1550a2e-c2df-434e-9e2f-46619ba63424",
          "type": "message",
          "user": "U03J21F2PQS",
          "text": "Thank you!",
          "ts": "1654721855.871489",
          "thread_ts": "1654720432.233599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ezb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ3HJAE9\u003e asked\n\u0026gt; Are Actors intended to be long lived objects? Do they have a lifecycle?",
      "ts": "1654720499.949449",
      "thread_ts": "1654720499.949449",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654720559.261629",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "RRqeO",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ3HJAE9"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Are Actors intended to be long lived objects? Do they have a lifecycle?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "feb737bd-8708-4383-9c05-5451d67eb3b9",
          "type": "message",
          "user": "U03H36YQ5GX",
          "text": "You can define and use the actor type like other types in the language. An actor instance is inexpensive to create and use for coordination in a concurrent program. You can define an `init` and `deinit` for an actor's lifecycle management.",
          "ts": "1654720559.261629",
          "thread_ts": "1654720499.949449",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 3,
              "users": [
                "U03HZ3HJAE9",
                "U03HB5WGZU6",
                "U03JTPM78E7"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kYGS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can define and use the actor type like other types in the language. An actor instance is inexpensive to create and use for coordination in a concurrent program. You can define an "
                    },
                    {
                      "type": "text",
                      "text": "init",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "text",
                      "text": "deinit",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " for an actor's lifecycle management."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMCTSM2B\u003e asked\n\u0026gt; Given all of the recent changes and additions to swift concurrency through async/await, async sequence and now async algorithms, and given that combine has not changed in obvious ways, should those of us that have leveraged combine as the basis of our concurrency models within our apps be looking at migrating these towards the async await styles or are these likely to remain true siblings within Swift ecosystem?",
      "ts": "1654720641.605749",
      "thread_ts": "1654720641.605749",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654721023.029019",
      "reactions": [
        {
          "name": "+1",
          "count": 1,
          "users": [
            "U03JRSAP7U0"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "8PRh",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMCTSM2B"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Given all of the recent changes and additions to swift concurrency through async\\/await, async sequence and now async algorithms, and given that combine has not changed in obvious ways, should those of us that have leveraged combine as the basis of our concurrency models within our apps be looking at migrating these towards the async await styles or are these likely to remain true siblings within Swift ecosystem?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "5d17ee98-8d1e-41cc-a6e7-e65ac3ee33b3",
          "type": "message",
          "user": "U03HB5WGZU6",
          "text": "In general both systems have a place of their own; The new async APIs, thanks to their help from the compiler, are able to provide better ergonomics and safety, so they've got some clear advantages here. This does not mean that there is no place for Combine though -- Tony had a great thread explaining the team's thoughts on this yesterday, see here: \u003chttps://wwdc22.slack.com/archives/C03H0JN431U/p1654628520096709?thread_ts=1654628350.752979\u0026amp;cid=C03H0JN431U\u003e",
          "ts": "1654720663.604339",
          "thread_ts": "1654720641.605749",
          "attachments": [
            {
              "fallback": "[June 7th, 2022 12:02 PM] 7425066227075992085: Great question, thanks \u003c@U03JKD29SCV\u003e. You’re 100% correct that there are a lot of ways to add concurrency to your project. It’s been a long-standing challenge to make concurrency safe and easy to understand. I hope you’ll forgive my bias, but given the channel we’re in I’ll say this — async/await is the best way to use concurrency in your app. If you can use it, use that first. You’ve probably seen that we’re actively improving it over time as well, with more support for `Sendable` this year, additional algorithms for Async Sequence, and more.",
              "id": 1,
              "author_id": "U03HL5K6L04",
              "author_name": "Tony P (Apple)",
              "author_subname": "Tony P (Apple)",
              "author_link": "https://wwdc22.slack.com/team/U03HL5K6L04",
              "author_icon": "https://avatars.slack-edge.com/2022-06-03/3604899662887_b4ae2b3bf77ae5b0ec0e_48.png",
              "text": "Great question, thanks \u003c@U03JKD29SCV\u003e. You’re 100% correct that there are a lot of ways to add concurrency to your project. It’s been a long-standing challenge to make concurrency safe and easy to understand. I hope you’ll forgive my bias, but given the channel we’re in I’ll say this — async/await is the best way to use concurrency in your app. If you can use it, use that first. You’ve probably seen that we’re actively improving it over time as well, with more support for `Sendable` this year, additional algorithms for Async Sequence, and more.",
              "from_url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654628520096709?thread_ts=1654628350.752979\u0026amp;cid=C03H0JN431U",
              "original_url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654628520096709?thread_ts=1654628350.752979\u0026amp;cid=C03H0JN431U",
              "mrkdwn_in": [
                "text"
              ],
              "blocks": null,
              "footer": "From a thread in #devtools-and-swift-lounge",
              "ts": 1654628520.096709
            }
          ],
          "edited": {
            "user": "U03HB5WGZU6",
            "ts": "1654720671.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2rH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In general both systems have a place of their own; The new async APIs, thanks to their help from the compiler, are able to provide better ergonomics and safety, so they've got some clear advantages here. This does not mean that there is no place for Combine though -- Tony had a great thread explaining the team's thoughts on this yesterday, see here: "
                    },
                    {
                      "type": "link",
                      "url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654628520096709?thread_ts=1654628350.752979\u0026cid=C03H0JN431U",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "aaea50cb-354a-4b1c-985c-48704577ef9b",
          "type": "message",
          "user": "U03HMCTSM2B",
          "text": "Given that SwiftUI is still seemingly leveraging publishers through @Published is there a recommendation on a best way to link with async sequences in place of using combine that we should explore/experiment with?",
          "ts": "1654720832.941299",
          "thread_ts": "1654720641.605749",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8+kS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Given that SwiftUI is still seemingly leveraging publishers through @Published is there a recommendation on a best way to link with async sequences in place of using combine that we should explore/experiment with?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "12c53cd6-7ab0-4d03-a138-ed061a464273",
          "type": "message",
          "user": "U03HMCTSM2B",
          "text": "Or is it still best to leverage publisher streams when dealing with @published",
          "ts": "1654720868.232099",
          "thread_ts": "1654720641.605749",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "iUp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Or is it still best to leverage publisher streams when dealing with @published"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ce66e1a0-fe14-4a71-872f-49815a3c9046",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "`@Published` is still a pretty good way to interact with SwiftUI - but there are other options; e.g. the `View.task` method can modify `@State`",
          "ts": "1654720914.700439",
          "thread_ts": "1654720641.605749",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "MR7Vy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "@Published",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is still a pretty good way to interact with SwiftUI - but there are other options; e.g. the "
                    },
                    {
                      "type": "text",
                      "text": "View.task",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " method can modify "
                    },
                    {
                      "type": "text",
                      "text": "@State",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "316c759e-ea75-453b-8519-aed471bd975b",
          "type": "message",
          "user": "U03HMCTSM2B",
          "text": "Thanks, we’ll take some time to look into those options.",
          "ts": "1654720939.256979",
          "thread_ts": "1654720641.605749",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "iZ3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks, we’ll take some time to look into those options."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4f8483d4-ab82-465e-89e5-cc58a96ce9b3",
          "type": "message",
          "user": "U03HMCTSM2B",
          "text": "Does View.task allow for modification of @StateObject as well?",
          "ts": "1654720957.822839",
          "thread_ts": "1654720641.605749",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wHc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Does View.task allow for modification of @StateObject as well?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3c83e1bd-9777-47e2-ad09-ee4c2d3bbc74",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "I dont think that modifying `@StateObject` in non `@MainActor` contexts is safe",
          "ts": "1654720989.019959",
          "thread_ts": "1654720641.605749",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HMCTSM2B"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "andbR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I dont think that modifying "
                    },
                    {
                      "type": "text",
                      "text": "@StateObject",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in non "
                    },
                    {
                      "type": "text",
                      "text": "@MainActor",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " contexts is safe"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "721246a0-99d2-4bd2-8c95-cfe2dfd7781f",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "`@State` however from my understanding is actually one of the few things that is safe from any queue (but perhaps someone more attuned to the inner workings of SwiftUI might have a more definitive answer)",
          "ts": "1654721023.029019",
          "thread_ts": "1654720641.605749",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OMD",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "@State",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " however from my understanding is actually one of the few things that is safe from any queue (but perhaps someone more attuned to the inner workings of SwiftUI might have a more definitive answer)"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JL18FUHH\u003e asked\n\u0026gt; Is there a decent guide how to mix Core Data and structured concurrency? I find some 3rd party guides but nothing that would be written by Apple",
      "ts": "1654720643.575339",
      "thread_ts": "1654720643.575339",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654721564.403169",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "FLA",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JL18FUHH"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a decent guide how to mix Core Data and structured concurrency? I find some 3rd party guides but nothing that would be written by Apple\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "3c93f91d-3ef9-4e5f-8974-4f88f94ada10",
          "type": "message",
          "user": "U03HB5XGWCW",
          "text": "We don't currently have documentation on using Core Data in concurrent Swift code. Please file a bug in Feedback — you can post the feedback number here to help us route your bug to the documentation team more quickly.",
          "ts": "1654720757.145169",
          "thread_ts": "1654720643.575339",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 2,
              "users": [
                "U03JL18FUHH",
                "U03J20RJQ2X"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mas",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We don't currently have documentation on using Core Data in concurrent Swift code. Please file a bug in Feedback — you can post the feedback number here to help us route your bug to the documentation team more quickly."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7AABEAA4-20ED-48D0-ADC6-3C5EF49909D9",
          "type": "message",
          "user": "U03J2019QTV",
          "text": "It is nice that Core Data added NSManagedObjectContext.perform support for concurrency, so that you are able to do `await context.perform { }`. I’m using this a lot in my current app with structured concurrency and it’s working pretty well.",
          "ts": "1654721097.136389",
          "thread_ts": "1654720643.575339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "g65",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It is "
                    },
                    {
                      "type": "text",
                      "text": "nice"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Core"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Data"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "added"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "NSManagedObjectContext.perform"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "support"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "concurrency,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "so"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "are"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "able"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "do"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "await context.perform { }",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I’m"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "using"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "this"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "lot"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "current"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "app"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "with"
                    },
                    {
                      "type": "text",
                      "text": " structured concurrency "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it’s"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "working"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "pretty"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "well."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ffb1f58c-5f11-4201-9dbf-f91f26774cf0",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "I would love to see a future where Core Data complexities around only accessing NSManagedObjects in their NSManagedObjectContext are somehow wrapped into Actors and we just don’t have to think about it much any longer…",
          "ts": "1654721281.052729",
          "thread_ts": "1654720643.575339",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03J2019QTV",
                "U03JL18FUHH"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lyvl1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I would love to see a future where Core Data complexities around only accessing NSManagedObjects in their NSManagedObjectContext are somehow wrapped into Actors and we just don’t have to think about it much any longer…"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "11b382ae-f4d9-4734-8849-749bc89b5571",
          "type": "message",
          "user": "U03JL18FUHH",
          "text": "Robert, But you have to make sure that none of the NSManagedObjects are used outside of that `perform` block (I think they don’t conform to `Sendable`), correct? What if you need to use that elsewhere in your code? Do you simply convert those to structs for that purpose or is there some trick enabling use of managed objects?",
          "ts": "1654721397.303449",
          "thread_ts": "1654720643.575339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+45g4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Robert, But you have to make sure that none of the NSManagedObjects are used outside of that "
                    },
                    {
                      "type": "text",
                      "text": "perform",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " block (I think they don’t conform to "
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "), correct? What if you need to use that elsewhere in your code? Do you simply convert those to structs for that purpose or is there some trick enabling use of managed objects?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "19AEDAE1-AA19-4864-B59C-457CE9534F27",
          "type": "message",
          "user": "U03J2019QTV",
          "text": "\u003c@U03JL18FUHH\u003e Correct, you need to be very careful about where you use the `NSManagedObjects`. I have been using structs to pass the data around my app — which is a new approach for me. I’m actually quite liking how that's working.",
          "ts": "1654721564.403169",
          "thread_ts": "1654720643.575339",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 2,
              "users": [
                "U03JL18FUHH",
                "U03H36Z4LQP"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "QV7Q8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03JL18FUHH"
                    },
                    {
                      "type": "text",
                      "text": " Correct,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "need"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "very"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "careful"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "about"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "where"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "use"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "NSManagedObjects",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "have"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "been"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "using"
                    },
                    {
                      "type": "text",
                      "text": " struct"
                    },
                    {
                      "type": "text",
                      "text": "s"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "pass"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "data"
                    },
                    {
                      "type": "text",
                      "text": " around "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "app"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "—"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "which"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "new"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "approach"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "me."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I’m"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "actually"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "quite"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "liking"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "how"
                    },
                    {
                      "type": "text",
                      "text": " that's "
                    },
                    {
                      "type": "text",
                      "text": "working."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JJUHHF7W\u003e asked\n\u0026gt; About Minimal Strict Concurrency Checking, do we need to add Sendable conformance to struct and enum even though they are implicitly Sendable if we want to check Sendability?",
      "ts": "1654720754.969739",
      "thread_ts": "1654720754.969739",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654723391.575959",
      "reactions": [
        {
          "name": "eyes",
          "count": 1,
          "users": [
            "U03K840U3L1"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "+/yoa",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JJUHHF7W"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"About Minimal Strict Concurrency Checking, do we need to add Sendable conformance to struct and enum even though they are implicitly Sendable if we want to check Sendability?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "3357f6b5-aa6c-4c3b-a2f6-13f40a60bb0e",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "The compiler will infer the `Sendable`conformance for these types unless there is an explicitly-non-`Sendable` type in their instance data. If you want to be sure that the types are `Sendable`, add the explicit conformance and the compiler will produce warnings for types used in instance data that aren't known to be `Sendable`.",
          "ts": "1654720783.116229",
          "thread_ts": "1654720754.969739",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JJUHHF7W"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tpJvN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The compiler will infer the "
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "conformance for these types unless there is an explicitly-non-"
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " type in their instance data. If you want to be sure that the types are "
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", add the explicit conformance and the compiler will produce warnings for types used in instance data that aren't known to be "
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "35f4cdb1-cf7b-4274-97e2-d151cf313523",
          "type": "message",
          "user": "U03JJUHHF7W",
          "text": "Thank you!",
          "ts": "1654720914.526779",
          "thread_ts": "1654720754.969739",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VDChJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "647fd900-f120-4875-a5a7-44aede687700",
          "type": "message",
          "user": "U03JJUHHF7W",
          "text": "Sorry, I have one more question. If structs and enums are implicitly Sendable,  does Xcode emit warning to this redundant explicit conformance when we change Checking mode?",
          "ts": "1654722796.523939",
          "thread_ts": "1654720754.969739",
          "edited": {
            "user": "U03JJUHHF7W",
            "ts": "1654722844.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mjUO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sorry, I have one more question. If structs and enums are implicitly Sendable,  does Xcode emit warning to this redundant explicit conformance when we change Checking mode?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5414e0c0-01e7-4db5-bb4c-331b31c169d8",
          "type": "message",
          "user": "U03HHPMGVEF",
          "text": "No, it will not. If you place an explicit `Sendable` conformance on your struct or enum, that will suppress the implicit `Sendable` conformance",
          "ts": "1654723088.910759",
          "thread_ts": "1654720754.969739",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JJUHHF7W"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hdx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "No, it will not. If you place an explicit "
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " conformance on your struct or enum, that will suppress the implicit "
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " conformance"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a9f4dbd7-bc28-4493-aebf-e10449809a6d",
          "type": "message",
          "user": "U03JJUHHF7W",
          "text": "I see. Thank you very much!",
          "ts": "1654723391.575959",
          "thread_ts": "1654720754.969739",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XQAK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I see. Thank you very much!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRN827HN\u003e asked\n\u0026gt; In Xcode 14, some of the UIKit structs like `UIEdgeInsets` have their `Sendable` conformances marked explicitly as unavailable. That's a bit surprising, given that they are trivial data types. Why is that, and what's the purpose of conforming to `Sendable` and marking this as unavailable?",
      "ts": "1654721128.480909",
      "thread_ts": "1654721128.480909",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654722063.864819",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "RgSp",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRN827HN"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"In Xcode 14, some of the UIKit structs like `UIEdgeInsets` have their `Sendable` conformances marked explicitly as unavailable. That's a bit surprising, given that they are trivial data types. Why is that, and what's the purpose of conforming to `Sendable` and marking this as unavailable?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "e5eaf70a-842e-4523-9a6d-74b6fc7ff64a",
          "type": "message",
          "user": "U03H36Z4LQP",
          "text": "It looks like an accident that UIEdgeInsets was marked explicitly non-`Sendable` in the header. Please file a report in Feedback Assistant and we’ll look into it!",
          "ts": "1654721155.700409",
          "thread_ts": "1654721128.480909",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JRN827HN"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "yD3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It looks like an accident that UIEdgeInsets was marked explicitly non-"
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in the header. Please file a report in Feedback Assistant and we’ll look into it!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9f732bd6-7aa9-4ec2-a685-950886b9413c",
          "type": "message",
          "user": "U03JRN827HN",
          "text": "Thanks! So writing `@available(*, unavailable) extension X: Sendable` means that a type is _explicitly_ not thread safe?",
          "ts": "1654721255.751019",
          "thread_ts": "1654721128.480909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eknq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks! So writing "
                    },
                    {
                      "type": "text",
                      "text": "@available(*, unavailable) extension X: Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " means that a type is "
                    },
                    {
                      "type": "text",
                      "text": "explicitly",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " not thread safe?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1d03d213-ab2b-4ac3-bdc7-86d06a050f8a",
          "type": "message",
          "user": "U03H36Z4LQP",
          "text": "Yes, exactly. The compiler treats an explicitly unavailable `Sendable` conformance as a stronger sign that the type is not thread-safe, so it may treat them slightly differently from ones that are simply missing—for instance, it may show warnings it would normally suppress, or phrase them differently, or suggest different Fix-Its.",
          "ts": "1654721736.280479",
          "thread_ts": "1654721128.480909",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "bow",
              "count": 1,
              "users": [
                "U03JRN827HN"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+74u/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, exactly. The compiler treats an explicitly unavailable "
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " conformance as a stronger sign that the type is not thread-safe, so it may treat them slightly differently from ones that are simply missing—for instance, it may show warnings it would normally suppress, or phrase them differently, or suggest different Fix-Its."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0c5144cb-9b26-4de9-a8f7-6d718e0be7e5",
          "type": "message",
          "user": "U03JRN827HN",
          "text": "Got it, thanks!",
          "ts": "1654722059.400589",
          "thread_ts": "1654721128.480909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cbO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Got it, thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a6724035-41c4-41e9-8b0d-421910cdd2b5",
          "type": "message",
          "user": "U03JRN827HN",
          "text": "The feedback number is FB10112675.",
          "ts": "1654722063.864819",
          "thread_ts": "1654721128.480909",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "woman-bowing",
              "count": 1,
              "users": [
                "U03H36Z4LQP"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kAQNO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The feedback number is FB10112675."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J2019QTV\u003e asked\n\u0026gt; I’ve recently started a new project using Core Data. Should I endeavor to avoid DispatchQueues and NSManagedObjectContext.perform and instead model all concurrency via async/await and Tasks? Is there a downside to mixing the two approaches?",
      "ts": "1654721193.173029",
      "thread_ts": "1654721193.173029",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654721819.301179",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "szAW",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J2019QTV"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I\\u2019ve recently started a new project using Core Data. Should I endeavor to avoid DispatchQueues and NSManagedObjectContext.perform and instead model all concurrency via async\\/await and Tasks? Is there a downside to mixing the two approaches?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "c086932e-bd74-49a5-84af-9e33687766cd",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "We understand that this interaction isn’t great right now",
          "ts": "1654721237.667059",
          "thread_ts": "1654721193.173029",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nViPn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We understand that this interaction isn’t great right now"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "17b3ab49-b38b-49d7-ae5e-5fbcb7a2765d",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "You can bridge between these worlds yourself by writing `async` functions that call `perform` and use continuations to wait until the operation is complete",
          "ts": "1654721323.240499",
          "thread_ts": "1654721193.173029",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J2019QTV"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VAQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can bridge between these worlds yourself by writing "
                    },
                    {
                      "type": "text",
                      "text": "async",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " functions that call "
                    },
                    {
                      "type": "text",
                      "text": "perform",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and use continuations to wait until the operation is complete"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "96A4C7C1-9BC0-4613-AEE0-CD82761BF1F9",
          "type": "message",
          "user": "U03J2019QTV",
          "text": "Thank you. I’ve been doing some of that and will expand the approach.",
          "ts": "1654721434.895269",
          "thread_ts": "1654721193.173029",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HHQ7T15Y"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XQ9sW",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I’ve"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "been"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "doing"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "some"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "will"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "expand"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " approach"
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0349a1a4-6eb2-4120-b568-4ec6c4e972b8",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "Sharing what some of those functions look like in Feedback would be really valuable to us",
          "ts": "1654721550.503819",
          "thread_ts": "1654721193.173029",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ldV0",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sharing what some of those functions look like in Feedback would be really valuable to us"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "45B241BA-579A-4C2C-AD7C-A04A7E139A3E",
          "type": "message",
          "user": "U03J2019QTV",
          "text": "Thanks, \u003c@U03HHQ7T15Y\u003e . I will do that.",
          "ts": "1654721664.359119",
          "thread_ts": "1654721193.173029",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Youlv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HHQ7T15Y"
                    },
                    {
                      "type": "text",
                      "text": " ."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "will"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "do"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "37e3c5c8-792e-4cf1-b517-83a059f6bbdf",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "Thank you!",
          "ts": "1654721819.301179",
          "thread_ts": "1654721193.173029",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jusH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4D1FEP6\u003e asked\n\u0026gt; In trying to test code that used an AsyncSequence recently, I discovered that for NotificationCenter.Notifications the underlying subscription isn't established before the sequence value is returned to the caller, which results in test failures due to race conditions.\n\u0026gt; \n\u0026gt; My expectation would be that a sequence value should not be returned for an AsyncSequence until it is ready to respond to the events in question—but the AsyncSequence protocol does not specific this per se. Do you think that is a reasonable expectation?",
      "ts": "1654721295.634479",
      "thread_ts": "1654721295.634479",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 11,
      "latest_reply": "1654725288.399269",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "tNbc",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4D1FEP6"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"In trying to test code that used an AsyncSequence recently, I discovered that for NotificationCenter.Notifications the underlying subscription isn't established before the sequence value is returned to the caller, which results in test failures due to race conditions.\\n\\nMy expectation would be that a sequence value should not be returned for an AsyncSequence until it is ready to respond to the events in question\\u2014but the AsyncSequence protocol does not specific this per se. Do you think that is a reasonable expectation?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "cda02be3-301e-4616-8fa4-e7d9629331c2",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "I think this might be a bug; could you please file a feedback on that? The notifications sequence does register for the notifications and under normal scenarios does ensure they are pending before returning to the client.",
          "ts": "1654721303.125539",
          "thread_ts": "1654721295.634479",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mQHF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I think this might be a bug; could you please file a feedback on that? The notifications sequence does register for the notifications and under normal scenarios does ensure they are pending before returning to the client."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a6e0f6f9-bd1f-48e3-a7e4-72060a1efa8a",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "I definitely am planning on filing a Feedback, with a sample project. I was waiting to test this on iOS 16/Xcode 14 in case the behavior changed first.",
          "ts": "1654721339.261779",
          "thread_ts": "1654721295.634479",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nOJd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I definitely am planning on filing a Feedback, with a sample project. I was waiting to test this on iOS 16/Xcode 14 in case the behavior changed first."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "44d56ac8-b74c-449b-bc9a-7b68d5d09b94",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "There is obviously a small window between the call and the actual registration that things might slip into in obscure cases",
          "ts": "1654721344.759959",
          "thread_ts": "1654721295.634479",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "75S78",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There is obviously a small window between the call and the actual registration that things might slip into in obscure cases"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4c71b4f4-1201-4b26-b14c-0aae12a19b79",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "worth filing a bug either way :wink:",
          "ts": "1654721367.375069",
          "thread_ts": "1654721295.634479",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1::skin-tone-3",
              "count": 1,
              "users": [
                "U03J4D1FEP6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XFri",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "worth filing a bug either way "
                    },
                    {
                      "type": "emoji",
                      "name": "wink",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "17842ae2-746b-41db-b0d2-627a9f3b7b02",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "It led to quite some discussion (arguments?) here: \u003chttps://forums.swift.org/t/reliably-testing-code-that-adopts-swift-concurrency/57304/71\u003e",
          "ts": "1654721368.785399",
          "thread_ts": "1654721295.634479",
          "is_starred": true,
          "attachments": [
            {
              "fallback": "Swift Forums: Reliably testing code that adopts Swift Concurrency?",
              "id": 1,
              "title": "Reliably testing code that adopts Swift Concurrency?",
              "title_link": "https://forums.swift.org/t/reliably-testing-code-that-adopts-swift-concurrency/57304/71",
              "text": "I think this is absolutely key. I suggest what the example and investigations here in the thread have established is that there is a clear flaw in the implementation of AsyncSequence. It is a reasonable expectation of this type that when you await its initialization, it does not return until it is listening to the events it will handle. What is required is a bug report/evolution proposal to request that AsyncSequence behaves as would be expected in an async-await world. With that, no additiona...",
              "thumb_url": "https://aws1.discourse-cdn.com/swift/original/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6.png",
              "service_name": "Swift Forums",
              "service_icon": "https://aws1.discourse-cdn.com/swift/optimized/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6_2_180x180.png",
              "from_url": "https://forums.swift.org/t/reliably-testing-code-that-adopts-swift-concurrency/57304/71",
              "original_url": "https://forums.swift.org/t/reliably-testing-code-that-adopts-swift-concurrency/57304/71",
              "blocks": null,
              "ts": 1654142400
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8oRet",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It led to quite some discussion (arguments?) here: "
                    },
                    {
                      "type": "link",
                      "url": "https://forums.swift.org/t/reliably-testing-code-that-adopts-swift-concurrency/57304/71",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "67a4c255-f60d-448e-828f-08d464eb8d3d",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "yea ive been following that - quite an interesting topic in general",
          "ts": "1654721385.414219",
          "thread_ts": "1654721295.634479",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1SMO0",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "yea ive been following that - quite an interesting topic in general"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "58e3dd63-a2af-4a23-a940-66ebdf07cc07",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "… where my view was async/await code is generally fairly easily testable, but the OP and others appeared to be of the belief that the majority of it is not.",
          "ts": "1654721415.333909",
          "thread_ts": "1654721295.634479",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XufdI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "… where my view was async/await code is generally fairly easily testable, but the OP and others appeared to be of the belief that the majority of it is not."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "57cadd1f-a321-413c-b645-19287de7fa6a",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "i am pretty sure asynchronous code is testable, but sometimes things can get a bit tricky so i can see where it could be daunting",
          "ts": "1654721463.914029",
          "thread_ts": "1654721295.634479",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9/GQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "i am pretty sure asynchronous code is testable, but sometimes things can get a bit tricky so i can see where it could be daunting"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6bc88df3-7a3b-4f62-957c-cb5575d0cb72",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "Well dang, it looks like the conclusion in that thread and my pointing at NotificationCentre.Notifications was wrong. Having extracted the test into one that removes the View and ViewModel initialization of the original example, this test passes 100,000 times without error:",
          "ts": "1654724136.063529",
          "thread_ts": "1654721295.634479",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rVO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Well dang, it looks like the conclusion in that thread and my pointing at NotificationCentre.Notifications was wrong. Having extracted the test into one that removes the View and ViewModel initialization of the original example, this test passes 100,000 times without error:"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b6411db0-1d1b-4f6a-b914-d8572906f8ed",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "`*import* XCTest`\n\n`*class* AsyncSequenceTests: XCTestCase {`\n\n  `*func* test_notificationCentreNotifications_doesNotDisplayInitializationRaceCondition_whenRun100000times() *async*` `*throws* {`\n    // Actions and expectation\n    `*let* expectation = *self*.expectation(description: \"Notification received.\")`\n    `*let* fulfillExpectation = { expectation.fulfill() }`\n\n    // Initiate the NotificationCentre.Notifications AsyncSequence\n    `*let* asyncSequenceTask = Task {`\n      `*let* screenshotSequence = *await* NotificationCenter.default.notifications(`\n        named: UIApplication.userDidTakeScreenshotNotification\n      )\n      *`for`* `*await* _ *in* screenshotSequence {`\n        fulfillExpectation()\n      }\n    }\n\n    // Post the notification created when a screenshot occurs.\n    _ = `*await* MainActor.run {`\n      Task.detached(priority:.userInitiated, operation: {\n        `*await* \u003chttp://NotificationCenter.default.post|NotificationCenter.default.post\u003e(name: UIApplication.userDidTakeScreenshotNotification, object: *nil*)`\n      })\n    }\n\n    // Test expectations\n    *`await`* `*self*.waitForExpectations(timeout: 10)`\n    asyncSequenceTask.cancel()\n  }\n\n}",
          "ts": "1654724147.925679",
          "thread_ts": "1654721295.634479",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ufN1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "import",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " XCTest",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n\n"
                    },
                    {
                      "type": "text",
                      "text": "class",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " AsyncSequenceTests: XCTestCase {",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n\n  "
                    },
                    {
                      "type": "text",
                      "text": "func",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " test_notificationCentreNotifications_doesNotDisplayInitializationRaceCondition_whenRun100000times() ",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "async",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " ",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "throws",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " {",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n    // Actions and expectation\n    "
                    },
                    {
                      "type": "text",
                      "text": "let",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " expectation = ",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "self",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ".expectation(description: \"Notification received.\")",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n    "
                    },
                    {
                      "type": "text",
                      "text": "let",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " fulfillExpectation = { expectation.fulfill() }",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n\n    // Initiate the NotificationCentre.Notifications AsyncSequence\n    "
                    },
                    {
                      "type": "text",
                      "text": "let",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " asyncSequenceTask = Task {",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n      "
                    },
                    {
                      "type": "text",
                      "text": "let",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " screenshotSequence = ",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "await",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " NotificationCenter.default.notifications(",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n        named: UIApplication.userDidTakeScreenshotNotification\n      )\n      "
                    },
                    {
                      "type": "text",
                      "text": "for",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " ",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "await",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " _ ",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "in",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " screenshotSequence {",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n        fulfillExpectation()\n      }\n    }\n\n    // Post the notification created when a screenshot occurs.\n    _ = "
                    },
                    {
                      "type": "text",
                      "text": "await",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " MainActor.run {",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n      Task.detached(priority:.userInitiated, operation: {\n        "
                    },
                    {
                      "type": "text",
                      "text": "await",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " NotificationCenter.default.post(name: UIApplication.userDidTakeScreenshotNotification, object: ",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "nil",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ")",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n      })\n    }\n\n    // Test expectations\n    "
                    },
                    {
                      "type": "text",
                      "text": "await",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " ",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "self",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ".waitForExpectations(timeout: 10)",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n    asyncSequenceTask.cancel()\n  }\n\n}"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c57d9b80-32ff-4b4d-9e4d-1222e95225e1",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "that is a bit much to really get into on slack - id have to really pull it apart; make sure to file a feedback with any repro case like that",
          "ts": "1654725288.399269",
          "thread_ts": "1654721295.634479",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1::skin-tone-3",
              "count": 1,
              "users": [
                "U03J4D1FEP6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lU+r",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "that is a bit much to really get into on slack - id have to really pull it apart; make sure to file a feedback with any repro case like that"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JSG77YDA\u003e asked\n\u0026gt; Hi! Thank you for taking the time to answer our questions. I was wondering what is a recommended approach for serializing a series of async functions with Swift concurrency, so that they run one at a time, and run in order so one must complete before the next? My current attempt involves an `AsyncStream` within an actor, but it seems complex and I'm unsure it is correct:\n\u0026gt; \n\u0026gt; ```\n\u0026gt; final class Repository {\n\u0026gt;     func _request(_ requestMethod: RequestMethod) async throws -\u0026gt; RequestResult {\n\u0026gt;       // Execute an async request against a remote or local source (perhaps both)...\n\u0026gt;     }\n\u0026gt; }\n\u0026gt; \n\u0026gt; actor AsyncUserRepositoryWithStream {\n\u0026gt;     private let repository: AsyncUserRepository\n\u0026gt; \n\u0026gt;     struct StreamElement {\n\u0026gt;         let continuation: CheckedContinuation\u0026lt;AsyncUserRepository.RequestResult, Error\u0026gt;\n\u0026gt;         let action: () async throws -\u0026gt; AsyncUserRepository.RequestResult\n\u0026gt;     }\n\u0026gt; \n\u0026gt;     var task: Task\u0026lt;Void, Error\u0026gt;!\n\u0026gt;     var stream: AsyncStream\u0026lt;StreamElement\u0026gt;!\n\u0026gt;     var streamContinuation: AsyncStream\u0026lt;StreamElement\u0026gt;.Continuation!\n\u0026gt; \n\u0026gt;     init(urlSession: URLSession, baseUrl: URL, persistentContainer: NSPersistentContainer) {\n\u0026gt;         self.repository = .init(urlSession: urlSession, baseUrl: baseUrl, persistentContainer: persistentContainer)\n\u0026gt; \n\u0026gt;         var streamContinuation: AsyncStream\u0026lt;StreamElement\u0026gt;.Continuation!\n\u0026gt; \n\u0026gt;         stream = AsyncStream {\n\u0026gt;             streamContinuation = $0\n\u0026gt;         }\n\u0026gt; \n\u0026gt;         self.streamContinuation = streamContinuation\n\u0026gt;     }\n\u0026gt; \n\u0026gt;     func request(_ requestMethod: RequestMethod) async throws -\u0026gt; AsyncUserRepository.RequestResult {\n\u0026gt;         if task == nil {\n\u0026gt;             task = Task {\n\u0026gt;                 for await element in stream {\n\u0026gt;                     do {\n\u0026gt;                         let result = try await element.action()\n\u0026gt;                         element.continuation.resume(returning: result)\n\u0026gt;                     } catch {\n\u0026gt;                         element.continuation.resume(throwing: error)\n\u0026gt;                     }\n\u0026gt;                 }\n\u0026gt;             }\n\u0026gt;         }\n\u0026gt; \n\u0026gt;         let result = try await withCheckedThrowingContinuation { (continuation: CheckedContinuation\u0026lt;AsyncUserRepository.RequestResult, Error\u0026gt;) in\n\u0026gt;             streamContinuation.yield(\n\u0026gt;                 .init(\n\u0026gt;                     continuation: continuation,\n\u0026gt;                     action: {\n\u0026gt;                         try await self.repository._request(requestMethod)\n\u0026gt;                     }\n\u0026gt;                 )\n\u0026gt;             )\n\u0026gt;         }\n\u0026gt; \n\u0026gt;         return result\n\u0026gt;     }\n\u0026gt; }\n\u0026gt; ```\n\u0026gt; \n\u0026gt; Do you have a recommended approach?",
      "ts": "1654721812.972349",
      "thread_ts": "1654721812.972349",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654725179.850339",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "8=MMy",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JSG77YDA"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi! Thank you for taking the time to answer our questions. I was wondering what is a recommended approach for serializing a series of async functions with Swift concurrency, so that they run one at a time, and run in order so one must complete before the next? My current attempt involves an `AsyncStream` within an actor, but it seems complex and I'm unsure it is correct:\\n\\n```\\nfinal class Repository {\\n    func _request(_ requestMethod: RequestMethod) async throws -\u003e RequestResult {\\n      \\/\\/ Execute an async request against a remote or local source (perhaps both)...\\n    }\\n}\\n\\nactor AsyncUserRepositoryWithStream {\\n    private let repository: AsyncUserRepository\\n\\n    struct StreamElement {\\n        let continuation: CheckedContinuation\u003cAsyncUserRepository.RequestResult, Error\u003e\\n        let action: () async throws -\u003e AsyncUserRepository.RequestResult\\n    }\\n\\n    var task: Task\u003cVoid, Error\u003e!\\n    var stream: AsyncStream\u003cStreamElement\u003e!\\n    var streamContinuation: AsyncStream\u003cStreamElement\u003e.Continuation!\\n\\n    init(urlSession: URLSession, baseUrl: URL, persistentContainer: NSPersistentContainer) {\\n        self.repository = .init(urlSession: urlSession, baseUrl: baseUrl, persistentContainer: persistentContainer)\\n\\n        var streamContinuation: AsyncStream\u003cStreamElement\u003e.Continuation!\\n\\n        stream = AsyncStream {\\n            streamContinuation = $0\\n        }\\n\\n        self.streamContinuation = streamContinuation\\n    }\\n\\n    func request(_ requestMethod: RequestMethod) async throws -\u003e AsyncUserRepository.RequestResult {\\n        if task == nil {\\n            task = Task {\\n                for await element in stream {\\n                    do {\\n                        let result = try await element.action()\\n                        element.continuation.resume(returning: result)\\n                    } catch {\\n                        element.continuation.resume(throwing: error)\\n                    }\\n                }\\n            }\\n        }\\n\\n        let result = try await withCheckedThrowingContinuation { (continuation: CheckedContinuation\u003cAsyncUserRepository.RequestResult, Error\u003e) in\\n            streamContinuation.yield(\\n                .init(\\n                    continuation: continuation,\\n                    action: {\\n                        try await self.repository._request(requestMethod)\\n                    }\\n                )\\n            )\\n        }\\n\\n        return result\\n    }\\n}\\n```\\n\\nDo you have a recommended approach?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "039b242b-4390-4721-b680-2751c1eea7d1",
          "type": "message",
          "user": "U03HHPM6QLB",
          "text": "Please do file a Feedback request with some information about your motivating use case for requiring FIFO behaviour. In the meantime, a  potential approach to get the desired behaviour with existing constructs, would be to make `Repository` an actor which has a queue of work items. It then creates a single Task in its initializer to drain that queue of work items - thereby giving you FIFO ordering as well as mutual exclusion.",
          "ts": "1654721842.202959",
          "thread_ts": "1654721812.972349",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-thank-you",
              "count": 2,
              "users": [
                "U03JSG77YDA",
                "U03J4C2ATRA"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "i9y6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Please do file a Feedback request with some information about your motivating use case for requiring FIFO behaviour. In the meantime, a  potential approach to get the desired behaviour with existing constructs, would be to make "
                    },
                    {
                      "type": "text",
                      "text": "Repository",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " an actor which has a queue of work items. It then creates a single Task in its initializer to drain that queue of work items - thereby giving you FIFO ordering as well as mutual exclusion."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c530f77b-483f-4509-bfc0-d23c1a9f8cfb",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "You might also consider just using a non-actor class that protects the queue with its own internal lock; that way, you’ll be able to enqueue things on it synchronously",
          "ts": "1654724193.417509",
          "thread_ts": "1654721812.972349",
          "edited": {
            "user": "U03HHQ7T15Y",
            "ts": "1654724214.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "otFF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You might also consider just using a non-actor class that protects the queue with its own internal lock; that way, you’ll be able to enqueue things on it synchronously"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "47079495-4952-4f4d-9175-e857ebf09baf",
          "type": "message",
          "user": "U03JSG77YDA",
          "text": "Thank you both! This is indeed something where I have to rethink things. The basic use case is serializing access (reads/writes) to a remote server resource that is also backed by Core Data. There can be a number of inflight requests that I want to make sure are in order, e.g. fetch a user resource from a server, store in Core Data, then later write an update to the user resource to Core Data, and then write that update to the server. These can be repeated many times, alongside fetches\n\nI have previously approached this with a `DispatchSemaphore(value: 1)`",
          "ts": "1654724758.468699",
          "thread_ts": "1654721812.972349",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Mx3L",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you both! This is indeed something where I have to rethink things. The basic use case is serializing access (reads/writes) to a remote server resource that is also backed by Core Data. There can be a number of inflight requests that I want to make sure are in order, e.g. fetch a user resource from a server, store in Core Data, then later write an update to the user resource to Core Data, and then write that update to the server. These can be repeated many times, alongside fetches\n\nI have previously approached this with a `DispatchSemaphore(value: 1)`"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f77a7547-069c-4df0-aff6-390adc230cfc",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "It’s definitely something we’re thinking about.  Understanding what the code looks like that wants to use this would be helpful — in particular, whether it’s likely to want to wait, whether you rely on FIFO ordering or just want to make sure that events don’t interleave, etc.",
          "ts": "1654724908.111639",
          "thread_ts": "1654721812.972349",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jgr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It’s definitely something we’re thinking about.  Understanding what the code looks like that wants to use this would be helpful — in particular, whether it’s likely to want to wait, whether you rely on FIFO ordering or just want to make sure that events don’t interleave, etc."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2BBA16C6-50B7-4ADC-B3D8-264828BC6419",
          "type": "message",
          "user": "U03JSG77YDA",
          "text": "Thanks, I have a larger code sample with unit tests I’ll be sure to submit!",
          "ts": "1654725179.850339",
          "thread_ts": "1654721812.972349",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HHQ7T15Y"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YPqou",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks"
                    },
                    {
                      "type": "text",
                      "text": ","
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "have"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "larger"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "code"
                    },
                    {
                      "type": "text",
                      "text": " sample "
                    },
                    {
                      "type": "text",
                      "text": "with"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "unit"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "tests"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I’ll"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "sure"
                    },
                    {
                      "type": "text",
                      "text": " to "
                    },
                    {
                      "type": "text",
                      "text": "submit!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J20K7526\u003e asked\n\u0026gt; How can the Reader/Writer problem solved efficiently with Swift concurrency? Write operations should have exclusive access (serialized), readers can perform in parallel. Actors serialize everything, which is not optimal from a performance perspective.",
      "ts": "1654721858.924229",
      "thread_ts": "1654721858.924229",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 10,
      "latest_reply": "1654877276.058529",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "QrD",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J20K7526"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"How can the Reader\\/Writer problem solved efficiently with Swift concurrency? Write operations should have exclusive access (serialized), readers can perform in parallel. Actors serialize everything, which is not optimal from a performance perspective.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "fb6073d5-f784-4b34-b3b8-24055ac575c8",
          "type": "message",
          "user": "U03HHPM6QLB",
          "text": "In general, we have found that reader writer locks sound like a good idea in theory, but in practice they degrade to bad behaviour including lack of priority inversion avoidance support, starvation issues etc. Most use cases we have found are able to perform just as well while using an efficient lock implementation - like OSAllocatedUnfairLock or actors. If you have a motivating use case that needs RW locks, we’d like to hear about it, so please do file a Feedback request.",
          "ts": "1654721891.707569",
          "thread_ts": "1654721858.924229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qgn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In general, we have found that reader writer locks sound like a good idea in theory, but in practice they degrade to bad behaviour including lack of priority inversion avoidance support, starvation issues etc. Most use cases we have found are able to perform just as well while using an efficient lock implementation - like OSAllocatedUnfairLock or actors. If you have a motivating use case that needs RW locks, we’d like to hear about it, so please do file a Feedback request."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6ce98f4b-1e3e-4be7-bcde-831bb8b22395",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "For more information on `OSAllocatedUnfairLock`, which is new in macOS Ventura and iOS 16, see \u003chttps://developer.apple.com/documentation/os/osallocatedunfairlock\u003e",
          "ts": "1654722197.590979",
          "thread_ts": "1654721858.924229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7lOH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "For more information on "
                    },
                    {
                      "type": "text",
                      "text": "OSAllocatedUnfairLock",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", which is new in macOS Ventura and iOS 16, see "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/os/osallocatedunfairlock",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "08547fa0-7238-4654-bae4-c4643a7ca2b8",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "I would add that if something is both heavily contended and heavily biased towards readers, the best solution is usually to jump all the way to a lockless algorithm like read-copy-update",
          "ts": "1654722989.969759",
          "thread_ts": "1654721858.924229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pG8og",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I would add that if something is both heavily contended and heavily biased towards readers, the best solution is usually to jump all the way to a lockless algorithm like read-copy-update"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a16b0499-9e26-4278-901d-399717dd3c85",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "Even in the short term, if you can’t make make the leap to be truly lockless, holding a lock briefly while you copy or overwrite the value should have similar overhead to a reader/writer lock, and you’ll be forced to architect clients in a way that’s consistent with a lockless approach if you eventually adopt one",
          "ts": "1654723251.943839",
          "thread_ts": "1654721858.924229",
          "edited": {
            "user": "U03HHQ7T15Y",
            "ts": "1654723269.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+j2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Even in the short term, if you can’t make make the leap to be truly lockless, holding a lock briefly while you copy or overwrite the value should have similar overhead to a reader/writer lock, and you’ll be forced to architect clients in a way that’s consistent with a lockless approach if you eventually adopt one"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "573f647d-4e06-4003-bcfd-6df9e9da0b9b",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "Or you can simply use a lock normally but design your data so that reads spend very little time in the critical section, e.g. just copying a small COW data structure or object reference",
          "ts": "1654723532.570729",
          "thread_ts": "1654721858.924229",
          "edited": {
            "user": "U03HHQ7T15Y",
            "ts": "1654723597.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sPW",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Or you can simply use a lock normally but design your data so that reads spend very little time in the critical section, e.g. just copying a small COW data structure or object reference"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6f954053-88ee-401d-923a-fecdf97cdcfc",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "The key insight here is that acquiring a reader/writer lock is usually not cheaper than acquiring a mutex, so the only efficiency win is parallelism within reads, which you can mostly duplicate by simply reducing the amount of time you spend in the critical section during those reads",
          "ts": "1654723802.526759",
          "thread_ts": "1654721858.924229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=wRO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The key insight here is that acquiring a reader/writer lock is usually not cheaper than acquiring a mutex, so the only efficiency win is parallelism within reads, which you can mostly duplicate by simply reducing the amount of time you spend in the critical section during those reads"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "93ebf760-08b7-47df-a11a-da07ac78b19f",
          "type": "message",
          "user": "U03HB5WSFRC",
          "text": "if you want to integrate data structures with manual synchronization into an actor, such as lockless data structures or data structures with manually-tuned locking like what \u003c@U03HHQ7T15Y\u003e described, you could define them in a `Sendable` class and expose them in actors as `nonisolated` properties, which will allow code to access them from the actor without going through the actor's own queue",
          "ts": "1654724166.397639",
          "thread_ts": "1654721858.924229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "t/2d",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "if you want to integrate data structures with manual synchronization into an actor, such as lockless data structures or data structures with manually-tuned locking like what "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HHQ7T15Y"
                    },
                    {
                      "type": "text",
                      "text": " described, you could define them in a "
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " class and expose them in actors as "
                    },
                    {
                      "type": "text",
                      "text": "nonisolated",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " properties, which will allow code to access them from the actor without going through the actor's own queue"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d5d39cb2-6f68-4e0a-b66a-d1a15fc302d0",
          "type": "message",
          "user": "U03HB5WSFRC",
          "text": "(or even traditional `pthread_rwlock`s, if you've established your existing code benefits from using them)",
          "ts": "1654724676.887589",
          "thread_ts": "1654721858.924229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rWI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(or even traditional "
                    },
                    {
                      "type": "text",
                      "text": "pthread_rwlock",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "s, if you've established your existing code benefits from using them)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d522b7dd-40ef-455b-b837-743df5bc9161",
          "type": "message",
          "user": "U03J20K7526",
          "text": "Thanks a lot for taking the time to answer my question and all the suggestions! I will look into custom locking behavior within an actor.\n\nThe way we currently solve it is to setup `NSOperation` dependencies when an operation is enqueued (within specific groups of operations that relate to a certain part of the model). This guarantees that operations are executed in the desired order.\nThat's a very easy to understand solution to the problem and not as error-prone as locking because the details are abstracted away behind the dependency management of the queue.\n\nIt would be really great to have more control over the execution order of tasks in certain cases without having to fallback to locking via mutexes etc.",
          "ts": "1654755679.049939",
          "thread_ts": "1654721858.924229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pUt/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks a lot for taking the time to answer my question and all the suggestions! I will look into custom locking behavior within an actor.\n\nThe way we currently solve it is to setup "
                    },
                    {
                      "type": "text",
                      "text": "NSOperation",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " dependencies when an operation is enqueued (within specific groups of operations that relate to a certain part of the model). This guarantees that operations are executed in the desired order.\nThat's a very easy to understand solution to the problem and not as error-prone as locking because the details are abstracted away behind the dependency management of the queue.\n\nIt would be really great to have more control over the execution order of tasks in certain cases without having to fallback to locking via mutexes etc."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "40387383-061b-4be4-b3f5-b4399bba344a",
          "type": "message",
          "user": "U03HB5WSFRC",
          "text": "Thanks for the reply! It would be great to get a feedback report from you about what you're trying to accomplish, if you have a moment to write up more. We're looking into adding more facilities to control execution order and having examples of what people are doing in practice will help inform our design. In the meantime, it may help to think about managing execution order within a single task, rather than trying to coordinate execution order across different tasks—for instance, you could have an actor that holds onto a queue of work items that other tasks can send work items to, and a single task that drains the queue in order.",
          "ts": "1654877276.058529",
          "thread_ts": "1654721858.924229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "S2l",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the reply! It would be great to get a feedback report from you about what you're trying to accomplish, if you have a moment to write up more. We're looking into adding more facilities to control execution order and having examples of what people are doing in practice will help inform our design. In the meantime, it may help to think about managing execution order within a single task, rather than trying to coordinate execution order across different tasks—for instance, you could have an actor that holds onto a queue of work items that other tasks can send work items to, and a single task that drains the queue in order."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JXD1AQRE\u003e asked\n\u0026gt; If `Task {` is called from a MainActor, does that mean the Task will always run on the main thread?",
      "ts": "1654721932.619439",
      "thread_ts": "1654721932.619439",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654723403.498459",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ZSiR",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JXD1AQRE"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"If `Task {` is called from a MainActor, does that mean the Task will always run on the main thread?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "fca22ce6-8062-4fda-a065-8efa134fc798",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "It’ll start running on the main thread, but tasks flow between actors as needed.  In particular, if the task calls an `async` function which isn’t actor-isolated, it’ll switch off of the main actor while it’s in that function, and it’ll only switch back when it calls or returns to code that’s actor-isolated again",
          "ts": "1654722033.257079",
          "thread_ts": "1654721932.619439",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YkDU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It’ll start running on the main thread, but tasks flow between actors as needed.  In particular, if the task calls an "
                    },
                    {
                      "type": "text",
                      "text": "async",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " function which isn’t actor-isolated, it’ll switch off of the main actor while it’s in that function, and it’ll only switch back when it calls or returns to code that’s actor-isolated again"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cd611dbd-52ff-461d-8bda-1b97f05599af",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "There’s more about this in today’s session called “Eliminate data races with Swift Concurrency”: \u003chttps://developer.apple.com/videos/play/wwdc2022/110351/\u003e",
          "ts": "1654722127.022749",
          "thread_ts": "1654721932.619439",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JXD1AQRE",
                "U03JEEUJPMJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zyn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There’s more about this in today’s session called “Eliminate data races with Swift Concurrency”: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2022/110351/",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "74e786a6-1c20-4205-b1a3-d967fbe5b2c0",
          "type": "message",
          "user": "U03JXD1AQRE",
          "text": "So an `async` function inside a `MainActor` makes an `await` call. That await will switch off of the main actor?",
          "ts": "1654722163.063019",
          "thread_ts": "1654721932.619439",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gaf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So an "
                    },
                    {
                      "type": "text",
                      "text": "async",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " function inside a "
                    },
                    {
                      "type": "text",
                      "text": "MainActor",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " makes an "
                    },
                    {
                      "type": "text",
                      "text": "await",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " call. That await will switch off of the main actor?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "da3bdc42-1979-4c69-aa3f-f258f91375e4",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "If it’s calling an `async` function that isn’t `MainActor`-isolated, yes",
          "ts": "1654723403.498459",
          "thread_ts": "1654721932.619439",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JXD1AQRE"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0wb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If it’s calling an "
                    },
                    {
                      "type": "text",
                      "text": "async",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " function that isn’t "
                    },
                    {
                      "type": "text",
                      "text": "MainActor",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "-isolated, yes"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JL18FUHH\u003e asked\n\u0026gt; I have a question about structured concurrency cancelation. In particular best practice for sharing responsibilities when canceling.\n\u0026gt; \n\u0026gt; Given the code snipet:\n\u0026gt; ```\n\u0026gt; ...\n\u0026gt; task = Task {\n\u0026gt;     let longRunningWorker = LongRunningWorker(inputURL: fileURL)\n\u0026gt;     fileURL = try await longRunningWorker!.doAsyncWork()\n\u0026gt; \n\u0026gt;     let image = try await ImageService.i.generateImage()\n\u0026gt;     let modifiedImage = try await doSomeMoreAsyncWork(image)\n\u0026gt;     let andMore = try await andSomeMore(modifiedImage)\n\u0026gt; }\n\u0026gt; ...\n\u0026gt; ```\n\u0026gt; \n\u0026gt; At some point I might call `task.cancel()`. How that should be handled?\n\u0026gt; \n\u0026gt; After reading all of the tutorials I see two paths and I'm not sure which one is better:\n\u0026gt; 1) Add `try Task.checkCancellation()` after each line in the code snippet above\n\u0026gt; 2) Those async methods should handle cancellation in-them which would result in some boilerplate code in each of them.",
      "ts": "1654722129.921149",
      "thread_ts": "1654722129.921149",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654722347.676789",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "dOtJ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JL18FUHH"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I have a question about structured concurrency cancelation. In particular best practice for sharing responsibilities when canceling.\\n\\nGiven the code snipet:\\n```\\n...\\ntask = Task {\\n    let longRunningWorker = LongRunningWorker(inputURL: fileURL)\\n    fileURL = try await longRunningWorker!.doAsyncWork()\\n\\n    let image = try await ImageService.i.generateImage()\\n    let modifiedImage = try await doSomeMoreAsyncWork(image)\\n    let andMore = try await andSomeMore(modifiedImage)\\n}\\n...\\n```\\n\\nAt some point I might call `task.cancel()`. How that should be handled?\\n\\nAfter reading all of the tutorials I see two paths and I'm not sure which one is better:\\n1) Add `try Task.checkCancellation()` after each line in the code snippet above\\n2) Those async methods should handle cancellation in-them which would result in some boilerplate code in each of them.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "30b80d56-0bd6-436f-a20b-290841a7c89a",
          "type": "message",
          "user": "U03HB5WGZU6",
          "text": "You're right to observe that task cancellation is cooperative in Swift; So you'll need to write the checking \"somewhere\" to interrupt the work.\n\nThe question is equally about semantics and code organization at that point -- do you control those other APIs? Do they perhaps already throw on cancellation? If they can't be made to respect it, you can add the checks yourself after/before calls to them.\n\nIn general it depends on the frameworks you're using and if they handle it or you have to yourself -- refer to their documentation to find out.",
          "ts": "1654722144.384569",
          "thread_ts": "1654722129.921149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "K=Lx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You're right to observe that task cancellation is cooperative in Swift; So you'll need to write the checking \"somewhere\" to interrupt the work.\n\nThe question is equally about semantics and code organization at that point -- do you control those other APIs? Do they perhaps already throw on cancellation? If they can't be made to respect it, you can add the checks yourself after/before calls to them.\n\nIn general it depends on the frameworks you're using and if they handle it or you have to yourself -- refer to their documentation to find out."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "096b0b5e-e82f-418a-ba0b-a7c88b571343",
          "type": "message",
          "user": "U03HB5WGZU6",
          "text": "It also might not be worth checking before \"every\" operation; You should check before starting some \"heavy\" work, or in order to avoid holding onto precious resources for longer than necessary etc. On the other hand, it's some cheap call, letting it run might be just fine.",
          "ts": "1654722204.441729",
          "thread_ts": "1654722129.921149",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 1,
              "users": [
                "U03JL18FUHH"
              ]
            },
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JL18FUHH"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Z9xY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It also might not be worth checking before \"every\" operation; You should check before starting some \"heavy\" work, or in order to avoid holding onto precious resources for longer than necessary etc. On the other hand, it's some cheap call, letting it run might be just fine."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "31e673b1-2973-46ee-8002-36616e231f1b",
          "type": "message",
          "user": "U03JL18FUHH",
          "text": "Thank you for your answers. Assuming all those APIs are in-house, the approach where those methods handle their cancellation is preferred, correct?",
          "ts": "1654722237.933819",
          "thread_ts": "1654722129.921149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "B=V",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for your answers. Assuming all those APIs are in-house, the approach where those methods handle their cancellation is preferred, correct?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "94157d47-deaa-4c61-a293-656d5faa5ecc",
          "type": "message",
          "user": "U03HB5WGZU6",
          "text": "most likely, but keep in mind what semantics you want from it all :slightly_smiling_face:",
          "ts": "1654722266.339999",
          "thread_ts": "1654722129.921149",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dEs5c",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "most likely, but keep in mind what semantics you want from it all "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d5385469-eb0f-4fd8-a726-da1210e43680",
          "type": "message",
          "user": "U03JL18FUHH",
          "text": "Thank you",
          "ts": "1654722347.676789",
          "thread_ts": "1654722129.921149",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03HB5WGZU6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+H/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JM1PJE9G\u003e asked\n\u0026gt; If MainActor func is called from MainActor context is there a way to execute it synchronously without scheduling for the next loop?",
      "ts": "1654722185.159659",
      "thread_ts": "1654722185.159659",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654722499.658869",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "qoFyl",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JM1PJE9G"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"If MainActor func is called from MainActor context is there a way to execute it synchronously without scheduling for the next loop?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "d1678797-516e-4640-9785-b28586286012",
          "type": "message",
          "user": "U03HESHGASH",
          "text": "nice question",
          "ts": "1654722209.225459",
          "thread_ts": "1654722185.159659",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZulJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "nice question"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "46e6ba9a-875a-4419-ad62-7f612c1bffbf",
          "type": "message",
          "user": "U03J7HD4E64",
          "text": "If we know that we are on the main actor, the call is made synchronously.",
          "ts": "1654722214.221119",
          "thread_ts": "1654722185.159659",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2n6Z",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If we know that we are on the main actor, the call is made synchronously."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8305a3f7-101b-463a-b1c7-e39bdcd1b033",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "That’s generally true for calls between actors.  If they’re dynamically between the same actor, there’s no scheduling overhead",
          "ts": "1654722326.478109",
          "thread_ts": "1654722185.159659",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "voG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That’s generally true for calls between actors.  If they’re dynamically between the same actor, there’s no scheduling overhead"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8a916ef5-a1e8-4a3e-974d-21b242d0cc63",
          "type": "message",
          "user": "U03JM1PJE9G",
          "text": "but, if the func is called inside of the main thread, but not in MainActor context, then it’s not called immediately?",
          "ts": "1654722328.151309",
          "thread_ts": "1654722185.159659",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Rbr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "but, if the func is called inside of the main thread, but not in MainActor context, then it’s not called immediately?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "30cb422a-989b-4622-a143-962efdba1bce",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "By “call”, do you mean something like `Task { call(); }`?",
          "ts": "1654722357.540609",
          "thread_ts": "1654722185.159659",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "DUEJH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "By “call”, do you mean something like "
                    },
                    {
                      "type": "text",
                      "text": "Task { call(); }",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a9233d76-7e13-4dc2-86b8-f921eb408a37",
          "type": "message",
          "user": "U03JM1PJE9G",
          "text": "yes",
          "ts": "1654722386.636539",
          "thread_ts": "1654722185.159659",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YLNJY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "yes"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "da178ff6-6910-4a8c-b9c5-d4b714a06ad1",
          "type": "message",
          "user": "U03HHQ7T15Y",
          "text": "Okay.  The code inside `Task {}` does not run synchronously, and no, there’s currently no way to run part of it synchronously.  If you need something to happen synchronously, you need to pull it out of the `Task {}`",
          "ts": "1654722467.746919",
          "thread_ts": "1654722185.159659",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "L1bq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Okay.  The code inside "
                    },
                    {
                      "type": "text",
                      "text": "Task {}",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " does not run synchronously, and no, there’s currently no way to run part of it synchronously.  If you need something to happen synchronously, you need to pull it out of the "
                    },
                    {
                      "type": "text",
                      "text": "Task {}",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "db7a1a1e-6737-4649-85dd-112966e602f9",
          "type": "message",
          "user": "U03JM1PJE9G",
          "text": "okay. Thank you for the answer",
          "ts": "1654722499.658869",
          "thread_ts": "1654722185.159659",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bZqgT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "okay. Thank you for the answer"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JK6RTGSJ\u003e asked\n\u0026gt; Hi, with the new Async Algorithms for AsyncSequence, how would you use `.debounce` for example, on a SwiftUI TextField text change? (i.e how would you convert a text change to  a an AsyncSequence) I know how to do it with Combine (or RxSwift) but can't grab my head around how to do this with AsyncSequence",
      "ts": "1654722197.558519",
      "thread_ts": "1654722197.558519",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 13,
      "latest_reply": "1654723612.751279",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "A7LF",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JK6RTGSJ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi, with the new Async Algorithms for AsyncSequence, how would you use `.debounce` for example, on a SwiftUI TextField text change? (i.e how would you convert a text change to  a an AsyncSequence) I know how to do it with Combine (or RxSwift) but can't grab my head around how to do this with AsyncSequence\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "bbc9ffb1-ffc8-4e8a-9ea7-109f7c2fb93e",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "So the way to get the values is to emit them into something like an `AsyncStream` ; when a value needs to be emitted it can be sent via the `AsyncStream\u0026lt;String\u0026gt;.Continuation`'s `yield` method.",
          "ts": "1654722205.502839",
          "thread_ts": "1654722197.558519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qVQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So the way to get the values is to emit them into something like an "
                    },
                    {
                      "type": "text",
                      "text": "AsyncStream",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " ; when a value needs to be emitted it can be sent via the "
                    },
                    {
                      "type": "text",
                      "text": "AsyncStream\u003cString\u003e.Continuation",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "'s "
                    },
                    {
                      "type": "text",
                      "text": "yield",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " method."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6e9a5b6d-d523-41ca-8360-eab71898cb78",
          "type": "message",
          "user": "U03JK6RTGSJ",
          "text": "Thanks, I’ll try that!\nI don’t think that there are any examples of it yet, so if you have a link to a usage example of it, it would be lovely!\nThanks again!",
          "ts": "1654722439.513389",
          "thread_ts": "1654722197.558519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vqlr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks, I’ll try that!\nI don’t think that there are any examples of it yet, so if you have a link to a usage example of it, it would be lovely!\nThanks again!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "63e97bac-1bae-4263-af35-67d15b5fc635",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "there’s a short example of AsyncStream use in its documentation: \u003chttps://developer.apple.com/documentation/swift/asyncstream\u003e",
          "ts": "1654722775.280479",
          "thread_ts": "1654722197.558519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=EO+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "there’s a short example of AsyncStream use in its documentation: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/swift/asyncstream",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "784b0961-0e4c-4ebb-8450-b3656ee2b437",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "you would capture the `continuation` and call its `yield` method when the text changes.",
          "ts": "1654722794.242859",
          "thread_ts": "1654722197.558519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "c4W",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "you would capture the "
                    },
                    {
                      "type": "text",
                      "text": "continuation",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and call its "
                    },
                    {
                      "type": "text",
                      "text": "yield",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " method when the text changes."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "59dbb27b-b520-4a64-9d95-6fd5b6b5ea41",
          "type": "message",
          "user": "U03JK6RTGSJ",
          "text": "Got it, so I guess the continuation needs to be captured outside of the SwiftUI `View` otherwise it’ll reset it upon state change, right?",
          "ts": "1654722880.878189",
          "thread_ts": "1654722197.558519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uGQ3l",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Got it, so I guess the continuation needs to be captured outside of the SwiftUI "
                    },
                    {
                      "type": "text",
                      "text": "View",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " otherwise it’ll reset it upon state change, right?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e4a5e597-083d-4438-8628-9879c908a432",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "yea, that is a supported (and relatively common) way of using it",
          "ts": "1654723007.785239",
          "thread_ts": "1654722197.558519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "baicT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "yea, that is a supported (and relatively common) way of using it"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c3843b80-ffd6-4add-bee0-cc637d3bd6b6",
          "type": "message",
          "user": "U03JK6RTGSJ",
          "text": "Something like that?:\n```TextField(\"Your Location\", text: $location)\n            .onChange(of: location) {\n                viewModel.capturedTextfieldCntinuation.yield($0)\n            }```\n```class ViewModel {\n  var capturedTextfieldCntinuation: ...\n\n  var textFieldStream: {\n     AsyncStream { continuation in\n          capturedTextfieldCntinuation = continuation\n      }\n  }\n\n  textFieldStream\n     .debounce()\n     ...\n}```",
          "ts": "1654723072.659929",
          "thread_ts": "1654722197.558519",
          "edited": {
            "user": "U03JK6RTGSJ",
            "ts": "1654723145.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PtkS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Something like that?:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"TextField(\\\"Your Location\\\", text: $location)\\n            .onChange(of: location) {\\n                viewModel.capturedTextfieldCntinuation.yield($0)\\n            }\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"class ViewModel {\\n  var capturedTextfieldCntinuation: ...\\n\\n  var textFieldStream: {\\n     AsyncStream { continuation in\\n          capturedTextfieldCntinuation = continuation\\n      }\\n  }\\n\\n  textFieldStream\\n     .debounce()\\n     ...\\n}\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "094dfc60-891d-48ac-9461-be9bdc7f7af6",
          "type": "message",
          "user": "U03JK6RTGSJ",
          "text": "Or is there maybe another way to turn a `@Published`  which is bound to the textfield to an AsyncStream?",
          "ts": "1654723243.536089",
          "thread_ts": "1654722197.558519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eFt",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Or is there maybe another way to turn a "
                    },
                    {
                      "type": "text",
                      "text": "@Published",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "  which is bound to the textfield to an AsyncStream?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8ccce4d5-cb3a-4a8b-af04-0a224a6495f2",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "`.values` is a property on all `Publisher` types that is an `AsyncSequence`",
          "ts": "1654723282.629459",
          "thread_ts": "1654722197.558519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "s7X",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": ".values",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is a property on all "
                    },
                    {
                      "type": "text",
                      "text": "Publisher",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " types that is an "
                    },
                    {
                      "type": "text",
                      "text": "AsyncSequence",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "abbe4786-7b14-4586-b079-3f6c8f08867c",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "so yea, that would work too",
          "ts": "1654723357.745309",
          "thread_ts": "1654722197.558519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "K7sU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "so yea, that would work too"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "346c1728-d07f-44ea-968e-94f2eb3afa25",
          "type": "message",
          "user": "U03JK6RTGSJ",
          "text": "Got it, does SwiftUI has an AsyncSequence alternative to `@Published` which is used for bindings or Combine still gonna stick on the SwiftUI binding side?",
          "ts": "1654723472.292259",
          "thread_ts": "1654722197.558519",
          "edited": {
            "user": "U03JK6RTGSJ",
            "ts": "1654723480.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9VZZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Got it, does SwiftUI has an AsyncSequence alternative to "
                    },
                    {
                      "type": "text",
                      "text": "@Published",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " which is used for bindings or Combine still gonna stick on the SwiftUI binding side?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6ada78e4-ac36-4440-8001-1b5a295957d5",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "`@Published` remains a good way to interact with SwiftUI",
          "ts": "1654723536.870549",
          "thread_ts": "1654722197.558519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "SXiZ1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "@Published",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " remains a good way to interact with SwiftUI"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d569837f-6a0a-44ae-93b4-70b866e38025",
          "type": "message",
          "user": "U03JK6RTGSJ",
          "text": "Got it, thank you so much for the follow up questions!",
          "ts": "1654723612.751279",
          "thread_ts": "1654722197.558519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Gvp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Got it, thank you so much for the follow up questions!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HWEGHRKR\u003e asked\n\u0026gt; Do you have any recommendations for debugging race conditions when the repo uses a mix of completion handlers, combine pipelines, and async?",
      "ts": "1654722461.708219",
      "thread_ts": "1654722461.708219",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654722501.801269",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Dt8",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HWEGHRKR"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Do you have any recommendations for debugging race conditions when the repo uses a mix of completion handlers, combine pipelines, and async?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6d688857-4eda-48f6-9fc1-ba19f65c8038",
          "type": "message",
          "user": "U03HL5AMFCL",
          "text": "For debugging data races and other memory safety issues in an App, sanitizers are a good general purpose tool and a great starting place (TSAN, ASAN, UBSan). If you're interested in specifically analyzing Swift Tasks/Actors, the new Swift Concurrency Template in Instruments 14 (\u003chttps://developer.apple.com/videos/play/wwdc2022/110350/|Visualize and optimize Swift Concurrency\u003e) can provide a lot of additional insight and may help debugging these types of race conditions.",
          "ts": "1654722501.801269",
          "thread_ts": "1654722461.708219",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "white_check_mark",
              "count": 1,
              "users": [
                "U03HWEGHRKR"
              ]
            },
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JEEUJPMJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "t7zYI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "For debugging data races and other memory safety issues in an App, sanitizers are a good general purpose tool and a great starting place (TSAN, ASAN, UBSan). If you're interested in specifically analyzing Swift Tasks/Actors, the new Swift Concurrency Template in Instruments 14 ("
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2022/110350/",
                      "text": "Visualize and optimize Swift Concurrency"
                    },
                    {
                      "type": "text",
                      "text": ") can provide a lot of additional insight and may help debugging these types of race conditions."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KDARQ0QY\u003e asked\n\u0026gt; How do we opt out of clang-tidy checks in the analyzer? (i.e. bugprone-move-forwarding-reference)",
      "ts": "1654723602.205509",
      "thread_ts": "1654723602.205509",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654794034.072909",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "OpGEZ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KDARQ0QY"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"How do we opt out of clang-tidy checks in the analyzer? (i.e. bugprone-move-forwarding-reference)\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "8a726fcd-b880-474f-acbb-6004f8c0d814",
          "type": "message",
          "user": "U03KDARQ0QY",
          "text": "Apologies, didn't realize the previous Q\u0026amp;A was over :)",
          "ts": "1654723757.311109",
          "thread_ts": "1654723602.205509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GfWw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Apologies, didn't realize the previous Q\u0026A was over :)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "899d0255-abbb-419d-bfaa-9e9487e62ba8",
          "type": "message",
          "user": "U03HHPM3VQT",
          "text": "Hey Lukas. Unfortunately, we don't have the right people here right to answer this questions. You can make a \u003chttps://developer.apple.com/wwdc22/labs-and-lounges/dashboard/QY7ZN5Z723/dashboard|1:1 appointment \u003efor the  C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker lab on Friday to get your answer.\n\nFrom \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/#current\u003e:\n\u0026gt; C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker lab\n\u0026gt; Friday @ 1:00 - 4:00 p.m.",
          "ts": "1654724090.916139",
          "thread_ts": "1654723602.205509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fUTiK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hey Lukas. Unfortunately, we don't have the right people here right to answer this questions. You can make a "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/QY7ZN5Z723/dashboard",
                      "text": "1:1 appointment "
                    },
                    {
                      "type": "text",
                      "text": "for the  C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker lab on Friday to get your answer.\n\nFrom "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc22/topics/developer-tools/#current",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ":\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"C, C++, Objective-C compiler, analyzer, sanitizer, debugger, and linker lab\\nFriday @ 1:00 - 4:00 p.m.\"}]}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "50e36ea7-3c0f-490f-9e0e-7bb78db6c0c4",
          "type": "message",
          "user": "U03H36EUL95",
          "text": "Hi, I just found your question! There are build settings to control individual static analysis checks. They live in Project build settings in \"Static Analysis - Issues - ...\" sections. In particular, bugprone-move-forwarding-reference is controlled by the setting \"Moves of Universal References\" in section \"Static Analysis - Issues - C++\" (the setting name in the config files is `CLANG_TIDY_BUGPRONE_MOVE_FORWARDING_REFERENCE`). We're also curious whether you've encountered any specific problems with the check! We can further discuss them here or in the Webex lab linked above or you can always tell us about them through Feedback Assistant.",
          "ts": "1654792567.516419",
          "thread_ts": "1654723602.205509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "NuZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi, I just found your question! There are build settings to control individual static analysis checks. They live in Project build settings in \"Static Analysis - Issues - ...\" sections. In particular, bugprone-move-forwarding-reference is controlled by the setting \"Moves of Universal References\" in section \"Static Analysis - Issues - C++\" (the setting name in the config files is "
                    },
                    {
                      "type": "text",
                      "text": "CLANG_TIDY_BUGPRONE_MOVE_FORWARDING_REFERENCE",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "). We're also curious whether you've encountered any specific problems with the check! We can further discuss them here or in the Webex lab linked above or you can always tell us about them through Feedback Assistant."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "13e33f51-f9ee-4016-9ed1-1e47d48646b5",
          "type": "message",
          "user": "U03KDARQ0QY",
          "text": "Thank you \u003c@U03H36EUL95\u003e for getting back to me on this! There are no real problems with the check, we just have a large codebase and want to light up static analysis overall but don't want to wait for every check to be green. We want to do it incrementally.",
          "ts": "1654794034.072909",
          "thread_ts": "1654723602.205509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pg4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you "
                    },
                    {
                      "type": "user",
                      "user_id": "U03H36EUL95"
                    },
                    {
                      "type": "text",
                      "text": " for getting back to me on this! There are no real problems with the check, we just have a large codebase and want to light up static analysis overall but don't want to wait for every check to be green. We want to do it incrementally."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KC4LFL64\u003e asked\n\u0026gt; I am using NSProgress to handle task cancellation because it is used by some low level code.  Is it sendable?  What do I need to do to use NSProgress with tasks and Swift concurrency?",
      "ts": "1654723622.268929",
      "thread_ts": "1654723622.268929",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654724183.983299",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "vgv",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KC4LFL64"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I am using NSProgress to handle task cancellation because it is used by some low level code.  Is it sendable?  What do I need to do to use NSProgress with tasks and Swift concurrency?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "1177f60a-7ac8-424b-bce2-82dca488c9e4",
          "type": "message",
          "user": "U03HB5WGZU6",
          "text": "So while NSProgress is Sendable, you have to be careful with how you use it.\n\nThe \"implicit\" APIs it has ( \"Adding a Progress Operation Implicitly \u003chttps://developer.apple.com/documentation/foundation/nsprogress\u003e ) relies on thread local data, so you can't use them safely with async/await.\n\nYou could either pass the progress object around explicitly, and update it that way, or manually make sure to use a concrete thread or queue as you use it.",
          "ts": "1654723646.518759",
          "thread_ts": "1654723622.268929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RQ7x1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So while NSProgress is Sendable, you have to be careful with how you use it.\n\nThe \"implicit\" APIs it has ( \"Adding a Progress Operation Implicitly "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/foundation/nsprogress",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " ) relies on thread local data, so you can't use them safely with async/await.\n\nYou could either pass the progress object around explicitly, and update it that way, or manually make sure to use a concrete thread or queue as you use it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "D542B66B-0654-43BE-A94C-4885318B63A7",
          "type": "message",
          "user": "U03KC4LFL64",
          "text": "Ok, thanks.  I think that explains some issues I was having.  Providing my own sync lock around its access.  I am trying to coordinate Asynchronous Fetch for searching a large dataset with the UI search field.  I need to add more projections.",
          "ts": "1654723929.355289",
          "thread_ts": "1654723622.268929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "o=Zm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "thanks."
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "think"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "explains"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "some"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "issues"
                    },
                    {
                      "type": "text",
                      "text": " I "
                    },
                    {
                      "type": "text",
                      "text": "was"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "having."
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "text",
                      "text": "Providing"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "own"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "sync"
                    },
                    {
                      "type": "text",
                      "text": " l"
                    },
                    {
                      "type": "text",
                      "text": "ock"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "around"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "its"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "access."
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "am"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "trying"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "coordinate"
                    },
                    {
                      "type": "text",
                      "text": " Asynchronous "
                    },
                    {
                      "type": "text",
                      "text": "Fetch"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "searching"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "large"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "dataset"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "with"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "UI"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "search"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "field."
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "need"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "add"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "more"
                    },
                    {
                      "type": "text",
                      "text": " projections"
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4D69A1AE-07DE-4534-A1D4-444FF502F3EB",
          "type": "message",
          "user": "U03KC4LFL64",
          "text": "Protections*",
          "ts": "1654723964.535579",
          "thread_ts": "1654723622.268929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZNy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Protections"
                    },
                    {
                      "type": "text",
                      "text": "*"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cea827ae-db45-4dfa-9437-9b5b5d04feb9",
          "type": "message",
          "user": "U03HB5WGZU6",
          "text": "maybe you can ensure all the places you update the progress from are on main actor or something similar?",
          "ts": "1654723999.520559",
          "thread_ts": "1654723622.268929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jFd92",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "maybe you can ensure all the places you update the progress from are on main actor or something similar?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5d55f92c-8cc4-4aa0-8370-958225101909",
          "type": "message",
          "user": "U03HB5WGZU6",
          "text": "actually sorry that still would not be safe; if you'd have more progress objects; and suspensions happen between; you could end up with the wrong on in a thread local",
          "ts": "1654724034.234599",
          "thread_ts": "1654723622.268929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "N4hI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "actually sorry that still would not be safe; if you'd have more progress objects; and suspensions happen between; you could end up with the wrong on in a thread local"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bb8f41cb-a4c1-4669-b0fb-e7caa7bf8281",
          "type": "message",
          "user": "U03HB5WGZU6",
          "text": "long story short: thread local based apis won't work in combination with async/await",
          "ts": "1654724050.833199",
          "thread_ts": "1654723622.268929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4Sv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "long story short: thread local based apis won't work in combination with async/await"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "227CBC7C-2683-4ED3-BC01-52B70EA86126",
          "type": "message",
          "user": "U03KC4LFL64",
          "text": "Yeah, it took a lot to get it \"reliable” in the current release which immediately broke in iOS 16.",
          "ts": "1654724183.983299",
          "thread_ts": "1654723622.268929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ioIn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yeah,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "took"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "lot"
                    },
                    {
                      "type": "text",
                      "text": " to "
                    },
                    {
                      "type": "text",
                      "text": "get"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " \"reliable"
                    },
                    {
                      "type": "text",
                      "text": "”"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "current"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "release"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "which"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "immediately"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "broke"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "iOS"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "16."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JK6RTGSJ\u003e asked\n\u0026gt; What's `functional programming` alternative to `for await value in values`? i.e what's the `foreach()` for AsyncSequence",
      "ts": "1654724620.933929",
      "thread_ts": "1654724620.933929",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654725584.642539",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "wKie8",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JK6RTGSJ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What's `functional programming` alternative to `for await value in values`? i.e what's the `foreach()` for AsyncSequence\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "88e0b469-13ee-43f9-9d4e-b810eb48eee8",
          "type": "message",
          "user": "U03HESHGASH",
          "text": "Discussion about this in the community is ongoing, you can follow along here on the Swift Forums if you’re interested: \u003chttps://forums.swift.org/t/do-we-want-foreach/56929\u003e",
          "ts": "1654724642.799919",
          "thread_ts": "1654724620.933929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "t6M",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Discussion about this in the community is ongoing, you can follow along here on the Swift Forums if you’re interested: "
                    },
                    {
                      "type": "link",
                      "url": "https://forums.swift.org/t/do-we-want-foreach/56929",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3826c3c5-e89f-4f46-a657-812cd5f9fb3b",
          "type": "message",
          "user": "U03JK6RTGSJ",
          "text": "Thanks, i’ll check it out",
          "ts": "1654725584.642539",
          "thread_ts": "1654724620.933929",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FkHd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks, i’ll check it out"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRN827HN\u003e asked\n\u0026gt; I'm seeing a concurrency warning in my `UIViewController.deinit` in which I'm calling `NotificationCenter.default.removeObserver(observer)`. This is the documented \u0026amp; recommended technique in UIKit. The warning says: \"cannot access property 'observer' with a non-sendable type '(any NSObjectProtocol')?.\" How I can keep using this old-school UIKit pattern while also satisfying strict concurrency checks? I've seen some recent discussions around concurrency + (de)initializers but I don't fully understand them.",
      "ts": "1654724677.374429",
      "thread_ts": "1654724677.374429",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654732307.364709",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "90X7",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRN827HN"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I'm seeing a concurrency warning in my `UIViewController.deinit` in which I'm calling `NotificationCenter.default.removeObserver(observer)`. This is the documented \u0026 recommended technique in UIKit. The warning says: \\\"cannot access property 'observer' with a non-sendable type '(any NSObjectProtocol')?.\\\" How I can keep using this old-school UIKit pattern while also satisfying strict concurrency checks? I've seen some recent discussions around concurrency + (de)initializers but I don't fully understand them.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "c3828eed-681a-4689-a6f3-4970a3746a81",
          "type": "message",
          "user": "U03HL5AMFCL",
          "text": "Waiting until `deinit` to removeObserver() is a bit late. Even if a view controller object is primarily used on the main thread, the `deinit` can occur on a background thread if it's _ever_ referenced by code such as a dispatch_async or Swift concurrency.\n\nThis is what the compiler's complaining about — `observer` is `@MainActor`-isolated and `deinit` can happen anywhere. Please file a feedback report for updating documentation/recommendations to better cover this case, but in the mean time it's probably worthwhile moving the `removeObserver()` call earlier in the view controller's lifecycle (e.g. viewDidDisappear or another time before the deinit when it makes sense to remove the observation)",
          "ts": "1654724698.320369",
          "thread_ts": "1654724677.374429",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03JRN827HN"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LFsD",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Waiting until "
                    },
                    {
                      "type": "text",
                      "text": "deinit",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to removeObserver() is a bit late. Even if a view controller object is primarily used on the main thread, the "
                    },
                    {
                      "type": "text",
                      "text": "deinit",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " can occur on a background thread if it's "
                    },
                    {
                      "type": "text",
                      "text": "ever",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " referenced by code such as a dispatch_async or Swift concurrency.\n\nThis is what the compiler's complaining about — "
                    },
                    {
                      "type": "text",
                      "text": "observer",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is "
                    },
                    {
                      "type": "text",
                      "text": "@MainActor",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "-isolated and "
                    },
                    {
                      "type": "text",
                      "text": "deinit",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " can happen anywhere. Please file a feedback report for updating documentation/recommendations to better cover this case, but in the mean time it's probably worthwhile moving the "
                    },
                    {
                      "type": "text",
                      "text": "removeObserver()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " call earlier in the view controller's lifecycle (e.g. viewDidDisappear or another time before the deinit when it makes sense to remove the observation)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1a728fb6-516f-48b5-88bf-e5cf0ba577f0",
          "type": "message",
          "user": "U03JRN827HN",
          "text": "Thank you for the detailed explanation, Daniel! I understand it now.",
          "ts": "1654724947.460589",
          "thread_ts": "1654724677.374429",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pwHP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for the detailed explanation, Daniel! I understand it now."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7b4a6b53-cacf-42b1-88f1-8d7917418930",
          "type": "message",
          "user": "U03JRN827HN",
          "text": "I’ll make sure to file a radar about updating documentation.",
          "ts": "1654724948.478759",
          "thread_ts": "1654724677.374429",
          "edited": {
            "user": "U03JRN827HN",
            "ts": "1654724957.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 1,
              "users": [
                "U03HB5WSFRC"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "onN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’ll make sure to file a radar about updating documentation."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "33352580-5035-4503-aadb-4bbd5958049a",
          "type": "message",
          "user": "U03JRN827HN",
          "text": "Opened FB10114021!",
          "ts": "1654725573.419269",
          "thread_ts": "1654724677.374429",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZuN2z",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Opened FB10114021!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "789c5516-f016-4ec4-9d90-3b2649180a09",
          "type": "message",
          "user": "U03J4J6MMK8",
          "text": "I thought that NotificationCenter observers are automatically removed when the observer is deallocated?",
          "ts": "1654730597.216659",
          "thread_ts": "1654724677.374429",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cZzoA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I thought that NotificationCenter observers are automatically removed when the observer is deallocated?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "C0ABFEB3-CE5F-49CF-AA9F-D66BE0666F37",
          "type": "message",
          "user": "U03JRN827HN",
          "text": "Only targer/selector ones.",
          "ts": "1654732307.364709",
          "thread_ts": "1654724677.374429",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uPB4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Only"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "targer/selector"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "ones."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "5722fbc0-f63b-4e49-9205-42ab1901a5d2",
      "type": "message",
      "user": "U03HESHEL05",
      "text": ":watch: We are almost at the end of Q\u0026amp;A for *Swift Concurrency. Make sure you get your questions in!*",
      "ts": "1654724815.092619",
      "thread_ts": "1654724815.092619",
      "reply_count": 3,
      "latest_reply": "1654725001.254829",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "C4Z5M",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "emoji",
                  "name": "watch",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " We are almost at the end of Q\u0026A for"
                },
                {
                  "type": "text",
                  "text": " Swift Concurrency. Make sure you get your questions in!",
                  "style": {
                    "bold": true
                  }
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6820294c-7cf0-42ac-b152-2bd8e1bf8f4c",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "Hey :wave: is the next session suitable for SwiftPM questions, please? :eyes:",
          "ts": "1654724870.727919",
          "thread_ts": "1654724815.092619",
          "parent_user_id": "U03HESHEL05",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jCu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hey "
                    },
                    {
                      "type": "emoji",
                      "name": "wave",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " is the next session suitable for SwiftPM questions, please? "
                    },
                    {
                      "type": "emoji",
                      "name": "eyes",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3d88b63b-18bd-4f14-9ef4-d7bb2ab8d669",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Yup!  It's Q\u0026amp;A for Xcode and we definitely have some SwiftPM folks there ready to answer your questions. :smile:",
          "ts": "1654724941.730099",
          "thread_ts": "1654724815.092619",
          "parent_user_id": "U03HESHEL05",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gjLcr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yup!  It's Q\u0026A for Xcode and we definitely have some SwiftPM folks there ready to answer your questions. "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "37ec982a-6d75-419f-b931-416e7b83e5ce",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "Thanks, can't wait! I'm brake-testing its bounds all the time! :smile:",
          "ts": "1654725001.254829",
          "thread_ts": "1654724815.092619",
          "parent_user_id": "U03HESHEL05",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "omG=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks, can't wait! I'm brake-testing its bounds all the time! "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "de6468a5-f7ab-4b87-8a8b-59c564389b12",
      "type": "message",
      "user": "U03HHPM3VQT",
      "text": "And just like that, we are at the end of this particular Q\u0026amp;A session. Thank you for joining this session and asking us these outstanding questions! If you have more questions, please check out the \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/|other Developer Tools Sessions, Labs, or Lounges\u003e. For topics not covered there, you can also post your questions in the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e.",
      "ts": "1654725459.200649",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 6,
          "users": [
            "U03HB5WGZU6",
            "U03HESHEL05",
            "U03H36Z4LQP",
            "U03HVD5Q8DC",
            "U03J7H4LJ5N",
            "U03J7HD4E64"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "w8n",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "And just like that, we are at the end of this particular Q\u0026A session. Thank you for joining this session and asking us these outstanding questions! If you have more questions, please check out the "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
                  "text": "other Developer Tools Sessions, Labs, or Lounges"
                },
                {
                  "type": "text",
                  "text": ". For topics not covered there, you can also post your questions in the "
                },
                {
                  "type": "link",
                  "url": "http://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "user": "U03HL553PNG",
      "text": "set the channel topic: Xcode Q\u0026amp;A",
      "ts": "1654725541.258619",
      "subtype": "channel_topic",
      "topic": "Xcode Q\u0026amp;A",
      "replace_original": false,
      "delete_original": false,
      "blocks": null
    },
    {
      "client_msg_id": "bef696ea-2f2f-48d8-9e9c-a144c9c0c316",
      "type": "message",
      "user": "U03HB5MM11U",
      "text": "Hello, hello! Welcome to the Q\u0026amp;A session for Xcode! We have several engineers who are experts on this topic to answer your questions. *Please submit the questions using the*  :workflowbolt: *button below.* Our engineers will review the questions and then post the answers in the appropriate thread.\n\nWe will do our best to answer all of your questions. As a gentle reminder, please keep the content professional and within our code of conduct.\n\nIf you have questions on other topics, you can check to see if there are \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/|other Developer Tools Sessions, Labs, or Lounges\u003e that might be better suited to your questions. For topics not covered there, you can also post your questions in the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e",
      "ts": "1654725754.992479",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "hammer",
          "count": 5,
          "users": [
            "U03JRN827HN",
            "U03J4CVE1U4",
            "U03HL5H29CL",
            "U03JK6RTGSJ",
            "U03HMD22287"
          ]
        },
        {
          "name": "gratitude-thank-you",
          "count": 2,
          "users": [
            "U03J4EJ0CVA",
            "U03HMD22287"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "lMZ/",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hello, hello! Welcome to the Q\u0026A session for Xcode! We have several engineers who are experts on this topic to answer your questions. "
                },
                {
                  "type": "text",
                  "text": "Please submit the questions using the  ",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0,
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " button below.",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " Our engineers will review the questions and then post the answers in the appropriate thread.\n\nWe will do our best to answer all of your questions. As a gentle reminder, please keep the content professional and within our code of conduct.\n\nIf you have questions on other topics, you can check to see if there are "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
                  "text": "other Developer Tools Sessions, Labs, or Lounges"
                },
                {
                  "type": "text",
                  "text": " that might be better suited to your questions. For topics not covered there, you can also post your questions in the "
                },
                {
                  "type": "link",
                  "url": "http://developer.apple.com/forums/",
                  "text": "Developer Forums"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JK6RTGSJ\u003e asked\n\u0026gt; I’ve noticed that when creating new files inside SPM packages source directories, there’s no prompt for filename, and it instantly creates a `File.swift`.\n\u0026gt;  Also (in SPM file creation), I cannot choose custom templates, and file headers aren’t generated with copyright and such.\n\u0026gt; I’ve noticed this hasn’t been fixed in xcode 14 beta, and it’s a real pain, especially when creating new SwiftUI files because you have to rename so much stuff there.\n\u0026gt; Any plans on fixing it or a workaround?",
      "ts": "1654726299.889389",
      "thread_ts": "1654726299.889389",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654726426.319349",
      "reactions": [
        {
          "name": "point_up",
          "count": 2,
          "users": [
            "U03JPFQNX5K",
            "U03J22HDMSN"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "aOIDl",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JK6RTGSJ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I\\u2019ve noticed that when creating new files inside SPM packages source directories, there\\u2019s no prompt for filename, and it instantly creates a `File.swift`.\\n Also (in SPM file creation), I cannot choose custom templates, and file headers aren\\u2019t generated with copyright and such.\\nI\\u2019ve noticed this hasn\\u2019t been fixed in xcode 14 beta, and it\\u2019s a real pain, especially when creating new SwiftUI files because you have to rename so much stuff there.\\nAny plans on fixing it or a workaround?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "2d94fd3e-f5c4-49d9-ae81-fb4b8d913d4d",
          "type": "message",
          "user": "U03J7H5DD2L",
          "text": "Hey \u003c@U03JK6RTGSJ\u003e! Thanks for the feedback. I would recommend sending us a bug report — and post the Feedback ID here afterwards so we can take a look. There are great guidelines on how to file an actionable bug report \u003chttps://developer.apple.com/news/?id=vvrgkboh|here\u003e.",
          "ts": "1654726319.745579",
          "thread_ts": "1654726299.889389",
          "attachments": [
            {
              "fallback": "How to file great bug reports - Discover - Apple Developer",
              "id": 1,
              "title": "How to file great bug reports - Discover - Apple Developer",
              "title_link": "https://developer.apple.com/news/?id=vvrgkboh",
              "text": "Bugs are an inevitable part of the development process. Though they can be frustrating to bump up against, you can help squash these sorts of problems quickly by identifying the issue you’re running into, reproducing it, and filing a bug report. Here are some of our top tips for making sure your bug report is clear, actionable, and — most importantly — fixable.",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/articles/images/F166EDE5-589B-46DB-AD91-F8639E04464C/2048.jpeg",
              "service_name": "developer.apple.com",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/news/?id=vvrgkboh",
              "original_url": "https://developer.apple.com/news/?id=vvrgkboh",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "N3Gp4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hey "
                    },
                    {
                      "type": "user",
                      "user_id": "U03JK6RTGSJ"
                    },
                    {
                      "type": "text",
                      "text": "! Thanks for the feedback. I would recommend sending us a bug report — and post the Feedback ID here afterwards so we can take a look. There are great guidelines on how to file an actionable bug report "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/news/?id=vvrgkboh",
                      "text": "here"
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6ea67959-dd1d-4e79-9ab5-6d6a6ef46a72",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "I’ve seen that too on Xcode 13.",
          "ts": "1654726346.637519",
          "thread_ts": "1654726299.889389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+95g",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’ve seen that too on Xcode 13."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "37b96476-7f12-420a-b985-d809652df0ff",
          "type": "message",
          "user": "U03JK6RTGSJ",
          "text": "Thanks for the reply, I actually did: FB10015071",
          "ts": "1654726400.330649",
          "thread_ts": "1654726299.889389",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U03J7H5DD2L"
              ]
            },
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03J7H5DD2L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1yW",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the reply, I actually did: FB10015071"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b3c4a7ed-a6bc-4f40-a897-bdfc3bb3ea4a",
          "type": "message",
          "user": "U03JK6RTGSJ",
          "text": "\u003chttps://feedbackassistant.apple.com/feedback/10015071\u003e",
          "ts": "1654726426.319349",
          "thread_ts": "1654726299.889389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xy9u",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/feedback/10015071",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ5CEBKP\u003e asked\n\u0026gt; Any chance Xcode 15 could continue to support macOS Monterey given that macOS Ventura does not support the 2015 MacBook Pro?",
      "ts": "1654726321.344009",
      "thread_ts": "1654726321.344009",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654726328.206319",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "50uiZ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ5CEBKP"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Any chance Xcode 15 could continue to support macOS Monterey given that macOS Ventura does not support the 2015 MacBook Pro?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6f365ec3-aab2-4fad-b057-fffb1727bc51",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "That's always a tough decision for us each year and we weigh those trade-offs very carefully.  Please file a feedback for us at \u003chttp://feedbackassistant.apple.com|feedbackassistant.apple.com\u003e so we can track that.",
          "ts": "1654726328.206319",
          "thread_ts": "1654726321.344009",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ISc7",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That's always a tough decision for us each year and we weigh those trade-offs very carefully.  Please file a feedback for us at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "feedbackassistant.apple.com"
                    },
                    {
                      "type": "text",
                      "text": " so we can track that."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JLV0E8RJ\u003e asked\n\u0026gt; I’ve always wondered what is the use case for the option to change Xcode Project format version. It doesn’t seem to change anything in my project file. What it is useful for?",
      "ts": "1654726373.028059",
      "thread_ts": "1654726373.028059",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654727267.678919",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "rFK",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JLV0E8RJ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I\\u2019ve always wondered what is the use case for the option to change Xcode Project format version. It doesn\\u2019t seem to change anything in my project file. What it is useful for?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6d1a268b-fbc3-4b5b-b377-26ed2f64aa6a",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "Certain features require newer versions of the project format, typically Xcode will automatically upgrade you to the appropriate format version. There isn’t really a reason to select a newer version than what was automatically chosen, but it can be useful to pick an older one if you need your project to be compatible with older tools.",
          "ts": "1654726389.951669",
          "thread_ts": "1654726373.028059",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "EZW",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Certain features require newer versions of the project format, typically Xcode will automatically upgrade you to the appropriate format version. There isn’t really a reason to select a newer version than what was automatically chosen, but it can be useful to pick an older one if you need your project to be compatible with older tools."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f0dddde8-6443-45af-a94b-52feabe49af0",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "Would be nice to have a project format that is more friendly to branch merges",
          "ts": "1654726429.914719",
          "thread_ts": "1654726373.028059",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "grimacing",
              "count": 2,
              "users": [
                "U03JLV0E8RJ",
                "U03JPFQNX5K"
              ]
            },
            {
              "name": "sweat_smile",
              "count": 1,
              "users": [
                "U03JPFQNX5K"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "k5QU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Would be nice to have a project format that is more friendly to branch merges"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0c8be024-bab1-4f28-b9bb-b08157c0546b",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "For that case, I'd really recommend exporting as many files \u0026amp; modules as possible to Swift packages. :ok_hand: We currently only have `AppDelegate.swift` directly in the project. :sunglasses:",
          "ts": "1654726607.612359",
          "thread_ts": "1654726373.028059",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Q9qI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "For that case, I'd really recommend exporting as many files \u0026 modules as possible to Swift packages. "
                    },
                    {
                      "type": "emoji",
                      "name": "ok_hand",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " We currently only have "
                    },
                    {
                      "type": "text",
                      "text": "AppDelegate.swift",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " directly in the project. "
                    },
                    {
                      "type": "emoji",
                      "name": "sunglasses",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "12a184d1-35c1-4391-9b44-66cf526413c2",
          "type": "message",
          "user": "U03JPFQNX5K",
          "ts": "1654726657.184869",
          "thread_ts": "1654726373.028059",
          "files": [
            {
              "id": "F03JP81K6K0",
              "created": 1654726654,
              "timestamp": 1654726654,
              "name": "Screenshot 2022-06-09 at 00.17.31.png",
              "title": "Screenshot 2022-06-09 at 00.17.31.png",
              "mimetype": "image/png",
              "image_exif_rotation": 0,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03JPFQNX5K",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 299204,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03JP81K6K0-Screenshot 2022-06-09 at 00.17.31.png",
              "url_private_download": "C03H0JN431U/F03JP81K6K0-Screenshot 2022-06-09 at 00.17.31.png",
              "original_h": 1558,
              "original_w": 610,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP81K6K0-97c37e1ca0/screenshot_2022-06-09_at_00.17.31_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP81K6K0-97c37e1ca0/screenshot_2022-06-09_at_00.17.31_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP81K6K0-97c37e1ca0/screenshot_2022-06-09_at_00.17.31_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP81K6K0-97c37e1ca0/screenshot_2022-06-09_at_00.17.31_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 141,
              "thumb_360_h": 360,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP81K6K0-97c37e1ca0/screenshot_2022-06-09_at_00.17.31_480.png",
              "thumb_480_w": 188,
              "thumb_480_h": 480,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP81K6K0-97c37e1ca0/screenshot_2022-06-09_at_00.17.31_720.png",
              "thumb_720_w": 282,
              "thumb_720_h": 720,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP81K6K0-97c37e1ca0/screenshot_2022-06-09_at_00.17.31_960.png",
              "thumb_960_w": 376,
              "thumb_960_h": 960,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JP81K6K0-97c37e1ca0/screenshot_2022-06-09_at_00.17.31_1024.png",
              "thumb_1024_w": 401,
              "thumb_1024_h": 1024,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03JPFQNX5K/F03JP81K6K0/screenshot_2022-06-09_at_00.17.31.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03JP81K6K0-82b0249599",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": null
        },
        {
          "client_msg_id": "3c7a879f-1ac7-4a74-890a-3cb2812f7ddd",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "Wish I could, but I’ve forked a LARGE open source project and often need to modify the main project for my own tweak.",
          "ts": "1654726673.399419",
          "thread_ts": "1654726373.028059",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UsX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Wish I could, but I’ve forked a LARGE open source project and often need to modify the main project for my own tweak."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "EAE706C1-0485-4102-B3AE-63AE62205FDB",
          "type": "message",
          "user": "U03JLV0E8RJ",
          "text": "Thanks for your advice \u003c@U03JPFQNX5K\u003e but..  Isn't that a little too… “extreme”?\nIs there any doc/post/tutorial on how/why such approach is beneficial to such extent?",
          "ts": "1654726999.962129",
          "thread_ts": "1654726373.028059",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qXO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " y"
                    },
                    {
                      "type": "text",
                      "text": "our"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "advice"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "user",
                      "user_id": "U03JPFQNX5K"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "but.."
                    },
                    {
                      "type": "text",
                      "text": "  Isn't "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "little"
                    },
                    {
                      "type": "text",
                      "text": " too"
                    },
                    {
                      "type": "text",
                      "text": "…"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "“extreme”?"
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "Is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "there"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "any"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "doc/post/tutorial"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "how/why"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "such"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "approach"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " beneficial "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "such"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "extent?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4647B7E3-47A6-42EB-8AF8-B1DC4DFFB20F",
          "type": "message",
          "user": "U03JK6RTGSJ",
          "text": "\u003c@U03JLV0E8RJ\u003e check pointfreeco isowords tour, they explain this “extreme” approach thoroughly and its benefits ",
          "ts": "1654727141.687869",
          "thread_ts": "1654726373.028059",
          "edited": {
            "user": "U03JK6RTGSJ",
            "ts": "1654727175.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HWQNU65D"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Re82X",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03JLV0E8RJ"
                    },
                    {
                      "type": "text",
                      "text": " check pointfreeco isowords tour, they explain this “extreme” approach "
                    },
                    {
                      "type": "text",
                      "text": "thoroughly"
                    },
                    {
                      "type": "text",
                      "text": " and its benefits "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b3a78466-f064-478f-888d-0574cfc28c8f",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "It's always open to discussion :thinking_face: but shortly from our perspective: :one: it got us rid of most of project file issues, :two: it helped us greatly with modularisation \u0026amp; domains separation (which we'll definitely find even more useful when thinking about different platforms) and :three: in ideal case, if everything links nicely statically (all package deps resolve as static), it will be all linked into a single binary, reducing any possible dylib/dynamic frameworks count cons (which are probably already a thing of a past).\n\nI remember some articles about Airbnb or Uber having hundreds of modules :sweat_smile: that was a bit too much, but we're around 30 and it really helped us significantly.",
          "ts": "1654727267.678919",
          "thread_ts": "1654726373.028059",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 5,
              "users": [
                "U03JLV0E8RJ",
                "U03JEEUJPMJ",
                "U03J22HDMSN",
                "U03HWQNU65D",
                "U03HMBGT5FH"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "aDJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It's always open to discussion "
                    },
                    {
                      "type": "emoji",
                      "name": "thinking_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " but shortly from our perspective: "
                    },
                    {
                      "type": "emoji",
                      "name": "one",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " it got us rid of most of project file issues, "
                    },
                    {
                      "type": "emoji",
                      "name": "two",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " it helped us greatly with modularisation \u0026 domains separation (which we'll definitely find even more useful when thinking about different platforms) and "
                    },
                    {
                      "type": "emoji",
                      "name": "three",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " in ideal case, if everything links nicely statically (all package deps resolve as static), it will be all linked into a single binary, reducing any possible dylib/dynamic frameworks count cons (which are probably already a thing of a past).\n\nI remember some articles about Airbnb or Uber having hundreds of modules "
                    },
                    {
                      "type": "emoji",
                      "name": "sweat_smile",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " that was a bit too much, but we're around 30 and it really helped us significantly."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4EJ0CVA\u003e asked\n\u0026gt; I would like the ability to import a swift playground app (.swiftpm) into Xcode and provide the functionality to have Xcode convert it to an Xcode project. I know we can already open a Swift Playgrounds app (.swiftpm) in Xcode, but it opens as a playground and not an Xcode project. Currently, I have had to manually create a new Xcode project and copy in the playground (.swiftpm) file content. Can Xcode import and convert (.swiftpm) into an Xcode project with Xcode 13 and Swift Playgrounds 4.1 or with Xcode 14 and Swift Playgrounds 4.1?  If not I’ve created a feedback request: FB10080022",
      "ts": "1654726746.425789",
      "thread_ts": "1654726746.425789",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654727665.197239",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "jYnX",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4EJ0CVA"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I would like the ability to import a swift playground app (.swiftpm) into Xcode and provide the functionality to have Xcode convert it to an Xcode project. I know we can already open a Swift Playgrounds app (.swiftpm) in Xcode, but it opens as a playground and not an Xcode project. Currently, I have had to manually create a new Xcode project and copy in the playground (.swiftpm) file content. Can Xcode import and convert (.swiftpm) into an Xcode project with Xcode 13 and Swift Playgrounds 4.1 or with Xcode 14 and Swift Playgrounds 4.1?  If not I\\u2019ve created a feedback request: FB10080022\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6a2af61e-e6c6-4cda-88c2-12662d691cf3",
          "type": "message",
          "user": "U03HB5N9QBY",
          "text": "There isn't currently a way to convert a swiftpm app project to an Xcode project. Thanks for filing the request.\n\nCan you share why you'd like to convert from one project type to another? Perhaps there are other ways to help solve what you need. For example, you could put shared code in a package and both your swiftpm app project and Xcode project could import the package as a dependency.",
          "ts": "1654726794.368469",
          "thread_ts": "1654726746.425789",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "thinking_face",
              "count": 1,
              "users": [
                "U03J4EJ0CVA"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "N1O2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There isn't currently a way to convert a swiftpm app project to an Xcode project. Thanks for filing the request.\n\nCan you share why you'd like to convert from one project type to another? Perhaps there are other ways to help solve what you need. For example, you could put shared code in a package and both your swiftpm app project and Xcode project could import the package as a dependency."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4497A2D3-8938-4469-A9CE-E83C0027036A",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "Main reason is that I don't necessarily want to manually have to create a new Xcode project than copy swiftpm file content into the new Xcode project. I want to continue working on my app in Xcode because I plan to add Core Data and CloudKit functionality to my app and I can't do that on my iPad in Swift Playgrounds 4.1. ",
          "ts": "1654727287.441569",
          "thread_ts": "1654726746.425789",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "IbkJY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Main"
                    },
                    {
                      "type": "text",
                      "text": " reason "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " I don't necessarily "
                    },
                    {
                      "type": "text",
                      "text": "want"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " manually "
                    },
                    {
                      "type": "text",
                      "text": "have"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " create "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "new"
                    },
                    {
                      "type": "text",
                      "text": " Xcode project than "
                    },
                    {
                      "type": "text",
                      "text": "copy"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "swiftpm"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "file"
                    },
                    {
                      "type": "text",
                      "text": " content "
                    },
                    {
                      "type": "text",
                      "text": "into"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "new"
                    },
                    {
                      "type": "text",
                      "text": " Xcode project"
                    },
                    {
                      "type": "text",
                      "text": ". I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "want"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " continue working "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "app"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " Xcode because I "
                    },
                    {
                      "type": "text",
                      "text": "plan"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "add"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Core"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Data"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " CloudKit functionality "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " app "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " I can't "
                    },
                    {
                      "type": "text",
                      "text": "do"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " on my iPad "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " Swift Playground"
                    },
                    {
                      "type": "text",
                      "text": "s"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "4.1. "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ed18f094-3905-4cc5-9692-1ea3cfd71915",
          "type": "message",
          "user": "U03HB5N9QBY",
          "text": "Ok, makes sense. Thanks for providing more details.",
          "ts": "1654727462.874629",
          "thread_ts": "1654726746.425789",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J4EJ0CVA"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qeZ=J",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok, makes sense. Thanks for providing more details."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "301F18A5-9AF8-4D58-84B4-58A703713B88",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "Also, I'd like to use source control from Xcode so I'm not keeping app up to date in both Xcode and Swift Playgrounds. ",
          "ts": "1654727544.728949",
          "thread_ts": "1654726746.425789",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VDa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also"
                    },
                    {
                      "type": "text",
                      "text": ","
                    },
                    {
                      "type": "text",
                      "text": " I'd "
                    },
                    {
                      "type": "text",
                      "text": "like"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "use"
                    },
                    {
                      "type": "text",
                      "text": " source "
                    },
                    {
                      "type": "text",
                      "text": "control"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "from"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Xcode"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "so"
                    },
                    {
                      "type": "text",
                      "text": " I'm "
                    },
                    {
                      "type": "text",
                      "text": "not"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "keeping"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "app"
                    },
                    {
                      "type": "text",
                      "text": " up to "
                    },
                    {
                      "type": "text",
                      "text": "date"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "both"
                    },
                    {
                      "type": "text",
                      "text": " Xcode "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " Swift Playgrounds"
                    },
                    {
                      "type": "text",
                      "text": ". "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "B2F69723-0273-4C00-B84A-15B3A9D6FECF",
          "type": "message",
          "user": "U03J4EJ0CVA",
          "text": "I was waiting on WWDC22 to see if any new API functionality was introduced for Swift Playgrounds for Core Data, CloudKit and source control. Thanks for clarifying for me. :+1::skin-tone-2:",
          "ts": "1654727665.197239",
          "thread_ts": "1654726746.425789",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HB5N9QBY"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "QU3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "was"
                    },
                    {
                      "type": "text",
                      "text": " waiting "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " WWDC22 "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "see"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "if"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "any"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "new"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "API"
                    },
                    {
                      "type": "text",
                      "text": " functionality "
                    },
                    {
                      "type": "text",
                      "text": "was"
                    },
                    {
                      "type": "text",
                      "text": " introduced "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " Swift Playground"
                    },
                    {
                      "type": "text",
                      "text": "s"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Core"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Data,"
                    },
                    {
                      "type": "text",
                      "text": " CloudKit "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " source control"
                    },
                    {
                      "type": "text",
                      "text": ". Thanks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " clarifying "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "me. "
                    },
                    {
                      "type": "emoji",
                      "name": "+1",
                      "skin_tone": 2
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JUCK9B16\u003e asked\n\u0026gt; Might be more of a SPM question, but with Xcode 14 I see about 30 times every time that \"Resolve Packages\" runs:\n\u0026gt; \n\u0026gt; \n\u0026gt; Showing Recent Messages\n\u0026gt; Usage of /Users/me/Library/org.swift.swiftpm/collections.json has been deprecated. Please delete it and use the new /Users/me/Library/org.swift.swiftpm/configuration/collections.json instead.\n\u0026gt; \n\u0026gt; I don't mind deleting that file, but will it mess up my Xcode 13 builds?",
      "ts": "1654726958.105259",
      "thread_ts": "1654726958.105259",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654727209.222319",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "eBJn",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JUCK9B16"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Might be more of a SPM question, but with Xcode 14 I see about 30 times every time that \\\"Resolve Packages\\\" runs:\\n\\n\\nShowing Recent Messages\\nUsage of \\/Users\\/me\\/Library\\/org.swift.swiftpm\\/collections.json has been deprecated. Please delete it and use the new \\/Users\\/me\\/Library\\/org.swift.swiftpm\\/configuration\\/collections.json instead.\\n\\nI don't mind deleting that file, but will it mess up my Xcode 13 builds?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "4988ebbd-b211-4bc5-8087-d92a9f1e2e26",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "The message showing up multiple times is a known issue in Xcode 14 beta 1. This file contains the list of configured package collections, deleting it will only affect which package collections are visible during “Add Package”, so it is safe to delete it. The warning is there to make you aware that a collection added using Xcode 14 will not appear in earlier versions and vice versa. So it is also safe to ignore the warning until you’re using Xcode 14 exclusively.",
          "ts": "1654726967.182689",
          "thread_ts": "1654726958.105259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bIOG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The message showing up multiple times is a known issue in Xcode 14 beta 1. This file contains the list of configured package collections, deleting it will only affect which package collections are visible during “Add Package”, so it is safe to delete it. The warning is there to make you aware that a collection added using Xcode 14 will not appear in earlier versions and vice versa. So it is also safe to ignore the warning until you’re using Xcode 14 exclusively."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "aeef75fe-7c03-4ceb-a61d-f7d870d81019",
          "type": "message",
          "user": "U03J22AU6DQ",
          "text": "\u003c@U03J7H4LJ5N\u003e So, is it correct that `collections.json` was copied to a new location thus the old one can be deleted or shall any additional changes be made to preserve existing packages collections?",
          "ts": "1654727152.649679",
          "thread_ts": "1654726958.105259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7Bf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03J7H4LJ5N"
                    },
                    {
                      "type": "text",
                      "text": " So, is it correct that "
                    },
                    {
                      "type": "text",
                      "text": "collections.json",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " was copied to a new location thus the old one can be deleted or shall any additional changes be made to preserve existing packages collections?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6e2fd59b-b74e-4dce-8902-38465b071326",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "Yes, that is correct. This is part of a one-time reorganization of these configuration files.",
          "ts": "1654727209.222319",
          "thread_ts": "1654726958.105259",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "bow",
              "count": 1,
              "users": [
                "U03J22AU6DQ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Wa7",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, that is correct. This is part of a one-time reorganization of these configuration files."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J22AU6DQ\u003e asked\n\u0026gt; With this gorgeous Build Timeline I'm really curious if there are any advices on how to display the dependency graph for a Swift Package. The idea can be described as a diagram with displays how targets depend on one another.\n\u0026gt; I've been working on a pet-project tool to display it with some solutions that do not look quite right since the Package is a struct and it has `targets` property and SPM does package resolution anyway. Sooo, I've been wondering maybe there is some approach that I do not know about? :sweat_smile: What would be your general advices to achieve such a behaviour?\n\u0026gt; \n\u0026gt; (And once again, Build Timeline is magnificent, many thanks for that, basically a piece of art)",
      "ts": "1654727020.936819",
      "thread_ts": "1654727020.936819",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654736342.551189",
      "reactions": [
        {
          "name": "heart",
          "count": 1,
          "users": [
            "U03H36R5MST"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "T5ZO",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J22AU6DQ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"With this gorgeous Build Timeline I'm really curious if there are any advices on how to display the dependency graph for a Swift Package. The idea can be described as a diagram with displays how targets depend on one another.\\nI've been working on a pet-project tool to display it with some solutions that do not look quite right since the Package is a struct and it has `targets` property and SPM does package resolution anyway. Sooo, I've been wondering maybe there is some approach that I do not know about? \"},{\"type\":\"emoji\",\"name\":\"sweat_smile\"},{\"type\":\"text\",\"text\":\" What would be your general advices to achieve such a behaviour?\\n\\n(And once again, Build Timeline is magnificent, many thanks for that, basically a piece of art)\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "40fe3fa7-5260-401c-b027-d70835798af9",
          "type": "message",
          "user": "U03HES8111T",
          "text": "This is a great idea — please file feedback at \u003chttp://feedbackassistant.apple.com\u003e describing what information you would want to see in such a graph in Xcode.\n\nFor a pet project, one approach that might be useful would be to invoke `swift package describe --type json` to get structured output for each package (including target dependencies), and then to use that to construct a graph.  There should be enough information there to represent all the dependencies.",
          "ts": "1654727091.805739",
          "thread_ts": "1654727020.936819",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UtsQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is a great idea — please file feedback at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " describing what information you would want to see in such a graph in Xcode.\n\nFor a pet project, one approach that might be useful would be to invoke "
                    },
                    {
                      "type": "text",
                      "text": "swift package describe --type json",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to get structured output for each package (including target dependencies), and then to use that to construct a graph.  There should be enough information there to represent all the dependencies."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "85e09513-f0ad-4f0b-9b14-83717c1e9885",
          "type": "message",
          "user": "U03J22AU6DQ",
          "text": "Yeah, parsing JSON is exactly the approach that made from prototype to some actual use :sweat_smile:\nThank you, I’ll file a feedback then :raised_hands:",
          "ts": "1654727262.474649",
          "thread_ts": "1654727020.936819",
          "edited": {
            "user": "U03J22AU6DQ",
            "ts": "1654727277.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oFnpg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yeah, parsing JSON is exactly the approach that made from prototype to some actual use "
                    },
                    {
                      "type": "emoji",
                      "name": "sweat_smile",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\nThank you, I’ll file a feedback then "
                    },
                    {
                      "type": "emoji",
                      "name": "raised_hands",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "78bd7ec5-41db-4b31-8342-80efcaf3e9fa",
          "type": "message",
          "user": "U03H36R5MST",
          "text": "Hey \u003c@U03J22AU6DQ\u003e, sorry just got in. Awesome that the build timeline is helping you, that's really great to see! For the target dependency graph of a Swift package, that actually exists: `swift package show-dependencies --format json`. Does that miss anything you're looking for?",
          "ts": "1654736342.551189",
          "thread_ts": "1654727020.936819",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hao",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hey "
                    },
                    {
                      "type": "user",
                      "user_id": "U03J22AU6DQ"
                    },
                    {
                      "type": "text",
                      "text": ", sorry just got in. Awesome that the build timeline is helping you, that's really great to see! For the target dependency graph of a Swift package, that actually exists: "
                    },
                    {
                      "type": "text",
                      "text": "swift package show-dependencies --format json",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". Does that miss anything you're looking for?"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JGEZM5K5\u003e asked\n\u0026gt; Is it possible to build an iOS app with SPM only without xcworkspace / xcproject and without falling back to generating one?",
      "ts": "1654727069.124869",
      "thread_ts": "1654727069.124869",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654727577.116359",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "UJEL",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JGEZM5K5"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is it possible to build an iOS app with SPM only without xcworkspace \\/ xcproject and without falling back to generating one?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "1fb71f2c-5314-4813-8778-0ce0c35eda5e",
          "type": "message",
          "user": "U03J7H5DD2L",
          "text": "Yes, it’s possible! In Xcode, choose File \u0026gt; New \u0026gt; Project… and pick the Swift Playgrounds App template. These types of apps use the SwiftPM format rather than Xcode-style settings, so you’ll get a `Package.swift` file instead of an `xcodproj`.\n\nYou could even use the Swift Playgrounds app on iPadOS for this! Here’s a \u003chttps://support.apple.com/guide/playgrounds-ipad/itc2207c0870/ipados|guide\u003e to get you started in that direction if you want.",
          "ts": "1654727091.309879",
          "thread_ts": "1654727069.124869",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7EPKs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, it’s possible! In Xcode, choose File \u003e New \u003e Project… and pick the Swift Playgrounds App template. These types of apps use the SwiftPM format rather than Xcode-style settings, so you’ll get a "
                    },
                    {
                      "type": "text",
                      "text": "Package.swift",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " file instead of an "
                    },
                    {
                      "type": "text",
                      "text": "xcodproj",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ".\n\nYou could even use the Swift Playgrounds app on iPadOS for this! Here’s a "
                    },
                    {
                      "type": "link",
                      "url": "https://support.apple.com/guide/playgrounds-ipad/itc2207c0870/ipados",
                      "text": "guide"
                    },
                    {
                      "type": "text",
                      "text": " to get you started in that direction if you want."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "83667b6d-a7a0-4d48-988a-843bfa4cc826",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "But how to manage diff for project with .spm extension? Looks like my project on github will contains readme and spm folder)",
          "ts": "1654727155.823189",
          "thread_ts": "1654727069.124869",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FaFlV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "But how to manage diff for project with .spm extension? Looks like my project on github will contains readme and spm folder)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "08562a72-55de-4ac5-a190-8cc4ef86ddc5",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Also, any chance that Swift Playground App will support Plugins?",
          "ts": "1654727188.126099",
          "thread_ts": "1654727069.124869",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UlJX8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also, any chance that Swift Playground App will support Plugins?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5ba89a5e-48ef-4af2-8c1c-a0a9e545c96b",
          "type": "message",
          "user": "U03JGEZM5K5",
          "text": ":sunglasses: Awesome! I somehow considered playgrounds for … playing / experimenting? Are playgrounds a new preferred way to do big production projects?",
          "ts": "1654727211.091239",
          "thread_ts": "1654727069.124869",
          "edited": {
            "user": "U03JGEZM5K5",
            "ts": "1654727344.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CWQNB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "emoji",
                      "name": "sunglasses",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " Awesome! I somehow considered playgrounds for … playing / experimenting? Are playgrounds a new preferred way to do big production projects?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c50ea3fb-858a-4260-89ba-51f4c063b503",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "I only wonder how managing Unit/UI/Snapshot tests (or even Test plans) in such configuration would work, but sounds like something I should spend a couple of moments try-failing. :eyes:",
          "ts": "1654727412.970699",
          "thread_ts": "1654727069.124869",
          "edited": {
            "user": "U03JPFQNX5K",
            "ts": "1654727439.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BJ36",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I only wonder how managing Unit/UI/Snapshot tests (or even Test plans) in such configuration would work, but sounds like something I should spend a couple of moments try-failing. "
                    },
                    {
                      "type": "emoji",
                      "name": "eyes",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b4115e13-4571-429d-988d-9b1fb6ef1526",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "In my opinion - isn’t. To be an enterprise application, we should use some devtools, like linting/codegen or different package managers (CocoaPods).\n\nPlayground App format is a good first step for replacing a heavy xcodeproj files to something modern. But we don’t have enough tools for that.",
          "ts": "1654727523.490859",
          "thread_ts": "1654727069.124869",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nis",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In my opinion - isn’t. To be an enterprise application, we should use some devtools, like linting/codegen or different package managers (CocoaPods).\n\nPlayground App format is a good first step for replacing a heavy xcodeproj files to something modern. But we don’t have enough tools for that."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e2bb97a8-20d7-4254-9204-465e08ae4b9d",
          "type": "message",
          "user": "U03J7H5DD2L",
          "text": "Wow, lots of replies! I would recommend asking new questions via the :workflowbolt: workflow rather than in this thread so you can get more eyes on it!",
          "ts": "1654727577.116359",
          "thread_ts": "1654727069.124869",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JPFQNX5K",
                "U03JGEZM5K5"
              ]
            },
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U03JGEZM5K5"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "O2e",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Wow, lots of replies! I would recommend asking new questions via the "
                    },
                    {
                      "type": "emoji",
                      "name": "workflowbolt",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " workflow rather than in this thread so you can get more eyes on it!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JUCK9B16\u003e asked\n\u0026gt; In Xcode, is it possible to see what updates are available for SPM packages without actually updating them? Would be nice if there was a visual indication of out of date packages in the Packages section",
      "ts": "1654727619.188429",
      "thread_ts": "1654727619.188429",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654727764.807959",
      "reactions": [
        {
          "name": "heavy_plus_sign",
          "count": 4,
          "users": [
            "U03HMCT187R",
            "U03JQ9SKAPQ",
            "U03JELVMV7T",
            "U03HZ6C9S21"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "HK+O",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JUCK9B16"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"In Xcode, is it possible to see what updates are available for SPM packages without actually updating them? Would be nice if there was a visual indication of out of date packages in the Packages section\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "2583acef-2163-441d-b610-e21187898b36",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "This is a great idea — please file feedback at \u003chttp://feedbackassistant.apple.com\u003e describing how you’d think this information should be presented.",
          "ts": "1654727627.612969",
          "thread_ts": "1654727619.188429",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "x493Y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is a great idea — please file feedback at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " describing how you’d think this information should be presented."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "be667000-8e94-46ac-ad6c-ed590c8285e3",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "Sometimes features seem so obvious I assume its already on some Jira board somewhere :grinning:",
          "ts": "1654727764.807959",
          "thread_ts": "1654727619.188429",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "smile",
              "count": 1,
              "users": [
                "U03JPFQNX5K"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "G1eK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sometimes features seem so obvious I assume its already on some Jira board somewhere "
                    },
                    {
                      "type": "emoji",
                      "name": "grinning",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JGEZM5K5\u003e asked\n\u0026gt; Should it be up to the consumer or producer of a package to decide how it should be linked and why? As of today, SPM looks like missing a way to say \"I want this to be linked in ... way\" without forking a third-party package and modifying `Package.swift`.",
      "ts": "1654727675.287889",
      "thread_ts": "1654727675.287889",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654727935.596489",
      "reactions": [
        {
          "name": "point_up",
          "count": 1,
          "users": [
            "U03JPFQNX5K"
          ]
        },
        {
          "name": "heavy_plus_sign",
          "count": 1,
          "users": [
            "U03JPFQNX5K"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "vyK",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JGEZM5K5"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Should it be up to the consumer or producer of a package to decide how it should be linked and why? As of today, SPM looks like missing a way to say \\\"I want this to be linked in ... way\\\" without forking a third-party package and modifying `Package.swift`.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "d1e036f4-fcd0-450c-9781-2c1ff8fd17bf",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Yes, this would be a very good enhancement, at least for some kinds of properties (such as whether to build a library as static or dynamic).\n\nWould you mind please filing a bug report at \u003chttp://feedbackassistant.appe.com|feedbackassistant.appe.com\u003e and describing in more detail what you would want to configure about how the library is linked? (beyond just dynamic vs static, for example would the consumer target need to affect the build parameters that the library is built with).",
          "ts": "1654727770.326059",
          "thread_ts": "1654727675.287889",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JGEZM5K5"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UVz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, this would be a very good enhancement, at least for some kinds of properties (such as whether to build a library as static or dynamic).\n\nWould you mind please filing a bug report at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.appe.com",
                      "text": "feedbackassistant.appe.com"
                    },
                    {
                      "type": "text",
                      "text": " and describing in more detail what you would want to configure about how the library is linked? (beyond just dynamic vs static, for example would the consumer target need to affect the build parameters that the library is built with)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5d975cc2-2016-4d36-bd54-8370eb79a6f9",
          "type": "message",
          "user": "U03JGEZM5K5",
          "text": "I will. However, I dream of solution where I do not need to know what is static and dynamic and making any of such decisions :slightly_smiling_face:",
          "ts": "1654727935.596489",
          "thread_ts": "1654727675.287889",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5c7Jx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I will. However, I dream of solution where I do not need to know what is static and dynamic and making any of such decisions "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4DF6D6G\u003e asked\n\u0026gt; Can you help me with a crash with XcodePreview ? When I try to load an asset that is located in another package it crashes. Will it be possible to load assets from other local package ?\n\u0026gt; \n\u0026gt; \u003chttps://forums.swift.org/t/xcode-previews-swiftpm-resources-xcpreviewagent-crashed/51680|https://forums.swift.org/t/xcode-previews-swiftpm-resources-xcpreviewagent-crashed/51680\u003e\n\u0026gt; \u003chttps://stackoverflow.com/q/64540082|https://stackoverflow.com/q/64540082\u003e\n\u0026gt; \u003chttps://feedbackassistant.apple.com/feedback/10102512|https://feedbackassistant.apple.com/feedback/10102512\u003e\n\u0026gt; \u003chttps://feedbackassistant.apple.com/feedback/10104291|https://feedbackassistant.apple.com/feedback/10104291\u003e",
      "ts": "1654727679.004339",
      "thread_ts": "1654727679.004339",
      "attachments": [
        {
          "fallback": "Swift Forums: Xcode Previews + SwiftPM resources - XCPreviewAgent crashed",
          "id": 1,
          "title": "Xcode Previews + SwiftPM resources - XCPreviewAgent crashed",
          "title_link": "https://forums.swift.org/t/xcode-previews-swiftpm-resources-xcpreviewagent-crashed/51680",
          "text": "Hello all, There's a really frustrating crash with Xcode Previews because it cannot find the design resources package using the Bundle.module accessor (filed FB9479423). Is there something wrong with the package setup? I have some Swift packages dependent on another package containing design resources. Xcode Previews do not work because XCPreviewAgent crashes: CompanyDesign/resource_bundle_accessor.swift:27: Fatal error: unable to find bundle named CompanyDesign_CompanyDesign Is there some o...",
          "thumb_url": "https://aws1.discourse-cdn.com/swift/original/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6.png",
          "service_name": "Swift Forums",
          "service_icon": "https://aws1.discourse-cdn.com/swift/optimized/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6_2_180x180.png",
          "from_url": "https://forums.swift.org/t/xcode-previews-swiftpm-resources-xcpreviewagent-crashed/51680",
          "original_url": "https://forums.swift.org/t/xcode-previews-swiftpm-resources-xcpreviewagent-crashed/51680",
          "fields": [
            {
              "title": "Reading time",
              "value": "2 mins :clock2:",
              "short": true
            },
            {
              "title": "Likes",
              "value": "18 :heart:",
              "short": true
            }
          ],
          "blocks": null,
          "ts": 1630485532
        },
        {
          "fallback": "Stack Overflow: Xcode 12 - SwiftUI preview doesn't work on Swift Package when have another Swift Package as dependencies - 'previewInstances' message to agent",
          "id": 2,
          "title": "Xcode 12 - SwiftUI preview doesn't work on Swift Package when have another Swift Package as dependencies - 'previewInstances' message to agent",
          "title_link": "https://stackoverflow.com/q/64540082",
          "text": "I have an issue on SwiftUI preview in a view located in a Swift Package when my code imports a control or value from an other swift package. import Foundation import SwiftUI import Common struct",
          "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
          "service_name": "Stack Overflow",
          "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon.png?v=c78bd457575a",
          "from_url": "https://stackoverflow.com/q/64540082",
          "original_url": "https://stackoverflow.com/q/64540082",
          "blocks": null
        }
      ],
      "edited": {
        "user": "B03HGE996MA",
        "ts": "1654727679.000000"
      },
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654730546.947939",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "8UFbn",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4DF6D6G"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can you help me with a crash with XcodePreview ? When I try to load an asset that is located in another package it crashes. Will it be possible to load assets from other local package ?\\n\\n\"},{\"type\":\"link\",\"url\":\"https:\\/\\/forums.swift.org\\/t\\/xcode-previews-swiftpm-resources-xcpreviewagent-crashed\\/51680\",\"text\":\"https:\\/\\/forums.swift.org\\/t\\/xcode-previews-swiftpm-resources-xcpreviewagent-crashed\\/51680\"},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"link\",\"url\":\"https:\\/\\/stackoverflow.com\\/q\\/64540082\",\"text\":\"https:\\/\\/stackoverflow.com\\/q\\/64540082\"},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"link\",\"url\":\"https:\\/\\/feedbackassistant.apple.com\\/feedback\\/10102512\",\"text\":\"https:\\/\\/feedbackassistant.apple.com\\/feedback\\/10102512\"},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"link\",\"url\":\"https:\\/\\/feedbackassistant.apple.com\\/feedback\\/10104291\",\"text\":\"https:\\/\\/feedbackassistant.apple.com\\/feedback\\/10104291\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "21164abc-7795-4e0c-a5e7-b91b2cff6860",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "This is a known issue when using resources of transitive dependencies while previewing a standalone package. Using an app as the preview host as discussed in the forum thread is the recommended workaround at the moment.",
          "ts": "1654727707.972719",
          "thread_ts": "1654727679.004339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cjA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is a known issue when using resources of transitive dependencies while previewing a standalone package. Using an app as the preview host as discussed in the forum thread is the recommended workaround at the moment."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "71b7d921-d4b2-4a86-aa68-1a39cfe53ba3",
          "type": "message",
          "user": "U03J4DF6D6G",
          "text": "Thanks for taking the time to respond. I’m more confident now that this bug will be fixed. I’m not really sure what this(*Using an app as the preview host*) means. Because when I select the app and run the Preview it doesn’t crash but nothing seems to be happening. And I have this in the run console. `*2022-06-09 00:41:53.104293+0200 TestCrashXcode[99836:1805516] [UIFocus] _TtGC7SwiftUI14_UIHostingViewGVS_15ModifiedContentVS_7AnyViewVS_12RootModifier__ implements focusItemsInRect: - caching for linear focus movement is limited as long as this view is on screen.*`",
          "ts": "1654728339.059739",
          "thread_ts": "1654727679.004339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rTz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for taking the time to respond. I’m more confident now that this bug will be fixed. I’m not really sure what this("
                    },
                    {
                      "type": "text",
                      "text": "Using an app as the preview host",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ") means. Because when I select the app and run the Preview it doesn’t crash but nothing seems to be happening. And I have this in the run console. `"
                    },
                    {
                      "type": "text",
                      "text": "2022-06-09 00:41:53.104293+0200 TestCrashXcode[99836:1805516] [UIFocus] _TtGC7SwiftUI14_UIHostingViewGVS_15ModifiedContentVS_7AnyViewVS_12RootModifier__ implements focusItemsInRect: - caching for linear focus movement is limited as long as this view is on screen.",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "`"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3943892e-c26a-4ad1-9aeb-a549d5df5c86",
          "type": "message",
          "user": "U03J4DF6D6G",
          "ts": "1654728352.022059",
          "thread_ts": "1654727679.004339",
          "files": [
            {
              "id": "F03JPAM0NH4",
              "created": 1654728349,
              "timestamp": 1654728349,
              "name": "Capture d’écran 2022-06-09 à 00.43.28.png",
              "title": "Capture d’écran 2022-06-09 à 00.43.28.png",
              "mimetype": "image/png",
              "image_exif_rotation": 1,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03J4DF6D6G",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 176007,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03JPAM0NH4-Capture d’écran 2022-06-09 à 00.43.28.png",
              "url_private_download": "C03H0JN431U/F03JPAM0NH4-Capture d’écran 2022-06-09 à 00.43.28.png",
              "original_h": 1212,
              "original_w": 1816,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPAM0NH4-99e9504f13/capture_d___e__cran_2022-06-09_a___00.43.28_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPAM0NH4-99e9504f13/capture_d___e__cran_2022-06-09_a___00.43.28_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPAM0NH4-99e9504f13/capture_d___e__cran_2022-06-09_a___00.43.28_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPAM0NH4-99e9504f13/capture_d___e__cran_2022-06-09_a___00.43.28_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 360,
              "thumb_360_h": 240,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPAM0NH4-99e9504f13/capture_d___e__cran_2022-06-09_a___00.43.28_480.png",
              "thumb_480_w": 480,
              "thumb_480_h": 320,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPAM0NH4-99e9504f13/capture_d___e__cran_2022-06-09_a___00.43.28_720.png",
              "thumb_720_w": 720,
              "thumb_720_h": 481,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPAM0NH4-99e9504f13/capture_d___e__cran_2022-06-09_a___00.43.28_960.png",
              "thumb_960_w": 960,
              "thumb_960_h": 641,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JPAM0NH4-99e9504f13/capture_d___e__cran_2022-06-09_a___00.43.28_1024.png",
              "thumb_1024_w": 1024,
              "thumb_1024_h": 683,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03J4DF6D6G/F03JPAM0NH4/capture_d___e__cran_2022-06-09_a___00.43.28.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03JPAM0NH4-3e2e784bcc",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": null
        },
        {
          "client_msg_id": "a1aa1478-e5aa-4c97-a4b8-90f81b1011c9",
          "type": "message",
          "user": "U03J4DF6D6G",
          "text": "\u003c@U03J7H4LJ5N\u003e sorry to ping but did you see my response ?",
          "ts": "1654729607.702309",
          "thread_ts": "1654727679.004339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "02Bf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03J7H4LJ5N"
                    },
                    {
                      "type": "text",
                      "text": " sorry to ping but did you see my response ?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1deeaae9-6e1f-4b50-9e0e-32734dca1f9b",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "Yes, sorry, I was trying to find an answer for you, but it might be better to ask this in the SwiftUI labs \u003chttps://developer.apple.com/wwdc22/labs-and-lounges/dashboard/P946NZ7RP4/dashboard\u003e",
          "ts": "1654729853.080869",
          "thread_ts": "1654727679.004339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "IOR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, sorry, I was trying to find an answer for you, but it might be better to ask this in the SwiftUI labs "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/P946NZ7RP4/dashboard",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6ce63d0c-5cbe-40d0-9b42-eaa8a5aa8c59",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "I’m only familiar with the Swift package part of this issue",
          "ts": "1654729882.057149",
          "thread_ts": "1654727679.004339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "s8En",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’m only familiar with the Swift package part of this issue"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e200ac1c-9706-459d-a59b-239f57738f41",
          "type": "message",
          "user": "U03J7H5DD2L",
          "text": "Right, the SwiftUI folks staffing that lab from 3–5PM (California time) tomorrow might be able to help — or at least, they could walk you through submitting another bug report since it sounds like we couldn’t find a good workaround for you!",
          "ts": "1654730011.886439",
          "thread_ts": "1654727679.004339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JzON",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Right, the SwiftUI folks staffing that lab from 3–5PM (California time) tomorrow might be able to help — or at least, they could walk you through submitting another bug report since it sounds like we couldn’t find a good workaround for you!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e2848f43-b12d-4a79-949f-286bc110a68e",
          "type": "message",
          "user": "U03J4DF6D6G",
          "text": "Thanks I did ask for a lab session.",
          "ts": "1654730546.947939",
          "thread_ts": "1654727679.004339",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03J7H5DD2L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5RfZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks I did ask for a lab session."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JEMQ66C9\u003e asked\n\u0026gt; When trying to compile our app with Xcode 14b1, we have a build failure due to ibtoold/AssetCatalogSimulatorAgent crashing when compiling the asset catalog. This did not happen with Xcode 13.x.\n\u0026gt; \n\u0026gt; Except submitting a feedback, is there any known workaround?\n\u0026gt; \n\u0026gt; :point_right: \u003chttps://feedbackassistant.apple.com/feedback/10104592|https://feedbackassistant.apple.com/feedback/10104592\u003e",
      "ts": "1654727802.431559",
      "thread_ts": "1654727802.431559",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654727836.097739",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "XG1A",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JEMQ66C9"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"When trying to compile our app with Xcode 14b1, we have a build failure due to ibtoold\\/AssetCatalogSimulatorAgent crashing when compiling the asset catalog. This did not happen with Xcode 13.x.\\n\\nExcept submitting a feedback, is there any known workaround?\\n\\n\"},{\"type\":\"emoji\",\"name\":\"point_right\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"link\",\"url\":\"https:\\/\\/feedbackassistant.apple.com\\/feedback\\/10104592\",\"text\":\"https:\\/\\/feedbackassistant.apple.com\\/feedback\\/10104592\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "dacdd399-b070-49ba-ba64-eb1c84543f05",
          "type": "message",
          "user": "U03HB5P8SB0",
          "text": "Thank you for reporting this! We are looking into issues with the asset catalog compiler and will provide updates through your feedback.",
          "ts": "1654727836.097739",
          "thread_ts": "1654727802.431559",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JEMQ66C9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7ZY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for reporting this! We are looking into issues with the asset catalog compiler and will provide updates through your feedback."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J20E7UBV\u003e asked\n\u0026gt; What is your advice for handling teams where some developers are on Intel machines and some on Apple Silicon?  We run Xcode through Rosetta consistently, but wondering if you had best practices.",
      "ts": "1654727809.787569",
      "thread_ts": "1654727809.787569",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 32,
      "latest_reply": "1654731796.461909",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Ca4e",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J20E7UBV"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What is your advice for handling teams where some developers are on Intel machines and some on Apple Silicon?  We run Xcode through Rosetta consistently, but wondering if you had best practices.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "57705331-f62f-45ab-8c04-60bc7a194fdb",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Hi Brandon, I'd be interested in understanding your team's use case for running Xcode under Rosetta",
          "ts": "1654727839.038209",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wjA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Brandon, I'd be interested in understanding your team's use case for running Xcode under Rosetta"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "33576050-25f7-4f47-b9f1-20dd9fb3b50d",
          "type": "message",
          "user": "U03HL5G4QFN",
          "text": "~Guessing this is they produce Intel Debug builds? (which would run on all systems)~",
          "ts": "1654727981.870919",
          "thread_ts": "1654727809.787569",
          "edited": {
            "user": "U03HL5G4QFN",
            "ts": "1654728100.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bgjw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Guessing this is they produce Intel Debug builds? (which would run on all systems)",
                      "style": {
                        "strike": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "da1653f7-406a-42fd-8335-f592ebe1ba79",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "\u003c@U03HHPY6YQ2\u003e We have some internal, third-party dependencies that throw an `Unsupported Swift architecture` and `Could not build Objective-C module...` when running without Rosetta.  Our builds typically go through a CI pipeline, so there's little need for actually using Rosetta if there was an easy way of resolving the aforementioned errors, assuming we could run Xcode on both Intel and Apple Silicon machines.",
          "ts": "1654728100.774589",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8Ed",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HHPY6YQ2"
                    },
                    {
                      "type": "text",
                      "text": " We have some internal, third-party dependencies that throw an "
                    },
                    {
                      "type": "text",
                      "text": "Unsupported Swift architecture",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "text",
                      "text": "Could not build Objective-C module...",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " when running without Rosetta.  Our builds typically go through a CI pipeline, so there's little need for actually using Rosetta if there was an easy way of resolving the aforementioned errors, assuming we could run Xcode on both Intel and Apple Silicon machines."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4b0aec4f-06d9-4176-8bdd-3970593cefb0",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Are these internal dependencies fat binaries that have slices for both Intel and Apple silicon?",
          "ts": "1654728162.246039",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UN/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Are these internal dependencies fat binaries that have slices for both Intel and Apple silicon?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e1079011-1cdd-4572-8c6d-9022a556c884",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "\u003c@U03HHPY6YQ2\u003e Regretfully, your question goes a bit over my head, so I can't say with confidence.  If you have guidance or documentation on where to look into this, I can start investigating and speak with the teams responsible for said dependency.",
          "ts": "1654728237.068639",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VjXfY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HHPY6YQ2"
                    },
                    {
                      "type": "text",
                      "text": " Regretfully, your question goes a bit over my head, so I can't say with confidence.  If you have guidance or documentation on where to look into this, I can start investigating and speak with the teams responsible for said dependency."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "07c208db-d921-4a8e-afe8-4fa1091195e4",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Let's start simple: what platforms do your app build for?",
          "ts": "1654728290.928199",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Qe7",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Let's start simple: what platforms do your app build for?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5fae9451-6000-48aa-a5f3-7c408f0b33a8",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Our app is iPhone (iOS 13+) only.  Our internal developers work on macOS 12, all of us on Xcode 13.4.1, as noted some on Intel, some on Apple Silicon.",
          "ts": "1654728380.173909",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "w7lae",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Our app is iPhone (iOS 13+) only.  Our internal developers work on macOS 12, all of us on Xcode 13.4.1, as noted some on Intel, some on Apple Silicon."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4d4298e9-4590-469d-9ddf-674e7622ef66",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Do you have the \"excluded architectures\" build setting set in your project?",
          "ts": "1654728481.883369",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "anDp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Do you have the \"excluded architectures\" build setting set in your project?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "519385e7-be01-47fa-8a79-ba522c66e6eb",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Excellent question; I was just exploring that area before this Q\u0026amp;A started.  Yes, to your question.  We have `arm64` listed for each scheme next to \"Any iOS Simulator SDK\".",
          "ts": "1654728534.310189",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vKHok",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Excellent question; I was just exploring that area before this Q\u0026A started.  Yes, to your question.  We have "
                    },
                    {
                      "type": "text",
                      "text": "arm64",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " listed for each scheme next to \"Any iOS Simulator SDK\"."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "73c8f9a5-5a11-424b-b983-c610650cb53f",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Well, I'm guessing that's your problem. You have set Xcode to build only for Intel",
          "ts": "1654728586.805609",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Or8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Well, I'm guessing that's your problem. You have set Xcode to build only for Intel"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3243e586-b49b-44c6-b487-f99a3616d33b",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "If you run Xcode without Rosetta, then the current architecture will be `arm64`, but you have set Xcode not to build for that architecture",
          "ts": "1654728657.569859",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "v0=6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you run Xcode without Rosetta, then the current architecture will be "
                    },
                    {
                      "type": "text",
                      "text": "arm64",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", but you have set Xcode not to build for that architecture"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fdec1790-6a91-4fe1-ac33-f701cf86ec0c",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Hence why you have found you need to run under Rosetta",
          "ts": "1654728691.366009",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Qho",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hence why you have found you need to run under Rosetta"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ac6e4bb5-742a-4f15-849d-aff7d4607c24",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "We strongly suggest _not_ excluding architectures and instead building your app for every supported CPU type",
          "ts": "1654728741.846129",
          "thread_ts": "1654727809.787569",
          "edited": {
            "user": "U03HHPY6YQ2",
            "ts": "1654728775.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "yTnjh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We strongly suggest "
                    },
                    {
                      "type": "text",
                      "text": "not",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " excluding architectures and instead building your app for every supported CPU type"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "62383902-b829-4e5a-8ac9-fad256a87619",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "To that end (and totally understand we're deep-diving here, so I know you might only be able to help so far - thank you for this so far), if I remove `arm64` from the Excluded Architectures, I end up with a familiar _...building for iOS Simulator, but linking object file built for iOS...for architecture arm64_ (this with Rosetta disabled and running Xcode 14 natively).",
          "ts": "1654728826.111769",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "d=k",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "To that end (and totally understand we're deep-diving here, so I know you might only be able to help so far - thank you for this so far), if I remove "
                    },
                    {
                      "type": "text",
                      "text": "arm64",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " from the Excluded Architectures, I end up with a familiar "
                    },
                    {
                      "type": "text",
                      "text": "...building for iOS Simulator, but linking object file built for iOS...for architecture arm64 ",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "(this with Rosetta disabled and running Xcode 14 natively)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6c35575f-f751-423b-a076-ab6c6476b359",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "The iOS simulator and iOS on-device are two distinct platforms, even though they may share a CPU architecture (arm64). You need to make sure that your dependency is configured to build with both native (device) and Simulator slices",
          "ts": "1654728934.418719",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cUXtC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The iOS simulator and iOS on-device are two distinct platforms, even though they may share a CPU architecture (arm64). You need to make sure that your dependency is configured to build with both native (device) and Simulator slices"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7607609d-ba87-4181-af12-dc95f4315e13",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Got it, that makes sense.  Last question, if you don't mind, but do you have any guidance on where I can turn to learn more about what slices my dependency is designed to build for?  This is a little outside of my wheel house, but I'm sure with some guidance, I can figure it out and learn what steps are needed.",
          "ts": "1654729002.365639",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "95BM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Got it, that makes sense.  Last question, if you don't mind, but do you have any guidance on where I can turn to learn more about what slices my dependency is designed to build for?  This is a little outside of my wheel house, but I'm sure with some guidance, I can figure it out and learn what steps are needed."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3bf5d942-2744-420f-8639-54f3d8ac0af1",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Do you have the source for this dependency, or are you building (linking) against a pre-compiled library?",
          "ts": "1654729149.801009",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KYLZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Do you have the source for this dependency, or are you building (linking) against a pre-compiled library?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9f3be227-9e2f-44f1-8b9b-482f94bd876b",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "I have the source.  It's an internal dependency that I can view/modify as needed :slightly_smiling_face:",
          "ts": "1654729224.126579",
          "thread_ts": "1654727809.787569",
          "edited": {
            "user": "U03J20E7UBV",
            "ts": "1654729403.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "WFl8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I have the source.  It's an internal dependency that I can view/modify as needed "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "96c428cf-9a0c-449d-a3cf-bc60fba3c0c4",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "The first thing I would do is read this documentation page: \u003chttps://developer.apple.com/documentation/apple-silicon/building-a-universal-macos-binary\u003e",
          "ts": "1654729486.361729",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zIbg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The first thing I would do is read this documentation page: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/apple-silicon/building-a-universal-macos-binary",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bfdd05dd-4b3e-4ca5-a053-98f8b3012d15",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "I strongly suggest not running Xcode under Rosetta. This tends to mask issues in your project configuration. Instead, have Xcode build for all architectures, at least for release builds. Since no iOS device runs on Intel, the fact that you have to compile for Intel suggests to me that your app's code is not properly set up to support Simulator. You might be hard-coding a particular architecture or SDK somewhere in your project",
          "ts": "1654729823.163139",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kmy4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I strongly suggest not running Xcode under Rosetta. This tends to mask issues in your project configuration. Instead, have Xcode build for all architectures, at least for release builds. Since no iOS device runs on Intel, the fact that you have to compile for Intel suggests to me that your app's code is not properly set up to support Simulator. You might be hard-coding a particular architecture or SDK somewhere in your project"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6b81932b-a3b0-492c-9268-bc9e1269fff9",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Unfortunately, I don't think I can help you much further over Slack. You should check if there are any more lab sessions available, or try posting on the developer forums",
          "ts": "1654729868.304909",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "3dJq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Unfortunately, I don't think I can help you much further over Slack. You should check if there are any more lab sessions available, or try posting on the developer forums"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "41d677f6-c37c-4ea9-95f8-2b06a2b88589",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Got it; thank you \u003c@U03HHPY6YQ2\u003e.  Again, this goes a bit over my head, but I'm grateful for your help.  Our core app and dependencies only run on iOS, so I'm not sure why we'd need to support Intel.  I will connect with the developers of the dependency in question, but will also schedule a lab if times exist as I know our team would be thrilled to get our own building not just on Xcode 14, but natively on Apple Silicon, as well.",
          "ts": "1654729912.582489",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+cjhN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Got it; thank you "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HHPY6YQ2"
                    },
                    {
                      "type": "text",
                      "text": ".  Again, this goes a bit over my head, but I'm grateful for your help.  Our core app and dependencies only run on iOS, so I'm not sure why we'd need to support Intel.  I will connect with the developers of the dependency in question, but will also schedule a lab if times exist as I know our team would be thrilled to get our own building not just on Xcode 14, but natively on Apple Silicon, as well."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f22a9cb7-bbcc-4ed7-bbe6-b8dc70bdae3f",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Thanks so much for your in-depth troubleshooting!",
          "ts": "1654729920.761819",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mkWK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks so much for your in-depth troubleshooting!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "de74a08a-a046-4426-b8bb-51feee826647",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Yeah, I suspect that your project's Simulator configuration had a hard dependency on compiling on Intel, and when Apple silicon came around, someone just ran Xcode through Rosetta (which you really, _really_, *really* should not do) instead of fixing the underlying issue",
          "ts": "1654730006.975929",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fUH=V",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yeah, I suspect that your project's Simulator configuration had a hard dependency on compiling on Intel, and when Apple silicon came around, someone just ran Xcode through Rosetta (which you really, "
                    },
                    {
                      "type": "text",
                      "text": "really",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", "
                    },
                    {
                      "type": "text",
                      "text": "really",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " should not do) instead of fixing the underlying issue"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3d6a7342-2741-4787-aa89-80554fbfb30b",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "And no problem at all! We are happy to help; it's what we are here for!",
          "ts": "1654730021.613509",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "iwc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "And no problem at all! We are happy to help; it's what we are here for!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c495387d-68bc-4d7b-aa60-ec986d9c413d",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Thanks so much for all of the help!  Greatly, greatly appreciated!",
          "ts": "1654731287.131819",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "grin",
              "count": 1,
              "users": [
                "U03HHPY6YQ2"
              ]
            },
            {
              "name": "hammer",
              "count": 1,
              "users": [
                "U03J7H5DD2L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AG=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks so much for all of the help!  Greatly, greatly appreciated!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3ede8b78-3c5b-4b5b-8735-46488f46e3c1",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "I experienced the exact issue above with my app’s OpenSSL dependency as soon as I moved to Apple Silicon. The final step in the solution was realising that while you can _compile_ a single static library that contains both the arm64 code for running on iOS and also the arm64 code for running on the Simulator on an Apple Silicon Mac, as far as I’m aware Xcode will not/cannot select the simulator version of the fat binary when building the app to run on the Simulator.\n\nThe solution instead was to package the dependency in _Frameworks,_ containing separate universal libraries for Simulator vs Device, and so will vend the correct required code in each environment. In my case, someone else had already written a tool to package OpenSSL that way, which made my life easier, but it was uncovering the need to do this that was the breakthrough. Sounds like you’re describing the exact same scenario to me.",
          "ts": "1654731304.642879",
          "thread_ts": "1654727809.787569",
          "edited": {
            "user": "U03J4D1FEP6",
            "ts": "1654731389.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Z7xtY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I experienced the exact issue above with my app’s OpenSSL dependency as soon as I moved to Apple Silicon. The final step in the solution was realising that while you can "
                    },
                    {
                      "type": "text",
                      "text": "compile",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " a single static library that contains both the arm64 code for running on iOS and also the arm64 code for running on the Simulator on an Apple Silicon Mac, as far as I’m aware Xcode will not/cannot select the simulator version of the fat binary when building the app to run on the Simulator.\n\nThe solution instead was to package the dependency in "
                    },
                    {
                      "type": "text",
                      "text": "Frameworks, ",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "containing separate universal libraries for Simulator vs Device, and so will vend the correct required code in each environment. In my case, someone else had already written a tool to package OpenSSL that way, which made my life easier, but it was uncovering the need to do this that was the breakthrough. Sounds like you’re describing the exact same scenario to me."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "607f91bb-2cc0-4f96-ad9e-a692f67aa920",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "I'm going to second Duncan's suggestion here. If you have not looked into XCFrameworks, now is a great time to do so!",
          "ts": "1654731502.007599",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JEEUJPMJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "txe",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'm going to second Duncan's suggestion here. If you have not looked into XCFrameworks, now is a great time to do so!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7cc2b61d-0a14-4500-ae13-07de17764a55",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "Example: \u003chttps://github.com/jasonacox/Build-OpenSSL-cURL\u003e",
          "ts": "1654731549.342569",
          "thread_ts": "1654727809.787569",
          "attachments": [
            {
              "fallback": "GitHub: GitHub - jasonacox/Build-OpenSSL-cURL: Scripts to build OpenSSL, HTTP/2 (nghttp2) and cURL (libcurl) for MacOS, iOS and tvOS devices (x86_64, armv7, armv7s, arm64, arm64e). Now Supporting Apple Silicon, OpenSSL 1.1.1 with TLS 1.3 and Mac Catalyst builds.",
              "id": 1,
              "title": "GitHub - jasonacox/Build-OpenSSL-cURL: Scripts to build OpenSSL, HTTP/2 (nghttp2) and cURL (libcurl) for MacOS, iOS and tvOS devices (x86_64, armv7, armv7s, arm64, arm64e). Now Supporting Apple Silicon, OpenSSL 1.1.1 with TLS 1.3 and Mac Catalyst builds.",
              "title_link": "https://github.com/jasonacox/Build-OpenSSL-cURL",
              "text": "Scripts to build OpenSSL, HTTP/2 (nghttp2) and cURL (libcurl) for MacOS, iOS and tvOS devices (x86_64, armv7, armv7s, arm64, arm64e). Now Supporting Apple Silicon, OpenSSL 1.1.1 with TLS 1.3 and Ma...",
              "image_url": "https://opengraph.githubassets.com/3ca9a19b88da1fb0abbd597edf7dae7d9e726821bfe1b42f83adc11b8c235b46/jasonacox/Build-OpenSSL-cURL",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/jasonacox/Build-OpenSSL-cURL",
              "original_url": "https://github.com/jasonacox/Build-OpenSSL-cURL",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lRI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Example: "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/jasonacox/Build-OpenSSL-cURL",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c1657019-728a-4bdb-9501-d2144817132e",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Thanks for the detail, \u003c@U03J4D1FEP6\u003e \u003c@U03HHPY6YQ2\u003e.  So much of this is handled outside of my own purview, similar to your OpenSSL experience, \u003c@U03J4D1FEP6\u003e, that I have a bit of a learning curve ahead of me to understand how to implement this.  But it is critically important to me, and my team, to get our app running natively on Apple Silicon (and Xcode 14, for that matter), so these challenges are worth learning and overcoming.",
          "ts": "1654731578.294189",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "J8NQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the detail, "
                    },
                    {
                      "type": "user",
                      "user_id": "U03J4D1FEP6"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HHPY6YQ2"
                    },
                    {
                      "type": "text",
                      "text": ".  So much of this is handled outside of my own purview, similar to your OpenSSL experience, "
                    },
                    {
                      "type": "user",
                      "user_id": "U03J4D1FEP6"
                    },
                    {
                      "type": "text",
                      "text": ", that I have a bit of a learning curve ahead of me to understand how to implement this.  But it is critically important to me, and my team, to get our app running natively on Apple Silicon (and Xcode 14, for that matter), so these challenges are worth learning and overcoming."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "acfeefa8-4864-495b-9c0a-e14da8d557b2",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "There is a lot of work in that repo and setting up the XCFrameworks you need is likely to be a lot simpler than producing something like that! The key point is the XCFramework packaging that lets you vend the correct version of your dependency for the two environments. You got this. :+1::skin-tone-3:",
          "ts": "1654731721.879489",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gqDbe",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There is a lot of work in that repo and setting up the XCFrameworks you need is likely to be a lot simpler than producing something like that! The key point is the XCFramework packaging that lets you vend the correct version of your dependency for the two environments. You got this. "
                    },
                    {
                      "type": "emoji",
                      "name": "+1",
                      "skin_tone": 3
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "56260068-1707-4264-bb93-3659475a1219",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Thanks, \u003c@U03J4D1FEP6\u003e!  I appreciate the vote of confidence and will be checking that out now!  I am going to get to the bottom of it!",
          "ts": "1654731796.461909",
          "thread_ts": "1654727809.787569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "k2i",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks, "
                    },
                    {
                      "type": "user",
                      "user_id": "U03J4D1FEP6"
                    },
                    {
                      "type": "text",
                      "text": "!  I appreciate the vote of confidence and will be checking that out now!  I am going to get to the bottom of it!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J22AU6DQ\u003e asked\n\u0026gt; I’ve been re-creating SwiftLint SPM Plugin from the recent session and while I did manage to do that the experience was not ideal.\n\u0026gt; I had to to a clean build of my target to re-build the plugin and moreover errors and warnings were not displayed. I’m assuming that has to something to do with my setup.\n\u0026gt; Setup was:\n\u0026gt; Plugin was created as a plugin target only, re-building the target it connected to for changes. So, targets are in the same Package and there are no libraries for the plugin.\n\u0026gt; I do recall that there are going to be sessions on this topic tomorrow, but maybe any advice while we’re in Q\u0026amp;A space? :sweat_smile:",
      "ts": "1654727844.071179",
      "thread_ts": "1654727844.071179",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654732028.747819",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "bFBh",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J22AU6DQ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I\\u2019ve been re-creating SwiftLint SPM Plugin from the recent session and while I did manage to do that the experience was not ideal.\\nI had to to a clean build of my target to re-build the plugin and moreover errors and warnings were not displayed. I\\u2019m assuming that has to something to do with my setup.\\nSetup was:\\nPlugin was created as a plugin target only, re-building the target it connected to for changes. So, targets are in the same Package and there are no libraries for the plugin.\\nI do recall that there are going to be sessions on this topic tomorrow, but maybe any advice while we\\u2019re in Q\u0026A space? \"},{\"type\":\"emoji\",\"name\":\"sweat_smile\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "9d7a1b55-8793-4337-a535-0047a0d982e4",
          "type": "message",
          "user": "U03HES8111T",
          "text": "We would very much like to know more about the errors you are encountering.  There should be no problem having just a plugin target, and a corresponding package product shouldn't be needed unless the plugin is used outside of the package.\n\nIf a clean build was needed in order to get the plugin to work, that sounds like a bug.  It doesn't sound as if there is anything wrong with the setup.\n\nIf you have the time, would you want to make an appointment for the Xcode Open Hours Lab from 1pm-4pm on Friday?  Alternatively, a bug report at \u003chttps://feedbackassistant.apple.com\u003e with as much detail as you can provide would be greatly appreciated.",
          "ts": "1654727901.521229",
          "thread_ts": "1654727844.071179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "a7tKG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We would very much like to know more about the errors you are encountering.  There should be no problem having just a plugin target, and a corresponding package product shouldn't be needed unless the plugin is used outside of the package.\n\nIf a clean build was needed in order to get the plugin to work, that sounds like a bug.  It doesn't sound as if there is anything wrong with the setup.\n\nIf you have the time, would you want to make an appointment for the Xcode Open Hours Lab from 1pm-4pm on Friday?  Alternatively, a bug report at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " with as much detail as you can provide would be greatly appreciated."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "D524AEE9-8099-4B4E-95F4-2CB50C1B77CE",
          "type": "message",
          "user": "U03J22AU6DQ",
          "text": "Okay, before I file a bug report let me just describe this issue:\n1. Plugin contains an issue which should result in a compiler error\n2. I try to build the source target this plugin is connected to(not plugin target)\n3. I do not see the error in the Issue navigator or in status bar, but if I go to Report navigator, select failed build and check the errors there\nAlso, when:\n1. Change was made to a plugin, e.g. `print(“Hello,` `World!”)` was changed to `print(“Hello, WWDC!”)`\n2. I build the source target plugin is connected to\n3. I still see `print(“Hello, World!”)` like the plugin is not being re-built\n4. After clean build everything is expected",
          "ts": "1654728324.229579",
          "thread_ts": "1654727844.071179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6UyrQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Okay,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "before"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " file "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bug"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "report"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "let"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "me"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "just"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "describe"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "this"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "issue:"
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Plugin\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"contains\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"an\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"issue\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"which\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"should\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"result\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"in\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"a\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"compiler\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"error\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"I\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"try\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"to\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"build\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"the\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"source\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"target\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"this\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"plugin\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"is\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"connected\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"to(not\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"plugin\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"target)\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"I\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"do\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"not\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"see\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"the\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"error\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"in\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"the\"},{\"type\":\"text\",\"text\":\" I\"},{\"type\":\"text\",\"text\":\"ssue\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"navigator\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"or\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"in\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"status\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"bar,\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"but\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"if\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"I\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"go\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"to\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"Report\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"navigator,\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"select\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"failed\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"build\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"and\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"check\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"the\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"errors\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"there\"}]}],\"style\":\"ordered\",\"indent\":0,\"offset\":0,\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "Also,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "when:"
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Change\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"was\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"made\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"to\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"a\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"plugin,\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"e.g.\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"print(\\u201cHello\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\",\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" \",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"World\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"!\\u201d)\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"was\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"changed\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"to\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"print(\\u201cHello, WWDC!\\u201d)\",\"style\":{\"code\":true}}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"I\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"build\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"the\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"source\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"target\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"plugin\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"is\"},{\"type\":\"text\",\"text\":\" connected \"},{\"type\":\"text\",\"text\":\"to\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"I\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"still\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"see\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"print(\\u201cHello, World!\\u201d)\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"like\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"the\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"plugin\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"is\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"not\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"being\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"re-built\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"After\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"clean\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"build\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"everything\"},{\"type\":\"text\",\"text\":\" \"},{\"type\":\"text\",\"text\":\"is\"},{\"type\":\"text\",\"text\":\" expected\"}]}],\"style\":\"ordered\",\"indent\":0,\"offset\":0,\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a5935975-eb31-4957-8af9-d82c1eb3fa76",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Thank you for the additional detail, I had misunderstood that it was an issue from the plugin itself that was not being shown.  I just want to confirm that you are seeing this with Xcode 14 Beta 1?  If so, is this a package that you would be willing to attach to a Feedback Assistant report so we can look at the details?",
          "ts": "1654728494.796909",
          "thread_ts": "1654727844.071179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6iXcY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for the additional detail, I had misunderstood that it was an issue from the plugin itself that was not being shown.  I just want to confirm that you are seeing this with Xcode 14 Beta 1?  If so, is this a package that you would be willing to attach to a Feedback Assistant report so we can look at the details?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4BB25A6C-1978-4255-AD05-5EF950CD23AB",
          "type": "message",
          "user": "U03J22AU6DQ",
          "text": "Yep, it’s in beta. The package cannot be attached to a Feedback Assistant as is, but I can create a sample and try reproducing it there. If my understanding is correct, it should not be a problem since our main package is nothing out of ordinary.",
          "ts": "1654728978.592639",
          "thread_ts": "1654727844.071179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "WV8s",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yep,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it’s"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "beta."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "The"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "package"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "cannot"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "attached"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Feedback"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Assistant"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "as"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "but"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "can"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "create"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "sample"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "try"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "reproducing"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "there."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "If"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "understanding"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "correct,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "should"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "not"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "problem"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "since"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "our"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "main"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "package"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "nothing"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "out"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "ordinary."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "37a6f255-0a74-4da1-ba11-4b25e75f385a",
          "type": "message",
          "user": "U03HES8111T",
          "text": "That would be great — thank you very much!  You might have seen this already but in Xcode 14 Beta 1 there are additional entries in the build log for compiling and running build tool plugins, and that is where any errors in compiling the plugins should appear.",
          "ts": "1654729270.715999",
          "thread_ts": "1654727844.071179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0Y+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That would be great — thank you very much!  You might have seen this already but in Xcode 14 Beta 1 there are additional entries in the build log for compiling and running build tool plugins, and that is where any errors in compiling the plugins should appear."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cebcd704-176a-4ffa-91c3-cd99bfad93f0",
          "type": "message",
          "user": "U03HES8111T",
          "text": "If you do have time to sign up for a slot in the Xcode Open Hours Lab from 1pm-4pm on Friday, that might be another good way to go into more detail about the problems you're encountering.",
          "ts": "1654729737.028499",
          "thread_ts": "1654727844.071179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JOB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you do have time to sign up for a slot in the Xcode Open Hours Lab from 1pm-4pm on Friday, that might be another good way to go into more detail about the problems you're encountering."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "FB4A46E3-14AD-41E5-9301-015FD8059B4F",
          "type": "message",
          "user": "U03J22AU6DQ",
          "text": "Got it, thank you \u003c@U03HES8111T\u003e!",
          "ts": "1654732028.747819",
          "thread_ts": "1654727844.071179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "R4Oq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Got"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "thank"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HES8111T"
                    },
                    {
                      "type": "text",
                      "text": "!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KGEZNC3S\u003e asked\n\u0026gt; Hi! In preparation for WWDC, we updated all our app release branches to build with Xcode 13.4! This went fine for most of our apps' branches, but one of those branches (with `IPHONEOS_DEPLOYMENT_TARGET = 14.0`) started producing archive builds which fail to upload to App Store Connect. The error we're getting is:\n\u0026gt; \n\u0026gt; ```\n\u0026gt; ITMS-90427: Invalid Swift Support\n\u0026gt; \n\u0026gt; …\n\u0026gt; \n\u0026gt; We identified one or more issues with a recent delivery for your app, \"OmniFocus 3 Enterprise\" 3.13 (151.23.24). Please correct the following issues, then upload again.\n\u0026gt; \n\u0026gt; ITMS-90427: Invalid Swift Support - The expected dylibs are missing from the app’s Framework location, such as /Payload/OmniFocus.app/Frameworks.\n\u0026gt; ```\n\u0026gt; \n\u0026gt; Going back through builds of Xcode, it looks like this error started with Xcode 13.3, and seems to be associated with its bundling of:\n\u0026gt; \n\u0026gt; ```\n\u0026gt; SwiftSupport/iphoneos/libswift_Concurrency.dylib\n\u0026gt; ```\n\u0026gt; \n\u0026gt; We don't actually reference `libswift_Concurrency.dylib` in this release branch at all, so as far as we know we shouldn't need that `dylib`. But is there something we can do to make App Store Connect accept our upload (other than reverting to Xcode 13.2 or earlier)?",
      "ts": "1654728171.704919",
      "thread_ts": "1654728171.704919",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654859527.261789",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "LvJ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KGEZNC3S"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi! In preparation for WWDC, we updated all our app release branches to build with Xcode 13.4! This went fine for most of our apps' branches, but one of those branches (with `IPHONEOS_DEPLOYMENT_TARGET = 14.0`) started producing archive builds which fail to upload to App Store Connect. The error we're getting is:\\n\\n```\\nITMS-90427: Invalid Swift Support\\n\\n\\u2026\\n\\nWe identified one or more issues with a recent delivery for your app, \\\"OmniFocus 3 Enterprise\\\" 3.13 (151.23.24). Please correct the following issues, then upload again.\\n\\nITMS-90427: Invalid Swift Support - The expected dylibs are missing from the app\\u2019s Framework location, such as \\/Payload\\/OmniFocus.app\\/Frameworks.\\n```\\n\\nGoing back through builds of Xcode, it looks like this error started with Xcode 13.3, and seems to be associated with its bundling of:\\n\\n```\\nSwiftSupport\\/iphoneos\\/libswift_Concurrency.dylib\\n```\\n\\nWe don't actually reference `libswift_Concurrency.dylib` in this release branch at all, so as far as we know we shouldn't need that `dylib`. But is there something we can do to make App Store Connect accept our upload (other than reverting to Xcode 13.2 or earlier)?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "bb9fdad4-c458-4f6e-9c92-18eda7847815",
          "type": "message",
          "user": "U03HHPCVCLT",
          "text": "The `libswift_Concurrency.dylib` is a backwards compatibility library that is necessary when using Swift's async functionality when deploying to a platform that does not support concurrency natively. Are you removing this library from your app bundle?\n\nWe will likely need a feedback created that contains the build log for the archive process of your app to see if there is an issue with this library being bundled correctly.",
          "ts": "1654728233.503819",
          "thread_ts": "1654728171.704919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CfCP2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The "
                    },
                    {
                      "type": "text",
                      "text": "libswift_Concurrency.dylib",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is a backwards compatibility library that is necessary when using Swift's async functionality when deploying to a platform that does not support concurrency natively. Are you removing this library from your app bundle?\n\nWe will likely need a feedback created that contains the build log for the archive process of your app to see if there is an issue with this library being bundled correctly."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "08b27ce1-ba0e-471d-bcf3-745a148bef44",
          "type": "message",
          "user": "U03KGEZNC3S",
          "text": "We're not removing the library from our app bundle, but it doesn't appear to ever get added (which seems reasonable, since none of the binaries included with our app link against it).",
          "ts": "1654728369.966969",
          "thread_ts": "1654728171.704919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "i1PB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We're not removing the library from our app bundle, but it doesn't appear to ever get added (which seems reasonable, since none of the binaries included with our app link against it)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "72452cb9-9e21-4c40-9596-6ef397eff67e",
          "type": "message",
          "user": "U03KGEZNC3S",
          "text": "(We're not using any `async` functionality in this old release branch of our app.)",
          "ts": "1654728409.184359",
          "thread_ts": "1654728171.704919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2tYQA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(We're not using any "
                    },
                    {
                      "type": "text",
                      "text": "async",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " functionality in this old release branch of our app.)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1c6b8f24-c5da-4484-9240-f0511c874606",
          "type": "message",
          "user": "U03KGEZNC3S",
          "text": "Writing up a feedback report now. Thanks!",
          "ts": "1654728503.281769",
          "thread_ts": "1654728171.704919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6taa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Writing up a feedback report now. Thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "25eaf5b7-003c-473e-8d1c-c3a44a74d781",
          "type": "message",
          "user": "U03KGEZNC3S",
          "text": "Filed as `FB10115173`. Thanks again!",
          "ts": "1654728952.988039",
          "thread_ts": "1654728171.704919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CWvN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Filed as "
                    },
                    {
                      "type": "text",
                      "text": "FB10115173",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". Thanks again!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6c2efdc7-3d66-4963-9a35-9857c3982eb2",
          "type": "message",
          "user": "U03HHPCVCLT",
          "text": "Thank you! I will make sure it is routed appropriately.",
          "ts": "1654729102.781779",
          "thread_ts": "1654728171.704919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wkz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you! I will make sure it is routed appropriately."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7AF7C71C-217D-4CB1-82AE-008C9F565D92",
          "type": "message",
          "user": "U03JQC37CR1",
          "text": "Yes, I am facing the exact same problem. I got an appointment for a lab but unfortunately the engineers couldn't figure out what's going on. They recommended to try downgrading to Xcode 13.2 and I did but unfortunately it didn't help. Any pointers?\n\nWe did check the binary and the library is indeed there. Yet TestFlight is rejecting the build saying it's missing the concurrency library",
          "ts": "1654822438.936989",
          "thread_ts": "1654728171.704919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ih7za",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes,"
                    },
                    {
                      "type": "text",
                      "text": " I "
                    },
                    {
                      "type": "text",
                      "text": "am"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "facing"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " exact "
                    },
                    {
                      "type": "text",
                      "text": "same"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "problem. I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "got"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "an"
                    },
                    {
                      "type": "text",
                      "text": " appointment "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "lab"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "but"
                    },
                    {
                      "type": "text",
                      "text": " unfortunately "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " engineers couldn't "
                    },
                    {
                      "type": "text",
                      "text": "figure"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "out"
                    },
                    {
                      "type": "text",
                      "text": " what's going "
                    },
                    {
                      "type": "text",
                      "text": "on. They"
                    },
                    {
                      "type": "text",
                      "text": " recommended "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "try"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "downgrading"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " Xcode "
                    },
                    {
                      "type": "text",
                      "text": "13.2"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " I "
                    },
                    {
                      "type": "text",
                      "text": "did"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "but"
                    },
                    {
                      "type": "text",
                      "text": " unfortunately "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " didn't "
                    },
                    {
                      "type": "text",
                      "text": "help. Any"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "pointers?"
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "We"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "did"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "check"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "binary"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " library "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " indeed "
                    },
                    {
                      "type": "text",
                      "text": "there. Yet"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "TestFlight"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "rejecting"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " b"
                    },
                    {
                      "type": "text",
                      "text": "uild"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "saying"
                    },
                    {
                      "type": "text",
                      "text": " it's "
                    },
                    {
                      "type": "text",
                      "text": "missing"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " concurrency "
                    },
                    {
                      "type": "text",
                      "text": "library"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "16721902-C17F-40B9-9F47-A22293C91840",
          "type": "message",
          "user": "U03JQC37CR1",
          "text": "With 13.2 I'm not able sign but it is only related to the concurrency library. \n\n‘error: Couldn't codesign /Users/xxxxx/Library/Developer/Xcode/DerivedData/xxxxxxx-bdejxonpdwrjtwgwgskakzwsmprg/Build/Intermediates.noindex/ArchiveIntermediates/xxxxxx/InstallationBuildProductsLocation/Applications/xxxxxx.app/Frameworks/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift-5.5/iphoneos/libswift_Concurrency.dylib: codesign failed with exit code 1\nCommand PhaseScriptExecution failed with a nonzero exit code’",
          "ts": "1654859527.261789",
          "thread_ts": "1654728171.704919",
          "edited": {
            "user": "U03JQC37CR1",
            "ts": "1654859569.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VQ52n",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "With 13.2 I'm not able sign but it is only related to the concurrency library. "
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "\n‘error: Couldn't codesign /Users/xxxxx/Library/Developer/Xcode/DerivedData/xxxxxxx-bdejxonpdwrjtwgwgskakzwsmprg/Build/Intermediates.noindex/ArchiveIntermediates/xxxxxx/InstallationBuildProductsLocation/Applications/xxxxxx.app/Frameworks/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift-5.5/iphoneos/libswift_Concurrency.dylib: codesign failed with exit code 1"
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "Command PhaseScriptExecution failed with a nonzero exit code’"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JLV0E8RJ\u003e asked\n\u0026gt; I can understand newest versions of Xcode being picky about the minimum macOS version required to run, but why recent macOS version can’t run older versions of Xcode?",
      "ts": "1654728291.078379",
      "thread_ts": "1654728291.078379",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654728338.704459",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "KJH=",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JLV0E8RJ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I can understand newest versions of Xcode being picky about the minimum macOS version required to run, but why recent macOS version can\\u2019t run older versions of Xcode?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "b08be1d9-bed9-43e6-a09a-1fb590133c06",
          "type": "message",
          "user": "U03H36RCYJK",
          "text": "We want to ensure the best experience for our developers. We explicitly qualify each version of Xcode with the two most recent versions macOS. We don't qualify older Xcode's with newer versions of macOS, and want to ensure you don't run into problems using an unsupported configuration.",
          "ts": "1654728338.704459",
          "thread_ts": "1654728291.078379",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "hushed",
              "count": 1,
              "users": [
                "U03JEEUJPMJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UD35D",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We want to ensure the best experience for our developers. We explicitly qualify each version of Xcode with the two most recent versions macOS. We don't qualify older Xcode's with newer versions of macOS, and want to ensure you don't run into problems using an unsupported configuration."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JE7VT43Z\u003e asked\n\u0026gt; We’re having an issue with SPM packages on Xcode 13, where our local packages fail to load when switching branches, giving us Missing Package Product errors. The only workaround we’ve found is to reset package cache and restart Xcode. Is this a known issue?",
      "ts": "1654728350.115239",
      "thread_ts": "1654728350.115239",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 21,
      "latest_reply": "1654807253.716679",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "/qoX",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JE7VT43Z"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We\\u2019re having an issue with SPM packages on Xcode 13, where our local packages fail to load when switching branches, giving us Missing Package Product errors. The only workaround we\\u2019ve found is to reset package cache and restart Xcode. Is this a known issue?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a1fe9c83-59dd-4f98-82d1-1f158d89c4bc",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "We would like to know more about the errors you are encountering since this sounds like a bug.  If you have a reproducible case and have the time, would you want to make an appointment for the Xcode Open Hours Lab from 1pm-4pm on Friday?  Alternatively, a bug report at \u003chttps://feedbackassistant.apple.com\u003e would be greatly appreciated.",
          "ts": "1654728371.091549",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CAd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We would like to know more about the errors you are encountering since this sounds like a bug.  If you have a reproducible case and have the time, would you want to make an appointment for the Xcode Open Hours Lab from 1pm-4pm on Friday?  Alternatively, a bug report at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " would be greatly appreciated."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "72c069ea-5705-40a6-9b80-53eae53d0325",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "bug reports for this kind of thing are tricky as often it is project specific and uploading the entire source tree is not an option, due to company restrictions.\n\nI too have seen similar issues, so if Jean can’t do the Lab, I’d be able to.",
          "ts": "1654728593.572989",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8xV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "bug reports for this kind of thing are tricky as often it is project specific and uploading the entire source tree is not an option, due to company restrictions.\n\nI too have seen similar issues, so if Jean can’t do the Lab, I’d be able to."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "24DD3E80-B27C-4405-936E-095CE6B0A4B8",
          "type": "message",
          "user": "U03JE7VT43Z",
          "text": "I wouldn't be able to do the lab, but I will gladly file a feedback. Pls feel free to do the lab in my stead \u003c@U03JUCK9B16\u003e ",
          "ts": "1654728678.094379",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "NDSlV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " wouldn't "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " able "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "do"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "lab,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "but"
                    },
                    {
                      "type": "text",
                      "text": " I "
                    },
                    {
                      "type": "text",
                      "text": "will"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "gladly"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "file"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " feedback"
                    },
                    {
                      "type": "text",
                      "text": "."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Pls"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "feel"
                    },
                    {
                      "type": "text",
                      "text": " free "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " do "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "lab"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "stead"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "user",
                      "user_id": "U03JUCK9B16"
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "eb1056f8-e99e-4f01-8f06-11ed4d1ff5f9",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "OK, let me check my app still has the issue and if so, I will",
          "ts": "1654728703.491579",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jhfFf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "OK, let me check my app still has the issue and if so, I will"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "90A38D2B-7CE3-48C9-9E6D-EE9A6229DF96",
          "type": "message",
          "user": "U03J22AU6DQ",
          "text": "There seems to be an issue with the way Xcode updates SPM stuff. In my experience deadblock are caused when dependency was added. Especially if it is not cached yet. Meanwhile, CLI works fine. No sure about Xcode 14.\n\nI’d recommend having something like this at hand and run it after you switch branch where something in the dependancy graph changed. With Xcode closed, of course.\n`xcodebuild -resolvePackageDependencies -scheme YourScheme -project YourProject.xcodeproj -configuration YourConfiguration`",
          "ts": "1654728805.132369",
          "thread_ts": "1654728350.115239",
          "edited": {
            "user": "U03J22AU6DQ",
            "ts": "1654729018.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "myL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There seems to be an issue with the way Xcode updates SPM stuff. In my experience deadblock are caused when dependency was added. Especially if it is not cached yet. Meanwhile, CLI works fine. No sure about Xcode 14."
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "\nI’d recommend having something like this at hand and run it after you switch branch where something in the dependancy graph changed. With"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Xcode"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "closed,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "course."
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "xcodebuild -resolvePackageDependencies -scheme YourScheme -project YourProject.xcodeproj -configuration YourConfiguration",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "F8322846-8B0C-4EDB-853F-2256533E2A18",
          "type": "message",
          "user": "U03JE7VT43Z",
          "text": "This link is very familiar to my issue: \u003chttps://forums.swift.org/t/missing-package-product-error-for-all-local-swift-packages-when-switching-git-branches/38041|https://forums.swift.org/t/missing-package-product-error-for-all-local-swift-packages-when-switching-git-branches/38041\u003e",
          "ts": "1654729280.549899",
          "thread_ts": "1654728350.115239",
          "attachments": [
            {
              "fallback": "Swift Forums: \"Missing package product\" error for all local Swift Packages when switching git branches",
              "id": 1,
              "title": "\"Missing package product\" error for all local Swift Packages when switching git branches",
              "title_link": "https://forums.swift.org/t/missing-package-product-error-for-all-local-swift-packages-when-switching-git-branches/38041",
              "text": "I'm seeing a consistent Xcode error for all of my local swift packages when switching git branches or doing a git pull while Xcode is open. A workaround that works ~75% of the time: Kill xcode Then completely remove the derived data directory (empty trash just to be absolutely sure). Restart Xcode Reset Swift package cache On some occasions, this workaround fails and am forced to do a fresh git clone. Has anyone else seen this before? Xcode Version 11.5 (11E608c) swift-tools-version:5.2 ...",
              "thumb_url": "https://aws1.discourse-cdn.com/swift/original/2X/1/1e68c61ea8abf5b124bf17a6723a2115bd910c8c.png",
              "service_name": "Swift Forums",
              "service_icon": "https://aws1.discourse-cdn.com/swift/optimized/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6_2_180x180.png",
              "from_url": "https://forums.swift.org/t/missing-package-product-error-for-all-local-swift-packages-when-switching-git-branches/38041",
              "original_url": "https://forums.swift.org/t/missing-package-product-error-for-all-local-swift-packages-when-switching-git-branches/38041",
              "fields": [
                {
                  "title": "Reading time",
                  "value": "6 mins :clock2:",
                  "short": true
                },
                {
                  "title": "Likes",
                  "value": "42 :heart:",
                  "short": true
                }
              ],
              "blocks": null,
              "ts": 1593540178
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4YN9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This "
                    },
                    {
                      "type": "text",
                      "text": "link"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " very "
                    },
                    {
                      "type": "text",
                      "text": "familiar"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "issue:"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "link",
                      "url": "https://forums.swift.org/t/missing-package-product-error-for-all-local-swift-packages-when-switching-git-branches/38041",
                      "text": "https://forums.swift.org/t/missing-package-product-error-for-all-local-swift-packages-when-switching-git-branches/38041"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "D33A8947-9773-4FA3-8DB5-D35EF96EF13F",
          "type": "message",
          "user": "U03JE7VT43Z",
          "text": "I have not tried the file:// hack yet",
          "ts": "1654729290.207679",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "z54",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "have"
                    },
                    {
                      "type": "text",
                      "text": " not "
                    },
                    {
                      "type": "text",
                      "text": "tried"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "file://"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "hack"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "yet"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a4e61038-b395-4148-b0d5-66ecda2de29b",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "FYI Yes, my app still has the same problem on Xocde 14. I’ll sign up for the lab",
          "ts": "1654729358.350589",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "f9x",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "FYI Yes, my app still has the same problem on Xocde 14. I’ll sign up for the lab"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9fab367a-abbf-471c-957b-87d439328009",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "Lab request sent",
          "ts": "1654729533.398699",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 1,
              "users": [
                "U03J7H4LJ5N"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "K7z",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Lab request sent"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "644d4ce6-12e5-43ee-a3a9-bc7edf44176a",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "\u003c@U03J7H4LJ5N\u003e My Lab request was accepted, but its right at the start of the session. Any chance of moving it to the end as I’ve got to travel back over 200 miles from somewhere a during that time.",
          "ts": "1654729857.244559",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ksf6y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03J7H4LJ5N"
                    },
                    {
                      "type": "text",
                      "text": " My Lab request was accepted, but its right at the start of the session. Any chance of moving it to the end as I’ve got to travel back over 200 miles from somewhere a during that time."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bb47a358-e3c3-4647-994d-780d762730ab",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "Actually I haven’t go the acceptance yet, just the standard “We’ll let you know” If you have any control over it, please make it sometime after 8am PDT, otherwise I’ll have to decline",
          "ts": "1654730002.329809",
          "thread_ts": "1654728350.115239",
          "edited": {
            "user": "U03JUCK9B16",
            "ts": "1654730025.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "P2P2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Actually I haven’t go the acceptance yet, just the standard “We’ll let you know” If you have any control over it, please make it sometime after 8am PDT, otherwise I’ll have to decline"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7713aa50-4bce-4ca4-b0af-58aecabba093",
          "type": "message",
          "user": "U03HES8111T",
          "text": "We'll try to make sure it's at a time slot that you can make.  Just so I understand, is it the 1pm-4pm PDT Xcode Open Hours Lab on Friday that you signed up for?",
          "ts": "1654730254.553789",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ADL6z",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We'll try to make sure it's at a time slot that you can make.  Just so I understand, is it the 1pm-4pm PDT Xcode Open Hours Lab on Friday that you signed up for?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "aa21f00d-943c-4639-a409-01e03a63da7c",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "Ah no - I did the first one (6am PDT) I saw. I hadn’t noticed the other one. Can you shift me to the later one or should I cancel and create a new request?",
          "ts": "1654730476.725089",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "L=uf7",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ah no - I did the first one (6am PDT) I saw. I hadn’t noticed the other one. Can you shift me to the later one or should I cancel and create a new request?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1ab4f612-5db8-4309-8165-3e6fcd3c7544",
          "type": "message",
          "user": "U03HES8111T",
          "text": "I checked on whether it's possible to do a transfer, but it looks as if the appointment is already in the correct lab now (\u003chttps://developer.apple.com/wwdc22/labs-and-lounges/dashboard/CM93AQ7FJK/dashboard\u003e).  Were you able to move it?",
          "ts": "1654731603.539999",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "L2JP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I checked on whether it's possible to do a transfer, but it looks as if the appointment is already in the correct lab now ("
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/CM93AQ7FJK/dashboard",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ").  Were you able to move it?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1b6e1104-62d8-4cfd-964f-01097c5eee7e",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "yes, I just canceled and resubmitted",
          "ts": "1654731817.210659",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HES8111T"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1Pr1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "yes, I just canceled and resubmitted"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3b87391b-38e1-4220-9a5d-2ca1183256f9",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "Any idea when confirmation of labs comes through? I made a request yesterday for a lab tomorrow and have not heard anything yet other than they’ll get back to me",
          "ts": "1654731898.531469",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mcC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Any idea when confirmation of labs comes through? I made a request yesterday for a lab tomorrow and have not heard anything yet other than they’ll get back to me"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "016062a3-deb7-4038-83de-fab90028ec9e",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "They typically get assigned later in the day on the day before after signups close, I believe",
          "ts": "1654731940.034299",
          "thread_ts": "1654728350.115239",
          "edited": {
            "user": "U03J7H4LJ5N",
            "ts": "1654731958.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "r=j4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "They typically get assigned later in the day on the day before after signups close, I believe"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "de312633-0905-48aa-adf8-b88fd0cb05e6",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Yes, signups for a lab close at 6pm PDT the day before the lab, so I would not expect a confirmation until after that.",
          "ts": "1654731989.350819",
          "thread_ts": "1654728350.115239",
          "edited": {
            "user": "U03HES8111T",
            "ts": "1654732008.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "yqT1g",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, signups for a lab close at 6pm PDT the day before the lab, so I would not expect a confirmation until after that."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "901a4288-238e-476b-84cd-94330a4ff22e",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "OK, just that tomorrow I’m travelling to the place I’m coming back from on Friday, so don’t want to rush if I’m not in the lab",
          "ts": "1654732030.612819",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HES8111T"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eI5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "OK, just that tomorrow I’m travelling to the place I’m coming back from on Friday, so don’t want to rush if I’m not in the lab"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7f1e2a22-5a11-40d1-8dc9-72674cdba82c",
          "type": "message",
          "user": "U03JE7VT43Z",
          "text": "Feedback submitted: FB10116194",
          "ts": "1654732240.013349",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 2,
              "users": [
                "U03J7H4LJ5N",
                "U03HES8111T"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KUPuS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Feedback submitted: FB10116194"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2BF7C1E1-78E1-4D4F-9E68-391936CD19CC",
          "type": "message",
          "user": "U03HZ6C9S21",
          "text": "We had the same issue and got fixed when we stopped using strings to declare targets and packages and used the respective .package and .product and relative path for local packages like ../../dependencyProduct",
          "ts": "1654807253.716679",
          "thread_ts": "1654728350.115239",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "thinking_face",
              "count": 1,
              "users": [
                "U03J22AU6DQ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1nb3a",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "had"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "same"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "issue"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "got"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "fixed"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "when"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "we"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "stopped"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "using"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "strings"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "declare"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "targets"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "packages"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "used"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "respective"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": ".package"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": ".product"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "relative"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "path"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "local"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "packages"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "like"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "../../dependencyProduct"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JF7VN2SE\u003e asked\n\u0026gt; I'm working on an app right now that I anticipate releasing before fall. I know that the new Xcode can make things for TestFlight, but what about for the app store?\n\u0026gt; \n\u0026gt; I'm not sure I want to use beta Xcode for a released app. Can I even do so?",
      "ts": "1654728698.330749",
      "thread_ts": "1654728698.330749",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654728781.947509",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "J8U2",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JF7VN2SE"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I'm working on an app right now that I anticipate releasing before fall. I know that the new Xcode can make things for TestFlight, but what about for the app store?\\n\\nI'm not sure I want to use beta Xcode for a released app. Can I even do so?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "4654d9f7-95b1-4259-b13e-10dc715fe618",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "You can submit apps to TestFlight using Xcode 14 beta. However you won't be able to release apps built with Xcode 14 beta to the App Store.",
          "ts": "1654728722.865799",
          "thread_ts": "1654728698.330749",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nzxb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can submit apps to TestFlight using Xcode 14 beta. However you won't be able to release apps built with Xcode 14 beta to the App Store."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9c463c52-1d5b-4875-b792-fed3bfcc937f",
          "type": "message",
          "user": "U03JF7VN2SE",
          "text": "roger, thanks!",
          "ts": "1654728781.947509",
          "thread_ts": "1654728698.330749",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "S=A",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "roger, thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J20E7UBV\u003e asked\n\u0026gt; Can you advise if there have been any changes from Xcode 13.4.1 to Xcode 14.0 that would perpetuate a new;\n\u0026gt; \n\u0026gt; ```\n\u0026gt; Undefined symbols for architecture x86_64:\n\u0026gt;   \"_OBJC_CLASS_$_ADBMobile\", referenced from:\n\u0026gt;       objc-class-ref in OmnitureWrapper.o\n\u0026gt; ld: symbol(s) not found for architecture x86_64\n\u0026gt; ```\n\u0026gt; \n\u0026gt; I know that's overly specifically, but just curious what might have changed under the hood that would make building on Xcode 14 hit a build error!",
      "ts": "1654728754.790569",
      "thread_ts": "1654728754.790569",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654729011.686119",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "wN4",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J20E7UBV"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can you advise if there have been any changes from Xcode 13.4.1 to Xcode 14.0 that would perpetuate a new;\\n\\n```\\nUndefined symbols for architecture x86_64:\\n  \\\"_OBJC_CLASS_$_ADBMobile\\\", referenced from:\\n      objc-class-ref in OmnitureWrapper.o\\nld: symbol(s) not found for architecture x86_64\\n```\\n\\nI know that's overly specifically, but just curious what might have changed under the hood that would make building on Xcode 14 hit a build error!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "b5293694-128a-44e5-8c92-827f3d15304e",
          "type": "message",
          "user": "U03HL5H29CL",
          "text": "Hi Brandon! Looks like a missing symbol in your build - Please file feedback at \u003chttp://feedbackassistant.apple.com\u003e and attach any details or an example project that can reproduce the issue.",
          "ts": "1654728882.712999",
          "thread_ts": "1654728754.790569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "3AS2K",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Brandon! Looks like a missing symbol in your build - Please file feedback at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " and attach any details or an example project that can reproduce the issue."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "43538bdb-3708-4581-bd2e-366c5bc7fedb",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Thank you, \u003c@U03HL5H29CL\u003e!  Will do!",
          "ts": "1654729011.686119",
          "thread_ts": "1654728754.790569",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03HL5H29CL"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LIj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you, "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HL5H29CL"
                    },
                    {
                      "type": "text",
                      "text": "!  Will do!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMD22287\u003e asked\n\u0026gt; Deleting ~/Library/Developer/Xcode/DerivedData is a common workaround for various Xcode problems, at least according to community wisdom. Does this make Xcode engineers grit their teeth, and if so, what should we be doing instead?",
      "ts": "1654728760.757649",
      "thread_ts": "1654728760.757649",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654728942.425909",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "XSz",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMD22287"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Deleting ~\\/Library\\/Developer\\/Xcode\\/DerivedData is a common workaround for various Xcode problems, at least according to community wisdom. Does this make Xcode engineers grit their teeth, and if so, what should we be doing instead?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "3f6c4fc6-7492-4f0d-9a13-04b3383f3638",
          "type": "message",
          "user": "U03H36RCYJK",
          "text": "When deleting your derived data fixes a problem, it means that there's a dependency in your sources that either Xcode doesn't see but should, or that you haven't declared. In either case, if you could isolate the problem and report it in feedback, we'd use that to improve Xcode.",
          "ts": "1654728776.212999",
          "thread_ts": "1654728760.757649",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JEEUJPMJ",
                "U03JFQM041M"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rAg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "When deleting your derived data fixes a problem, it means that there's a dependency in your sources that either Xcode doesn't see but should, or that you haven't declared. In either case, if you could isolate the problem and report it in feedback, we'd use that to improve Xcode."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c3b7d1b8-1f9b-439c-8753-98f2c0a312e1",
          "type": "message",
          "user": "U03HMD22287",
          "text": "Thank you, I will do that!",
          "ts": "1654728942.425909",
          "thread_ts": "1654728760.757649",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "k69j",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you, I will do that!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMD22287\u003e asked\n\u0026gt; I usually like my assistant editor to the right, but I prefer the new build timeline below. Is there a way to save per-assistant position preferences?",
      "ts": "1654729192.709829",
      "thread_ts": "1654729192.709829",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654842495.297369",
      "reactions": [
        {
          "name": "+1",
          "count": 1,
          "users": [
            "U03JUCK9B16"
          ]
        },
        {
          "name": "eyes",
          "count": 1,
          "users": [
            "U03K840U3L1"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "8qR",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMD22287"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I usually like my assistant editor to the right, but I prefer the new build timeline below. Is there a way to save per-assistant position preferences?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "f86551a3-65ae-4cd9-baaf-325e43a093c0",
          "type": "message",
          "user": "U03HB5P0B5L",
          "text": "This is not possible today, but is a great idea - if you could file a feedback at \u003chttp://feedbackassistant.apple.com\u003e and post the FB number that would be greatly appreciated :slightly_smiling_face:",
          "ts": "1654729207.456479",
          "thread_ts": "1654729192.709829",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HMD22287"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "K4IN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is not possible today, but is a great idea - if you could file a feedback at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " and post the FB number that would be greatly appreciated "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "38b3fbb1-1962-441a-a2ac-c3f6eff11882",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "Historic reminder of a millennial developer: Xcode version 2 or 3 used to have no columns, just the project files and targets listing above the source editor (vertical split) → basically not enough space for either :sweat_smile: – those were some wild development times! :smile:",
          "ts": "1654729365.383549",
          "thread_ts": "1654729192.709829",
          "edited": {
            "user": "U03JPFQNX5K",
            "ts": "1654729419.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2BwP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Historic reminder of a millennial developer: Xcode version 2 or 3 used to have no columns, just the project files and targets listing above the source editor (vertical split) → basically not enough space for either "
                    },
                    {
                      "type": "emoji",
                      "name": "sweat_smile",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " – those were some wild development times! "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "51b166a3-3471-4339-ac57-2d045af40bb0",
          "type": "message",
          "user": "U03JUCK9B16",
          "text": "Pah - MPW had individual windows for every file",
          "ts": "1654729606.825959",
          "thread_ts": "1654729192.709829",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JPFQNX5K"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "u02D",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Pah - MPW had individual windows for every file"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f8a59778-ad38-4668-923a-681d749e6481",
          "type": "message",
          "user": "U03HMD22287",
          "text": "Thank you \u003c@U03HB5P0B5L\u003e, I will.",
          "ts": "1654729805.148869",
          "thread_ts": "1654729192.709829",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03HB5P0B5L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4kb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HB5P0B5L"
                    },
                    {
                      "type": "text",
                      "text": ", I will."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3e315560-fa11-48d2-bb3b-833ea0083d21",
          "type": "message",
          "user": "U03HVD5CL5C",
          "text": "Kinda related: I had a very hard time finding the Build Timeline. Not sure if it living in the Assistant is so obvious.",
          "ts": "1654764031.078619",
          "thread_ts": "1654729192.709829",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qQNET",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Kinda related: I had a very hard time finding the Build Timeline. Not sure if it living in the Assistant is so obvious."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9da1ca51-beb2-4b83-ac30-d618e93f11ef",
          "type": "message",
          "user": "U03JRPTG8BS",
          "text": "I searched this Slack for “Build Timeline” because I was trying to find this feature in Xcode and failed. Definitely not obvious that it is hidden in the Assistant.",
          "ts": "1654842495.297369",
          "thread_ts": "1654729192.709829",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "A1F",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I searched this Slack for “Build Timeline” because I was trying to find this feature in Xcode and failed. Definitely not obvious that it is hidden in the Assistant."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "006dc0ad-0ed3-4fbd-90f0-39606cf980fe",
      "type": "message",
      "user": "U03HB5MM11U",
      "text": ":timer_clock: Halfway through! So many great questions coming in... and we're ready for more!",
      "ts": "1654729262.501129",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "07LC",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "emoji",
                  "name": "timer_clock",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " Halfway through! So many great questions coming in... and we're ready for more!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMCT187R\u003e asked\n\u0026gt; I recall it used to be you could not use a beta macOS version and the current public version of Xcode to distribute an app on the App Store. Is that still the case? Recognizing the current macOS beta doesn't support the public Xcode, it's not super relevant right now, but still curious if this remains true.",
      "ts": "1654729375.697879",
      "thread_ts": "1654729375.697879",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654729390.839859",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "wzmeN",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMCT187R"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I recall it used to be you could not use a beta macOS version and the current public version of Xcode to distribute an app on the App Store. Is that still the case? Recognizing the current macOS beta doesn't support the public Xcode, it's not super relevant right now, but still curious if this remains true.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "9366c9f4-05aa-4d96-b857-f4ed799b6a0b",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Xcode 13 will not run on macOS Ventura, There is no restriction on distributing apps to the App Store that were built with released tools on a beta macOS. However, we recommend using a released macOS whenever you build software that you intend to distribute.",
          "ts": "1654729390.839859",
          "thread_ts": "1654729375.697879",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HMCT187R"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ulq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Xcode 13 will not run on macOS Ventura, There is no restriction on distributing apps to the App Store that were built with released tools on a beta macOS. However, we recommend using a released macOS whenever you build software that you intend to distribute."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JQ7PU1L1\u003e asked\n\u0026gt; I am using gRPC is there a way to monitor all the active gRPC connections? Not sure how accurate is the Active connection in the network report is.",
      "ts": "1654729599.912069",
      "thread_ts": "1654729599.912069",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654729621.707219",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "2Pn7B",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JQ7PU1L1"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I am using gRPC is there a way to monitor all the active gRPC connections? Not sure how accurate is the Active connection in the network report is.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "aa7a3eb5-d8d9-46e0-95a1-4783e4f97e11",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "The network gauge in the debug navigator shows a list of all the active connections. You can see the local and remote addresses and ports, state and the traffic for each connection. The data you see there should be accurate, if that’s not the case, please send us a feedback!",
          "ts": "1654729621.707219",
          "thread_ts": "1654729599.912069",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "koEu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The network gauge in the debug navigator shows a list of all the active connections. You can see the local and remote addresses and ports, state and the traffic for each connection. The data you see there should be accurate, if that’s not the case, please send us a feedback!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ5CEBKP\u003e asked\n\u0026gt; Running a macOS catalyst app in Xcode in release mode creates two builds even though only one build is needed. This doubles the compile time. Any chance this could be fixed without affecting archive release builds?",
      "ts": "1654729613.262479",
      "thread_ts": "1654729613.262479",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654733146.841849",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "3xH",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ5CEBKP"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Running a macOS catalyst app in Xcode in release mode creates two builds even though only one build is needed. This doubles the compile time. Any chance this could be fixed without affecting archive release builds?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "bb8e47cc-2906-451d-a749-e2e1af6c87bc",
          "type": "message",
          "user": "U03HB5P0B5L",
          "text": "Using generic run destinations will always build for all architectures, and because archiving can only be done with a generic run destinations, it will always build for all architectures. If you want to build for only the device's architecture in `Release`, you can do so by setting `ONLY_ACTIVE_ARCH` to `YES` for that (or all) configurations - it's set by default for `Debug`. This will not impact archiving.",
          "ts": "1654729642.934179",
          "thread_ts": "1654729613.262479",
          "edited": {
            "user": "U03HB5P0B5L",
            "ts": "1654729663.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "w1zX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Using generic run destinations will always build for all architectures, and because archiving can only be done with a generic run destinations, it will always build for all architectures. If you want to build for only the device's architecture in "
                    },
                    {
                      "type": "text",
                      "text": "Release",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", you can do so by setting "
                    },
                    {
                      "type": "text",
                      "text": "ONLY_ACTIVE_ARCH",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to "
                    },
                    {
                      "type": "text",
                      "text": "YES",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " for that (or all) configurations - it's set by default for "
                    },
                    {
                      "type": "text",
                      "text": "Debug",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". This will not impact archiving."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "260344a5-0494-43b5-b595-a435ac3bfbd4",
          "type": "message",
          "user": "U03HZ5CEBKP",
          "text": "So why isn’t this done by default given that archiving would not be affected?",
          "ts": "1654729760.136959",
          "thread_ts": "1654729613.262479",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LMjE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So why isn’t this done by default given that archiving would not be affected?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e1284aff-0bc6-447a-a524-8d20ceb0bcdf",
          "type": "message",
          "user": "U03HB5P0B5L",
          "text": "Thanks for the feedback! If you could file feedback at \u003chttp://feedbackassistant.apple.com\u003e and post the FB number here, we'd really appreciate it.",
          "ts": "1654730783.937989",
          "thread_ts": "1654729613.262479",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lP+I",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the feedback! If you could file feedback at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " and post the FB number here, we'd really appreciate it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e8a7df47-fe32-42ce-8e77-2d4e4590b37b",
          "type": "message",
          "user": "U03HZ5CEBKP",
          "text": "Done. \u003chttps://feedbackassistant.apple.com/feedback/10116446\u003e",
          "ts": "1654733146.841849",
          "thread_ts": "1654729613.262479",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "C0oL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Done. "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/feedback/10116446",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JWQLN8RJ\u003e asked\n\u0026gt; This came up in a lab today with Anders and he said to post here:\n\u0026gt; \n\u0026gt; Tickets:\n\u0026gt; \n\u0026gt; FB10107786\n\u0026gt; FB10107712\n\u0026gt; \n\u0026gt; Is there currently any way to flip on the “this is extension safe” bit when building a Dylib entirely in SPM?",
      "ts": "1654729640.647579",
      "thread_ts": "1654729640.647579",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654729668.521629",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "pdi",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JWQLN8RJ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"This came up in a lab today with Anders and he said to post here:\\n\\nTickets:\\n\\nFB10107786\\nFB10107712\\n\\nIs there currently any way to flip on the \\u201cthis is extension safe\\u201d bit when building a Dylib entirely in SPM?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "d70965ca-fd57-4c89-9437-bb57ea8356d2",
          "type": "message",
          "user": "U03HES8111T",
          "text": "There is currently no way to set the \"extension safe\" bit when building dynamic libraries from packages.\n\nThank you very much for providing the FB number here for that issue and for the bug with the conditional dependencies so that we can track them.",
          "ts": "1654729668.521629",
          "thread_ts": "1654729640.647579",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YGv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There is currently no way to set the \"extension safe\" bit when building dynamic libraries from packages.\n\nThank you very much for providing the FB number here for that issue and for the bug with the conditional dependencies so that we can track them."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JSFUKL2U\u003e asked\n\u0026gt; What plans to improvement Xcode Plugins? Can we see something like in VSCode Extensions or Jetbrains Plugins?",
      "ts": "1654729783.817909",
      "thread_ts": "1654729783.817909",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654731995.393449",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "8du+",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JSFUKL2U"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What plans to improvement Xcode Plugins? Can we see something like in VSCode Extensions or Jetbrains Plugins?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "c08d131e-d8ca-490f-8026-7e9a97e2d633",
          "type": "message",
          "user": "U03J7H5DD2L",
          "text": "Hi \u003c@U03JSFUKL2U\u003e, hope you’re having a great WWDC so far! We can’t comment on the future, but we would be very interested to learn more about your use case and what problems you’re facing that you think such an idea could help with.\n\nCould you please \u003chttps://developer.apple.com/news/?id=vvrgkboh|file a bug report\u003e — and in the meantime, maybe the brand-new \u003chttps://developer.apple.com/videos/play/wwdc2022/110359|Swift Package plugins\u003e will be of interest to you?",
          "ts": "1654729834.518369",
          "thread_ts": "1654729783.817909",
          "attachments": [
            {
              "fallback": "How to file great bug reports - Discover - Apple Developer",
              "id": 1,
              "title": "How to file great bug reports - Discover - Apple Developer",
              "title_link": "https://developer.apple.com/news/?id=vvrgkboh",
              "text": "Bugs are an inevitable part of the development process. Though they can be frustrating to bump up against, you can help squash these sorts of problems quickly by identifying the issue you’re running into, reproducing it, and filing a bug report. Here are some of our top tips for making sure your bug report is clear, actionable, and — most importantly — fixable.",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/articles/images/F166EDE5-589B-46DB-AD91-F8639E04464C/2048.jpeg",
              "service_name": "developer.apple.com",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/news/?id=vvrgkboh",
              "original_url": "https://developer.apple.com/news/?id=vvrgkboh",
              "blocks": null
            },
            {
              "fallback": "Apple Developer: Meet Swift Package plugins - WWDC22 - Videos - Apple Developer",
              "id": 2,
              "title": "Meet Swift Package plugins - WWDC22 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/videos/play/wwdc2022/110359",
              "text": "Discover how you can perform actions on Swift packages and Xcode projects with Swift package plugins. We'll go over how these plugins...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/124/6713/6713_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/videos/play/wwdc2022/110359",
              "original_url": "https://developer.apple.com/videos/play/wwdc2022/110359",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XKq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi "
                    },
                    {
                      "type": "user",
                      "user_id": "U03JSFUKL2U"
                    },
                    {
                      "type": "text",
                      "text": ", hope you’re having a great WWDC so far! We can’t comment on the future, but we would be very interested to learn more about your use case and what problems you’re facing that you think such an idea could help with.\n\nCould you please "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/news/?id=vvrgkboh",
                      "text": "file a bug report"
                    },
                    {
                      "type": "text",
                      "text": " — and in the meantime, maybe the brand-new "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2022/110359",
                      "text": "Swift Package plugins"
                    },
                    {
                      "type": "text",
                      "text": " will be of interest to you?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ee01f48d-0d4f-4c3b-a2ca-df888ca3f1ed",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "As somebody who remembers Alcatraz, I'd really like to see that level of extendability again. :thinking_face: I know there were security concerns then, but as something that could be fully optional, up to the developer (as much as we can disable SIP \u0026amp; hook different scopes of OS), it'd be great to give this to the community again.",
          "ts": "1654730251.562849",
          "thread_ts": "1654729783.817909",
          "edited": {
            "user": "U03JPFQNX5K",
            "ts": "1654730262.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JSFUKL2U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "R1D",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "As somebody who remembers Alcatraz, I'd really like to see that level of extendability again. "
                    },
                    {
                      "type": "emoji",
                      "name": "thinking_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " I know there were security concerns then, but as something that could be fully optional, up to the developer (as much as we can disable SIP \u0026 hook different scopes of OS), it'd be great to give this to the community again."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6657F215-A9B2-4FDF-9CE0-BD80ECC83C02",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "\u003c@U03J7H5DD2L\u003e  In my case - extend xcode terminal, like coloring, filter by tag or use system shell out of the box. Or write my own wrapper around something - git or gradle. \nI wonder to see same extensions API like in Safari where I can write SwiftUI extension and launch it in xcode! ",
          "ts": "1654731349.587949",
          "thread_ts": "1654729783.817909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "49rC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03J7H5DD2L"
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "text",
                      "text": "In"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "case"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "-"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "extend"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "xcode"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "terminal,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "like"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "coloring,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "filter"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "by"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "tag"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "or"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "use"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "system"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "shell"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "out"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "box."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Or"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "write"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "own"
                    },
                    {
                      "type": "text",
                      "text": " w"
                    },
                    {
                      "type": "text",
                      "text": "rapper"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "around"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "something"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "-"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "git"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "or"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "gradle."
                    },
                    {
                      "type": "text",
                      "text": " \n"
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "wonder"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "see"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "same"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "extensions"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "API"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "like"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Safari"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "where"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "can"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "write"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "SwiftUI"
                    },
                    {
                      "type": "text",
                      "text": " extension "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "launch"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "xcode!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "464e4077-4ebd-47e7-bd98-5e9c8c3c937a",
          "type": "message",
          "user": "U03J7H5DD2L",
          "text": "Ooh, those are cool ideas! Since this Digital Lounge will be shutting down pretty soon, a bug report might be the best place to write down these use case!",
          "ts": "1654731995.393449",
          "thread_ts": "1654729783.817909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "osK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ooh, those are cool ideas! Since this Digital Lounge will be shutting down pretty soon, a bug report might be the best place to write down these use case!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4DF6D6G\u003e asked\n\u0026gt; My project compile in Xcode 13.4.1 and in Xcode 14b1 it doesn't I have \"The compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions\"  error in two different SwiftUI files that compile in Xcode 13.4.1.",
      "ts": "1654730223.713469",
      "thread_ts": "1654730223.713469",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654731182.930279",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "t7Xq",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4DF6D6G"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"My project compile in Xcode 13.4.1 and in Xcode 14b1 it doesn't I have \\\"The compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions\\\"  error in two different SwiftUI files that compile in Xcode 13.4.1.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "c95a0bdb-0cef-4481-966a-b6d88358a6e8",
          "type": "message",
          "user": "U03J7H5DD2L",
          "text": "Oh no! Sounds like you may have found a regression in Xcode 14. Could you please file a \u003chttps://developer.apple.com/news/?id=vvrgkboh|bug report\u003e for that? It would be especially helpful to include a sample project that exhibits the issue. Try reducing it down into a very simple case so we can use it to reproduce.\n\nIf you’re unable to share a whole project, the SwiftUI files in question could also be helpful — or even a snippet of the complex expression.\n\nAlso, please share the Feedback ID here if you have time before the digital lounge ends!",
          "ts": "1654730287.222889",
          "thread_ts": "1654730223.713469",
          "attachments": [
            {
              "fallback": "How to file great bug reports - Discover - Apple Developer",
              "id": 1,
              "title": "How to file great bug reports - Discover - Apple Developer",
              "title_link": "https://developer.apple.com/news/?id=vvrgkboh",
              "text": "Bugs are an inevitable part of the development process. Though they can be frustrating to bump up against, you can help squash these sorts of problems quickly by identifying the issue you’re running into, reproducing it, and filing a bug report. Here are some of our top tips for making sure your bug report is clear, actionable, and — most importantly — fixable.",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/articles/images/F166EDE5-589B-46DB-AD91-F8639E04464C/2048.jpeg",
              "service_name": "developer.apple.com",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/news/?id=vvrgkboh",
              "original_url": "https://developer.apple.com/news/?id=vvrgkboh",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Nwe",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oh no! Sounds like you may have found a regression in Xcode 14. Could you please file a "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/news/?id=vvrgkboh",
                      "text": "bug report"
                    },
                    {
                      "type": "text",
                      "text": " for that? It would be especially helpful to include a sample project that exhibits the issue. Try reducing it down into a very simple case so we can use it to reproduce.\n\nIf you’re unable to share a whole project, the SwiftUI files in question could also be helpful — or even a snippet of the complex expression.\n\nAlso, please share the Feedback ID here if you have time before the digital lounge ends!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0bb133a5-d1e1-4c2a-8a59-dc0eb41aff2b",
          "type": "message",
          "user": "U03J4DF6D6G",
          "text": "I will share the code of my project.",
          "ts": "1654730688.374719",
          "thread_ts": "1654730223.713469",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jrQpG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I will share the code of my project."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "630dbecc-247e-4e18-b32e-4c9f90b2eceb",
          "type": "message",
          "user": "U03J4DF6D6G",
          "text": "I’m filing the radar now",
          "ts": "1654730694.387999",
          "thread_ts": "1654730223.713469",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03J7H5DD2L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "obsUP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’m filing the radar now"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "78a87251-eff1-4489-84ef-c3142fac84c3",
          "type": "message",
          "user": "U03J4DF6D6G",
          "text": "\u003c@U03J7H5DD2L\u003e FB10115879",
          "ts": "1654731167.038879",
          "thread_ts": "1654730223.713469",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "eyes",
              "count": 2,
              "users": [
                "U03J7H5DD2L",
                "U03HT20UKFZ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bt+po",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03J7H5DD2L"
                    },
                    {
                      "type": "text",
                      "text": " FB10115879"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "aadf3fa7-242f-4c79-8e4b-d5165977621e",
          "type": "message",
          "user": "U03J4DF6D6G",
          "text": "I hope it help",
          "ts": "1654731170.046289",
          "thread_ts": "1654730223.713469",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "SBBX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I hope it help"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e5a481bb-aafa-4aff-860a-142562c177bd",
          "type": "message",
          "user": "U03J7H5DD2L",
          "text": "Thank you!!",
          "ts": "1654731182.930279",
          "thread_ts": "1654730223.713469",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J4DF6D6G"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Huph",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JGH0JLMQ\u003e asked\n\u0026gt; I didn't want to derail another thread about differences between Xcode running on Apple Silicon vs. Intel: the main problem we face are snapshot tests that produce slightly different results when executed on simulators running on AS vs. Intel. (These tend to be sub-pixel differences in the rendered output). Are you aware of any way we can launch simulators to mitigate these differences?",
      "ts": "1654730226.569529",
      "thread_ts": "1654730226.569529",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 14,
      "latest_reply": "1654760803.935349",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "iw=",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JGH0JLMQ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I didn't want to derail another thread about differences between Xcode running on Apple Silicon vs. Intel: the main problem we face are snapshot tests that produce slightly different results when executed on simulators running on AS vs. Intel. (These tend to be sub-pixel differences in the rendered output). Are you aware of any way we can launch simulators to mitigate these differences?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "362f2f09-32e5-4b52-b6d7-16482a9f388d",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Hi Nathan. I'm not aware of any specific reason why running on Intel vs on Apple silicon would produce differences in the rendered output. You may want to check if your app is doing some kind of conditional compilation of code that might be affecting the layout or the rendering",
          "ts": "1654730303.672189",
          "thread_ts": "1654730226.569529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5vvk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Nathan. I'm not aware of any specific reason why running on Intel vs on Apple silicon would produce differences in the rendered output. You may want to check if your app is doing some kind of conditional compilation of code that might be affecting the layout or the rendering"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1ff4f3b1-bb2a-4041-8d3f-790b45705d88",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Barring that, I think this would be a bug that our OS teams would be very interested in looking at. You can use Feedback Assistant to file the bug report. A sample project that reproduces the particular issue, alongside with a description of your hardware, would be helpful",
          "ts": "1654730389.411539",
          "thread_ts": "1654730226.569529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rJy4q",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Barring that, I think this would be a bug that our OS teams would be very interested in looking at. You can use Feedback Assistant to file the bug report. A sample project that reproduces the particular issue, alongside with a description of your hardware, would be helpful"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dd6b4f61-b015-4f93-be2c-925bbbb5678d",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "We faced this as well and basically ended up keeping everything related to snapshots to our CIs – so that only CI machines generate \u0026amp; validate snapshots during the acceptance pipeline.",
          "ts": "1654730400.787729",
          "thread_ts": "1654730226.569529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FoC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We faced this as well and basically ended up keeping everything related to snapshots to our CIs – so that only CI machines generate \u0026 validate snapshots during the acceptance pipeline."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6626171d-d0f1-4968-8044-2ad1f7f4d173",
          "type": "message",
          "user": "U03JGEZM5K5",
          "text": "Curious what could be a reason. Can CPU architecture introduce different rounding issues that as result will produce subtle pixel differences in snapshots?",
          "ts": "1654730453.827429",
          "thread_ts": "1654730226.569529",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "point_up",
              "count": 1,
              "users": [
                "U03JPFQNX5K"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "MjHI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Curious what could be a reason. Can CPU architecture introduce different rounding issues that as result will produce subtle pixel differences in snapshots?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f3897fc1-7424-4374-b95c-92f40523859a",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Yes, floating-point operations on different CPUs could be a potential source",
          "ts": "1654730508.653469",
          "thread_ts": "1654730226.569529",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "point_up",
              "count": 1,
              "users": [
                "U03JPFQNX5K"
              ]
            },
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JEEUJPMJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "NQAw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, floating-point operations on different CPUs could be a potential source"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e0c18869-51fb-4c30-b960-e8f0b22e510f",
          "type": "message",
          "user": "U03JGH0JLMQ",
          "text": "Thanks for the reply! I don’t think it’s in our code because it’s reproducible on pretty trivial labels, but happy to check. There are a few discussions in \u003chttps://github.com/pointfreeco/swift-snapshot-testing/issues/424|snapshot libraries\u003e\n\nIt’s also an issue that impacts \u003chttps://github.com/pedrovgs/Shot/issues/265|Android Emulators\u003e so it’s definitely a problem much closer to the CPU! I guess I was wondering if there are potentially some secret render flags when instantiating a simulator that might trigger a different codepath. Happy to file a FB with the OS teams",
          "ts": "1654730646.982949",
          "thread_ts": "1654730226.569529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Q2ot",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the reply! I don’t think it’s in our code because it’s reproducible on pretty trivial labels, but happy to check. There are a few discussions in "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/pointfreeco/swift-snapshot-testing/issues/424",
                      "text": "snapshot libraries"
                    },
                    {
                      "type": "text",
                      "text": "\n\nIt’s also an issue that impacts "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/pedrovgs/Shot/issues/265",
                      "text": "Android Emulators"
                    },
                    {
                      "type": "text",
                      "text": " so it’s definitely a problem much closer to the CPU! I guess I was wondering if there are potentially some secret render flags when instantiating a simulator that might trigger a different codepath. Happy to file a FB with the OS teams"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f9ff5703-75a6-4130-a0a4-2c1aa9ce03bd",
          "type": "message",
          "user": "U03JGEZM5K5",
          "text": "This would be a legit use of precision in snapshot testing configuration, the same as where you compare two floats you do not compare them all way in. Most of snapshot test frameworks do have an option to configure precision. Setting something like 0.99 probably will solve the problem without allowing any significant degradations to sneak in.",
          "ts": "1654730716.853479",
          "thread_ts": "1654730226.569529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zVU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This would be a legit use of precision in snapshot testing configuration, the same as where you compare two floats you do not compare them all way in. Most of snapshot test frameworks do have an option to configure precision. Setting something like 0.99 probably will solve the problem without allowing any significant degradations to sneak in."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3fb3b596-e412-4276-82c2-38dea78aea9b",
          "type": "message",
          "user": "U03JGEZM5K5",
          "ts": "1654730753.583149",
          "thread_ts": "1654730226.569529",
          "files": [
            {
              "id": "F03JYE3QJJG",
              "created": 1654730750,
              "timestamp": 1654730750,
              "name": "Screen Shot 2022-06-08 at 4.25.39 PM.png",
              "title": "Screen Shot 2022-06-08 at 4.25.39 PM.png",
              "mimetype": "image/png",
              "image_exif_rotation": 1,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03JGEZM5K5",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 324244,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03JYE3QJJG-Screen Shot 2022-06-08 at 4.25.39 PM.png",
              "url_private_download": "C03H0JN431U/F03JYE3QJJG-Screen Shot 2022-06-08 at 4.25.39 PM.png",
              "original_h": 580,
              "original_w": 2290,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JYE3QJJG-9e54f9df15/screen_shot_2022-06-08_at_4.25.39_pm_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JYE3QJJG-9e54f9df15/screen_shot_2022-06-08_at_4.25.39_pm_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JYE3QJJG-9e54f9df15/screen_shot_2022-06-08_at_4.25.39_pm_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JYE3QJJG-9e54f9df15/screen_shot_2022-06-08_at_4.25.39_pm_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 360,
              "thumb_360_h": 91,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JYE3QJJG-9e54f9df15/screen_shot_2022-06-08_at_4.25.39_pm_480.png",
              "thumb_480_w": 480,
              "thumb_480_h": 122,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JYE3QJJG-9e54f9df15/screen_shot_2022-06-08_at_4.25.39_pm_720.png",
              "thumb_720_w": 720,
              "thumb_720_h": 182,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JYE3QJJG-9e54f9df15/screen_shot_2022-06-08_at_4.25.39_pm_960.png",
              "thumb_960_w": 960,
              "thumb_960_h": 243,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JYE3QJJG-9e54f9df15/screen_shot_2022-06-08_at_4.25.39_pm_1024.png",
              "thumb_1024_w": 1024,
              "thumb_1024_h": 259,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03JGEZM5K5/F03JYE3QJJG/screen_shot_2022-06-08_at_4.25.39_pm.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03JYE3QJJG-500cf6cfb1",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": null
        },
        {
          "client_msg_id": "d9eacca2-2349-454d-b52e-0acdf55e5539",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "I was going to say essentially what Nikita said -- due to the nature of floating point operations, especially across CPU architectures, you can't really do a straight binary diff to determine whether things have changed. You need to choose a threshold for acceptable differences (deltas)",
          "ts": "1654730799.533989",
          "thread_ts": "1654730226.569529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6gu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I was going to say essentially what Nikita said -- due to the nature of floating point operations, especially across CPU architectures, you can't really do a straight binary diff to determine whether things have changed. You need to choose a threshold for acceptable differences (deltas)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3cc90470-c9ff-4941-a128-79923e950da7",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "With regard to any \"secret render flags\" -- that's a great question for the OS teams, but I think what they will tell you is that you won't always get 100% perfect output, and you need to decide what level of difference between two screenshots you are willing to tolerate",
          "ts": "1654730910.487989",
          "thread_ts": "1654730226.569529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KLbg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "With regard to any \"secret render flags\" -- that's a great question for the OS teams, but I think what they will tell you is that you won't always get 100% perfect output, and you need to decide what level of difference between two screenshots you are willing to tolerate"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b45b379f-91e0-4084-b63d-21194aa87c14",
          "type": "message",
          "user": "U03JGH0JLMQ",
          "text": "We’ve seen some very high precision deltas sometimes (\u0026gt; 10%) that would effectively make the tests useless, sadly. Though yes, in general, the libraries seem to be evolving so that they can quantify the difference between two pixels with more nuance than just being a match or not.",
          "ts": "1654730994.508199",
          "thread_ts": "1654730226.569529",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "interrobang",
              "count": 1,
              "users": [
                "U03J4D1FEP6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gys",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We’ve seen some very high precision deltas sometimes (\u003e 10%) that would effectively make the tests useless, sadly. Though yes, in general, the libraries seem to be evolving so that they can quantify the difference between two pixels with more nuance than just being a match or not."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "add90268-d8f4-4789-805b-95f5e60fbb51",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Is it possible for you to standardize on a specific platform and CPU for taking the snapshots?",
          "ts": "1654731148.208539",
          "thread_ts": "1654730226.569529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eAO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is it possible for you to standardize on a specific platform and CPU for taking the snapshots?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5b97c57a-a546-4c86-b0a2-aa34eda3b207",
          "type": "message",
          "user": "U03JGH0JLMQ",
          "text": "Sure. At the moment anyone with an M1 asks someone on an Intel mac to update their PR with the snapshot tests :slightly_smiling_face:",
          "ts": "1654731260.856589",
          "thread_ts": "1654730226.569529",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "sweat_smile",
              "count": 3,
              "users": [
                "U03JPFQNX5K",
                "U03J79KJXPX",
                "U03JEM1AW0Z"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ICM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sure. At the moment anyone with an M1 asks someone on an Intel mac to update their PR with the snapshot tests "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "40596971-e0d0-4182-841f-a838f0cd1a07",
          "type": "message",
          "user": "U03K840U3L1",
          "text": "Thanks for discussing this, we also are facing this issue in a team with mixed machines.",
          "ts": "1654760803.935349",
          "thread_ts": "1654730226.569529",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2K6fN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for discussing this, we also are facing this issue in a team with mixed machines."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JLV0E8RJ\u003e asked\n\u0026gt; With TestFlight being an iOS 13+ app, how can I distribute my beta builds to users on iOS 12 which we are still supporting?",
      "ts": "1654730345.366719",
      "thread_ts": "1654730345.366719",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654730358.303509",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "OQdsl",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JLV0E8RJ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"With TestFlight being an iOS 13+ app, how can I distribute my beta builds to users on iOS 12 which we are still supporting?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "434021c1-9498-4839-86d6-8391b0d11efd",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "You can submit an app with an iOS 12 deployment target to TestFlight. In order to install the TestFlight client on devices with an older OS, you'll need to install a previous version from the Purchased list available in the App Store client.",
          "ts": "1654730358.303509",
          "thread_ts": "1654730345.366719",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CyBDQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can submit an app with an iOS 12 deployment target to TestFlight. In order to install the TestFlight client on devices with an older OS, you'll need to install a previous version from the Purchased list available in the App Store client."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KH907MME\u003e asked\n\u0026gt; I've heard mixed reports about bitcode being deprecated for all platforms vs just watchOS and tvOS. Could you clarify which platforms bitcode has been deprecated for? Also, is it right that a target will just need BITCODE_ENABLED set to NO.",
      "ts": "1654730429.493669",
      "thread_ts": "1654730429.493669",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654730475.635869",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "/QoW",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KH907MME"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I've heard mixed reports about bitcode being deprecated for all platforms vs just watchOS and tvOS. Could you clarify which platforms bitcode has been deprecated for? Also, is it right that a target will just need BITCODE_ENABLED set to NO.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "13b72b88-f2cd-4bd0-9249-442bb50a18a1",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Bitcode is deprecated for all platforms. You can set BITCODE_ENABLED to NO in your projects to disable building with it. Xcode will also automatically compile bitcode into machine code when you upload your app to App Store Connect.",
          "ts": "1654730475.635869",
          "thread_ts": "1654730429.493669",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 3,
              "users": [
                "U03JEEUJPMJ",
                "U03J1UBVC2X",
                "U03HMD88UPR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vvgP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Bitcode is deprecated for all platforms. You can set BITCODE_ENABLED to NO in your projects to disable building with it. Xcode will also automatically compile bitcode into machine code when you upload your app to App Store Connect."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JGEZM5K5\u003e asked\n\u0026gt; In the enterprise setup for an iOS app where there is heavy use of unit tests, linters, code generation, etc is it possible to drive all of it with SPM, or fall back to the existing built-in Xcode build orchestration with xcproject and xcworkspace? There was a recommendation to use playground templates, can you confirm that it is solution for all the cases above?",
      "ts": "1654730664.932649",
      "thread_ts": "1654730664.932649",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654731463.373929",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "=D7",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JGEZM5K5"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"In the enterprise setup for an iOS app where there is heavy use of unit tests, linters, code generation, etc is it possible to drive all of it with SPM, or fall back to the existing built-in Xcode build orchestration with xcproject and xcworkspace? There was a recommendation to use playground templates, can you confirm that it is solution for all the cases above?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "e2e4af69-8e6a-44f7-943d-0a5193ee82dc",
          "type": "message",
          "user": "U03J7H5DD2L",
          "text": "Hi again! Sorry for the delay — I checked with some other engineers and some Xcode features like custom build phases and unit tests aren’t available in Swift Playgrounds apps at this time.",
          "ts": "1654730692.742229",
          "thread_ts": "1654730664.932649",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JtDW+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi again! Sorry for the delay — I checked with some other engineers and some Xcode features like custom build phases and unit tests aren’t available in Swift Playgrounds apps at this time."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6d6ad731-83e4-403c-adc2-55223407588e",
          "type": "message",
          "user": "U03JGEZM5K5",
          "text": ":hugging_face: thank you very much for checking on this. We will keep our fingers crossed that someday Xcode will be able to build , test, validate and run on simulator a standalone package without jumps through the hoops.",
          "ts": "1654730878.043449",
          "thread_ts": "1654730664.932649",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03J7H5DD2L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+iNk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "emoji",
                      "name": "hugging_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " thank you very much for checking on this. We will keep our fingers crossed that someday Xcode will be able to build , test, validate and run on simulator a standalone package without jumps through the hoops."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c7fdc82a-2586-4b1a-b572-fbaf7908683c",
          "type": "message",
          "user": "U03JGEZM5K5",
          "text": "It seems like SPM package for any other platform but iOS is first class citizen in Xcode. You can open it in Xcode, build, run, run plugins etc. The only problem is that for iOS it is not working yet as there is no iOS targets in destinations yet even if you specify iOS only platform support in package.",
          "ts": "1654731447.786019",
          "thread_ts": "1654730664.932649",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+gZU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It seems like SPM package for any other platform but iOS is first class citizen in Xcode. You can open it in Xcode, build, run, run plugins etc. The only problem is that for iOS it is not working yet as there is no iOS targets in destinations yet even if you specify iOS only platform support in package."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2a007f5d-f395-486f-b81c-b15901cdc0ba",
          "type": "message",
          "user": "U03JGEZM5K5",
          "text": "ps but I am sure this is known :slightly_smiling_face:",
          "ts": "1654731463.373929",
          "thread_ts": "1654730664.932649",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zOoq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "ps but I am sure this is known "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HT20UKFZ\u003e asked\n\u0026gt; Hi Guys, hopefully a simple question. In 13+ many times when I debug and try to see the values in variables it since they have been optimized out. Is there a way that this will not be done while debugging? I can t figure out what causes it and or iof there is a switch to stop this behaviour.",
      "ts": "1654730682.934419",
      "thread_ts": "1654730682.934419",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654733117.407449",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "yfC",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HT20UKFZ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi Guys, hopefully a simple question. In 13+ many times when I debug and try to see the values in variables it since they have been optimized out. Is there a way that this will not be done while debugging? I can t figure out what causes it and or iof there is a switch to stop this behaviour.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "0f719949-1f27-421c-8163-3e7f0d83d655",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "This could happen because the debugger doesn’t have the symbols to read a particular variable from memory. We made a lot of improvements this year when it comes to the variables view in Xcode 14 and lldb. If you can isolate problems like these, please send us a feedback with a sample project!",
          "ts": "1654730701.875999",
          "thread_ts": "1654730682.934419",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "obZI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This could happen because the debugger doesn’t have the symbols to read a particular variable from memory. We made a lot of improvements this year when it comes to the variables view in Xcode 14 and lldb. If you can isolate problems like these, please send us a feedback with a sample project!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1c35dbef-df83-4e1b-8722-53da1ce85c5f",
          "type": "message",
          "user": "U03HHPTMS74",
          "text": "You've probably done this already, but do make sure that the SWIFT_OPTIMIZATION_LEVEL setting in your project is set to `none` in the build you are trying to debug.  Debugging optimized Swift code is not supported at present.",
          "ts": "1654731423.621369",
          "thread_ts": "1654730682.934419",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ozQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You've probably done this already, but do make sure that the SWIFT_OPTIMIZATION_LEVEL setting in your project is set to "
                    },
                    {
                      "type": "text",
                      "text": "none",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in the build you are trying to debug.  Debugging optimized Swift code is not supported at present."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b240380b-3b66-4254-990a-86a9d609f242",
          "type": "message",
          "user": "U03HT20UKFZ",
          "text": "Ill make sure that is set, I think I did this a while ago. I am going to start using 14 next week and will file a report if it continues there",
          "ts": "1654733115.377369",
          "thread_ts": "1654730682.934419",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tso",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ill make sure that is set, I think I did this a while ago. I am going to start using 14 next week and will file a report if it continues there"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "21a3d68b-ef20-459e-b335-9ede14d6ce88",
          "type": "message",
          "user": "U03HT20UKFZ",
          "text": "Thanks!",
          "ts": "1654733117.407449",
          "thread_ts": "1654730682.934419",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "08UP3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRNYGBNC\u003e asked\n\u0026gt; We have a large project that seems to crash Xcode frequently when switching branches. Is there anything in the project file that might cause this? We use SPM for dependencies, and it seems to possibly be correlated to when we switched from Cocoapods",
      "ts": "1654730683.628339",
      "thread_ts": "1654730683.628339",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 12,
      "latest_reply": "1654731224.467159",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "4mVqG",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRNYGBNC"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We have a large project that seems to crash Xcode frequently when switching branches. Is there anything in the project file that might cause this? We use SPM for dependencies, and it seems to possibly be correlated to when we switched from Cocoapods\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "4c02ccc4-d4b4-491b-a8db-7fce6baecb60",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "Which version of Xcode are you seeing this with and could you share a crash log?",
          "ts": "1654730693.203279",
          "thread_ts": "1654730683.628339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9Ihl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Which version of Xcode are you seeing this with and could you share a crash log?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f7525f79-8512-4212-acd3-feda3bf8d21e",
          "type": "message",
          "user": "U03JRNYGBNC",
          "text": "xcode 13.4, and maybe 13.4.1",
          "ts": "1654730745.029559",
          "thread_ts": "1654730683.628339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=6Q",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "xcode 13.4, and maybe 13.4.1"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4a9115a5-0150-47b3-a1b0-03e692fd1157",
          "type": "message",
          "user": "U03JRNYGBNC",
          "text": "i don't have one at the moment, but i've shared many through the automated thing that pops up when it crashes",
          "ts": "1654730760.573559",
          "thread_ts": "1654730683.628339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qLd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "i don't have one at the moment, but i've shared many through the automated thing that pops up when it crashes"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cad880bf-7390-4180-8ae1-2b23436d71e2",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "Would you mind also filing a bug report at \u003chttps://feedbackassistant.apple.com\u003e with the attached crash log, that would be greatly appreciated. That way we will have an avenue to follow-up with you.",
          "ts": "1654730852.627159",
          "thread_ts": "1654730683.628339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "I8W",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Would you mind also filing a bug report at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " with the attached crash log, that would be greatly appreciated. That way we will have an avenue to follow-up with you."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "42bccf8b-67f3-4dd5-8c81-36d749bd0722",
          "type": "message",
          "user": "U03JRNYGBNC",
          "text": "ok, was able to just trigger in 13.4.1",
          "ts": "1654730856.387819",
          "thread_ts": "1654730683.628339",
          "files": [
            {
              "id": "F03K8MU3M5X",
              "created": 1654730854,
              "timestamp": 1654730854,
              "name": "Untitled.txt",
              "title": "Untitled",
              "mimetype": "text/plain",
              "image_exif_rotation": 0,
              "filetype": "text",
              "pretty_type": "Plain Text",
              "user": "U03JRNYGBNC",
              "mode": "snippet",
              "editable": true,
              "is_external": false,
              "external_type": "",
              "size": 113878,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03K8MU3M5X-Untitled.txt",
              "url_private_download": "C03H0JN431U/F03K8MU3M5X-Untitled.txt",
              "original_h": 0,
              "original_w": 0,
              "thumb_64": "",
              "thumb_80": "",
              "thumb_160": "",
              "thumb_360": "",
              "thumb_360_gif": "",
              "thumb_360_w": 0,
              "thumb_360_h": 0,
              "thumb_480": "",
              "thumb_480_w": 0,
              "thumb_480_h": 0,
              "thumb_720": "",
              "thumb_720_w": 0,
              "thumb_720_h": 0,
              "thumb_960": "",
              "thumb_960_w": 0,
              "thumb_960_h": 0,
              "thumb_1024": "",
              "thumb_1024_w": 0,
              "thumb_1024_h": 0,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03JRNYGBNC/F03K8MU3M5X/untitled.txt",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03K8MU3M5X-6b354c6e28",
              "edit_link": "https://appleevents.enterprise.slack.com/files/U03JRNYGBNC/F03K8MU3M5X/untitled.txt/edit",
              "preview": "-------------------------------------\nTranslated Report (Full Report Below)\n-------------------------------------\n\nProcess:               Xcode [11947]",
              "preview_highlight": "\u003cdiv class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\"\u003e\n\u003cdiv class=\"CodeMirror-code\"\u003e\n\u003cdiv\u003e\u003cpre\u003e-------------------------------------\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003eTranslated Report (Full Report Below)\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e-------------------------------------\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003eProcess:               Xcode [11947]\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n",
              "lines": 1064,
              "lines_more": 1059,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "upload": true,
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Efpk3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "ok, was able to just trigger in 13.4.1"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a469008a-7a3b-4099-bd14-6699b78b6d19",
          "type": "message",
          "user": "U03JRNYGBNC",
          "text": "yeah, i'll definitely file a report",
          "ts": "1654730868.565819",
          "thread_ts": "1654730683.628339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mSjY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "yeah, i'll definitely file a report"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "32b82b58-fbfa-45b8-8bf3-3836d1274b51",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "Thanks for the log, I can check whether this is something we already know more about",
          "ts": "1654730890.906239",
          "thread_ts": "1654730683.628339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cOd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the log, I can check whether this is something we already know more about"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dee3d407-9115-47d5-bc80-50bbc840edfa",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "It doesn’t look like we do, so the report would definitely be helpful, thanks!",
          "ts": "1654730951.018129",
          "thread_ts": "1654730683.628339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5Jc2+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It doesn’t look like we do, so the report would definitely be helpful, thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0b104d95-d358-4800-b6a5-dd4e9df36be7",
          "type": "message",
          "user": "U03JRNYGBNC",
          "text": "i guess one followup question would be, do you have any idea whether corrupt project files in the wild is much of an issue?",
          "ts": "1654730957.027099",
          "thread_ts": "1654730683.628339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "E21x",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "i guess one followup question would be, do you have any idea whether corrupt project files in the wild is much of an issue?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b0a9b5bf-e6bb-4f29-b1cb-50a3d3ebd098",
          "type": "message",
          "user": "U03JRNYGBNC",
          "text": "i'm wondering if we had a bad merge at some point which created some weird thing in the project file",
          "ts": "1654730973.571309",
          "thread_ts": "1654730683.628339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "T6u",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "i'm wondering if we had a bad merge at some point which created some weird thing in the project file"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "61300f42-effd-4bf6-a7e3-e994d748e466",
          "type": "message",
          "user": "U03JRNYGBNC",
          "text": "which might be fixed by rebuilding it",
          "ts": "1654730985.757049",
          "thread_ts": "1654730683.628339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xq4w1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "which might be fixed by rebuilding it"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c82c803a-1f96-42a8-a32a-87231d61ee7d",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "It’s a pretty rare issue, so I wouldn’t think it’s the most likely explanation. But from a cursory look at the crash log, I also wouldn’t entirely rule out that possibility.",
          "ts": "1654731224.467159",
          "thread_ts": "1654730683.628339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Zhhn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It’s a pretty rare issue, so I wouldn’t think it’s the most likely explanation. But from a cursory look at the crash log, I also wouldn’t entirely rule out that possibility."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JBNXCKBP\u003e asked\n\u0026gt; Our \"Create build description\" step on a clean build takes 145 seconds, is there a way to speed that up?",
      "ts": "1654730788.029819",
      "thread_ts": "1654730788.029819",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654730805.831359",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "A8omj",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JBNXCKBP"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Our \\\"Create build description\\\" step on a clean build takes 145 seconds, is there a way to speed that up?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "71990e21-71ba-45e5-9228-42166e15a8c5",
          "type": "message",
          "user": "U03HHPCVCLT",
          "text": "Please submit a feedback with a spindump during the build when the build description is being created. Any additional information, such as the size and number of files in your project would be useful to know as well.\n\nAlso, please consider signing up for a Build Performance Lab to speak directly with an engineer about the issue.\n\nLink to the next lab:\n\u003chttps://developer.apple.com/wwdc22/labs-and-lounges/dashboard/44T86K56S9/dashboard\u003e",
          "ts": "1654730805.831359",
          "thread_ts": "1654730788.029819",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lyOe",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Please submit a feedback with a spindump during the build when the build description is being created. Any additional information, such as the size and number of files in your project would be useful to know as well.\n\nAlso, please consider signing up for a Build Performance Lab to speak directly with an engineer about the issue.\n\nLink to the next lab:\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/44T86K56S9/dashboard",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JUCK9B16\u003e asked\n\u0026gt; Not a question, but a thank you for making previous errors in the build navigator turn grey while doing a new build to make it clear that they may be stale",
      "ts": "1654730840.580179",
      "thread_ts": "1654730840.580179",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654731580.950149",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 6,
          "users": [
            "U03JEMN82JV",
            "U03HMD22287",
            "U03J211JCKU",
            "U03J4D7EZNY",
            "U03J1UBVC2X",
            "U03J22HDMSN"
          ]
        },
        {
          "name": "raised_hands::skin-tone-3",
          "count": 1,
          "users": [
            "U03J4D1FEP6"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Wa7ug",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JUCK9B16"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Not a question, but a thank you for making previous errors in the build navigator turn grey while doing a new build to make it clear that they may be stale\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a76e328e-4ea9-4d5a-a731-1362a8052c08",
          "type": "message",
          "user": "U03HB5P0B5L",
          "text": "Thanks! As you get to know the feature, if you have any suggestions for improving it further, please do send us your feedback :slightly_smiling_face:.",
          "ts": "1654730854.965099",
          "thread_ts": "1654730840.580179",
          "edited": {
            "user": "U03HB5P0B5L",
            "ts": "1654730872.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ycQf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks! As you get to know the feature, if you have any suggestions for improving it further, please do send us your feedback "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dc33e467-858a-452b-bfdc-9505085e8dc6",
          "type": "message",
          "user": "U03HMD22287",
          "text": "Yes, thank you, this feature is wonderful! :heart_eyes:",
          "ts": "1654731580.950149",
          "thread_ts": "1654730840.580179",
          "edited": {
            "user": "U03HMD22287",
            "ts": "1654731602.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GuU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, thank you, this feature is wonderful! "
                    },
                    {
                      "type": "emoji",
                      "name": "heart_eyes",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HX9ZTNQ7\u003e asked\n\u0026gt; I use VIM on a daily basis, and I find frustrating the lack of functionality on XCode.\n\u0026gt; Are there plans to improve VIM support on Xcode 14 or later?",
      "ts": "1654731053.912219",
      "thread_ts": "1654731053.912219",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654731149.222639",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "U+qg",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HX9ZTNQ7"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I use VIM on a daily basis, and I find frustrating the lack of functionality on XCode.\\nAre there plans to improve VIM support on Xcode 14 or later?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ad3c8f00-c640-41e0-bc8b-707f99e899e3",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Hi Juan, I'm sorry to hear that you are having issues. Could you file a feature request using Feedback Assistant detailing the specific things that you feel Vim support in Xcode is missing?",
          "ts": "1654731098.276349",
          "thread_ts": "1654731053.912219",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HX9ZTNQ7"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "MmJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Juan, I'm sorry to hear that you are having issues. Could you file a feature request using Feedback Assistant detailing the specific things that you feel Vim support in Xcode is missing?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "DCE06BE7-35F5-4176-92B4-CCCB97C10423",
          "type": "message",
          "user": "U03HX9ZTNQ7",
          "text": "OK, I'll do it. Thanks for the quick answer.",
          "ts": "1654731149.222639",
          "thread_ts": "1654731053.912219",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xOZY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "OK,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I'll"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "do"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Thanks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "quick"
                    },
                    {
                      "type": "text",
                      "text": " a"
                    },
                    {
                      "type": "text",
                      "text": "nswer."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRNYGBNC\u003e asked\n\u0026gt; Is it normal to see multiple \"Resolve Packages\" tasks in the Report navigator when opening a project with lots of SPM dependencies? If so, why?",
      "ts": "1654731053.963199",
      "thread_ts": "1654731053.963199",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654731282.582849",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "/U24D",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRNYGBNC"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is it normal to see multiple \\\"Resolve Packages\\\" tasks in the Report navigator when opening a project with lots of SPM dependencies? If so, why?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "95e5813b-feb3-4d75-aa7a-083a86876c41",
          "type": "message",
          "user": "U03HES8111T",
          "text": "This is not normally expected.  Are you seeing any warnings or other messages in the previous Package Resolution logs?\n\nIt is also possible that something is causing a change to the files in the package that is triggering second package resolution after the first one completes.\n\nWould you mind filing a bug report at \u003chttp://feedbackassistant.apple.com|feedbackassistant.apple.com\u003e with as much information as you can provide from the package resolution log?",
          "ts": "1654731076.255349",
          "thread_ts": "1654731053.963199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7WT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is not normally expected.  Are you seeing any warnings or other messages in the previous Package Resolution logs?\n\nIt is also possible that something is causing a change to the files in the package that is triggering second package resolution after the first one completes.\n\nWould you mind filing a bug report at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "feedbackassistant.apple.com"
                    },
                    {
                      "type": "text",
                      "text": " with as much information as you can provide from the package resolution log?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a23fc655-caa8-4875-9924-3a5ce5de183b",
          "type": "message",
          "user": "U03JRNYGBNC",
          "text": "usually we don't see any issues when this happens, though occasionally authentication fails to a git repo with private dependencies",
          "ts": "1654731153.141539",
          "thread_ts": "1654731053.963199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "HDh=K",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "usually we don't see any issues when this happens, though occasionally authentication fails to a git repo with private dependencies"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8f175f2f-7f3d-4750-8550-9dde0fa0d71e",
          "type": "message",
          "user": "U03JRNYGBNC",
          "text": "i'll file a feedback though, yes",
          "ts": "1654731162.413799",
          "thread_ts": "1654731053.963199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RlVk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "i'll file a feedback though, yes"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7dc03252-fc9b-42a5-95c6-ba939c763eac",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "In my case, this is triggered when opening a Swift package directly, having DerivedData folder set to be placed relatively, that means, inside the package folder. :boom: Just to put another reproduction way here. :ok_hand:",
          "ts": "1654731205.457299",
          "thread_ts": "1654731053.963199",
          "edited": {
            "user": "U03JPFQNX5K",
            "ts": "1654731276.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "omSA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In my case, this is triggered when opening a Swift package directly, having DerivedData folder set to be placed relatively, that means, inside the package folder. "
                    },
                    {
                      "type": "emoji",
                      "name": "boom",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " Just to put another reproduction way here. "
                    },
                    {
                      "type": "emoji",
                      "name": "ok_hand",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5eb4c06e-30ab-40f4-8069-adbecf95de7e",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Thank you for the additional information.  I think a bug report with as much information as you can share would be helpful.  The part about the DerivedData folder is particularly interesting, and would suggest that it's the creation of intermediate package resolution files that's causing the reresolve.",
          "ts": "1654731253.364349",
          "thread_ts": "1654731053.963199",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JRNYGBNC"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mvIi/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for the additional information.  I think a bug report with as much information as you can share would be helpful.  The part about the DerivedData folder is particularly interesting, and would suggest that it's the creation of intermediate package resolution files that's causing the reresolve."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0197c4cd-bcbb-41e1-ba5d-6b0d7df2a36c",
          "type": "message",
          "user": "U03HES8111T",
          "text": "There is provision for avoiding such a feedback loop, but it definitely sounds as if there is a bug here.",
          "ts": "1654731282.582849",
          "thread_ts": "1654731053.963199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZhC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There is provision for avoiding such a feedback loop, but it definitely sounds as if there is a bug here."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J1TY2PGT\u003e asked\n\u0026gt; Whats the recommended way to package up internal dependencies (ex: model-layer code, etc) in Xcode? Is it SPM or Frameworks?",
      "ts": "1654731107.404609",
      "thread_ts": "1654731107.404609",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654732899.570899",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "PAXNV",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J1TY2PGT"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Whats the recommended way to package up internal dependencies (ex: model-layer code, etc) in Xcode? Is it SPM or Frameworks?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "04719e05-ca36-41f3-b8cd-59e5f8fb277d",
          "type": "message",
          "user": "U03J7H5DD2L",
          "text": "The answer to this will depend on your team and your needs. Packages will make it easier to break your dependencies up into smaller chunks, store them in separate repos, and version them independently — but frameworks will give you things like advanced project customisation and Objective-C interoperability.",
          "ts": "1654731122.980319",
          "thread_ts": "1654731107.404609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "3SH5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The answer to this will depend on your team and your needs. Packages will make it easier to break your dependencies up into smaller chunks, store them in separate repos, and version them independently — but frameworks will give you things like advanced project customisation and Objective-C interoperability."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6f2adecf-b733-4212-9349-b9b1d6ec25e5",
          "type": "message",
          "user": "U03JK060ZNZ",
          "text": "Adding to this thread: if our framework uses Objective-C code, and users of the framework (customers) are asking us for a Swift package, can we give them what they want by bundling the framework as a binary wrapped in a Swift package?",
          "ts": "1654731540.702389",
          "thread_ts": "1654731107.404609",
          "edited": {
            "user": "U03JK060ZNZ",
            "ts": "1654731549.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "thinking_face",
              "count": 1,
              "users": [
                "U03J7H5DD2L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ldg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Adding to this thread: if our framework uses Objective-C code, and users of the framework (customers) are asking us for a Swift package, can we give them what they want by bundling the framework as a binary wrapped in a Swift package?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d62b4a46-aca4-4d22-b823-1df2673907b2",
          "type": "message",
          "user": "U03JK060ZNZ",
          "text": "Reposted my question in its own thread in case this thread is marked as already answered… apparently cannot delete here.",
          "ts": "1654732262.789129",
          "thread_ts": "1654731107.404609",
          "edited": {
            "user": "U03JK060ZNZ",
            "ts": "1654732294.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rTI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Reposted my question in its own thread in case this thread is marked as already answered… apparently cannot delete here."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2d4f04db-cf6e-4d04-838b-2e279c304d46",
          "type": "message",
          "user": "U03J7H5DD2L",
          "text": "No worries — that will definitely get more eyeballs on your question!",
          "ts": "1654732307.493459",
          "thread_ts": "1654731107.404609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RmBPa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "No worries — that will definitely get more eyeballs on your question!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "be2d9069-5e3a-4435-b960-76311b8890fe",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "\u003c@U03JK060ZNZ\u003e not sure if your reposted question got answered in the end, so just coming back here to comment: I was really surprised to discover a while back that you can actually vend a mixture of Swift and Objective-C code in a single Swift Package. If the situation hasn’t changed, each _target_ within the Package can only be Swift or Objective-C. But you can put your Objective-C classes in a single target, and make that an internal dependency of your Swift library. So all up, the point is you don’t have to bundle it as a binary if you don’t want to, in order to give your customers the Swift package.\n\nMaybe this isn’t what you were asking… but just in case it was.\n\nMy use case was because I needed to include a helper class in Objective-C to call an iOS API that currently cannot be called from Swift, only from Objective-C. (Weird.)",
          "ts": "1654732899.570899",
          "thread_ts": "1654731107.404609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "SH1X",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03JK060ZNZ"
                    },
                    {
                      "type": "text",
                      "text": " not sure if your reposted question got answered in the end, so just coming back here to comment: I was really surprised to discover a while back that you can actually vend a mixture of Swift and Objective-C code in a single Swift Package. If the situation hasn’t changed, each "
                    },
                    {
                      "type": "text",
                      "text": "target",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " within the Package can only be Swift or Objective-C. But you can put your Objective-C classes in a single target, and make that an internal dependency of your Swift library. So all up, the point is you don’t have to bundle it as a binary if you don’t want to, in order to give your customers the Swift package.\n\nMaybe this isn’t what you were asking… but just in case it was.\n\nMy use case was because I needed to include a helper class in Objective-C to call an iOS API that currently cannot be called from Swift, only from Objective-C. (Weird.)"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KH907MME\u003e asked\n\u0026gt; We've got an app that's split up into many frameworks. There's a single project that contains all the targets. I've seen examples of apps that make multiple single-target projects in a workspace. Other than organization, is there any difference between those two approaches or are they functionally the same.",
      "ts": "1654731178.782519",
      "thread_ts": "1654731178.782519",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654731197.593289",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "eBN=V",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KH907MME"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We've got an app that's split up into many frameworks. There's a single project that contains all the targets. I've seen examples of apps that make multiple single-target projects in a workspace. Other than organization, is there any difference between those two approaches or are they functionally the same.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "e4eac0f1-a1b3-42b0-a8ae-11830b7a1fc5",
          "type": "message",
          "user": "U03H36RCYJK",
          "text": "The two arrangements support the same features. If you'd like to open subsets of the projects without seeing all of the sources, you might prefer the organization with multiple project files.\n\nFor example, if you later have two top level apps that use different subsets of the targets, they can each have a more focused workspace with the many projects approach.",
          "ts": "1654731197.593289",
          "thread_ts": "1654731178.782519",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JEEUJPMJ",
                "U03HZ6C9S21"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/jTb/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The two arrangements support the same features. If you'd like to open subsets of the projects without seeing all of the sources, you might prefer the organization with multiple project files.\n\nFor example, if you later have two top level apps that use different subsets of the targets, they can each have a more focused workspace with the many projects approach."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JQ7PU1L1\u003e asked\n\u0026gt; I keep getting \"Could not resolve package dependencies error\" for Xcode Cloud last 2 days. I am pretty sure I have Package.resolved checked in to the repo. anything I can do to resolve this issue? everything build fine on my Xcode",
      "ts": "1654731550.096059",
      "thread_ts": "1654731550.096059",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654732640.945749",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "KTGLl",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JQ7PU1L1"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I keep getting \\\"Could not resolve package dependencies error\\\" for Xcode Cloud last 2 days. I am pretty sure I have Package.resolved checked in to the repo. anything I can do to resolve this issue? everything build fine on my Xcode\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "dafeea54-194d-4391-be51-bcdb3b30746c",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "If you take the xcodebuild command from the Resolve package dependencies step of your Xcode Cloud logs and add the option -IDEPackageOnlyUseVersionsFromResolvedFile=YES, can you reproduce the issue locally?",
          "ts": "1654731561.712809",
          "thread_ts": "1654731550.096059",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0gb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you take the xcodebuild command from the Resolve package dependencies step of your Xcode Cloud logs and add the option -IDEPackageOnlyUseVersionsFromResolvedFile=YES, can you reproduce the issue locally?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "26a5d41b-3e81-4c17-b756-b616f2f69ac4",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "Alternatively, feel free to submit a bug report at \u003chttps://feedbackassistant.apple.com\u003e",
          "ts": "1654732554.268549",
          "thread_ts": "1654731550.096059",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XOF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Alternatively, feel free to submit a bug report at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "99874cc2-de3f-49b8-890e-463bded0d37b",
          "type": "message",
          "user": "U03JQ7PU1L1",
          "text": "I got a provision error when running locally saying provision  doesn't include the currently selected device",
          "ts": "1654732640.945749",
          "thread_ts": "1654731550.096059",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "WE+qs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I got a provision error when running locally saying provision  doesn't include the currently selected device"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JK060ZNZ\u003e asked\n\u0026gt; Monterey does not allow Xcode 12.x to run. Is it safe to assume that like 12, no prior versions of Xcode before 12 run on Monterey?",
      "ts": "1654731986.116039",
      "thread_ts": "1654731986.116039",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654731996.994569",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "rzW",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JK060ZNZ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Monterey does not allow Xcode 12.x to run. Is it safe to assume that like 12, no prior versions of Xcode before 12 run on Monterey?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "da1a3512-606e-42f2-b6b0-3dee1213dcb4",
          "type": "message",
          "user": "U03HHPY6YQ2",
          "text": "Yes, I believe that is correct",
          "ts": "1654731996.994569",
          "thread_ts": "1654731986.116039",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03J7H5DD2L",
                "U03JK060ZNZ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8aN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, I believe that is correct"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ4PT2ER\u003e asked\n\u0026gt; Why do we keep getting code signing warning when validating a project in Xcode, if we have the settings applied at the project (not target) level?",
      "ts": "1654732071.338959",
      "thread_ts": "1654732071.338959",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654732599.655479",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "iWRw",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ4PT2ER"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Why do we keep getting code signing warning when validating a project in Xcode, if we have the settings applied at the project (not target) level?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ab4451ab-7b16-4731-9201-713af90ea4d9",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "This is most likely a bug. Could you file a bug report about this and provide the ID number to me?",
          "ts": "1654732099.454549",
          "thread_ts": "1654732071.338959",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "v=A7",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is most likely a bug. Could you file a bug report about this and provide the ID number to me?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "35bc4a20-4aec-4f34-8e2d-301bfe3cfbfe",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "\u003c@U03HB5P2UTY\u003e FB10116268",
          "ts": "1654732438.646709",
          "thread_ts": "1654732071.338959",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JBh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HB5P2UTY"
                    },
                    {
                      "type": "text",
                      "text": " FB10116268"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a7542917-9b51-4e9d-9f49-8dae5c1ad579",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Thank you, we'll take a look. From your description, it sounds like an Xcode bug and not a project configuration issue.",
          "ts": "1654732599.655479",
          "thread_ts": "1654732071.338959",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "M4YSt",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you, we'll take a look. From your description, it sounds like an Xcode bug and not a project configuration issue."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JSFUKL2U\u003e asked\n\u0026gt; Are planning to add support “Signing and Run locally” to iOS targets?",
      "ts": "1654732417.362029",
      "thread_ts": "1654732417.362029",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654732793.861249",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Qgsu",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JSFUKL2U"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Are planning to add support \\u201cSigning and Run locally\\u201d to iOS targets?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "477f7f0c-5484-40a7-b9b4-03469c20b951",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "iOS requires apps to be signed with a trusted certificate in order to install and run.",
          "ts": "1654732429.086019",
          "thread_ts": "1654732417.362029",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pIE4a",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "iOS requires apps to be signed with a trusted certificate in order to install and run."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6FC84F51-BE83-4B29-8044-1EEFA93C96FA",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Ok, mac can run app without trusted cert? what about generating one day cert? Or it's more complicated than I thought?",
          "ts": "1654732559.800889",
          "thread_ts": "1654732417.362029",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cQ+Jw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "mac"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "can"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "run"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "app"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "without"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "trusted"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "cert?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "what"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "about"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "generating"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "one"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "day"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "cert?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Or"
                    },
                    {
                      "type": "text",
                      "text": " it's "
                    },
                    {
                      "type": "text",
                      "text": "more"
                    },
                    {
                      "type": "text",
                      "text": " complicated "
                    },
                    {
                      "type": "text",
                      "text": "than"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " thought"
                    },
                    {
                      "type": "text",
                      "text": "?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ac02986d-4073-4c8b-8b34-943686e1b56b",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "The macOS runtime environment differs substantially from iOS. However, if this is something that would benefit your work we'd welcome a feedback report with more details.",
          "ts": "1654732793.861249",
          "thread_ts": "1654732417.362029",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "open_mouth",
              "count": 1,
              "users": [
                "U03JSFUKL2U"
              ]
            },
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JSFUKL2U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YJs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The macOS runtime environment differs substantially from iOS. However, if this is something that would benefit your work we'd welcome a feedback report with more details."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JEMN82JV\u003e asked\n\u0026gt; The new primary associated types are really cool. I immediately tried it with `Publisher` eg: `some Publisher\u0026lt;String, Never\u0026gt;` but found this protocol does not support this.\n\u0026gt; I've read SE-0358 but I'm still not clear on why this protocol shouldn't or couldn't use this new feature?",
      "ts": "1654732418.522609",
      "thread_ts": "1654732418.522609",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654732602.820449",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "jHv0",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JEMN82JV"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"The new primary associated types are really cool. I immediately tried it with `Publisher` eg: `some Publisher\u003cString, Never\u003e` but found this protocol does not support this.\\nI've read SE-0358 but I'm still not clear on why this protocol shouldn't or couldn't use this new feature?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "cb184a4c-a402-42cd-8a29-d6757428d4c1",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "Thanks for your interest in using Combine with primary associated types. We share your excitement, and think this would be a great direction forward. Please file feedback at \u003chttps://feedbackassistant.apple.com\u003e against Combine to add this as an enhancement.",
          "ts": "1654732439.061179",
          "thread_ts": "1654732418.522609",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "satellite_antenna",
              "count": 2,
              "users": [
                "U03JEMN82JV",
                "U03J4BXLW04"
              ]
            },
            {
              "name": "white_check_mark",
              "count": 1,
              "users": [
                "U03JEMN82JV"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OKT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for your interest in using Combine with primary associated types. We share your excitement, and think this would be a great direction forward. Please file feedback at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " against Combine to add this as an enhancement."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "524dee7f-12d4-4ea6-a694-5dd34e74e906",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "To answer your question, there is nothing stopping Combine from adopting this feature. You can even try it out yourself if you want to by defining your own protocol that refines Publisher and making combines existing publisher types conform to it.\n\n```protocol _Publisher\u0026lt;Output, Failure\u0026gt;: Combine.Publisher {\n  associatedtype Output\n  associatedtype Failure\n}\n\nextension Just: _Publisher {}\n/* etc */```\nIt's a bit tedious but each conformance should take no code outside of the extension.",
          "ts": "1654732602.820449",
          "thread_ts": "1654732418.522609",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 2,
              "users": [
                "U03JEMN82JV",
                "U03K840U3L1"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XSl=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "To answer your question, there is nothing stopping Combine from adopting this feature. You can even try it out yourself if you want to by defining your own protocol that refines Publisher and making combines existing publisher types conform to it.\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"protocol _Publisher\u003cOutput, Failure\u003e: Combine.Publisher {\\n  associatedtype Output\\n  associatedtype Failure\\n}\\n\\nextension Just: _Publisher {}\\n\\/* etc *\\/\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It's a bit tedious but each conformance should take no code outside of the extension."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "a399f656-304a-48d0-b215-e016ca6d266a",
      "type": "message",
      "user": "U03HHPD1ZRR",
      "text": "Our time for the *Xcode Open Hours* is wrapping up - thanks for coming!\n\nWe got lots of questions and may not have been able to answer all of them. If your question didn't get answered, you can check to see if there are \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/|other Developer Tools Sessions, Labs, or Lounges\u003e that might be better suited to your questions. For topics not covered there, you can also post your questions in the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e.",
      "ts": "1654732503.493159",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "globe_with_meridians",
          "count": 1,
          "users": [
            "U03J7H5DD2L"
          ]
        },
        {
          "name": "pray",
          "count": 2,
          "users": [
            "U03HVD5Q8DC",
            "U03JGEZM5K5"
          ]
        },
        {
          "name": "disappointed_relieved",
          "count": 2,
          "users": [
            "U03JPFQNX5K",
            "U03J3C5NMCN"
          ]
        },
        {
          "name": "raised_hands",
          "count": 3,
          "users": [
            "U03JGH0JLMQ",
            "U03JGEZM5K5",
            "U03JCE12091"
          ]
        },
        {
          "name": "heart",
          "count": 5,
          "users": [
            "U03JKEJ91S8",
            "U03JGEZM5K5",
            "U03JHQ4K125",
            "U03J22AU6DQ",
            "U03KN61JEHW"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "mZHD",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Our time for the "
                },
                {
                  "type": "text",
                  "text": "Xcode Open Hours",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " is wrapping up - thanks for coming!\n\nWe got lots of questions and may not have been able to answer all of them. If your question didn't get answered, you can check to see if there are "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
                  "text": "other Developer Tools Sessions, Labs, or Lounges"
                },
                {
                  "type": "text",
                  "text": " that might be better suited to your questions. For topics not covered there, you can also post your questions in the "
                },
                {
                  "type": "link",
                  "url": "http://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JK060ZNZ\u003e asked\n\u0026gt; If our framework uses Objective-C code, and users of the framework (customers) are asking us for a Swift package, can we give them what they want by bundling the framework as a binary wrapped in a Swift package?",
      "ts": "1654732821.822249",
      "thread_ts": "1654732821.822249",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654732831.192799",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Mk4",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JK060ZNZ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"If our framework uses Objective-C code, and users of the framework (customers) are asking us for a Swift package, can we give them what they want by bundling the framework as a binary wrapped in a Swift package?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6d22944c-2d8b-4167-a59b-324e80013cba",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Swift Packages can contain targets that are comprised of C or Objective-C code and that are compiled with the Clang compiler.  If the Objective-C target has modularized headers and does not require special compiler options that are not supported by Swift Package, then a good solution would be to build the library as a Swift Package with an Objective-C target.",
          "ts": "1654732831.192799",
          "thread_ts": "1654732821.822249",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JK060ZNZ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6Gzd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Swift Packages can contain targets that are comprised of C or Objective-C code and that are compiled with the Clang compiler.  If the Objective-C target has modularized headers and does not require special compiler options that are not supported by Swift Package, then a good solution would be to build the library as a Swift Package with an Objective-C target."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "c8d0cdc8-b6c5-482a-b1e7-6c57b3a3017c",
      "type": "message",
      "user": "U03HL553PNG",
      "text": "That's also a wrap for today.  Tomorrow's schedule looks like:\n• 9am to 11am - Xcode Cloud and Testing\n• 11am to 1pm - Performance, power, and stability\n• 1pm to 3pm - Debugging Swift debugging with LLDB\n• 3pm to 5pm - Foundation Q\u0026amp;A\nWe're also going to try something different for our friends outside of the US... we're going to leave the :workflowbolt: enabled so you can go ahead and submit your questions for any of those lounge topics tomorrow.  We're all going to sign off for the night here in Cupertino but we'll answer your questions throughout the day tomorrow so you can check back when you wake up!",
      "ts": "1654733088.325009",
      "thread_ts": "1654733088.325009",
      "reply_count": 2,
      "latest_reply": "1654767555.468439",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 16,
          "users": [
            "U03JPFQNX5K",
            "U03JQ7PU1L1",
            "U03HB5MM11U",
            "U03JKEJ91S8",
            "U03JGEZM5K5",
            "U03HWEGHRKR",
            "U03J1UBVC2X",
            "U03J4C1RWMA",
            "U03JRQAFUKA",
            "U03J4CT515Y",
            "U03HWQNU65D",
            "U03J4BXLW04",
            "U03JLTMSAV7",
            "U03JUAFFZ50",
            "U03HMCK2UB1",
            "U03K2493RM2"
          ]
        },
        {
          "name": "watch",
          "count": 5,
          "users": [
            "U03J7H4LJ5N",
            "U03JPFQNX5K",
            "U03J1UBVC2X",
            "U03JRQAFUKA",
            "U03HWQNU65D"
          ]
        },
        {
          "name": "heart",
          "count": 7,
          "users": [
            "U03DF5L7S30",
            "U03JGEZM5K5",
            "U03JEMN82JV",
            "U03J1UBVC2X",
            "U03JRQAFUKA",
            "U03JHQ4K125",
            "U03J22AU6DQ"
          ]
        },
        {
          "name": "raised_hands::skin-tone-3",
          "count": 1,
          "users": [
            "U03J4D1FEP6"
          ]
        },
        {
          "name": "workflowbolt",
          "count": 5,
          "users": [
            "U03JEMN82JV",
            "U03HWEGHRKR",
            "U03J1UBVC2X",
            "U03JRQAFUKA",
            "U03JJUG3BQ9"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "4L4",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "That's also a wrap for today.  Tomorrow's schedule looks like:\n"
                }
              ]
            },
            {
              "Type": "rich_text_list",
              "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"9am to 11am - Xcode Cloud and Testing\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"11am to 1pm - Performance, power, and stability\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"1pm to 3pm - Debugging Swift debugging with LLDB\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"3pm to 5pm - Foundation Q\u0026A\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
            },
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "\nWe're also going to try something different for our friends outside of the US... we're going to leave the "
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " enabled so you can go ahead and submit your questions for any of those lounge topics tomorrow.  We're all going to sign off for the night here in Cupertino but we'll answer your questions throughout the day tomorrow so you can check back when you wake up!"
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "7a4206a7-d203-4588-9dc0-8b26ed237275",
          "type": "message",
          "user": "U03JJUG3BQ9",
          "text": ":workflowbolt: ~When debugging Swift, is there anything I could do to fix the following error:\n\n`error: virtual filesystem overlay file` ‘…/iOS-ReferenceData/DerivedData/Build/Intermediates.noindex/ArchiveIntermediates/ReferenceData/IntermediateBuildFilesPath/ReferenceData.build/Release-iphonesimulator/ReferenceData.build/all-product-headers.yaml’ not found.\nerror: couldn’t IRGen expression. Please check the above error messages for possible root causes.~",
          "ts": "1654765970.918209",
          "thread_ts": "1654733088.325009",
          "edited": {
            "user": "U03JJUG3BQ9",
            "ts": "1654766043.000000"
          },
          "parent_user_id": "U03HL553PNG",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2yD",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "emoji",
                      "name": "workflowbolt",
                      "skin_tone": 0,
                      "style": {
                        "strike": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " When debugging Swift, is there anything I could do to fix the following error:\n\n",
                      "style": {
                        "strike": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "error: virtual filesystem overlay file",
                      "style": {
                        "strike": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " ‘…/iOS-ReferenceData/DerivedData/Build/Intermediates.noindex/ArchiveIntermediates/ReferenceData/IntermediateBuildFilesPath/ReferenceData.build/Release-iphonesimulator/ReferenceData.build/all-product-headers.yaml’ not found.\nerror: couldn’t IRGen expression. Please check the above error messages for possible root causes.",
                      "style": {
                        "strike": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3247ee9d-7b06-43ae-975a-28daa60af638",
          "type": "message",
          "user": "U03JLTMSAV7",
          "text": "Thank you for leaving the questions open. It is very kind and respectful for us in Europe. I’m now going through the backlog, lots of great stuff. Also great to be able to post questions even outside “working hours”.",
          "ts": "1654767555.468439",
          "thread_ts": "1654733088.325009",
          "parent_user_id": "U03HL553PNG",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 2,
              "users": [
                "U03J4DWQLPN",
                "U03JJUG3BQ9"
              ]
            },
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03HL553PNG"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6jRN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for leaving the questions open. It is very kind and respectful for us in Europe. I’m now going through the backlog, lots of great stuff. Also great to be able to post questions even outside “working hours”."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "user": "U03HL553PNG",
      "text": "set the channel topic: :zzz:  Our team in Cupertino is offline now. Submit your questions using the :workflowbolt: button and we'll get back to you Thurs.",
      "ts": "1654733249.314219",
      "subtype": "channel_topic",
      "topic": ":zzz:  Our team in Cupertino is offline now. Submit your questions using the :workflowbolt: button and we'll get back to you Thurs.",
      "replace_original": false,
      "delete_original": false,
      "blocks": null
    },
    {
      "type": "message",
      "user": "U03HL553PNG",
      "text": "set the channel topic: Q\u0026amp;A: Xcode Cloud and Testing",
      "ts": "1654790413.602379",
      "subtype": "channel_topic",
      "topic": "Q\u0026amp;A: Xcode Cloud and Testing",
      "replace_original": false,
      "delete_original": false,
      "blocks": null
    },
    {
      "client_msg_id": "83b183da-08d9-4044-a077-97be71adfb90",
      "type": "message",
      "user": "U03HESC47EZ",
      "text": "Hi! We're ready to start the _*Xcode Cloud and Testing*_ Q\u0026amp;A. We have a number of engineers here that work on Xcode Cloud and testing in Xcode to answer your questions. Submit your questions with the :workflowbolt: button below. We will review your questions and then post them here for everyone to see.\nWe might not be able to get to all of your questions but we'll do our best. As a reminder, please keep the content professional and within our code of conduct.\nIf you have questions on other topics, you can check to see if there are \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/|other Developer Tools Sessions, Labs, or Lounges\u003e that might be better suited to your questions. For topics not covered there, you can also post your questions in the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e.",
      "ts": "1654790494.697669",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "tada",
          "count": 5,
          "users": [
            "U03DF5L7S30",
            "U03HWD8GE3B",
            "U03H36UADV5",
            "U03H36UBPPH",
            "U03HPFD1GG7"
          ]
        },
        {
          "name": "cloud",
          "count": 1,
          "users": [
            "U03K1SMSPUZ"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "U5BBh",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hi! We're ready to start the "
                },
                {
                  "type": "text",
                  "text": "Xcode Cloud and Testing",
                  "style": {
                    "bold": true,
                    "italic": true
                  }
                },
                {
                  "type": "text",
                  "text": " Q\u0026A. We have a number of engineers here that work on Xcode Cloud and testing in Xcode to answer your questions. Submit your questions with the "
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " button below. We will review your questions and then post them here for everyone to see.\nWe might not be able to get to all of your questions but we'll do our best. As a reminder, please keep the content professional and within our code of conduct.\nIf you have questions on other topics, you can check to see if there are "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
                  "text": "other Developer Tools Sessions, Labs, or Lounges"
                },
                {
                  "type": "text",
                  "text": " that might be better suited to your questions. For topics not covered there, you can also post your questions in the "
                },
                {
                  "type": "link",
                  "url": "http://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JWUYKJLS\u003e asked\n\u0026gt; We’re building a location tracking app that collects user locations in background and periodically sends them to our backend for further processing. It’s important for us that the app is as power efficient as possible. Which means 1. optimizing location data collecting 2. network usage optimization (choosing the right network protocol/time intervals and so on). \n\u0026gt; \n\u0026gt; The question is what’s the best way to test different location/network settings for power consumption? Is there a way to measure device power consumption in mA or watts?\n\u0026gt; \n\u0026gt; We tried using xCode’s energy impact gauge, but it doesn’t give enough precision to distinguish between different CLLocationManager settings. We also tried running tests on a physical device and see what battery drainage per hour is. But it’s terribly inefficient and the results are not as precise as we would like them to be. ",
      "ts": "1654790924.176119",
      "thread_ts": "1654790924.176119",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654802874.548849",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Fpkvj",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JWUYKJLS"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We\\u2019re building a location tracking app that collects user locations in background and periodically sends them to our backend for further processing. It\\u2019s important for us that the app is as power efficient as possible. Which means 1. optimizing location data collecting 2. network usage optimization (choosing the right network protocol\\/time intervals and so on). \\n\\nThe question is what\\u2019s the best way to test different location\\/network settings for power consumption? Is there a way to measure device power consumption in mA or watts?\\n\\nWe tried using xCode\\u2019s energy impact gauge, but it doesn\\u2019t give enough precision to distinguish between different CLLocationManager settings. We also tried running tests on a physical device and see what battery drainage per hour is. But it\\u2019s terribly inefficient and the results are not as precise as we would like them to be. \"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "e773908a-c450-41ad-856a-d51735ed23f2",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "Hi Mykyta! I'd recommend that you ask this question in the \"Performance, power, and stability lab\" tomorrow, as the folks there should have some good recommendations for your use cases. I'd also recommend checking out the WWDC19 session \"Designing for Adverse Network and Temperature Conditions\". As that session will explain, it's possible to use Xcode to simulate adverse network conditions, which may be useful in this case.",
          "ts": "1654791032.368569",
          "thread_ts": "1654790924.176119",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JWUYKJLS"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZvH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Mykyta! I'd recommend that you ask this question in the \"Performance, power, and stability lab\" tomorrow, as the folks there should have some good recommendations for your use cases. I'd also recommend checking out the WWDC19 session \"Designing for Adverse Network and Temperature Conditions\". As that session will explain, it's possible to use Xcode to simulate adverse network conditions, which may be useful in this case."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "50abc528-63f7-4ada-842c-ca6d142736aa",
          "type": "message",
          "user": "U03J01RLBBR",
          "text": "\u003c@U03JWUYKJLS\u003e I’d also be interested in what you are able to find out from the Performance, Power and Stability lab as these are important things we are attempting to inspect and evaluate as well.",
          "ts": "1654793785.007409",
          "thread_ts": "1654790924.176119",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "b83",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03JWUYKJLS"
                    },
                    {
                      "type": "text",
                      "text": " I’d also be interested in what you are able to find out from the Performance, Power and Stability lab as these are important things we are attempting to inspect and evaluate as well."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0551a5ac-655a-43ec-a902-ffd7a988db3f",
          "type": "message",
          "user": "U03HL5AMFCL",
          "text": "Instruments has a Location Energy Model tool in the library that you can use to track your CoreLocation precision usage over time. This is helpful because as you point out, the best way to manage the power usage from your code is with the location manager settings.\n\nMeasuring actual power drain is much more complicated, as there are a myriad of factors — device model, network conditions, other device services, temperature, etc. and it's hard to measure precisely in live debugging conditions or predict/extrapolate to what users will experience when they're out and about in different conditions. MetricKit can help with the aggregate statistics though to show you usage trends over time,",
          "ts": "1654802874.548849",
          "thread_ts": "1654790924.176119",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JWUYKJLS",
                "U03KLAFUK3J"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cm5un",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Instruments has a Location Energy Model tool in the library that you can use to track your CoreLocation precision usage over time. This is helpful because as you point out, the best way to manage the power usage from your code is with the location manager settings.\n\nMeasuring actual power drain is much more complicated, as there are a myriad of factors — device model, network conditions, other device services, temperature, etc. and it's hard to measure precisely in live debugging conditions or predict/extrapolate to what users will experience when they're out and about in different conditions. MetricKit can help with the aggregate statistics though to show you usage trends over time,"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JQ7PU1L1\u003e asked\n\u0026gt; When managing workflow for Xcode Cloud the scheme I selected have a yellow exclamation mark saying \"The scheme may only exist locally\". I am pretty sure this scheme have shared checked and the xcsharedata folder is in the repo. I am wondering is because of the having this exclamation mark my xcode cloud build always failed with message \"An internal error has occurred. This operation will be retried on another build worker\"",
      "ts": "1654791252.385299",
      "thread_ts": "1654791252.385299",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654792012.571709",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "V9hi",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JQ7PU1L1"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"When managing workflow for Xcode Cloud the scheme I selected have a yellow exclamation mark saying \\\"The scheme may only exist locally\\\". I am pretty sure this scheme have shared checked and the xcsharedata folder is in the repo. I am wondering is because of the having this exclamation mark my xcode cloud build always failed with message \\\"An internal error has occurred. This operation will be retried on another build worker\\\"\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "48d41d7e-f255-421e-b180-b6eee60224f8",
          "type": "message",
          "user": "U03J7H8QABS",
          "text": "The warning that “the scheme may only exist locally” shows up if you configure a workflow with a scheme that Xcode Cloud has never seen in a cloud build. Every time we run a build we record what public schemes were in your project. If you add a new scheme in a commit, Xcode on your machine knows about it but our servers don’t. You can go ahead and change the workflow anyways, it’s just warning you that builds might fail on branches that don’t have the scheme.\n\nAs for the “an internal error occurred message,” please file a feedback with a link to the build. It might be the cause of the warning, if there’s a failure before we record the schemes.",
          "ts": "1654791263.684189",
          "thread_ts": "1654791252.385299",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "yC=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The warning that “the scheme may only exist locally” shows up if you configure a workflow with a scheme that Xcode Cloud has never seen in a cloud build. Every time we run a build we record what public schemes were in your project. If you add a new scheme in a commit, Xcode on your machine knows about it but our servers don’t. You can go ahead and change the workflow anyways, it’s just warning you that builds might fail on branches that don’t have the scheme.\n\nAs for the “an internal error occurred message,” please file a feedback with a link to the build. It might be the cause of the warning, if there’s a failure before we record the schemes."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "99ad9c63-8364-401c-9671-0a626b59f7ab",
          "type": "message",
          "user": "U03JQ7PU1L1",
          "text": "Now I keep getting \"Could not resolve package dependencies\" error. executing the same command in local is fine",
          "ts": "1654791368.877659",
          "thread_ts": "1654791252.385299",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cGa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Now I keep getting \"Could not resolve package dependencies\" error. executing the same command in local is fine"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "be694462-192d-4bd1-803c-01e4f6f2d6e5",
          "type": "message",
          "user": "U03JQ7PU1L1",
          "text": "I added -IDEPackageOnlyUseVersionsFromResolvedFile=YES suggested by Boris yesterday to run it locally and is running fine as well",
          "ts": "1654791441.261689",
          "thread_ts": "1654791252.385299",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/zhf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I added -IDEPackageOnlyUseVersionsFromResolvedFile=YES suggested by Boris yesterday to run it locally and is running fine as well"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "17ad721e-4917-40a3-9548-78c631fc90c0",
          "type": "message",
          "user": "U03J7H8QABS",
          "text": "The most common cause of package dependency issues is if Xcode Cloud can't access the package.resolved file in your repo, see\n\u003chttps://developer.apple.com/documentation/xcode/making-dependencies-available-to-xcode-cloud#Use-Swift-package-dependencies-and-Git-submodules\u003e\nIf that command is working locally, it means the file is available locally, but make sure it's checked in as well.",
          "ts": "1654791560.942269",
          "thread_ts": "1654791252.385299",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dwcgE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The most common cause of package dependency issues is if Xcode Cloud can't access the package.resolved file in your repo, see\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/making-dependencies-available-to-xcode-cloud#Use-Swift-package-dependencies-and-Git-submodules",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\nIf that command is working locally, it means the file is available locally, but make sure it's checked in as well."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "705b3597-5c78-4b5e-8297-03d4e5b77916",
          "type": "message",
          "user": "U03JQ7PU1L1",
          "text": "Yes, I am 100% sure it's checked in.",
          "ts": "1654791627.506599",
          "thread_ts": "1654791252.385299",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cUqh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, I am 100% sure it's checked in."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5b07cfc1-7726-4824-afda-0f48420c518e",
          "type": "message",
          "user": "U03JQ7PU1L1",
          "text": "Okay I just double check I think it didn't get checked in. Thanks for the help",
          "ts": "1654791993.523469",
          "thread_ts": "1654791252.385299",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bnKtO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Okay I just double check I think it didn't get checked in. Thanks for the help"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4f626172-59f4-4928-ba6d-7ded6333ab49",
          "type": "message",
          "user": "U03J7H8QABS",
          "text": "Glad that helped!",
          "ts": "1654792012.571709",
          "thread_ts": "1654791252.385299",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TgcpZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Glad that helped!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JKEKF1TP\u003e asked\n\u0026gt; I'm interested in introducing Xcode Cloud for a public sector project. Any suggested pathways towards having it approved for government use? Or insight into FISMA rating?",
      "ts": "1654791472.158699",
      "thread_ts": "1654791472.158699",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654791661.888469",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "maK7",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JKEKF1TP"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I'm interested in introducing Xcode Cloud for a public sector project. Any suggested pathways towards having it approved for government use? Or insight into FISMA rating?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "eaaf2cca-0bb4-4e2c-b4a7-e05e9afdc4b7",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Hi Clint!  We're all engineers here and this is more of a question for WWDR or possibly our Legal team.  Can you reach out through \u003chttp://developer.apple.com/contact|developer.apple.com/contact\u003e and ask your question there?  We'll try to find the right answer for you there.",
          "ts": "1654791478.996409",
          "thread_ts": "1654791472.158699",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bHZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Clint!  We're all engineers here and this is more of a question for WWDR or possibly our Legal team.  Can you reach out through "
                    },
                    {
                      "type": "link",
                      "url": "http://developer.apple.com/contact",
                      "text": "developer.apple.com/contact"
                    },
                    {
                      "type": "text",
                      "text": " and ask your question there?  We'll try to find the right answer for you there."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1f4a95a5-6804-41de-96fb-e0ef72acbf47",
          "type": "message",
          "user": "U03JKEKF1TP",
          "text": "ok thanks",
          "ts": "1654791661.888469",
          "thread_ts": "1654791472.158699",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZLs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "ok thanks"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J1UX2CQK\u003e asked\n\u0026gt; Xcode Cloud: is it possible to build and export a notarized Mac app on Xcode Cloud?",
      "ts": "1654791549.489279",
      "thread_ts": "1654791549.489279",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654794603.537789",
      "reactions": [
        {
          "name": "+1",
          "count": 1,
          "users": [
            "U03JZ218ZUY"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "k9U",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J1UX2CQK"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Xcode Cloud: is it possible to build and export a notarized Mac app on Xcode Cloud?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "f872cb48-992c-42fe-8b42-453fc13b6825",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Support for notarizing Mac apps is not available in Xcode Cloud. We would welcome a feedback report from you if this is a feature you'd like to see in the future.",
          "ts": "1654791556.677839",
          "thread_ts": "1654791549.489279",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "M2W",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Support for notarizing Mac apps is not available in Xcode Cloud. We would welcome a feedback report from you if this is a feature you'd like to see in the future."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1e5198ea-6e3b-4221-bae6-8c2a3f7755fe",
          "type": "message",
          "user": "U03J1UX2CQK",
          "text": "Sure thing! FB9961116",
          "ts": "1654794560.136119",
          "thread_ts": "1654791549.489279",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CjkbO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sure thing! FB9961116"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "966ee3b8-12f8-478a-9210-93f794f6782f",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Thank you!",
          "ts": "1654794603.537789",
          "thread_ts": "1654791549.489279",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J1UX2CQK"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "L5b",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JHQDJ31C\u003e asked\n\u0026gt; When adding [ci skip] in my commit for Xcode Cloud, will this string also appear in our GitHub repository?",
      "ts": "1654791562.415099",
      "thread_ts": "1654791562.415099",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654791773.053259",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "jSTa",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JHQDJ31C"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"When adding [ci skip] in my commit for Xcode Cloud, will this string also appear in our GitHub repository?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "eff1e8b1-f3ef-4636-88c7-6ec19b2567a6",
          "type": "message",
          "user": "U03J7H8KC8Y",
          "text": "Yes, the full content of your commit message, including the `[ci skip]` tag, will be present in your repository.",
          "ts": "1654791582.124109",
          "thread_ts": "1654791562.415099",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6b=z",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, the full content of your commit message, including the "
                    },
                    {
                      "type": "text",
                      "text": "[ci skip]",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " tag, will be present in your repository."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "34092ed3-0ac7-4289-b237-6ea90d08de6b",
          "type": "message",
          "user": "U03J7H8KC8Y",
          "text": "Xcode Cloud reads the content of the commit message, but it cannot filter or modify it.",
          "ts": "1654791608.312179",
          "thread_ts": "1654791562.415099",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lmV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Xcode Cloud reads the content of the commit message, but it cannot filter or modify it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f28cd708-8e3b-43bc-ac77-5d44468bcb4f",
          "type": "message",
          "user": "U03JHQDJ31C",
          "text": "I see, makes sense. Thanks for answering.",
          "ts": "1654791773.053259",
          "thread_ts": "1654791562.415099",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9b3K",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I see, makes sense. Thanks for answering."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JJJQ411C\u003e asked\n\u0026gt; Can i make only adhoc ipa with Xcode cloud?\n\u0026gt; All types of ipa in develop/adhoc/store are output to the deliverables. In the Scheme specified in the workflow, adhoc is set in Archive. Want to reduce build time.",
      "ts": "1654791626.559099",
      "thread_ts": "1654791626.559099",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654792102.743159",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "+iM",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JJJQ411C"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can i make only adhoc ipa with Xcode cloud?\\nAll types of ipa in develop\\/adhoc\\/store are output to the deliverables. In the Scheme specified in the workflow, adhoc is set in Archive. Want to reduce build time.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "b55176c8-20d5-49d0-b314-dd7c42db0477",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "There is no option to customize which IPAs are output at this time. If you are experiencing increased build times as a result of this, we'd welcome a feedback report.",
          "ts": "1654791632.712479",
          "thread_ts": "1654791626.559099",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JJJQ411C"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nQ6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There is no option to customize which IPAs are output at this time. If you are experiencing increased build times as a result of this, we'd welcome a feedback report."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e1b009d3-344d-49fe-a255-6df1a7d01dbf",
          "type": "message",
          "user": "U03JJJQ411C",
          "text": "That clears things up, thanks.\nI understand that the specification is that all types of ipa will be output.\n\nIn addition, please let me ask.\nDo you have any plans to add such options in the future?",
          "ts": "1654791951.716689",
          "thread_ts": "1654791626.559099",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "N/Iq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That clears things up, thanks.\nI understand that the specification is that all types of ipa will be output.\n\nIn addition, please let me ask.\nDo you have any plans to add such options in the future?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "43f78350-1186-48d5-b896-3d9b25dd8e11",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "I can't comment on future plans, but we always give a lot of weight to the requests we get from our developers via feedback reports :smile:",
          "ts": "1654792013.926459",
          "thread_ts": "1654791626.559099",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8FO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I can't comment on future plans, but we always give a lot of weight to the requests we get from our developers via feedback reports "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ad090b26-6552-4910-afed-aa09773e01e7",
          "type": "message",
          "user": "U03JJJQ411C",
          "text": "Thank you for taking the time to help me.\nIt was very helpful.",
          "ts": "1654792102.743159",
          "thread_ts": "1654791626.559099",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "NQ/Zv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for taking the time to help me.\nIt was very helpful."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMD22287\u003e asked\n\u0026gt; Hello! My team is very interested in switching to Xcode Cloud for CI/CD. However, we're currently using Azure DevOps for both SCM and CI/CD, and I don't see that Azure DevOps is a supported SCM provider. Is there a way to use Xcode Cloud with AzDO as the SCM provider? We would not likely be able to use another SCM provider.",
      "ts": "1654791820.565049",
      "thread_ts": "1654791820.565049",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654792163.294269",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Ld3",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMD22287"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hello! My team is very interested in switching to Xcode Cloud for CI\\/CD. However, we're currently using Azure DevOps for both SCM and CI\\/CD, and I don't see that Azure DevOps is a supported SCM provider. Is there a way to use Xcode Cloud with AzDO as the SCM provider? We would not likely be able to use another SCM provider.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "30fd24a7-1f71-47a8-96b4-573cba041704",
          "type": "message",
          "user": "U03J7H65WGY",
          "text": "We don't support Azure DevOps. Xcode Cloud only supports Bitbucket, Github, and Gitlab SCM providers. Please send feedback with Feedback Assistant to suggest adding support for Azure DevOps.",
          "ts": "1654791857.319439",
          "thread_ts": "1654791820.565049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RVGXH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We don't support Azure DevOps. Xcode Cloud only supports Bitbucket, Github, and Gitlab SCM providers. Please send feedback with Feedback Assistant to suggest adding support for Azure DevOps."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "14a39742-9942-481d-811a-d1a9a56f9e72",
          "type": "message",
          "user": "U03HMD22287",
          "text": "Thank you, I'll do that.",
          "ts": "1654792163.294269",
          "thread_ts": "1654791820.565049",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03J7H65WGY"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "s8U",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you, I'll do that."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVC2HDFG\u003e asked\n\u0026gt; What's a reasonable expectation on the backwards compatibility for `xctestrun`? I'm creating mostly macOS apps, and I need to keep a couple of versions of macOS supported to keep with my users. Right now (Xcode 13.4), I can use build_for_testing and test_without_building to test under macOS 11 and macOS 12, but not macOS 10.15 (our oldest supported version. Going forward, what can we expect for backwards testing compatibility?",
      "ts": "1654791919.777619",
      "thread_ts": "1654791919.777619",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654793649.470329",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "KIW8r",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVC2HDFG"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What's a reasonable expectation on the backwards compatibility for `xctestrun`? I'm creating mostly macOS apps, and I need to keep a couple of versions of macOS supported to keep with my users. Right now (Xcode 13.4), I can use build_for_testing and test_without_building to test under macOS 11 and macOS 12, but not macOS 10.15 (our oldest supported version. Going forward, what can we expect for backwards testing compatibility?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "2d7c8d8b-5ef7-4eab-bee6-bbc2f93353d7",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "Regardless of the project's deployment target, the products of build-for-testing are only valid for testing on macOS versions that are supported by the Xcode that produced those products.",
          "ts": "1654791936.126869",
          "thread_ts": "1654791919.777619",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ixM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Regardless of the project's deployment target, the products of build-for-testing are only valid for testing on macOS versions that are supported by the Xcode that produced those products."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ed92c845-f013-4754-beff-5f529260aeb3",
          "type": "message",
          "user": "U03HVC2HDFG",
          "text": "Is there any indication which versions are supported by Xcode for Xcode 14?",
          "ts": "1654791997.746909",
          "thread_ts": "1654791919.777619",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "82r",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is there any indication which versions are supported by Xcode for Xcode 14?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "98427622-1c70-4c87-92fc-31dcadb8c909",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "Since you'd like to test older macOS versions than the ones that are supported by the Xcode that's producing the test build products, could you file a feedback assistant requesting this capability?",
          "ts": "1654792023.836169",
          "thread_ts": "1654791919.777619",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HVC2HDFG"
              ]
            },
            {
              "name": "white_check_mark",
              "count": 1,
              "users": [
                "U03HVC2HDFG"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nvHy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Since you'd like to test older macOS versions than the ones that are supported by the Xcode that's producing the test build products, could you file a feedback assistant requesting this capability?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a34ff589-e117-4f87-be20-c836221a169e",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "Xcode 14 is supported on macOS 12.4 and later.",
          "ts": "1654792117.319909",
          "thread_ts": "1654791919.777619",
          "is_starred": true,
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bZP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Xcode 14 is supported on macOS 12.4 and later."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b6048014-2bfa-4d6d-9fda-e10d9ef03ab1",
          "type": "message",
          "user": "U03HVC2HDFG",
          "text": "It would be helpful to have test-without-building support os versions that represent a substantial portion of the customer population. For iOS, it's easy to expect people to move forward, because of the high percentage of users who move forward annually. I don't see the stats published by Apple, but from our customers we don't see the same quick adoption on macOS. (Yes, I'll put that in the feedback).",
          "ts": "1654792280.391129",
          "thread_ts": "1654791919.777619",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J7H4CG6L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "QsBL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It would be helpful to have test-without-building support os versions that represent a substantial portion of the customer population. For iOS, it's easy to expect people to move forward, because of the high percentage of users who move forward annually. I don't see the stats published by Apple, but from our customers we don't see the same quick adoption on macOS. (Yes, I'll put that in the feedback)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b4c51b63-504a-4e81-9751-09d2e3e2f69f",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "The use case of testing older macOS versions is definitely valid, and it's awesome that you are focused on expanding your test coverage across various OS versions. Your feedback here will help us prioritize our offerings in this area for the future!",
          "ts": "1654793649.470329",
          "thread_ts": "1654791919.777619",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ksq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The use case of testing older macOS versions is definitely valid, and it's awesome that you are focused on expanding your test coverage across various OS versions. Your feedback here will help us prioritize our offerings in this area for the future!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JE7PBQPP\u003e asked\n\u0026gt; Using Xcode Cloud, is there any way to test with physical devices as well as simulators?",
      "ts": "1654792111.462059",
      "thread_ts": "1654792111.462059",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654793494.455129",
      "reactions": [
        {
          "name": "white_check_mark",
          "count": 1,
          "users": [
            "U03K840U3L1"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "tOIv7",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JE7PBQPP"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Using Xcode Cloud, is there any way to test with physical devices as well as simulators?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "1e045fd6-4bb2-4ac6-bc4d-0d77340483d5",
          "type": "message",
          "user": "U03HL5H29CL",
          "text": "Hi Sara! No there isn't. But if this is a use case that you need please file a feedback at \u003chttp://feedbackassistant.apple.com|feedbackassistant.apple.com\u003e with your use case and details.",
          "ts": "1654792164.357989",
          "thread_ts": "1654792111.462059",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Y1HZG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Sara! No there isn't. But if this is a use case that you need please file a feedback at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "feedbackassistant.apple.com"
                    },
                    {
                      "type": "text",
                      "text": " with your use case and details."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "52502768-4e53-43a6-afa6-58fdc6ffd8e0",
          "type": "message",
          "user": "U03JE7PBQPP",
          "text": "Gotcha. There's some notable differences between simulators and real devices with lack of some default apps or lack of features in them, Cellular behavior, inability to change some system configurations, UI differences from a Simulator rendering and a physical device, etc.",
          "ts": "1654792499.721009",
          "thread_ts": "1654792111.462059",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "iQj8s",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Gotcha. There's some notable differences between simulators and real devices with lack of some default apps or lack of features in them, Cellular behavior, inability to change some system configurations, UI differences from a Simulator rendering and a physical device, etc."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8b7a28ad-86e6-443f-8e97-41a4357946e4",
          "type": "message",
          "user": "U03J01RLBBR",
          "text": "Yes, we experience this as well. We build a framework that id heavily dependent on the various CoreMotion sensors which are unavailable in the Simulators, so on device testing even for simple unit tests is necessary.",
          "ts": "1654793494.455129",
          "thread_ts": "1654792111.462059",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UhOJL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, we experience this as well. We build a framework that id heavily dependent on the various CoreMotion sensors which are unavailable in the Simulators, so on device testing even for simple unit tests is necessary."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JEAD3SQ7\u003e asked\n\u0026gt; How do Xcode Cloud and Xcode Server \"relate to\" and \"work with\" each other? Would it make sense to have an Xcode Server setup for small/PoC projects/teams and an Xcode Cloud setup for bigger/productive projects/teams? Would it be easy to move projects and configuration files between Xcode Cloud and (on premise) Xcode Server? In case this would indeed be an option, is there any documentation how to best practice such a dual CI/CD setup approach?",
      "ts": "1654792274.760879",
      "thread_ts": "1654792274.760879",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654792280.121879",
      "reactions": [
        {
          "name": "white_check_mark",
          "count": 1,
          "users": [
            "U03J7B27ADD"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "5ov",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JEAD3SQ7"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"How do Xcode Cloud and Xcode Server \\\"relate to\\\" and \\\"work with\\\" each other? Would it make sense to have an Xcode Server setup for small\\/PoC projects\\/teams and an Xcode Cloud setup for bigger\\/productive projects\\/teams? Would it be easy to move projects and configuration files between Xcode Cloud and (on premise) Xcode Server? In case this would indeed be an option, is there any documentation how to best practice such a dual CI\\/CD setup approach?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "b0a754bf-de16-42ce-8d82-b882234c591e",
          "type": "message",
          "user": "U03HWD8L36V",
          "text": "Xcode Server has been deprecated this year, see \u003chttps://developer.apple.com/documentation/xcode-release-notes/xcode-14-release-notes\u003e. We encourage developers to try out Xcode Cloud. If you find functionality missing from Xcode Cloud that was present in Xcode Server, please file a feedback.",
          "ts": "1654792280.121879",
          "thread_ts": "1654792274.760879",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U03JEAD3SQ7"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+9R",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Xcode Server has been deprecated this year, see "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode-release-notes/xcode-14-release-notes",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ". We encourage developers to try out Xcode Cloud. If you find functionality missing from Xcode Cloud that was present in Xcode Server, please file a feedback."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03K8UEV7K3\u003e asked\n\u0026gt; Is Xcode Cloud available for enterprise apps?",
      "ts": "1654792281.999369",
      "thread_ts": "1654792281.999369",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654883942.801099",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "7TY8",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K8UEV7K3"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is Xcode Cloud available for enterprise apps?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "9f8b189d-f212-4265-a3a7-8a6ca9a61878",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Xcode Cloud is not available for the Apple Developer Enterprise Program. If this is a feature you'd like to see in the future, we'd welcome a feedback report from you.",
          "ts": "1654792290.747649",
          "thread_ts": "1654792281.999369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/MH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Xcode Cloud is not available for the Apple Developer Enterprise Program. If this is a feature you'd like to see in the future, we'd welcome a feedback report from you."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7c80bc1e-e845-433b-a841-e9633d1628f8",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "\u003chttp://feedbackassistant.apple.com|feedbackassistant.apple.com\u003e",
          "ts": "1654792489.794299",
          "thread_ts": "1654792281.999369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oQ91",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "feedbackassistant.apple.com"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "85017785-3b7e-4d54-a27c-01844a0b8bd2",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Also I should mention that *cloud signing*, which is available in both Xcode Cloud and in Xcode, *does* support enterprise apps. So you can export your apps from Xcode's Organizer and take advantage of cloud managed signing certificates, just like Xcode Cloud uses.",
          "ts": "1654883892.873519",
          "thread_ts": "1654792281.999369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "iUe1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also I should mention that "
                    },
                    {
                      "type": "text",
                      "text": "cloud signing",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", which is available in both Xcode Cloud and in Xcode, "
                    },
                    {
                      "type": "text",
                      "text": "does",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " support enterprise apps. So you can export your apps from Xcode's Organizer and take advantage of cloud managed signing certificates, just like Xcode Cloud uses."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "79f0a8f8-f445-4735-b084-8e56f82074e8",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "You can learn more about that in \u003chttps://developer.apple.com/videos/play/wwdc2021/10204|Distribute apps in Xcode with cloud signing\u003e from WWDC21.",
          "ts": "1654883942.801099",
          "thread_ts": "1654792281.999369",
          "attachments": [
            {
              "fallback": "Apple Developer: Distribute apps in Xcode with cloud signing - WWDC21 - Videos - Apple Developer",
              "id": 1,
              "title": "Distribute apps in Xcode with cloud signing - WWDC21 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/videos/play/wwdc2021/10204",
              "text": "Discover how to distribute your apps directly to App Store Connect and all the distribution methods supported in Xcode. Explore how to...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/119/5115/5115_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/videos/play/wwdc2021/10204",
              "original_url": "https://developer.apple.com/videos/play/wwdc2021/10204",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "yPuo",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can learn more about that in "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2021/10204",
                      "text": "Distribute apps in Xcode with cloud signing"
                    },
                    {
                      "type": "text",
                      "text": " from WWDC21."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KKLV0JQY\u003e asked\n\u0026gt; Will/does Xcode Cloud have the ability to auto-update signing certificates when they will expire?",
      "ts": "1654792539.313719",
      "thread_ts": "1654792539.313719",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654792545.705289",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "A7hE",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KKLV0JQY"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Will\\/does Xcode Cloud have the ability to auto-update signing certificates when they will expire?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "f97c3023-741c-4441-81aa-44be5b387c1f",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Xcode Cloud uses cloud signing certificates that it automatically manages on your behalf. It will renew certificates a few months before they expire so that your builds have valid signatures while you test and distribute them.",
          "ts": "1654792545.705289",
          "thread_ts": "1654792539.313719",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "tada",
              "count": 3,
              "users": [
                "U03J01RLBBR",
                "U03HVE965FY",
                "U03J1UBVC2X"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mNZFy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Xcode Cloud uses cloud signing certificates that it automatically manages on your behalf. It will renew certificates a few months before they expire so that your builds have valid signatures while you test and distribute them."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JJJQ411C\u003e asked\n\u0026gt; I have a problem with xcode cloud.\n\u0026gt; In certain cases, branches are not recognized and workflow cannot be started. Problems occur when trying to start a workflow directly from AppStoreConnect and Xcode using the \"Start Build\" button. If the workflow is initiated by a StartConditions decision, the problem does not occur.\n\u0026gt; We use bitbucket.`master` branch is fine. `develop_xxx` branch is fine too.\n\u0026gt; Problems occur with `develop/xxx`, `release/xxx` . If the branch name (path) contains `/`, it may cause problems.",
      "ts": "1654792578.832399",
      "thread_ts": "1654792578.832399",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654827084.595669",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "yjR",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JJJQ411C"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I have a problem with xcode cloud.\\nIn certain cases, branches are not recognized and workflow cannot be started. Problems occur when trying to start a workflow directly from AppStoreConnect and Xcode using the \\\"Start Build\\\" button. If the workflow is initiated by a StartConditions decision, the problem does not occur.\\nWe use bitbucket.`master` branch is fine. `develop_xxx` branch is fine too.\\nProblems occur with `develop\\/xxx`, `release\\/xxx` . If the branch name (path) contains `\\/`, it may cause problems.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "2ab22a25-0d58-47b9-9203-c23f2772bf72",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "Could you please file a feedback assistant for this issue, and include the link to the Xcode Cloud job and workflow in the description?",
          "ts": "1654792620.946989",
          "thread_ts": "1654792578.832399",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Hyn=A",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Could you please file a feedback assistant for this issue, and include the link to the Xcode Cloud job and workflow in the description?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b2818a4a-80a7-49de-a3c3-a062fe271c3d",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "Also, when you try to manually start a build for a branch with a \"/\" in the name, does the build start and then fail? Or does no build start at all?",
          "ts": "1654792682.324859",
          "thread_ts": "1654792578.832399",
          "edited": {
            "user": "U03J7H4CG6L",
            "ts": "1654792706.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hodo=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also, when you try to manually start a build for a branch with a \"/\" in the name, does the build start and then fail? Or does no build start at all?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ba0c16ad-7856-40c9-acb6-88b9eeb2ee10",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "If you could also paste the feedback assistant number here, I can make sure it gets routed to the correct folks.",
          "ts": "1654792763.082729",
          "thread_ts": "1654792578.832399",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kyY+F",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you could also paste the feedback assistant number here, I can make sure it gets routed to the correct folks."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "199784a8-3f59-411b-b85f-fffa67b67689",
          "type": "message",
          "user": "U03JJJQ411C",
          "text": "Thanks.\nWe had not yet filed for a feedback assistant, so we will file for a feedback assistant after this.\n\n\u0026gt; does the build start and then fail? Or does no build start at all?\nIt does no build start at all. And As shown in the attached image, commit information and other information are not loaded, and the display is different from norma",
          "ts": "1654793127.064149",
          "thread_ts": "1654792578.832399",
          "files": [
            {
              "id": "F03JXH2LG5T",
              "created": 1654793077,
              "timestamp": 1654793077,
              "name": "スクリーンショット 2022-06-10 1.44.32.png",
              "title": "スクリーンショット 2022-06-10 1.44.32.png",
              "mimetype": "image/png",
              "image_exif_rotation": 0,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03JJJQ411C",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 43187,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03JXH2LG5T-スクリーンショット 2022-06-10 1.44.32.png",
              "url_private_download": "C03H0JN431U/F03JXH2LG5T-スクリーンショット 2022-06-10 1.44.32.png",
              "original_h": 262,
              "original_w": 1490,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JXH2LG5T-b1f5e49ab4/____________________________2022-06-10_1.44.32_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JXH2LG5T-b1f5e49ab4/____________________________2022-06-10_1.44.32_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JXH2LG5T-b1f5e49ab4/____________________________2022-06-10_1.44.32_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JXH2LG5T-b1f5e49ab4/____________________________2022-06-10_1.44.32_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 360,
              "thumb_360_h": 63,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JXH2LG5T-b1f5e49ab4/____________________________2022-06-10_1.44.32_480.png",
              "thumb_480_w": 480,
              "thumb_480_h": 84,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JXH2LG5T-b1f5e49ab4/____________________________2022-06-10_1.44.32_720.png",
              "thumb_720_w": 720,
              "thumb_720_h": 127,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JXH2LG5T-b1f5e49ab4/____________________________2022-06-10_1.44.32_960.png",
              "thumb_960_w": 960,
              "thumb_960_h": 169,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03JXH2LG5T-b1f5e49ab4/____________________________2022-06-10_1.44.32_1024.png",
              "thumb_1024_w": 1024,
              "thumb_1024_h": 180,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03JJJQ411C/F03JXH2LG5T/____________________________2022-06-10_1.44.32.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03JXH2LG5T-7701982d13",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JZ218ZUY"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "NxJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks.\nWe had not yet filed for a feedback assistant, so we will file for a feedback assistant after this.\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"does the build start and then fail? Or does no build start at all?\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It does no build start at all. And As shown in the attached image, commit information and other information are not loaded, and the display is different from norma"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ea92f93e-27dc-47d6-8f8f-c66dbd547a17",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "I see. If you copy the build number link (the \"124\" in that image) and paste that in the feedback assistant, that would be very useful!",
          "ts": "1654793471.804489",
          "thread_ts": "1654792578.832399",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Jfhi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I see. If you copy the build number link (the \"124\" in that image) and paste that in the feedback assistant, that would be very useful!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "69bf4c03-7f9f-492c-8b17-44f412573aef",
          "type": "message",
          "user": "U03JJJQ411C",
          "text": "Thanks for the advice. I'll do that when I file the feedback assistant.",
          "ts": "1654793609.719229",
          "thread_ts": "1654792578.832399",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J7H4CG6L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vBLDy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the advice. I'll do that when I file the feedback assistant."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8fcb8e8c-921e-4617-8858-8673188f4fff",
          "type": "message",
          "user": "U03JJJQ411C",
          "text": "\u003c@U03J7H4CG6L\u003e\nI filed feedback assistant. Number is 10145252.",
          "ts": "1654827084.595669",
          "thread_ts": "1654792578.832399",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "k2V0k",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03J7H4CG6L"
                    },
                    {
                      "type": "text",
                      "text": "\nI filed feedback assistant. Number is 10145252."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVCK66P8\u003e asked\n\u0026gt; If I used Xcode Cloud to build the app, do I still need to adjust the build number in the future? Or just leave it as 1 is fine?",
      "ts": "1654793102.978859",
      "thread_ts": "1654793102.978859",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654793311.246079",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "6ezz",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVCK66P8"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"If I used Xcode Cloud to build the app, do I still need to adjust the build number in the future? Or just leave it as 1 is fine?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ce152366-31a7-4045-896c-cd7e3a8302c0",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Xcode Cloud can manage your build number for you. For a new app, you can leave the build number at 1. If you have an existing app, we suggest reading \u003chttps://developer.apple.com/documentation/xcode/setting-the-next-build-number-for-xcode-cloud-builds|this documentation\u003e for more information about how Xcode Cloud manages build numbers.",
          "ts": "1654793160.254479",
          "thread_ts": "1654793102.978859",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wEP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Xcode Cloud can manage your build number for you. For a new app, you can leave the build number at 1. If you have an existing app, we suggest reading "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/setting-the-next-build-number-for-xcode-cloud-builds",
                      "text": "this documentation"
                    },
                    {
                      "type": "text",
                      "text": " for more information about how Xcode Cloud manages build numbers."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7340e059-fcaf-4996-af82-0a9c877325ec",
          "type": "message",
          "user": "U03HVCK66P8",
          "text": "Sure. No problem",
          "ts": "1654793311.246079",
          "thread_ts": "1654793102.978859",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zN6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sure. No problem"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVCK66P8\u003e asked\n\u0026gt; Hello. The Xcode cloud is not so stable and always 'down'. After committed the files, it takes a while to show-up, but just queuing. 🫠",
      "ts": "1654793294.335699",
      "thread_ts": "1654793294.335699",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654793397.644999",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "qHG59",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVCK66P8"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hello. The Xcode cloud is not so stable and always 'down'. After committed the files, it takes a while to show-up, but just queuing. \\ud83e\\udee0\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6342435a-e1cd-482b-93bf-ea2e51d5a8ce",
          "type": "message",
          "user": "U03HVCK66P8",
          "text": "Hi. I just tried again, and it seems the server issue is fixed.",
          "ts": "1654793367.145379",
          "thread_ts": "1654793294.335699",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AG5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi. I just tried again, and it seems the server issue is fixed."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "18f65475-3b04-4437-82de-82980255d9aa",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "Could you file a feedback assistant report at \u003chttps://feedbackassistant.apple.com\u003e? If you could include the link to your Xcode Cloud workflow, and any builds where you are noticing issues/reduced performance, an Xcode Cloud engineer will be able to take a look.",
          "ts": "1654793372.976529",
          "thread_ts": "1654793294.335699",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qAak",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Could you file a feedback assistant report at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "? If you could include the link to your Xcode Cloud workflow, and any builds where you are noticing issues/reduced performance, an Xcode Cloud engineer will be able to take a look."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2e6c3ba7-1ebb-4745-9b59-7cf32e890481",
          "type": "message",
          "user": "U03HVCK66P8",
          "text": "Okay!",
          "ts": "1654793381.552679",
          "thread_ts": "1654793294.335699",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ivB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Okay!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f90ab264-9232-49d6-a309-6432c422712b",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "Thank you!",
          "ts": "1654793397.644999",
          "thread_ts": "1654793294.335699",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vPb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JE7PBQPP\u003e asked\n\u0026gt; Does Xcode Cloud integrate with other CI/CD workflows like Jenkins or is it considered standalone?",
      "ts": "1654793396.653099",
      "thread_ts": "1654793396.653099",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654793403.670139",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "N=7",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JE7PBQPP"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Does Xcode Cloud integrate with other CI\\/CD workflows like Jenkins or is it considered standalone?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "7c6e3c35-662f-4123-ae05-2e9b553af28a",
          "type": "message",
          "user": "U03HB5RVBQW",
          "text": "You can connect Xcode Cloud to other services using webhooks directly (\u003chttps://developer.apple.com/documentation/xcode/configuring-webhooks-in-xcode-cloud\u003e), and Xcode Cloud is also part of the App Store Connect API (\u003chttps://developer.apple.com/documentation/appstoreconnectapi/xcode_cloud_workflows_and_builds\u003e)",
          "ts": "1654793403.670139",
          "thread_ts": "1654793396.653099",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-thank-you",
              "count": 1,
              "users": [
                "U03JE7PBQPP"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RW97",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can connect Xcode Cloud to other services using webhooks directly ("
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/configuring-webhooks-in-xcode-cloud",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "), and Xcode Cloud is also part of the App Store Connect API ("
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/appstoreconnectapi/xcode_cloud_workflows_and_builds",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ")"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KKLV0JQY\u003e asked\n\u0026gt; Can you integrate Xcode cloud with Fastlane?",
      "ts": "1654793422.950789",
      "thread_ts": "1654793422.950789",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654794275.955379",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "isMW1",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KKLV0JQY"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can you integrate Xcode cloud with Fastlane?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "fb00afd6-38cf-4485-9ffb-8b58ba2cba4c",
          "type": "message",
          "user": "U03HB5RVBQW",
          "text": "You can connect Xcode Cloud to other services using webhooks: \u003chttps://developer.apple.com/documentation/xcode/configuring-webhooks-in-xcode-cloud\u003e\n\nIf there's more behavior you'd like to see supported in Xcode Cloud for your development workflow, please file a Feedback report at \u003chttp://feedbackassistant.apple.com\u003e.",
          "ts": "1654793432.376589",
          "thread_ts": "1654793422.950789",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wluyz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can connect Xcode Cloud to other services using webhooks: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/configuring-webhooks-in-xcode-cloud",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n\nIf there's more behavior you'd like to see supported in Xcode Cloud for your development workflow, please file a Feedback report at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8b4ff6da-6cbd-44bb-9d3f-c198f0105df8",
          "type": "message",
          "user": "U03HB5RVBQW",
          "text": "Xcode Cloud is also part of the App Store Connect API (\u003chttps://developer.apple.com/documentation/appstoreconnectapi/xcode_cloud_workflows_and_builds\u003e)",
          "ts": "1654793470.749239",
          "thread_ts": "1654793422.950789",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JCg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Xcode Cloud is also part of the App Store Connect API ("
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/appstoreconnectapi/xcode_cloud_workflows_and_builds",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ")"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bed238dc-4b61-4ab0-bd53-774e2c736b69",
          "type": "message",
          "user": "U03HB5RVBQW",
          "text": "Alternatively, if you're trying to call Fastlane from Xcode Cloud, check out \"Writing custom build scripts\": \u003chttps://developer.apple.com/documentation/xcode/writing-custom-build-scripts\u003e",
          "ts": "1654794275.955379",
          "thread_ts": "1654793422.950789",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Eglf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Alternatively, if you're trying to call Fastlane from Xcode Cloud, check out \"Writing custom build scripts\": "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/writing-custom-build-scripts",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JJJQ411C\u003e asked\n\u0026gt; Is Xcode Cloud possible to cache a specific directory for next build?\n\u0026gt; I want to cache libraries built by Carthage and software installed with brew such as aws cli.\n\u0026gt; Our Workflow takes a long time to build an environment and I want to solve this problem. We are still in need of a library that only supports carthage. There are plans to use SPM, but we still need more time.",
      "ts": "1654793517.186339",
      "thread_ts": "1654793517.186339",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654793915.610209",
      "reactions": [
        {
          "name": "+1",
          "count": 3,
          "users": [
            "U03J2RRKF9U",
            "U03HZ6C9S21",
            "U03HPFD1GG7"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "MbLnW",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JJJQ411C"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is Xcode Cloud possible to cache a specific directory for next build?\\nI want to cache libraries built by Carthage and software installed with brew such as aws cli.\\nOur Workflow takes a long time to build an environment and I want to solve this problem. We are still in need of a library that only supports carthage. There are plans to use SPM, but we still need more time.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "e485b587-5428-4a82-af31-67de4ecc7b62",
          "type": "message",
          "user": "U03J7H8KC8Y",
          "text": "Xcode Cloud doesn’t cache anything outside of Xcode’s derived data, but if that’s a feature that would be helpful for you, please file a feedback at \u003chttps://feedbackassistant.apple.com\u003e describing your use case.",
          "ts": "1654793529.780859",
          "thread_ts": "1654793517.186339",
          "edited": {
            "user": "U03J7H8KC8Y",
            "ts": "1654793556.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6BU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Xcode Cloud doesn’t cache anything outside of Xcode’s derived data, but if that’s a feature that would be helpful for you, please file a feedback at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " describing your use case."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4bb07991-0c9a-409c-ab4b-7c2b2152145a",
          "type": "message",
          "user": "U03HVCY3170",
          "text": "Since I’ve done similar things myself in the past it might make sense to cache expensive to build artefacts in your own storage and load them from there",
          "ts": "1654793615.572359",
          "thread_ts": "1654793517.186339",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03JJJQ411C",
                "U03JX7U3H4K"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=qu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Since I’ve done similar things myself in the past it might make sense to cache expensive to build artefacts in your own storage and load them from there"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9c831a72-fabf-4eae-a6d8-2b74d15e49b9",
          "type": "message",
          "user": "U03J2RRKF9U",
          "text": "This is something my team would love to see too! Submitted FB10135438 :thumbsup:",
          "ts": "1654793835.074969",
          "thread_ts": "1654793517.186339",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JJJQ411C",
                "U03JX7U3H4K"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "L9K7",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is something my team would love to see too! Submitted FB10135438 "
                    },
                    {
                      "type": "emoji",
                      "name": "thumbsup",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5e7c369a-0134-4333-8bf6-9a21b8ffa581",
          "type": "message",
          "user": "U03JJJQ411C",
          "text": "Thank you, understood.\nWe will file a feedback assistant, stating the status of use.",
          "ts": "1654793915.610209",
          "thread_ts": "1654793517.186339",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+AXXm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you, understood.\nWe will file a feedback assistant, stating the status of use."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRNX058Q\u003e asked\n\u0026gt; We have a large development organization with many apps and teams.\n\u0026gt; \n\u0026gt; I have two Xcode Cloud subscription questions:\n\u0026gt; \n\u0026gt; 1. What happens if we exceed 1000 hours of compute time a month?\n\u0026gt; \n\u0026gt; 2. Would it be possible to have multiple subscriptions, each for  specific apps/teams?",
      "ts": "1654793777.172359",
      "thread_ts": "1654793777.172359",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654793833.081479",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "SnkuJ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRNX058Q"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We have a large development organization with many apps and teams.\\n\\nI have two Xcode Cloud subscription questions:\\n\\n1. What happens if we exceed 1000 hours of compute time a month?\\n\\n2. Would it be possible to have multiple subscriptions, each for  specific apps\\/teams?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "cc8698d6-6f87-468b-b3a4-6cfa894b3f18",
          "type": "message",
          "user": "U03J7H65WGY",
          "text": "\u0026gt; 1. What happens if we exceed 1000 hours of compute time a month?\nAny builds in flight will complete, however no new builds will kick-off until the cycle resets on the \"monthly anniversary\" date.\n\n\u0026gt; 2. Would it be possible to have multiple subscriptions, each for  specific apps/teams?\nSubscriptions are per Developer team.",
          "ts": "1654793833.081479",
          "thread_ts": "1654793777.172359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qh/",
              "elements": [
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"1. What happens if we exceed 1000 hours of compute time a month?\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\nAny builds in flight will complete, however no new builds will kick-off until the cycle resets on the \"monthly anniversary\" date.\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"2. Would it be possible to have multiple subscriptions, each for  specific apps\\/teams?\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Subscriptions are per Developer team."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVCY3170\u003e asked\n\u0026gt; Does Xcode Cloud offer a choice between Intel or Apple Silicon hardware?",
      "ts": "1654793783.729599",
      "thread_ts": "1654793783.729599",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654794616.070179",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "QhRY",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVCY3170"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Does Xcode Cloud offer a choice between Intel or Apple Silicon hardware?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "94976cb8-ceda-4305-994d-f38b5c34f789",
          "type": "message",
          "user": "U03HL5G4QFN",
          "text": "We do not offer a choice at this time. If you require Apple Silicon machines please file a feedback",
          "ts": "1654793797.170239",
          "thread_ts": "1654793783.729599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "WnQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We do not offer a choice at this time. If you require Apple Silicon machines please file a feedback"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "80da6ec5-8493-4364-85ec-bae3e8ecda88",
          "type": "message",
          "user": "U03JE7PBQPP",
          "text": "Does that mean Xcode Cloud runs on Intel?",
          "ts": "1654794031.574649",
          "thread_ts": "1654793783.729599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "b8d",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Does that mean Xcode Cloud runs on Intel?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d0ed0c34-2d2c-4803-bdc4-b888b87db64a",
          "type": "message",
          "user": "U03HL5G4QFN",
          "text": "At this time Xcode Cloud provides a x86_64 environment",
          "ts": "1654794616.070179",
          "thread_ts": "1654793783.729599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ISxCZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "At this time Xcode Cloud provides a x86_64 environment"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRNX058Q\u003e asked\n\u0026gt; Can Xcode Cloud support ssh package urls to GitHub package repos?",
      "ts": "1654793825.949379",
      "thread_ts": "1654793825.949379",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654793835.780839",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "BrF",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRNX058Q"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can Xcode Cloud support ssh package urls to GitHub package repos?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "d2cabfb9-ea11-4945-b4ee-da275cbb5645",
          "type": "message",
          "user": "U03J7H8QABS",
          "text": "Yes, both https and ssh URLs are supported for cloning both the primary repo and package dependencies.",
          "ts": "1654793835.780839",
          "thread_ts": "1654793825.949379",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03JRNX058Q"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eZ7U",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, both https and ssh URLs are supported for cloning both the primary repo and package dependencies."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KMF84SD6\u003e asked\n\u0026gt; I am getting started with Xcode Cloud, but can't get build caching to work. All builds take the same time as the first, \"clean\" build, and the `DerivedData` folder is empty at the start of each build. In addition, I tried caching my CocoaPods by symlinking them into `DerivedData` as suggested at \u003chttps://developer.apple.com/forums/thread/695634,|https://developer.apple.com/forums/thread/695634,\u003e but that doesn't seem to work, either.",
      "ts": "1654793927.697279",
      "thread_ts": "1654793927.697279",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654793935.865429",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "0x=",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KMF84SD6"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I am getting started with Xcode Cloud, but can't get build caching to work. All builds take the same time as the first, \\\"clean\\\" build, and the `DerivedData` folder is empty at the start of each build. In addition, I tried caching my CocoaPods by symlinking them into `DerivedData` as suggested at \"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/695634,\",\"text\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/695634,\"},{\"type\":\"text\",\"text\":\" but that doesn't seem to work, either.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "551e77d9-38fe-4608-b562-a52824681c90",
          "type": "message",
          "user": "U03HL5G4QFN",
          "text": "Please \u003chttp://feedbackassistant.apple.com|file a feedback\u003e describing what you are seeing so the team can take a look",
          "ts": "1654793935.865429",
          "thread_ts": "1654793927.697279",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6nKx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Please "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "file a feedback"
                    },
                    {
                      "type": "text",
                      "text": " describing what you are seeing so the team can take a look"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMD22287\u003e asked\n\u0026gt; This is perhaps not a question for the engineering team but I'm wondering how build hours are billed beyond 1000 a month. Doing some napkin math, I think my team might be in that ballpark.",
      "ts": "1654793997.879879",
      "thread_ts": "1654793997.879879",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654794196.836689",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "GMY",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMD22287"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"This is perhaps not a question for the engineering team but I'm wondering how build hours are billed beyond 1000 a month. Doing some napkin math, I think my team might be in that ballpark.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "49d2a2bf-ab3c-481f-9146-3cdbcad930c4",
          "type": "message",
          "user": "U03HL5G4QFN",
          "text": "We do not currently offer plans beyond 1000 hours. If you need more than 1000 hours please file a feedback so the team can understand your needs. But we would recommend trying the product to see how the back of the napkin math compares to reality",
          "ts": "1654794005.639289",
          "thread_ts": "1654793997.879879",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "a2zaz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We do not currently offer plans beyond 1000 hours. If you need more than 1000 hours please file a feedback so the team can understand your needs. But we would recommend trying the product to see how the back of the napkin math compares to reality"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bfe98ce6-e409-4399-a925-66a16fa45f3b",
          "type": "message",
          "user": "U03HMD22287",
          "text": "Yes, measuring in the real world is good! Thank you.",
          "ts": "1654794196.836689",
          "thread_ts": "1654793997.879879",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "03Iz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, measuring in the real world is good! Thank you."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J2RRKF9U\u003e asked\n\u0026gt; To build my project, I need to first build some tools using Mint (\u003chttps://github.com/yonaskolb/Mint)|https://github.com/yonaskolb/Mint)\u003e such as swift-format and XcodeGen. This dramatically increases job times because the extra tools need to be rebuilt each run. Do you have any recommendations on how to reduce the time needed for this? Is there a way to cache custom directories created during the job such as ~/.mint (where Mint puts the built products) to re-use on subsequent jobs?",
      "ts": "1654794075.753199",
      "thread_ts": "1654794075.753199",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654795049.859489",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "TyQ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J2RRKF9U"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"To build my project, I need to first build some tools using Mint (\"},{\"type\":\"link\",\"url\":\"https:\\/\\/github.com\\/yonaskolb\\/Mint)\",\"text\":\"https:\\/\\/github.com\\/yonaskolb\\/Mint)\"},{\"type\":\"text\",\"text\":\" such as swift-format and XcodeGen. This dramatically increases job times because the extra tools need to be rebuilt each run. Do you have any recommendations on how to reduce the time needed for this? Is there a way to cache custom directories created during the job such as ~\\/.mint (where Mint puts the built products) to re-use on subsequent jobs?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "276d28a3-5cd4-4240-8faf-b62bb97602be",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "One thing you could try here is to install these tools via homebrew in `ci_pre_xcodebuild.sh`, which is a script that runs prior to xcodebuild in Xcode Cloud (see the documentation \u003chttps://developer.apple.com/documentation/xcode/writing-custom-build-scripts|here\u003e).",
          "ts": "1654794142.666589",
          "thread_ts": "1654794075.753199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "q=wG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "One thing you could try here is to install these tools via homebrew in "
                    },
                    {
                      "type": "text",
                      "text": "ci_pre_xcodebuild.sh",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", which is a script that runs prior to xcodebuild in Xcode Cloud (see the documentation "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/writing-custom-build-scripts",
                      "text": "here"
                    },
                    {
                      "type": "text",
                      "text": ")."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c2dd2968-9cf6-47e3-8e1f-7c36a0d38d1b",
          "type": "message",
          "user": "U03J2RRKF9U",
          "text": "Thanks for the suggestion! We would, but Homebrew doesn’t let us control the version of the tool, we can only get the latest. We want to make sure all the devs \u0026amp; CI are using the same versions to avoid any inconsistencies :smile:",
          "ts": "1654794246.089679",
          "thread_ts": "1654794075.753199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qNoR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the suggestion! We would, but Homebrew doesn’t let us control the version of the tool, we can only get the latest. We want to make sure all the devs \u0026 CI are using the same versions to avoid any inconsistencies "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7c3805ea-5211-4bf4-a331-ca4d54c5c5e1",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "In that case, another option is to have the versions of the tools you need on some content storage, and then download those tools in `ci_pre_xcodebuild.sh`.",
          "ts": "1654794661.234959",
          "thread_ts": "1654794075.753199",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J2RRKF9U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FngF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In that case, another option is to have the versions of the tools you need on some content storage, and then download those tools in "
                    },
                    {
                      "type": "text",
                      "text": "ci_pre_xcodebuild.sh",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4009aa07-7815-4e6e-aa71-7d40754349c3",
          "type": "message",
          "user": "U03J2RRKF9U",
          "text": "\u003c@U03J7H4CG6L\u003e do you know if Swift Package plugins would possibly help with this? A lot of our caching use case has to do with tools related to code generation and linting/formatting. I haven’t had time to explore Package plugins yet, but I wonder if we could pull those tool dependencies into our app’s SPM dependencies, and write some Package plugins to execute them. At that point maybe the tools would be cached in DerivedData?\n\nMost of the examples I’ve seen for Package plugins seemed to execute a CLI tool though, not run other Swift code, so maybe this wouldn’t work :thinking_face:",
          "ts": "1654794703.570909",
          "thread_ts": "1654794075.753199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "djOU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03J7H4CG6L"
                    },
                    {
                      "type": "text",
                      "text": " do you know if Swift Package plugins would possibly help with this? A lot of our caching use case has to do with tools related to code generation and linting/formatting. I haven’t had time to explore Package plugins yet, but I wonder if we could pull those tool dependencies into our app’s SPM dependencies, and write some Package plugins to execute them. At that point maybe the tools would be cached in DerivedData?\n\nMost of the examples I’ve seen for Package plugins seemed to execute a CLI tool though, not run other Swift code, so maybe this wouldn’t work "
                    },
                    {
                      "type": "emoji",
                      "name": "thinking_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e621ef9b-aa0b-4448-a7d0-dadefba5a34e",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "If that also doesn't work, we recommend storing the build products in DerivedData. The contents of DerivedData should be cached for future runs. If you notice any issues with that, please file a feedback assistant!",
          "ts": "1654794704.233999",
          "thread_ts": "1654794075.753199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "V7Jz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If that also doesn't work, we recommend storing the build products in DerivedData. The contents of DerivedData should be cached for future runs. If you notice any issues with that, please file a feedback assistant!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0004de50-f12a-4c9f-87be-29441c29417a",
          "type": "message",
          "user": "U03J2RRKF9U",
          "text": "OK, we can give that a try :thumbsup:\nI’ll also try to play around with Package plugins to see if they’d fit what we’re trying to do.\n\nThanks!",
          "ts": "1654795049.859489",
          "thread_ts": "1654794075.753199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+8w8D",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "OK, we can give that a try "
                    },
                    {
                      "type": "emoji",
                      "name": "thumbsup",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\nI’ll also try to play around with Package plugins to see if they’d fit what we’re trying to do.\n\nThanks!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4EW62N8\u003e asked\n\u0026gt; On the iOS 16 beta, we noticed a new _UIWindowSystemOverlayWindow, which interfered with some of our UI tests. Could it be related to the new Stage Manager?",
      "ts": "1654794759.902609",
      "thread_ts": "1654794759.902609",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654795003.272849",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "1CFJ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4EW62N8"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"On the iOS 16 beta, we noticed a new _UIWindowSystemOverlayWindow, which interfered with some of our UI tests. Could it be related to the new Stage Manager?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "17d339a9-b183-4ec7-9bdc-381c396081c0",
          "type": "message",
          "user": "U03HL5H29CL",
          "text": "Hey Barry! Can you provide some more specifics around this? Which UI are you seeing?",
          "ts": "1654794798.832919",
          "thread_ts": "1654794759.902609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "r6K",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hey Barry! Can you provide some more specifics around this? Which UI are you seeing?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "694df6d5-530b-4b2a-8d9d-04ec896e8a9d",
          "type": "message",
          "user": "U03J4EW62N8",
          "text": "\u003c@U03HL5H29CL\u003e We don’t see it visually but it was detected during  debugging an issue where some view of ours failed to be tapped due to “not hittable” and we found that system window was the reason",
          "ts": "1654794910.617919",
          "thread_ts": "1654794759.902609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=rk9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HL5H29CL"
                    },
                    {
                      "type": "text",
                      "text": " We don’t see it visually but it was detected during  debugging an issue where some view of ours failed to be tapped due to “not hittable” and we found that system window was the reason"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ff928c41-94e3-4607-bd28-ae407ff5cbfb",
          "type": "message",
          "user": "U03HL5H29CL",
          "text": "Interesting! Could you file a Feedback Report a \u003chttp://feedbackassistant.apple.com|feedbackassistant.apple.com\u003e with an example project or some good details of what your test is attempting to do when hitting it?",
          "ts": "1654794969.841619",
          "thread_ts": "1654794759.902609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TzPv9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Interesting! Could you file a Feedback Report a "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "feedbackassistant.apple.com"
                    },
                    {
                      "type": "text",
                      "text": " with an example project or some good details of what your test is attempting to do when hitting it?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a03a068b-cfde-4cdb-ad96-472795ef2735",
          "type": "message",
          "user": "U03J4EW62N8",
          "text": "Will do. Thanks",
          "ts": "1654795003.272849",
          "thread_ts": "1654794759.902609",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03HL5H29CL"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "DK7X",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Will do. Thanks"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JE7PBQPP\u003e asked\n\u0026gt; Does Xcode Cloud run on Intel or Apple Silicon or a somewhat-random hybrid (you don't know what you'll build on each time)?",
      "ts": "1654794792.471609",
      "thread_ts": "1654794792.471609",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654794799.246029",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "MWH",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JE7PBQPP"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Does Xcode Cloud run on Intel or Apple Silicon or a somewhat-random hybrid (you don't know what you'll build on each time)?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "26ea5b55-775d-4620-ad06-38557abbea14",
          "type": "message",
          "user": "U03HL5G4QFN",
          "text": "At this time Xcode Cloud provides a x86_64 environment. If you require Apple Silicon machines please \u003chttp://feedbackassistant.apple.com|file a feedback\u003e",
          "ts": "1654794799.246029",
          "thread_ts": "1654794792.471609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RlQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "At this time Xcode Cloud provides a x86_64 environment. If you require Apple Silicon machines please "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "file a feedback"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVBSNM6J\u003e asked\n\u0026gt; For xcode Cloud when i add my github it take forevet to get access  to github why is this?",
      "ts": "1654795103.042199",
      "thread_ts": "1654795103.042199",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 21,
      "latest_reply": "1654800302.161879",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "33u/M",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVBSNM6J"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"For xcode Cloud when i add my github it take forevet to get access  to github why is this?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "b96455fb-973b-4a94-a6c5-5be850974a42",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "Can you file a feedback assistant on \u003chttps://feedbackassistant.apple.com\u003e and include the link to your Xcode Cloud workflow and build execution?",
          "ts": "1654795147.500109",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZbJY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Can you file a feedback assistant on "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " and include the link to your Xcode Cloud workflow and build execution?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e97514eb-a842-42da-8ca8-aa472697c693",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "If you paste the feedback assistant number here, we can get it routed to an Xcode Cloud engineer to take a look.",
          "ts": "1654795184.597899",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PuDU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you paste the feedback assistant number here, we can get it routed to an Xcode Cloud engineer to take a look."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d83677ee-e718-4c25-93a8-84f949b771cf",
          "type": "message",
          "user": "U03HVBSNM6J",
          "text": "Ok,Sorry new to xcode cloud.",
          "ts": "1654795222.187349",
          "thread_ts": "1654795103.042199",
          "edited": {
            "user": "U03HVBSNM6J",
            "ts": "1654795352.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sVl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok,Sorry new to xcode cloud."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7fe8d844-afc4-4d18-8613-43bb198e17b7",
          "type": "message",
          "user": "U03J7H4CG6L",
          "text": "No worries! I think I may have misunderstood your question actually. Are you asking about connecting to github when you first create a workflow?",
          "ts": "1654795492.610739",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Gle6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "No worries! I think I may have misunderstood your question actually. Are you asking about connecting to github when you first create a workflow?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f4214081-bc6c-411e-8510-c9d1c3574937",
          "type": "message",
          "user": "U03HVBSNM6J",
          "text": "Yes",
          "ts": "1654795526.679639",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pnPs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0248f79d-5f8a-47f9-8bd1-0186ab487e1c",
          "type": "message",
          "user": "U03HVBSNM6J",
          "text": "Sorry i was not clear about it.",
          "ts": "1654795538.689969",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uhbq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sorry i was not clear about it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7b1e6792-7d3b-43f1-a378-8370a2cbb6ad",
          "type": "message",
          "user": "U03HWD8L36V",
          "text": "Hi Craig - are you connecting to GitHub or GitHub Enterprise?",
          "ts": "1654795603.804429",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pI1ob",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Craig - are you connecting to GitHub or GitHub Enterprise?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9094ca15-3c77-462a-b45d-4e5cf6847c7a",
          "type": "message",
          "user": "U03HVBSNM6J",
          "text": "Github personal  i use",
          "ts": "1654795629.750869",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fe4oG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Github personal  i use"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "97e43967-e2e5-42a5-8270-478e7bbd4650",
          "type": "message",
          "user": "U03HWD8L36V",
          "text": "So \u003chttp://github.com|github.com\u003e?",
          "ts": "1654795641.100369",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kif",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So "
                    },
                    {
                      "type": "link",
                      "url": "http://github.com",
                      "text": "github.com"
                    },
                    {
                      "type": "text",
                      "text": "?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "79dccf0f-b756-4621-a88a-3d56632129c3",
          "type": "message",
          "user": "U03HVBSNM6J",
          "text": "ok",
          "ts": "1654795646.023879",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "D4+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "ok"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "383326ad-608d-46ba-b0ad-e2930ed23d55",
          "type": "message",
          "user": "U03HWD8L36V",
          "text": "Okay, see these steps for connecting Xcode Cloud with your GitHub repository: \u003chttps://developer.apple.com/documentation/xcode/connecting-xcode-cloud-to-github\u003e",
          "ts": "1654795671.814789",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Tf1NZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Okay, see these steps for connecting Xcode Cloud with your GitHub repository: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/connecting-xcode-cloud-to-github",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5509ddb8-c0de-4741-8da8-3ac7bd086b1a",
          "type": "message",
          "user": "U03HWD8L36V",
          "text": "In the doc, see item 5 to answer your question about creating a GitHub app:\n\u0026gt; 5. Review the GitHub app that Apple provides on the GitHub website and choose to only install it for your project’s repository. Don’t install it for every repository. GitHub uses the app to grant Xcode Cloud access to your repository.",
          "ts": "1654795712.246779",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wU/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In the doc, see item 5 to answer your question about creating a GitHub app:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"5. Review the GitHub app that Apple provides on the GitHub website and choose to only install it for your project\\u2019s repository. Don\\u2019t install it for every repository. GitHub uses the app to grant Xcode Cloud access to your repository.\"}]}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "74cdb6b4-1ca3-488b-b51e-8030df3981a5",
          "type": "message",
          "user": "U03HVBSNM6J",
          "text": "Add remote for github but when i get to  try to access  github it keep lading.",
          "ts": "1654795751.713109",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "n7Vh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Add remote for github but when i get to  try to access  github it keep lading."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cbba7d09-9ae6-4512-854e-49de20d0f3cc",
          "type": "message",
          "user": "U03HWD8L36V",
          "text": "You mean when Xcode Cloud runs a job where it tries to clone your repository, that it keeps loading there? Or that in Xcode, when you e.g. push/pull to your GitHub repository, that it keeps loading? Or when you're creating an Xcode Cloud workflow and Xcode asks you to authorize your GitHub repository with Xcode Cloud? Just so that I understand where the issue might be.",
          "ts": "1654795879.968319",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "b4l",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You mean when Xcode Cloud runs a job where it tries to clone your repository, that it keeps loading there? Or that in Xcode, when you e.g. push/pull to your GitHub repository, that it keeps loading? Or when you're creating an Xcode Cloud workflow and Xcode asks you to authorize your GitHub repository with Xcode Cloud? Just so that I understand where the issue might be."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "926fac77-d37a-4ea1-af56-62f412a2cefd",
          "type": "message",
          "user": "U03HVBSNM6J",
          "text": "Yes",
          "ts": "1654795900.584519",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "laKo",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "df533398-ddd8-471b-91e0-4c316b789f52",
          "type": "message",
          "user": "U03HWD8L36V",
          "text": "Which of the 3 scenarios are you seeing the issue in?",
          "ts": "1654796054.396779",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "e9V=p",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Which of the 3 scenarios are you seeing the issue in?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "64528581-c48f-4549-8948-dcb46492feec",
          "type": "message",
          "user": "U03HVBSNM6J",
          "text": "It working now",
          "ts": "1654796080.522169",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "diT/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It working now"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e256b547-3ff7-4885-9ad2-c493878d09d8",
          "type": "message",
          "user": "U03HWD8L36V",
          "text": "Great!",
          "ts": "1654796091.878859",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "v/gBw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Great!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ae0a005e-97b3-4c22-8e6c-ebb519adf4b8",
          "type": "message",
          "user": "U03HVBSNM6J",
          "text": "Thank You",
          "ts": "1654796953.293839",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "22C",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank You"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "36739a89-79c1-427d-a2b0-19ebfb8b39b8",
          "type": "message",
          "user": "U03HWD8L36V",
          "text": "You're welcome!",
          "ts": "1654797432.829809",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mGA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You're welcome!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6c805601-742a-48db-a70b-eb99fab7f5ac",
          "type": "message",
          "user": "U03HVBSNM6J",
          "text": ":slightly_smiling_face:",
          "ts": "1654800302.161879",
          "thread_ts": "1654795103.042199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uIuMS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J20E7UBV\u003e asked\n\u0026gt; Is there a workflow that allows for manually building a build off of a specific branch?  More specifically, if I had a feature branch and wanted to generate a build for a non-developer to test through TestFlight, is this possible?",
      "ts": "1654795822.798939",
      "thread_ts": "1654795822.798939",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654797157.403219",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "A42",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J20E7UBV"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a workflow that allows for manually building a build off of a specific branch?  More specifically, if I had a feature branch and wanted to generate a build for a non-developer to test through TestFlight, is this possible?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "d463739d-ddda-4379-8c13-a23a93de98b2",
          "type": "message",
          "user": "U03J7H65WGY",
          "text": "Yes! You can create a workflow with an archive action and any start condition. To prevent the start condition from running and make the workflow only trigger manually, you can disable the workflow. Disabling the workflow will stop the start condition from working, but will still let you start builds manually. You can start a build manually by using the Start Build button. I realize that this flow is  involved. Please file a feedback report with \u003chttp://feedbackassistant.apple.com/|Feedback Assistant\u003e and provide feedback / suggestions for making this flow better.",
          "ts": "1654795896.450249",
          "thread_ts": "1654795822.798939",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-thank-you",
              "count": 1,
              "users": [
                "U03J20E7UBV"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4Pe",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes! You can create a workflow with an archive action and any start condition. To prevent the start condition from running and make the workflow only trigger manually, you can disable the workflow. Disabling the workflow will stop the start condition from working, but will still let you start builds manually. You can start a build manually by using the Start Build button. I realize that this flow is  involved. Please file a feedback report with "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com/",
                      "text": "Feedback Assistant"
                    },
                    {
                      "type": "text",
                      "text": " and provide feedback / suggestions for making this flow better."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2521925d-4f17-4d6c-95a7-957eb85ee441",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Thank you, \u003c@U03J7H65WGY\u003e!",
          "ts": "1654796028.824449",
          "thread_ts": "1654795822.798939",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hv9Lv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you, "
                    },
                    {
                      "type": "user",
                      "user_id": "U03J7H65WGY"
                    },
                    {
                      "type": "text",
                      "text": "!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c31f4ff1-c536-4645-be1a-7cabb00ab0b3",
          "type": "message",
          "user": "U03J7H65WGY",
          "text": "No problem. I hope you have a great rest of your day!",
          "ts": "1654796366.334129",
          "thread_ts": "1654795822.798939",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lKcka",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "No problem. I hope you have a great rest of your day!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cee1f803-33bf-4408-bc65-651bdc247ebc",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "You as well!",
          "ts": "1654797157.403219",
          "thread_ts": "1654795822.798939",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "J+FjV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You as well!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JQ7PU1L1\u003e asked\n\u0026gt; In Xcode cloud workflow there is an option to select Deployment preparation for internal or App Store. and In Post-Action it's also separate between internal and app store. My question is from my understand in Appstore connect dashboard there is only one place showing Testflight how is internal and appstore build being differentiate? or how can I tell which one is for internal or which one is for app store",
      "ts": "1654795884.280519",
      "thread_ts": "1654795884.280519",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654796201.715329",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "GnV",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JQ7PU1L1"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"In Xcode cloud workflow there is an option to select Deployment preparation for internal or App Store. and In Post-Action it's also separate between internal and app store. My question is from my understand in Appstore connect dashboard there is only one place showing Testflight how is internal and appstore build being differentiate? or how can I tell which one is for internal or which one is for app store\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "93f445dc-462b-4c13-8689-262fca4d6df9",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "If you want to check if an Xcode Cloud build is Internal Only or App Store Eligible, you can go to Build Groups tab \u0026gt; click on a build and check the Build Type field. Also, you will not be able to add any internal only builds to an external group, they will be disabled in the Add Build UI.",
          "ts": "1654795891.739459",
          "thread_ts": "1654795884.280519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FNTi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you want to check if an Xcode Cloud build is Internal Only or App Store Eligible, you can go to Build Groups tab \u003e click on a build and check the Build Type field. Also, you will not be able to add any internal only builds to an external group, they will be disabled in the Add Build UI."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d3b142dc-5611-445d-9437-4d73c3aca261",
          "type": "message",
          "user": "U03JQ7PU1L1",
          "text": "Thanks. curious did this ever get mentioned in any document or session ?",
          "ts": "1654796074.255629",
          "thread_ts": "1654795884.280519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8NQO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks. curious did this ever get mentioned in any document or session ?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "57bf9e21-dcdc-474e-8b86-7083b216b24a",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Deploying to internal testers was covered in \u003chttps://developer.apple.com/wwdc21/10268|Explore Xcode Cloud workflows\u003e",
          "ts": "1654796201.715329",
          "thread_ts": "1654795884.280519",
          "attachments": [
            {
              "fallback": "Apple Developer: Explore Xcode Cloud workflows - WWDC21 - Videos - Apple Developer",
              "id": 1,
              "title": "Explore Xcode Cloud workflows - WWDC21 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/wwdc21/10268",
              "text": "Learn how Xcode Cloud workflows can help you and your team automate building, analyzing, testing, archiving, and distributing your apps...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/119/5199/5199_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/wwdc21/10268",
              "original_url": "https://developer.apple.com/wwdc21/10268",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U03JQ7PU1L1"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Oj=FD",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Deploying to internal testers was covered in "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc21/10268",
                      "text": "Explore Xcode Cloud workflows"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JQ7PU1L1\u003e asked\n\u0026gt; I have a lot of extensions in our app so updating them for a new build requires going in to each one to update the version number and build number. Is there a way to automate this? using custom script?",
      "ts": "1654795936.042879",
      "thread_ts": "1654795936.042879",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654796033.581319",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "tig",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JQ7PU1L1"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I have a lot of extensions in our app so updating them for a new build requires going in to each one to update the version number and build number. Is there a way to automate this? using custom script?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "30155647-dca8-45d7-816d-41c81c40005f",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "When distributing your app from either Xcode or Xcode Cloud, the build numbers in your app and all of your app extensions will automatically be updated. For more information, watch \u003chttps://developer.apple.com/wwdc21/10204|Distribute apps in Xcode with cloud signing\u003e or check out \u003chttps://developer.apple.com/documentation/xcode/setting-the-next-build-number-for-xcode-cloud-builds|this documentation\u003e for Xcode Cloud. You will still need to manage version numbers yourself, since those are more correlated to your own product release plans.",
          "ts": "1654795948.144989",
          "thread_ts": "1654795936.042879",
          "attachments": [
            {
              "fallback": "Apple Developer: Distribute apps in Xcode with cloud signing - WWDC21 - Videos - Apple Developer",
              "id": 1,
              "title": "Distribute apps in Xcode with cloud signing - WWDC21 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/wwdc21/10204",
              "text": "Discover how to distribute your apps directly to App Store Connect and all the distribution methods supported in Xcode. Explore how to...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/119/5115/5115_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/wwdc21/10204",
              "original_url": "https://developer.apple.com/wwdc21/10204",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tOc1r",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "When distributing your app from either Xcode or Xcode Cloud, the build numbers in your app and all of your app extensions will automatically be updated. For more information, watch "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc21/10204",
                      "text": "Distribute apps in Xcode with cloud signing"
                    },
                    {
                      "type": "text",
                      "text": " or check out "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/setting-the-next-build-number-for-xcode-cloud-builds",
                      "text": "this documentation"
                    },
                    {
                      "type": "text",
                      "text": " for Xcode Cloud. You will still need to manage version numbers yourself, since those are more correlated to your own product release plans."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bb497b05-8982-4094-9f21-214ce74cb50b",
          "type": "message",
          "user": "U03JQ7PU1L1",
          "text": "Thanks Itai",
          "ts": "1654796033.581319",
          "thread_ts": "1654795936.042879",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HB5P2UTY"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6xk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks Itai"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "e9281bf2-c5d0-4fb1-b17a-a412a758f56b",
      "type": "message",
      "user": "U03HL553PNG",
      "text": "I'm super excited to see how much interest there is in Xcode Cloud!",
      "ts": "1654796114.940149",
      "thread_ts": "1654796114.940149",
      "reply_count": 1,
      "latest_reply": "1654796161.311089",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "partying_face",
          "count": 11,
          "users": [
            "U03HB5RVBQW",
            "U03HWD8L36V",
            "U03J22AU6DQ",
            "U03HWCZLQ9X",
            "U03DF5L7S30",
            "U03HB5P2UTY",
            "U03HESBUZUM",
            "U03JQ7PU1L1",
            "U03JRNX058Q",
            "U03JZ218ZUY",
            "U03JDTLSGLU"
          ]
        },
        {
          "name": "tada",
          "count": 5,
          "users": [
            "U03HB5RVBQW",
            "U03HWD8L36V",
            "U03DF5L7S30",
            "U03H36UBPPH",
            "U03JZ218ZUY"
          ]
        },
        {
          "name": "cloud",
          "count": 3,
          "users": [
            "U03HB5RVBQW",
            "U03HWD8L36V",
            "U03JZ218ZUY"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ExgnX",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "I'm super excited to see how much interest there is in Xcode Cloud!"
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "33a67084-4899-4b74-b98d-a372b0e11eb0",
          "type": "message",
          "user": "U03JQ7PU1L1",
          "text": "Yeah, finally it's open up for all developers.",
          "ts": "1654796161.311089",
          "thread_ts": "1654796114.940149",
          "parent_user_id": "U03HL553PNG",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bs0g",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yeah, finally it's open up for all developers."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03K1SMSPUZ\u003e asked\n\u0026gt; Does Xcode Cloud support custom release notes during a build step? I could be missing a toggle somewhere but feels like a great feature to include, e.g. branch names or commit msg.",
      "ts": "1654796379.834829",
      "thread_ts": "1654796379.834829",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654796616.894579",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "1N7XL",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K1SMSPUZ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Does Xcode Cloud support custom release notes during a build step? I could be missing a toggle somewhere but feels like a great feature to include, e.g. branch names or commit msg.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "79fcea67-df0e-4ba3-8cda-831ce5806354",
          "type": "message",
          "user": "U03J7H8QABS",
          "text": "Xcode Cloud doesn’t have any kind of release notes support, but it sounds like a great idea. Could you \u003chttp://feedbackassistant.apple.com/|file a feedback\u003e explaining what you'd like to see and how you might use it?",
          "ts": "1654796391.849649",
          "thread_ts": "1654796379.834829",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1::skin-tone-4",
              "count": 1,
              "users": [
                "U03K1SMSPUZ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vVf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Xcode Cloud doesn’t have any kind of release notes support, but it sounds like a great idea. Could you "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com/",
                      "text": "file a feedback"
                    },
                    {
                      "type": "text",
                      "text": " explaining what you'd like to see and how you might use it?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "692528BE-64EC-4251-AA7B-7A7A4940919A",
          "type": "message",
          "user": "U03K9D00WLR",
          "text": ":+1: ",
          "ts": "1654796616.894579",
          "thread_ts": "1654796379.834829",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Puw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "emoji",
                      "name": "+1",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HWEGHRKR\u003e asked\n\u0026gt; Is it possible to disable `precondition` checks when running XCTests? where should I pass the compile flag?",
      "ts": "1654796657.486269",
      "thread_ts": "1654796657.486269",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654796666.976169",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "peqSg",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HWEGHRKR"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is it possible to disable `precondition` checks when running XCTests? where should I pass the compile flag?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "d16fc922-17f9-4f90-a877-9bfcfc168766",
          "type": "message",
          "user": "U03J7H8KC8Y",
          "text": "This is possible by adding `-Ounchecked` to the Other Swift Flags build setting, however this would not be specific to running tests, and is not generally recommended.",
          "ts": "1654796666.976169",
          "thread_ts": "1654796657.486269",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HWEGHRKR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wTQEL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is possible by adding "
                    },
                    {
                      "type": "text",
                      "text": "-Ounchecked",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to the Other Swift Flags build setting, however this would not be specific to running tests, and is not generally recommended."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ60G5K7\u003e asked\n\u0026gt; I am working at an app agency, building apps for 50+ customers, all with their own developer accounts. What is the recommended way of managing Xcode Cloud setups \u0026amp; builds across multiple developer accounts or teams?",
      "ts": "1654796760.380239",
      "thread_ts": "1654796760.380239",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654796775.095959",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "cvj/",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ60G5K7"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I am working at an app agency, building apps for 50+ customers, all with their own developer accounts. What is the recommended way of managing Xcode Cloud setups \u0026 builds across multiple developer accounts or teams?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "99282643-f209-4e64-b0b8-ab7e608f7f0f",
          "type": "message",
          "user": "U03HL5G4QFN",
          "text": "Xcode Cloud is per WWDR team. You would have to onboard your apps in Xcode for each respective app/team. We don't really have advice for the managing multiple WWDR teams.",
          "ts": "1654796775.095959",
          "thread_ts": "1654796760.380239",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4UK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Xcode Cloud is per WWDR team. You would have to onboard your apps in Xcode for each respective app/team. We don't really have advice for the managing multiple WWDR teams."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "3eb530e6-8704-488e-bac0-fb6fd3cdf8e0",
      "type": "message",
      "user": "U03HESC47EZ",
      "text": "We just have about 10 more minutes to go for the *Xcode Cloud and Testing* Q\u0026amp;A. Thank you so much for so many great questions so far! If you have any final questions, please submit them with the :workflowbolt: button below!",
      "ts": "1654796901.249829",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Ok+",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "We just have about 10 more minutes to go for the "
                },
                {
                  "type": "text",
                  "text": "Xcode Cloud and Testing",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " Q\u0026A. Thank you so much for so many great questions so far! If you have any final questions, please submit them with the "
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " button below!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JEMQ66C9\u003e asked\n\u0026gt; When trying to set up Xcode Cloud for our iOS app containing private Swift packages, we see the error\n\u0026gt; \n\u0026gt; GitLab installation was incomplete.\n\u0026gt; Repository was not found. Either the repository does not exist or you do not have permission to access it.\n\u0026gt; \n\u0026gt; Is there something special to do for Xcode Cloud to get access to private Swift packages hosted on GitLab?",
      "ts": "1654797175.823399",
      "thread_ts": "1654797175.823399",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654797326.667719",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ldT",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JEMQ66C9"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"When trying to set up Xcode Cloud for our iOS app containing private Swift packages, we see the error\\n\\nGitLab installation was incomplete.\\nRepository was not found. Either the repository does not exist or you do not have permission to access it.\\n\\nIs there something special to do for Xcode Cloud to get access to private Swift packages hosted on GitLab?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "bfc0a726-5719-47c3-ac14-be6ab11c18e1",
          "type": "message",
          "user": "U03HWD8L36V",
          "text": "Please make sure to follow the steps described in connecting Xcode Cloud with GitLab (\u003chttps://developer.apple.com/documentation/xcode/connecting-xcode-cloud-to-gitlab\u003e) or self-hosted GitLab (\u003chttps://developer.apple.com/documentation/xcode/connecting-xcode-cloud-to-a-self-managed-gitlab-instance\u003e), depending on which one you're using.\n\nFor that, you need to be an admin of the repositories.\n\nIf the issue persists, please file a feedback at \u003chttp://feedbackassistant.apple.com|feedbackassistant.apple.com\u003e.",
          "ts": "1654797182.311229",
          "thread_ts": "1654797175.823399",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "K=Wj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Please make sure to follow the steps described in connecting Xcode Cloud with GitLab ("
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/connecting-xcode-cloud-to-gitlab",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ") or self-hosted GitLab ("
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/connecting-xcode-cloud-to-a-self-managed-gitlab-instance",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "), depending on which one you're using.\n\nFor that, you need to be an admin of the repositories.\n\nIf the issue persists, please file a feedback at "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "feedbackassistant.apple.com"
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "53b9aedd-9850-471e-abbe-e527d15412d5",
          "type": "message",
          "user": "U03JEMQ66C9",
          "text": "Thanks \u003c@U03HWD8L36V\u003e, I will double check!",
          "ts": "1654797253.072479",
          "thread_ts": "1654797175.823399",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03HWD8L36V"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hiHS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HWD8L36V"
                    },
                    {
                      "type": "text",
                      "text": ", I will double check!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9bb22142-1550-4a70-b2ff-e783f6598a11",
          "type": "message",
          "user": "U03HWD8L36V",
          "text": "You can also try to remove the connection and start over. For the removal, see \u003chttps://developer.apple.com/documentation/xcode/removing-your-project-from-xcode-cloud#Disconnect-your-Git-repository-in-Xcode-Cloud\u003e",
          "ts": "1654797326.667719",
          "thread_ts": "1654797175.823399",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5DH4P",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can also try to remove the connection and start over. For the removal, see "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/removing-your-project-from-xcode-cloud#Disconnect-your-Git-repository-in-Xcode-Cloud",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JUPYKNSY\u003e asked\n\u0026gt; Any chance to get Xcode Cloud enabled for Enterprise/In-House builds? That would be our main use-case.",
      "ts": "1654797300.119509",
      "thread_ts": "1654797300.119509",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654797320.333549",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "SUo",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JUPYKNSY"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Any chance to get Xcode Cloud enabled for Enterprise\\/In-House builds? That would be our main use-case.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "e2e8c09e-048a-45bc-8a93-11dd37672de7",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Thank you for your question! This was answered above in \u003chttps://wwdc22.slack.com/archives/C03H0JN431U/p1654792281999369\u003e",
          "ts": "1654797320.333549",
          "thread_ts": "1654797300.119509",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JUPYKNSY"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eHgT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for your question! This was answered above in "
                    },
                    {
                      "type": "link",
                      "url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654792281999369",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVD5FL1L\u003e asked\n\u0026gt; Is there a tool to help track Hangs with Enterprise Apps ?",
      "ts": "1654797528.427359",
      "thread_ts": "1654797528.427359",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654799193.156689",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Fps",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVD5FL1L"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a tool to help track Hangs with Enterprise Apps ?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6221a922-fd8d-4dae-bc1c-c2defd795416",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "Hi - thanks for the question! You should be able to use MetricKit to collect hang reports from enterprise apps on iOS and macOS. Please also give Instruments with Hang Reporting a try.",
          "ts": "1654798426.729109",
          "thread_ts": "1654797528.427359",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "white_check_mark",
              "count": 1,
              "users": [
                "U03HVD5FL1L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LAo",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi - thanks for the question! You should be able to use MetricKit to collect hang reports from enterprise apps on iOS and macOS. Please also give Instruments with Hang Reporting a try."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4b59c8e3-e67f-487d-9473-831c87c62aaa",
          "type": "message",
          "user": "U03HVD5FL1L",
          "text": "Thanks !",
          "ts": "1654799193.156689",
          "thread_ts": "1654797528.427359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xSpe",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks !"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "5dc02a9f-c4ae-4621-bb04-a01972daefef",
      "type": "message",
      "user": "U03H36UADV5",
      "text": "Thank you everyone for making our Xcode Cloud and Testing Open Hours Digital Lounge so exciting! So many great questions.\nHave a great rest of your day!  Hope you all are having a great WWDC!",
      "ts": "1654797575.841829",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "8C1J",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Thank you everyone for making our Xcode Cloud and Testing Open Hours Digital Lounge so exciting! So many great questions.\nHave a great rest of your day!  Hope you all are having a great WWDC!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "0f9418fa-8b21-47a7-b1d0-daad0023f19c",
      "type": "message",
      "user": "U03H36UADV5",
      "text": "We got lots of questions and may not have been able to answer all of them. If your question didn't get answered, you can check to see if there are \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/|other Developer Tools Sessions, Labs, or Lounges\u003e that might be better suited to your questions. For topics not covered there, you can also post your questions in the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e.",
      "ts": "1654797614.209119",
      "attachments": [
        {
          "fallback": "Developer Tools - Topics - WWDC22",
          "id": 1,
          "title": "Developer Tools - Topics - WWDC22",
          "title_link": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "text": "Everything you need to know to build the next great app or game.",
          "image_url": "https://developer.apple.com/wwdc22/topics/images/og/developer-tools-og.png",
          "service_name": "developer.apple.com",
          "service_icon": "https://developer.apple.com/favicon.ico",
          "from_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "original_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "blocks": null
        },
        {
          "fallback": "Apple Developer Forums",
          "id": 2,
          "title": "Apple Developer Forums",
          "title_link": "http://developer.apple.com/forums/",
          "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
          "service_name": "forums.developer.apple.com",
          "service_icon": "https://forums.developer.apple.com/forums/build-06082022-1/public/assets/favicon.ico",
          "from_url": "http://developer.apple.com/forums/",
          "original_url": "http://developer.apple.com/forums/",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "CDWhK",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "We got lots of questions and may not have been able to answer all of them. If your question didn't get answered, you can check to see if there are "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
                  "text": "other Developer Tools Sessions, Labs, or Lounges"
                },
                {
                  "type": "text",
                  "text": " that might be better suited to your questions. For topics not covered there, you can also post your questions in the "
                },
                {
                  "type": "link",
                  "url": "http://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "user": "U03HL553PNG",
      "text": "set the channel topic: Q\u0026amp;A: Performance, Power, and Stability",
      "ts": "1654797658.500329",
      "subtype": "channel_topic",
      "topic": "Q\u0026amp;A: Performance, Power, and Stability",
      "replace_original": false,
      "delete_original": false,
      "blocks": null
    },
    {
      "client_msg_id": "b61c17e8-622a-4b4c-aa38-3a731faac980",
      "type": "message",
      "user": "U03HERY4SN9",
      "text": ":wave: Welcome to Q\u0026amp;A: *Performance, Power, and Stability*! We are so happy and excited to have you all here!! :partying_face:\n\nThanks for keeping everything chill and refreshing yourself with our code of conduct!\n\nFor this activity, we’re looking forward to answering your questions through the Workflow built in to Slack.\n\n*How To Ask a Question:*\n1. Select the Shortcuts button (:heavy_plus_sign:icon) from the lower left, and find the :workflowbolt:_Ask a question_ workflow.\n2. Type in your question\nYour question will be delivered directly to us, and we’ll repost and answer as many of them as we can.\n\nLet’s kick it off! :tada:",
      "ts": "1654797662.285839",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Zc8",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "emoji",
                  "name": "wave",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " Welcome to Q\u0026A: "
                },
                {
                  "type": "text",
                  "text": "Performance, Power, and Stability",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "! We are so happy and excited to have you all here!! "
                },
                {
                  "type": "emoji",
                  "name": "partying_face",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "\n\nThanks for keeping everything chill and refreshing yourself with our code of conduct!\n\nFor this activity, we’re looking forward to answering your questions through the Workflow built in to Slack.\n\n"
                },
                {
                  "type": "text",
                  "text": "How To Ask a Question:",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "\n"
                }
              ]
            },
            {
              "Type": "rich_text_list",
              "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Select the Shortcuts button (\"},{\"type\":\"emoji\",\"name\":\"heavy_plus_sign\"},{\"type\":\"text\",\"text\":\"icon) from the lower left, and find the \"},{\"type\":\"emoji\",\"name\":\"workflowbolt\",\"style\":{\"italic\":true}},{\"type\":\"text\",\"text\":\"Ask a question\",\"style\":{\"italic\":true}},{\"type\":\"text\",\"text\":\" workflow.\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Type in your question\"}]}],\"style\":\"ordered\",\"indent\":0,\"border\":0}"
            },
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "\nYour question will be delivered directly to us, and we’ll repost and answer as many of them as we can.\n\nLet’s kick it off! "
                },
                {
                  "type": "emoji",
                  "name": "tada",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "e8c42f5e-9ac2-49e8-871d-021e7fcca984",
      "type": "message",
      "user": "U03HERY4SN9",
      "text": "What’s the silliest :rolling_on_the_floor_laughing: one-line perf mistake you’ve discovered by profiling your code? :thread:",
      "ts": "1654798719.743289",
      "thread_ts": "1654798719.743289",
      "edited": {
        "user": "U03HERY4SN9",
        "ts": "1654798750.000000"
      },
      "reply_count": 7,
      "latest_reply": "1654800016.781869",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "g2cK",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "What’s the silliest "
                },
                {
                  "type": "emoji",
                  "name": "rolling_on_the_floor_laughing",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " one-line perf mistake you’ve discovered by profiling your code? "
                },
                {
                  "type": "emoji",
                  "name": "thread",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "cf3f613d-1405-46f2-9bed-c1721dd36fb9",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "I somehow keep mixing up the 2nd and 3rd arguments in a `for` loop which puts that into an infinite loop when you swap the condition checking with the incrementer.",
          "ts": "1654798936.708729",
          "thread_ts": "1654798719.743289",
          "parent_user_id": "U03HERY4SN9",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "laughing",
              "count": 1,
              "users": [
                "U03HERY4SN9"
              ]
            },
            {
              "name": "infinity",
              "count": 2,
              "users": [
                "U03J7H0BZ40",
                "U03JLTMSAV7"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZckIP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I somehow keep mixing up the 2nd and 3rd arguments in a "
                    },
                    {
                      "type": "text",
                      "text": "for",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " loop which puts that into an infinite loop when you swap the condition checking with the incrementer."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7b00d3a2-5985-48c4-819d-b063d48fbd97",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Early in my career I noticed a bug in our code when running in 64-bit. We used over 5x more memory to complete a simple task. Profiling our app easily turned up the issue — someone had allocated a huge buffer to work around another 64-bit bug years earlier and had never removed it when the bug was fixed!",
          "ts": "1654799200.148839",
          "thread_ts": "1654798719.743289",
          "parent_user_id": "U03HERY4SN9",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "laughing",
              "count": 1,
              "users": [
                "U03HERY4SN9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GdSpY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Early in my career I noticed a bug in our code when running in 64-bit. We used over 5x more memory to complete a simple task. Profiling our app easily turned up the issue — someone had allocated a huge buffer to work around another 64-bit bug years earlier and had never removed it when the bug was fixed!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "18661585-a393-43c9-8438-54802d74d2fb",
          "type": "message",
          "user": "U03HL5AMFCL",
          "text": "Perhaps not the silliest, but always fun to discover `-[x containsObject:]` in a profile where x was *actually* an NSArray but was supposed to be an NSSet according to all of the surrounding code :slightly_smiling_face:",
          "ts": "1654799302.958569",
          "thread_ts": "1654798719.743289",
          "parent_user_id": "U03HERY4SN9",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "face_with_hand_over_mouth",
              "count": 1,
              "users": [
                "U03HERY4SN9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BKR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Perhaps not the silliest, but always fun to discover "
                    },
                    {
                      "type": "text",
                      "text": "-[x containsObject:]",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in a profile where x was "
                    },
                    {
                      "type": "text",
                      "text": "actually",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " an NSArray but was supposed to be an NSSet according to all of the surrounding code "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1655c17d-7039-42d9-96ab-f405f390c73b",
          "type": "message",
          "user": "U03HES3BYA1",
          "text": "I slightly messed an atomic increment recently which made the code always have to retry once before the increment succeeded. Somehow this displeased the CPU badly enough to make it run ~10x slower, not just 2x. The retry worked so it looked like everything was fine until I started timing it.",
          "ts": "1654799461.354809",
          "thread_ts": "1654798719.743289",
          "parent_user_id": "U03HERY4SN9",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "joy",
              "count": 1,
              "users": [
                "U03HERY4SN9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6Sg0",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I slightly messed an atomic increment recently which made the code always have to retry once before the increment succeeded. Somehow this displeased the CPU badly enough to make it run ~10x slower, not just 2x. The retry worked so it looked like everything was fine until I started timing it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c72138e5-d496-417f-a674-6fc2a88f39a2",
          "type": "message",
          "user": "U03HHPUBMMY",
          "text": "I implemented a simple tree data structure, and scanning a given level of the tree should have taken linear time. Basic tests with a few entries worked fine. Once the app encountered real-world data, though, it became extremely slow. Instruments quickly showed me that each query was recursively descending through the whole tree, then throwing away everything. Oops -- accidentally quadratic!",
          "ts": "1654799897.146399",
          "thread_ts": "1654798719.743289",
          "parent_user_id": "U03HERY4SN9",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "laughing",
              "count": 1,
              "users": [
                "U03HERY4SN9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rpJ2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I implemented a simple tree data structure, and scanning a given level of the tree should have taken linear time. Basic tests with a few entries worked fine. Once the app encountered real-world data, though, it became extremely slow. Instruments quickly showed me that each query was recursively descending through the whole tree, then throwing away everything. Oops -- accidentally quadratic!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "09cc0d73-2b34-4258-8aff-e292637fdc4b",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "I mean… it has to be dispatching something to the main thread that I didn’t mean to be there.",
          "ts": "1654800004.987609",
          "thread_ts": "1654798719.743289",
          "parent_user_id": "U03HERY4SN9",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "joy",
              "count": 1,
              "users": [
                "U03HERY4SN9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cnOf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I mean… it has to be dispatching something to the main thread that I didn’t mean to be there."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f5b200c2-e2b3-4f13-9450-2448bd225b28",
          "type": "message",
          "user": "U03HERY4SN9",
          "text": "So glad Instruments helped you discover the issue quickly!",
          "ts": "1654800016.781869",
          "thread_ts": "1654798719.743289",
          "parent_user_id": "U03HERY4SN9",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "sweat_smile",
              "count": 1,
              "users": [
                "U03J4D1FEP6"
              ]
            },
            {
              "name": "+1::skin-tone-3",
              "count": 1,
              "users": [
                "U03J4D1FEP6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZRX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So glad Instruments helped you discover the issue quickly!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMBPKU0P\u003e asked\n\u0026gt; Hi! I hope this is the right room for this question. When releasing an app on the App Store, we can conveniently receive symbolicated crash reports via the App Store itself. Instead, when releasing apps by any other mean, like enterprise, I currently rely on Firebase Crashlytics, but it's not as convenient because since lately (a year or more) it's always missing dSYMs. Is there any official way that maybe I don't know to get crash reports from enterprise apps? Thank you!",
      "ts": "1654798732.060559",
      "thread_ts": "1654798732.060559",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654811438.322139",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "WZKlQ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMBPKU0P"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi! I hope this is the right room for this question. When releasing an app on the App Store, we can conveniently receive symbolicated crash reports via the App Store itself. Instead, when releasing apps by any other mean, like enterprise, I currently rely on Firebase Crashlytics, but it's not as convenient because since lately (a year or more) it's always missing dSYMs. Is there any official way that maybe I don't know to get crash reports from enterprise apps? Thank you!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "b357fb25-4130-4816-9a42-02747d6aec66",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "Hello. I'm glad to hear you're making use of the Xcode Organizer window!\n\nCrash reporting in the Organizer can be used for TestFlight, App Store, and Custom App distributions. If it makes sense, I would consider using TestFlight or Custom App distribution where you may be using Enterprise or Ad Hoc distribution.\n\nFor distributions outside the App Store or TestFlight, you can collect Crash Logs from your users via the MetricKit framework within your code or ask the user to send you the log via the Settings menu. These latter options require keeping your dSYMs and performing local symbolication manually.\n\nFor more information on crash reporting in the Xcode Organizer window, dSYMs, and MetricKit, I recommend the following sessions:\n\n\u003chttps://developer.apple.com/videos/play/wwdc2021/10203/\u003e\n\u003chttps://developer.apple.com/videos/play/wwdc2021/10211/\u003e\n\u003chttps://developer.apple.com/videos/play/wwdc2018/414/\u003e\n\nThese sessions include instructions on how to perform symbolication manually. If you can make use of the Organizer window symbolication is automatic.",
          "ts": "1654798779.955079",
          "thread_ts": "1654798732.060559",
          "attachments": [
            {
              "fallback": "Apple Developer: Triage TestFlight crashes in Xcode Organizer - WWDC21 - Videos - Apple Developer",
              "id": 1,
              "title": "Triage TestFlight crashes in Xcode Organizer - WWDC21 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/videos/play/wwdc2021/10203/",
              "text": "Learn how Xcode Organizer makes it easier and faster to triage and fix crashes. We'll explore how you can get access to crash information...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/119/5114/5114_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/videos/play/wwdc2021/10203/",
              "original_url": "https://developer.apple.com/videos/play/wwdc2021/10203/",
              "blocks": null
            },
            {
              "fallback": "Apple Developer: Symbolication: Beyond the basics - WWDC21 - Videos - Apple Developer",
              "id": 2,
              "title": "Symbolication: Beyond the basics - WWDC21 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/videos/play/wwdc2021/10211/",
              "text": "Discover how you can achieve maximum performance and insightful debugging with your app. Symbolication is at the center of tools such as...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/119/5122/5122_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/videos/play/wwdc2021/10211/",
              "original_url": "https://developer.apple.com/videos/play/wwdc2021/10211/",
              "blocks": null
            },
            {
              "fallback": "Apple Developer: Understanding Crashes and Crash Logs - WWDC18 - Videos - Apple Developer",
              "id": 3,
              "title": "Understanding Crashes and Crash Logs - WWDC18 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/videos/play/wwdc2018/414/",
              "text": "Sudden app crashes are a source of bad user experience and app review rejections. Learn how crash logs can be analyzed, what information...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/42/2167/2167_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/videos/play/wwdc2018/414/",
              "original_url": "https://developer.apple.com/videos/play/wwdc2018/414/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-thank-you",
              "count": 1,
              "users": [
                "U03HMBPKU0P"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6u3Nm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hello. I'm glad to hear you're making use of the Xcode Organizer window!\n\nCrash reporting in the Organizer can be used for TestFlight, App Store, and Custom App distributions. If it makes sense, I would consider using TestFlight or Custom App distribution where you may be using Enterprise or Ad Hoc distribution.\n\nFor distributions outside the App Store or TestFlight, you can collect Crash Logs from your users via the MetricKit framework within your code or ask the user to send you the log via the Settings menu. These latter options require keeping your dSYMs and performing local symbolication manually.\n\nFor more information on crash reporting in the Xcode Organizer window, dSYMs, and MetricKit, I recommend the following sessions:\n\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2021/10203/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2021/10211/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2018/414/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n\nThese sessions include instructions on how to perform symbolication manually. If you can make use of the Organizer window symbolication is automatic."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9099DD65-61E8-40E4-85FD-5A13124B674C",
          "type": "message",
          "user": "U03HMBPKU0P",
          "text": "Thanks a lot! This is great! :+1::skin-tone-2:",
          "ts": "1654802976.938759",
          "thread_ts": "1654798732.060559",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HHPU5NLS"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/+X",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "lot!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "This"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "great!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "emoji",
                      "name": "+1",
                      "skin_tone": 2
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4405c67f-5cc5-49ba-b5b2-eeaa4f7a68b5",
          "type": "message",
          "user": "U03HMBPKU0P",
          "text": "Just to be sure, \u003c@U03HHPU5NLS\u003e, are reports collected with MetricKit delivered to the organizer window as well? Is it because I’m signed into Xcode with an account belonging to the app’s signing team?",
          "ts": "1654810098.640779",
          "thread_ts": "1654798732.060559",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "atM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Just to be sure, "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HHPU5NLS"
                    },
                    {
                      "type": "text",
                      "text": ", are reports collected with MetricKit delivered to the organizer window as well? Is it because I’m signed into Xcode with an account belonging to the app’s signing team?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8e8812ba-9bf5-4456-a697-ff4b94305d4b",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "MetricKit reports are delivered directly to your application via the framework. They're separate from the Organizer reports insofar that you'll need to upload and process them yourself. The reports you'll see in the Organizer window are coming from the same source as MetricKit (i.e., user devices,) but they are processed by Apple on your behalf and delivered to the Organizer if you are signed into Xcode with a developer account with access to the associated app.",
          "ts": "1654811067.316609",
          "thread_ts": "1654798732.060559",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vLux",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "MetricKit reports are delivered directly to your application via the framework. They're separate from the Organizer reports insofar that you'll need to upload and process them yourself. The reports you'll see in the Organizer window are coming from the same source as MetricKit (i.e., user devices,) but they are processed by Apple on your behalf and delivered to the Organizer if you are signed into Xcode with a developer account with access to the associated app."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e4c13cf5-8bee-4bce-b97f-93473baf6d04",
          "type": "message",
          "user": "U03HMBPKU0P",
          "text": "Ok, clear, so I can manually deliver them wherever I want, also on my server, am I right?",
          "ts": "1654811145.043819",
          "thread_ts": "1654798732.060559",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GXG4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok, clear, so I can manually deliver them wherever I want, also on my server, am I right?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "76820261-1fe0-405a-a528-5e00d5f2b639",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "Thats correct. MetricKit will provide you the logs themselves as objects defined in the API, and you can convert them to JSON objects for transport off device.",
          "ts": "1654811414.600409",
          "thread_ts": "1654798732.060559",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5juPP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thats correct. MetricKit will provide you the logs themselves as objects defined in the API, and you can convert them to JSON objects for transport off device."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0f8a2f00-6022-4129-8145-7a3adaf2de38",
          "type": "message",
          "user": "U03HMBPKU0P",
          "text": "Perfect, thank you very much!!",
          "ts": "1654811438.322139",
          "thread_ts": "1654798732.060559",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "100",
              "count": 1,
              "users": [
                "U03HHPU5NLS"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fvoT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Perfect, thank you very much!!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J1UX2CQK\u003e asked\n\u0026gt; We release builds with a roughly 2-3 week cadence. App Store Connect opt-in metrics show many active devices + sessions each week. When I open the Xcode 13 organizer, I see crash reports but all the metrics views are marked \"Insufficient Metrics Data.\" Is there a way to tell what the internal threshold is? Any tips on getting performance data from the wild? It seems like a very useful feature we've never been able to take advantage of",
      "ts": "1654799643.088779",
      "thread_ts": "1654799643.088779",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654841949.613409",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "cncvj",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J1UX2CQK"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We release builds with a roughly 2-3 week cadence. App Store Connect opt-in metrics show many active devices + sessions each week. When I open the Xcode 13 organizer, I see crash reports but all the metrics views are marked \\\"Insufficient Metrics Data.\\\" Is there a way to tell what the internal threshold is? Any tips on getting performance data from the wild? It seems like a very useful feature we've never been able to take advantage of\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "e1818ed7-cf3b-4b4d-98ca-afb14cf623c0",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "Hi - thanks for the question! It would be great if we could have your apps bundleID to help investigate this. In the meantime, MetricKit is a good alternative to collect data from the wild on iOS and macOS. You'll be able to capture most of the same metrics/reports directly from the framework. For more information on MetricKit check out the documentation here: \u003chttps://developer.apple.com/documentation/metrickit?language=objc\u003e",
          "ts": "1654799740.105299",
          "thread_ts": "1654799643.088779",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PzMm/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi - thanks for the question! It would be great if we could have your apps bundleID to help investigate this. In the meantime, MetricKit is a good alternative to collect data from the wild on iOS and macOS. You'll be able to capture most of the same metrics/reports directly from the framework. For more information on MetricKit check out the documentation here: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/metrickit?language=objc",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "B6A83391-FF19-45EC-9974-F2CD344854F5",
          "type": "message",
          "user": "U03JLV0E8RJ",
          "text": "Same exact scenario here :man-raising-hand:\nShould we file a FR?",
          "ts": "1654803575.473199",
          "thread_ts": "1654799643.088779",
          "edited": {
            "user": "U03JLV0E8RJ",
            "ts": "1654803590.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UGCyK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Same exact scenario here "
                    },
                    {
                      "type": "emoji",
                      "name": "man-raising-hand",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\nShould we file a FR?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8fb0d087-5653-4add-81d9-05c154be988f",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "Yes please!",
          "ts": "1654803606.136559",
          "thread_ts": "1654799643.088779",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jg2+y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes please!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "18879c87-abe4-4b61-a9cf-6d7f137b4ba3",
          "type": "message",
          "user": "U03J1UX2CQK",
          "text": "Thanks \u003c@U03HHPU5NLS\u003e! Here's my Feedback with bundle ID: FB10140258",
          "ts": "1654808182.255019",
          "thread_ts": "1654799643.088779",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HHPU5NLS"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "yKc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HHPU5NLS"
                    },
                    {
                      "type": "text",
                      "text": "! Here's my Feedback with bundle ID: FB10140258"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4091d8f2-bcdb-48a0-870b-df7afa7a7e34",
          "type": "message",
          "user": "U03JLV0E8RJ",
          "text": "And here’s mine: FB10148972",
          "ts": "1654841949.613409",
          "thread_ts": "1654799643.088779",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HHPU5NLS"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7G/Cn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "And here’s mine: FB10148972"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JK5F8LQ2\u003e asked\n\u0026gt; This is probably very basic, but I have an app that hangs after a few minutes of use and I’m having trouble tracking down the problem. It seems to have some kind of memory leak where some objects aren’t being deallocated as I would expect, but I’m not sure how to resolve that or even if that is the reason for the hang (the app isn’t crashing).",
      "ts": "1654799995.458689",
      "thread_ts": "1654799995.458689",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654822028.903509",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "AqRXF",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JK5F8LQ2"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"This is probably very basic, but I have an app that hangs after a few minutes of use and I\\u2019m having trouble tracking down the problem. It seems to have some kind of memory leak where some objects aren\\u2019t being deallocated as I would expect, but I\\u2019m not sure how to resolve that or even if that is the reason for the hang (the app isn\\u2019t crashing).\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "95ab659c-a062-410b-a886-bde9305a0800",
          "type": "message",
          "user": "U03HB5HL8NS",
          "text": "Hi Ian,\nMemory leaks usually don't cause *long* hangs. A hang occurs when the main thread is not able to process incoming events. This is either because it is busy doing other things or because it is blocked waiting on something else to finish.\n\nThis year, we added Hang detection to Instruments. Just choose the \"Time Profiler\" template in Instruments and profile your app using it. If a hang occurs, it will show up in your process' track, right under the application lifecycle lane (the one showing whether your app is running in the foreground or in the background).\n\nWe also published \u003chttps://developer.apple.com/videos/play/wwdc2022/10082/|a session \u003e*\u003chttps://developer.apple.com/videos/play/wwdc2022/10082/|today\u003e* that goes into more detail about a bunch of tools for tracking down hangs this year.\nE.g. when you run your app from Xcode, Xcode will highlight common hang causes as runtime issues. Also, you can enable on-device hang detection in iOS to get notified of hangs while you are using the device and record them directly to export logs/traces and analyze them later. This way you don't need to have your device attached to Instruments all the time if it takes longer to reproduce.\n\nLastly, feel free to sign up for tomorrow's \u003chttps://developer.apple.com/wwdc22/labs-and-lounges/dashboard/TJ7F5J2CSP/dashboard|Performance, power, and stability lab\u003e and we are happy to take a look at this together with you. If you can reproduce the issue and share your screen during the Webex lab we can take a look together.",
          "ts": "1654800006.328819",
          "thread_ts": "1654799995.458689",
          "attachments": [
            {
              "fallback": "Apple Developer: Track down hangs with Xcode and on-device detection - WWDC22 - Videos - Apple Developer",
              "id": 1,
              "title": "Track down hangs with Xcode and on-device detection - WWDC22 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/videos/play/wwdc2022/10082/",
              "text": "Learn how you can increase responsiveness and eliminate hangs in your app and make even better experiences. Hang out with the Performance...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/124/6576/6576_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/videos/play/wwdc2022/10082/",
              "original_url": "https://developer.apple.com/videos/play/wwdc2022/10082/",
              "blocks": null
            },
            {
              "fallback": "Sign In - Apple",
              "id": 2,
              "title": "Sign In - Apple",
              "title_link": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/TJ7F5J2CSP/dashboard",
              "text": "Sign in with your Apple ID",
              "service_name": "idmsa.apple.com",
              "service_icon": "https://appleid.cdn-apple.com/daw/IDMSWebAuth/static/20Apr2022/images/favicon.ico",
              "from_url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/TJ7F5J2CSP/dashboard",
              "original_url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/TJ7F5J2CSP/dashboard",
              "blocks": null
            }
          ],
          "edited": {
            "user": "U03HB5HL8NS",
            "ts": "1654800020.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "NVpr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Ian,\nMemory leaks usually don't cause "
                    },
                    {
                      "type": "text",
                      "text": "long",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " hangs. A hang occurs when the main thread is not able to process incoming events. This is either because it is busy doing other things or because it is blocked waiting on something else to finish.\n\nThis year, we added Hang detection to Instruments. Just choose the \"Time Profiler\" template in Instruments and profile your app using it. If a hang occurs, it will show up in your process' track, right under the application lifecycle lane (the one showing whether your app is running in the foreground or in the background).\n\nWe also published "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2022/10082/",
                      "text": "a session "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2022/10082/",
                      "text": "today",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " that goes into more detail about a bunch of tools for tracking down hangs this year.\nE.g. when you run your app from Xcode, Xcode will highlight common hang causes as runtime issues. Also, you can enable on-device hang detection in iOS to get notified of hangs while you are using the device and record them directly to export logs/traces and analyze them later. This way you don't need to have your device attached to Instruments all the time if it takes longer to reproduce.\n\nLastly, feel free to sign up for tomorrow's "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/TJ7F5J2CSP/dashboard",
                      "text": "Performance, power, and stability lab"
                    },
                    {
                      "type": "text",
                      "text": " and we are happy to take a look at this together with you. If you can reproduce the issue and share your screen during the Webex lab we can take a look together."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "06446939-c1d3-411e-b36b-da9b9c8eeb0f",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "```This year, we added Hang detection to Instruments.```",
          "ts": "1654800118.633369",
          "thread_ts": "1654799995.458689",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "cool",
              "count": 2,
              "users": [
                "U03JE7PBQPP",
                "U03JK5F8LQ2"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zgHL",
              "elements": [
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"This year, we added Hang detection to Instruments.\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a7df5103-76dc-4e3d-a6b2-56ada37b7a80",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "Noice. :clap::skin-tone-3:",
          "ts": "1654800157.933039",
          "thread_ts": "1654799995.458689",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 3,
              "users": [
                "U03HERY4SN9",
                "U03HB5HL8NS",
                "U03JK5F8LQ2"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Cw9mu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Noice. "
                    },
                    {
                      "type": "emoji",
                      "name": "clap",
                      "skin_tone": 3
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "EF14B1A1-56E4-40A0-8145-FC06344CD61B",
          "type": "message",
          "user": "U03JK5F8LQ2",
          "text": "Excellent. Thanks. To get the new version of instruments do I need the new XCode beta?",
          "ts": "1654806918.702359",
          "thread_ts": "1654799995.458689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mZcs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Excellent. Thanks. "
                    },
                    {
                      "type": "text",
                      "text": "T"
                    },
                    {
                      "type": "text",
                      "text": "o"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "get"
                    },
                    {
                      "type": "text",
                      "text": " the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "new"
                    },
                    {
                      "type": "text",
                      "text": " version"
                    },
                    {
                      "type": "text",
                      "text": " of instruments do"
                    },
                    {
                      "type": "text",
                      "text": " I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "need"
                    },
                    {
                      "type": "text",
                      "text": " the new "
                    },
                    {
                      "type": "text",
                      "text": "XCode"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "beta?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "990f3c79-55b3-4527-8b10-e06eb0ce02a0",
          "type": "message",
          "user": "U03HB5HL8NS",
          "text": "Yes, exactly, Instruments is bundled with Xcode.\nTo get the Hang detection (both the one that shows up in Instruments as well as the on-device hang detection), you'll also need to run your app on the new operating systems (macOS Ventura, iOS 16, etc. depending on where your app lives), as only those have the corresponding instrumentation.",
          "ts": "1654822028.903509",
          "thread_ts": "1654799995.458689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JEVr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, exactly, Instruments is bundled with Xcode.\nTo get the Hang detection (both the one that shows up in Instruments as well as the on-device hang detection), you'll also need to run your app on the new operating systems (macOS Ventura, iOS 16, etc. depending on where your app lives), as only those have the corresponding instrumentation."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03K840U3L1\u003e asked\n\u0026gt; Hey all, I saw that `Contents/SharedFrameworks/DVTFoundation.framework/Versions/A/Resources/symbolicatecrash` is deprecated and I was wondering if there is a convenient alternative that can symbolicate a whole .crash file in a single command?",
      "ts": "1654800101.881729",
      "thread_ts": "1654800101.881729",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 9,
      "latest_reply": "1654803393.510639",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "cg1cn",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K840U3L1"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hey all, I saw that `Contents\\/SharedFrameworks\\/DVTFoundation.framework\\/Versions\\/A\\/Resources\\/symbolicatecrash` is deprecated and I was wondering if there is a convenient alternative that can symbolicate a whole .crash file in a single command?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "cbf91ef5-3ca2-4869-81f5-0a083eff39c1",
          "type": "message",
          "user": "U03HHP75UJF",
          "text": "Hi. With new Xcode 14 Beta `xcrun crashlog \u0026lt;path/to/crash\u0026gt;` can be used to symbolicate crashes. To learn more take a look at help page `xcrun crashlog --help`.",
          "ts": "1654800139.344089",
          "thread_ts": "1654800101.881729",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "star-struck",
              "count": 3,
              "users": [
                "U03JPFQNX5K",
                "U03K840U3L1",
                "U03HVDR403G"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "DnRW",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi. With new Xcode 14 Beta "
                    },
                    {
                      "type": "text",
                      "text": "xcrun crashlog \u003cpath/to/crash\u003e",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " can be used to symbolicate crashes. To learn more take a look at help page "
                    },
                    {
                      "type": "text",
                      "text": "xcrun crashlog --help",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e1efd745-f458-437d-9a6e-9b9893587918",
          "type": "message",
          "user": "U03JE7PBQPP",
          "text": "I should use that instead of `atos`?",
          "ts": "1654800553.379639",
          "thread_ts": "1654800101.881729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "132JL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I should use that instead of "
                    },
                    {
                      "type": "text",
                      "text": "atos",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a1ff19d4-7c87-4221-ac82-e8a15580c288",
          "type": "message",
          "user": "U03HHPUC3K4",
          "text": "`atos` can be used for single address to symbol lookup. It is not meant to be used to symbolicate entire files by itself. `xcrun crashlog` is the appropriate tool to use to symbolicate an entire file.",
          "ts": "1654801198.350949",
          "thread_ts": "1654800101.881729",
          "edited": {
            "user": "U03HHPUC3K4",
            "ts": "1654801311.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OTof",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "atos",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " can be used for single address to symbol lookup. It is not meant to be used to symbolicate entire files by itself. "
                    },
                    {
                      "type": "text",
                      "text": "xcrun crashlog",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is the appropriate tool to use to symbolicate an entire file."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e65c57df-e198-4aee-9eb6-d57100f5fe44",
          "type": "message",
          "user": "U03JE7PBQPP",
          "text": "Cool! Where's that documented? Last I could find in the Xcode 13.3 release notes was to use `atos` instead of `symbolicatecrash`",
          "ts": "1654801381.131409",
          "thread_ts": "1654800101.881729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8Kq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Cool! Where's that documented? Last I could find in the Xcode 13.3 release notes was to use "
                    },
                    {
                      "type": "text",
                      "text": "atos",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " instead of "
                    },
                    {
                      "type": "text",
                      "text": "symbolicatecrash",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0da0e11a-8040-4606-992e-5342b914f256",
          "type": "message",
          "user": "U03HHPUC3K4",
          "text": "You can find this in the Xcode 14 release notes: \u003chttps://developer.apple.com/documentation/Xcode-Release-Notes/xcode-14-release-notes\u003e",
          "ts": "1654801930.542159",
          "thread_ts": "1654800101.881729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BLPO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can find this in the Xcode 14 release notes: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/Xcode-Release-Notes/xcode-14-release-notes",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "70327663-13c2-4113-93be-0c62786f2f2d",
          "type": "message",
          "user": "U03HHPUC3K4",
          "text": "Hope that helps :smile:",
          "ts": "1654801937.826179",
          "thread_ts": "1654800101.881729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "WgOH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hope that helps "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f9d5f0f9-4884-4fec-a559-612993aac863",
          "type": "message",
          "user": "U03JE7PBQPP",
          "text": "Great! Will \u003chttps://developer.apple.com/documentation/Xcode/adding-identifiable-symbol-names-to-a-crash-report\u003e be updated as well? Not that it wasn't fun with `atos` in it but...(it wasn't :smile: )",
          "ts": "1654802004.196589",
          "thread_ts": "1654800101.881729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "IsJZS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Great! Will "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/Xcode/adding-identifiable-symbol-names-to-a-crash-report",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " be updated as well? Not that it wasn't fun with "
                    },
                    {
                      "type": "text",
                      "text": "atos",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in it but...(it wasn't "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " )"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f3a65fc1-4cd8-4997-bbaa-edafa0e43305",
          "type": "message",
          "user": "U03HB5HL8NS",
          "text": "That's a great point Sara, this documentation should definitely be updated. Could you please file a feedback?\nIf you do, feel free to post the feedback ID here and we'll make sure it gets into the right hands.",
          "ts": "1654802229.377979",
          "thread_ts": "1654800101.881729",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+yu41",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That's a great point Sara, this documentation should definitely be updated. Could you please file a feedback?\nIf you do, feel free to post the feedback ID here and we'll make sure it gets into the right hands."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "46806851-507a-40b9-b4bb-a8a78bf68243",
          "type": "message",
          "user": "U03K840U3L1",
          "text": "Thanks \u003c@U03HHP75UJF\u003e, \u003c@U03JE7PBQPP\u003e \u0026amp; \u003c@U03HB5HL8NS\u003e, That is super helpful",
          "ts": "1654803393.510639",
          "thread_ts": "1654800101.881729",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "partying_face",
              "count": 3,
              "users": [
                "U03HHP75UJF",
                "U03HB5HL8NS",
                "U03JE7PBQPP"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XvQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HHP75UJF"
                    },
                    {
                      "type": "text",
                      "text": ", "
                    },
                    {
                      "type": "user",
                      "user_id": "U03JE7PBQPP"
                    },
                    {
                      "type": "text",
                      "text": " \u0026 "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HB5HL8NS"
                    },
                    {
                      "type": "text",
                      "text": ", That is super helpful"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03K840U3L1\u003e asked\n\u0026gt; Hey all. Is there a tool for parsing .crash files into JSON (or some other format) that's easy to put into a database? We're trying to do some analysis over .crash files we've received in the organiser.",
      "ts": "1654800504.595259",
      "thread_ts": "1654800504.595259",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654804491.451369",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "=gb8x",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K840U3L1"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hey all. Is there a tool for parsing .crash files into JSON (or some other format) that's easy to put into a database? We're trying to do some analysis over .crash files we've received in the organiser.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "e42b3670-9b18-4e7b-b3fd-66dfea7ae5e3",
          "type": "message",
          "user": "U03HES3E8DT",
          "text": "Recent versions of macOS, iOS, watchOS and tvOS generate crash logs by default in a JSON format. You should be able to create scripts to parse these logs and manage them in a database of your choosing. While new information may be added to these crash logs across releases, the format of existing fields in JSON logs will generally be stable over releases.\n\nIf you would like to symbolicate crash logs before processing them further in your script, you may invoke `xcrun crashlog`. See the output of `xcrun crashlog -h` for more information on usage.\n\nWe do not offer a tool to convert a .crash file generated by older OS versions to JSON. However, you may refer to the parser in the `crashlog` script to create a solution that works best for you.",
          "ts": "1654800529.145099",
          "thread_ts": "1654800504.595259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "R2SF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Recent versions of macOS, iOS, watchOS and tvOS generate crash logs by default in a JSON format. You should be able to create scripts to parse these logs and manage them in a database of your choosing. While new information may be added to these crash logs across releases, the format of existing fields in JSON logs will generally be stable over releases.\n\nIf you would like to symbolicate crash logs before processing them further in your script, you may invoke "
                    },
                    {
                      "type": "text",
                      "text": "xcrun crashlog",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". See the output of "
                    },
                    {
                      "type": "text",
                      "text": "xcrun crashlog -h",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " for more information on usage.\n\nWe do not offer a tool to convert a .crash file generated by older OS versions to JSON. However, you may refer to the parser in the "
                    },
                    {
                      "type": "text",
                      "text": "crashlog",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " script to create a solution that works best for you."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2043d8ae-367c-411f-8302-f758c048b230",
          "type": "message",
          "user": "U03K840U3L1",
          "text": "Hey \u003c@U03HES3E8DT\u003e thanks. How do I get hold of JSON based crash logs from users? In the organiser I can see .crashpoints \u0026amp; .crash files?",
          "ts": "1654803535.349279",
          "thread_ts": "1654800504.595259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "3K=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hey "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HES3E8DT"
                    },
                    {
                      "type": "text",
                      "text": " thanks. How do I get hold of JSON based crash logs from users? In the organiser I can see .crashpoints \u0026 .crash files?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d7688232-dc52-414c-838a-4aa3f9cee6b6",
          "type": "message",
          "user": "U03HES3E8DT",
          "text": "That's a great question.\n\nJSON crashlogs are currently only available if you have direct access to the device on which the crash occurred. The crash logs can be shared or airdropped from the device, or they can be synced to a mac by connecting the device to a mac. See \u003chttps://help.apple.com/xcode/mac/current/#/dev0f3181c2c\u003e\n\nPlease file a feedback report requesting access to JSON crash logs in organizer from customer devices.",
          "ts": "1654804237.642959",
          "thread_ts": "1654800504.595259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1nDD",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That's a great question.\n\nJSON crashlogs are currently only available if you have direct access to the device on which the crash occurred. The crash logs can be shared or airdropped from the device, or they can be synced to a mac by connecting the device to a mac. See "
                    },
                    {
                      "type": "link",
                      "url": "https://help.apple.com/xcode/mac/current/#/dev0f3181c2c",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n\nPlease file a feedback report requesting access to JSON crash logs in organizer from customer devices."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cab2833b-59aa-436b-8b59-11f955aa0017",
          "type": "message",
          "user": "U03K840U3L1",
          "text": "Thanks \u003c@U03HES3E8DT\u003e, I've filled FB10139088 requesting them in Xcode / AppStoreConnect API.",
          "ts": "1654804491.451369",
          "thread_ts": "1654800504.595259",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 2,
              "users": [
                "U03HES3E8DT",
                "U03HB5P2UTY"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dko",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HES3E8DT"
                    },
                    {
                      "type": "text",
                      "text": ", I've filled FB10139088 requesting them in Xcode / AppStoreConnect API."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JELQLESV\u003e asked\n\u0026gt; What makes for a great bug report about a hang or performance issues found in beta Apple OSes and apps? What information should be attached to them?",
      "ts": "1654801563.751989",
      "thread_ts": "1654801563.751989",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654801572.985819",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "25gev",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JELQLESV"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What makes for a great bug report about a hang or performance issues found in beta Apple OSes and apps? What information should be attached to them?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "d133e13a-fcdb-4db0-8acd-cd859c585c6e",
          "type": "message",
          "user": "U03HB5HL8NS",
          "text": "Thank you so much for this question and wanting to file great bug reports!\nOne great option for iOS is to use \"Performance Trace.\" To do so, you install a profile that will add a \"Performance Trace\" button to control center. You can press it to start capturing a trace. It's limited to 30s, but if you can reproduce the issue during this time it will give us a lot of data on what's going on and why this might be happening.\nThere are detailed instructions here how to enable it and export the resulting trace file: \u003chttps://developer.apple.com/bug-reporting/profiles-and-logs/?name=performance\u003e\n\nAnother option that works for all our operating systems is Instruments. If you have Instruments installed, just connect the device you want to profile to your Mac (or target your local mac), then open a new document and choose the \"Time Profiler\" template. Ideally, choose to record \"All Processes,\" then start recording when your are ready to reproduce the issue. Reproduce the issue and stop recording.\nThe hang should show up in the relevant process' track.\nThen save the Instruments document and attach the resulting `.trace` file to your Feedback report.",
          "ts": "1654801572.985819",
          "thread_ts": "1654801563.751989",
          "attachments": [
            {
              "fallback": "Profiles and Logs - Bug Reporting - Apple Developer",
              "id": 1,
              "title": "Profiles and Logs - Bug Reporting - Apple Developer",
              "title_link": "https://developer.apple.com/bug-reporting/profiles-and-logs/?name=performance",
              "text": "Get details on providing logs, reproducible test cases, and other information that will help us investigate and diagnose your reported issues.",
              "service_name": "developer.apple.com",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/bug-reporting/profiles-and-logs/?name=performance",
              "original_url": "https://developer.apple.com/bug-reporting/profiles-and-logs/?name=performance",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03JELQLESV",
                "U03HMDYDV1D"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RoO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you so much for this question and wanting to file great bug reports!\nOne great option for iOS is to use \"Performance Trace.\" To do so, you install a profile that will add a \"Performance Trace\" button to control center. You can press it to start capturing a trace. It's limited to 30s, but if you can reproduce the issue during this time it will give us a lot of data on what's going on and why this might be happening.\nThere are detailed instructions here how to enable it and export the resulting trace file: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/bug-reporting/profiles-and-logs/?name=performance",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n\nAnother option that works for all our operating systems is Instruments. If you have Instruments installed, just connect the device you want to profile to your Mac (or target your local mac), then open a new document and choose the \"Time Profiler\" template. Ideally, choose to record \"All Processes,\" then start recording when your are ready to reproduce the issue. Reproduce the issue and stop recording.\nThe hang should show up in the relevant process' track.\nThen save the Instruments document and attach the resulting "
                    },
                    {
                      "type": "text",
                      "text": ".trace",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " file to your Feedback report."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03K765E332\u003e asked\n\u0026gt; Is there a good way to simulate or trigger an app termination due to memory pressure?  We're trying to clean up issues with static c++ variables being used after destruction in our app, called by a 3rd party sdk which appears to make use of atexit().  Architectural problems aside, it'd be nice to be able to reproduce the issue reliably.",
      "ts": "1654801825.694549",
      "thread_ts": "1654801825.694549",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654801852.796769",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "VFiy",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K765E332"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a good way to simulate or trigger an app termination due to memory pressure?  We're trying to clean up issues with static c++ variables being used after destruction in our app, called by a 3rd party sdk which appears to make use of atexit().  Architectural problems aside, it'd be nice to be able to reproduce the issue reliably.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "f70316f6-d0fe-4069-9aae-1460263edc28",
          "type": "message",
          "user": "U03HES3E8DT",
          "text": "You may induce memory pressure during while debugging in iOS Simulator, or while profiling in Instruments. This emulated condition is a good way to test your memory pressure notification handler, and a great way to ensure that state which you are managing using datatypes like NSCache are being released properly.\n\nHowever this emulated condition doesn't alter your app's memory usage.\n\nIt is also worth noting that when the OS chooses to terminate your process for excessive memory usage, the process will not be able to execute any more code. Therefore, the `atexit` handler will not run during this termination condition.\n\nThe best way to debug any issues you may suspect in your `atexit` handler in non-fatal termination situations is to call `exit` at an opportune time.",
          "ts": "1654801852.796769",
          "thread_ts": "1654801825.694549",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-thank-you",
              "count": 1,
              "users": [
                "U03K765E332"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cdxU4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You may induce memory pressure during while debugging in iOS Simulator, or while profiling in Instruments. This emulated condition is a good way to test your memory pressure notification handler, and a great way to ensure that state which you are managing using datatypes like NSCache are being released properly.\n\nHowever this emulated condition doesn't alter your app's memory usage.\n\nIt is also worth noting that when the OS chooses to terminate your process for excessive memory usage, the process will not be able to execute any more code. Therefore, the "
                    },
                    {
                      "type": "text",
                      "text": "atexit",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " handler will not run during this termination condition.\n\nThe best way to debug any issues you may suspect in your "
                    },
                    {
                      "type": "text",
                      "text": "atexit",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " handler in non-fatal termination situations is to call "
                    },
                    {
                      "type": "text",
                      "text": "exit",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " at an opportune time."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRR4R3CY\u003e asked\n\u0026gt; My manager wants our apps to use Firebase Crashlytics because it means they can see crashes and get notified through email and slack. But I want to ditch Firebase Crashlytics in all our apps for various reasons. \n\u0026gt; \n\u0026gt; So is there a way to get the crashes that are displayed in the organizer through command line or some kind of API?\n\u0026gt; \n\u0026gt; I'm aware of being able to do my own implementation with MetricKit, but we don't want to manage a server where the crashes are collected.",
      "ts": "1654802347.719079",
      "thread_ts": "1654802347.719079",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654802424.392059",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "aaL",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRR4R3CY"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"My manager wants our apps to use Firebase Crashlytics because it means they can see crashes and get notified through email and slack. But I want to ditch Firebase Crashlytics in all our apps for various reasons. \\n\\nSo is there a way to get the crashes that are displayed in the organizer through command line or some kind of API?\\n\\nI'm aware of being able to do my own implementation with MetricKit, but we don't want to manage a server where the crashes are collected.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "f91c7386-6e10-430e-9530-b6c56825b5e7",
          "type": "message",
          "user": "U03HB5HAZKQ",
          "text": "Thanks for the question Rens! This is not something we currently support but please file a feedback with \u003chttps://developer.apple.com/bug-reporting/|Feedback Assistant\u003e for us to hear your thoughts! In the meantime, you can go through the file system in the Crashes Organizer to get logs by right-clicking the crash and selecting \"Show in Finder\". Also feel free sign up for a 1-1 lab tomorrow from 9 AM to 1 PM PST to discuss your use case in depth with us!",
          "ts": "1654802424.392059",
          "thread_ts": "1654802347.719079",
          "attachments": [
            {
              "fallback": "Apple Developer: Bug Reporting - Apple Developer",
              "id": 1,
              "title": "Bug Reporting - Apple Developer",
              "title_link": "https://developer.apple.com/bug-reporting/",
              "text": "Now with Feedback Assistant available on iPhone, iPad, Mac, and the web, it’s easier to submit effective bug reports and request enhancements to APIs and tools.",
              "image_url": "https://developer.apple.com/news/images/og/bug-reporting-og.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/bug-reporting/",
              "original_url": "https://developer.apple.com/bug-reporting/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "WI=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the question Rens! This is not something we currently support but please file a feedback with "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/bug-reporting/",
                      "text": "Feedback Assistant"
                    },
                    {
                      "type": "text",
                      "text": " for us to hear your thoughts! In the meantime, you can go through the file system in the Crashes Organizer to get logs by right-clicking the crash and selecting \"Show in Finder\". Also feel free sign up for a 1-1 lab tomorrow from 9 AM to 1 PM PST to discuss your use case in depth with us!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JE7PBQPP\u003e asked\n\u0026gt; Is Instruments data collection still memory bound? I've had long running tests crash because Instruments ran out of memory and didn't cache to disk.",
      "ts": "1654802364.401679",
      "thread_ts": "1654802364.401679",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654802398.727499",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "QcYHu",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JE7PBQPP"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is Instruments data collection still memory bound? I've had long running tests crash because Instruments ran out of memory and didn't cache to disk.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "966b2b09-8ecb-4e6d-9fad-123aa0894e8f",
          "type": "message",
          "user": "U03HHP75UJF",
          "text": "Hi, Sara. Thanks for asking — that’s definitely unexpected. Could you please file a feedback with issue description and sysdiagnose from target and host devices attached. To collect sysdiagnoses please reproduce the issue and follow instruction from \u003chttps://developer.apple.com/bug-reporting/profiles-and-logs/\u003e.",
          "ts": "1654802398.727499",
          "thread_ts": "1654802364.401679",
          "attachments": [
            {
              "fallback": "Profiles and Logs - Bug Reporting - Apple Developer",
              "id": 1,
              "title": "Profiles and Logs - Bug Reporting - Apple Developer",
              "title_link": "https://developer.apple.com/bug-reporting/profiles-and-logs/",
              "text": "Get details on providing logs, reproducible test cases, and other information that will help us investigate and diagnose your reported issues.",
              "service_name": "developer.apple.com",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/bug-reporting/profiles-and-logs/",
              "original_url": "https://developer.apple.com/bug-reporting/profiles-and-logs/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dkvc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi, Sara. Thanks for asking — that’s definitely unexpected. Could you please file a feedback with issue description and sysdiagnose from target and host devices attached. To collect sysdiagnoses please reproduce the issue and follow instruction from "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/bug-reporting/profiles-and-logs/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ4PT2ER\u003e asked\n\u0026gt; Quick question: What does IPS stand for? Is there any official documentation of the format?",
      "ts": "1654802767.286569",
      "thread_ts": "1654802767.286569",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654803731.389889",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "aNUQ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ4PT2ER"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Quick question: What does IPS stand for? Is there any official documentation of the format?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "5c098e09-1296-47eb-b0fd-d235953bcfd0",
          "type": "message",
          "user": "U03HL5AMFCL",
          "text": "This is a great question — you almost stumped us all, we had to do a bit of asking around to find someone who knew the answer on this one! :laughing:\nApparently it once stood for .ips = \"iPhone Submissions\" to the crash handling pipeline, but doesn't mean that anymore since these files are used for other platforms now, and most of us had no idea of the original acronym.\nAs to your question about what's in them — there's some good information on the fields you'll find in these crash reports here: \u003chttps://developer.apple.com/documentation/xcode/examining-the-fields-in-a-crash-report\u003e.",
          "ts": "1654802794.291509",
          "thread_ts": "1654802767.286569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UrImA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is a great question — you almost stumped us all, we had to do a bit of asking around to find someone who knew the answer on this one! "
                    },
                    {
                      "type": "emoji",
                      "name": "laughing",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\nApparently it once stood for .ips = \"iPhone Submissions\" to the crash handling pipeline, but doesn't mean that anymore since these files are used for other platforms now, and most of us had no idea of the original acronym.\nAs to your question about what's in them — there's some good information on the fields you'll find in these crash reports here: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/examining-the-fields-in-a-crash-report",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dbec4fa6-d347-40bd-b795-82bb208e3e3c",
          "type": "message",
          "user": "U03HZ39CGAH",
          "text": "RIP Stump the Experts. :headstone:",
          "ts": "1654802939.526259",
          "thread_ts": "1654802767.286569",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "joy",
              "count": 6,
              "users": [
                "U03HERY4SN9",
                "U03HL5AMFCL",
                "U03JRRA06AU",
                "U03HVC8S8DU",
                "U03J2842ALS",
                "U03J01RLBBR"
              ]
            },
            {
              "name": "heart",
              "count": 3,
              "users": [
                "U03HHPUBMMY",
                "U03HELZ3GUD",
                "U03J4EW62N8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Idp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "RIP Stump the Experts. "
                    },
                    {
                      "type": "emoji",
                      "name": "headstone",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f12c55f3-2be2-4f59-88fe-3fce5f077e4e",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "If you like trivia, also check out our Trivia Night starting at 6pm Pacific Time tonight in \u003c#C03HX3KRW2D|\u003e.  If you're not in the channel yet, \u003chttps://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming/digital-lounges|sign up now\u003e!",
          "ts": "1654802975.761119",
          "thread_ts": "1654802767.286569",
          "attachments": [
            {
              "fallback": "Sign In - Apple",
              "id": 1,
              "title": "Sign In - Apple",
              "title_link": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming/digital-lounges",
              "text": "Sign in with your Apple ID",
              "service_name": "idmsa.apple.com",
              "service_icon": "https://appleid.cdn-apple.com/daw/IDMSWebAuth/static/20Apr2022/images/favicon.ico",
              "from_url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming/digital-lounges",
              "original_url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming/digital-lounges",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heartbeat",
              "count": 2,
              "users": [
                "U03HERY4SN9",
                "U03EBH4MA8Y"
              ]
            },
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HZ39CGAH"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "g96",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you like trivia, also check out our Trivia Night starting at 6pm Pacific Time tonight in "
                    },
                    {
                      "type": "channel",
                      "channel_id": "C03HX3KRW2D"
                    },
                    {
                      "type": "text",
                      "text": ".  If you're not in the channel yet, "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/upcoming/digital-lounges",
                      "text": "sign up now"
                    },
                    {
                      "type": "text",
                      "text": "!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e57851d4-9b8d-4214-9913-c7f343deeb5f",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "\u003c@U03HL5AMFCL\u003e Thanks, but that link doesn't seem to relate directly to the IPS JSON?",
          "ts": "1654803062.036739",
          "thread_ts": "1654802767.286569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7vwUS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HL5AMFCL"
                    },
                    {
                      "type": "text",
                      "text": " Thanks, but that link doesn't seem to relate directly to the IPS JSON?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "faac0a28-07ab-4eb3-804b-3c1855a3370c",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "The IPS format is a wrapper around a crash log. It adds a JSON header that is not documented. The crash log itself can be either plain text or JSON. The plain text format is documented at the link above, but the JSON format has not been documented. If you're interested in seeing more documentation for these, please file a feedback report.",
          "ts": "1654803696.173509",
          "thread_ts": "1654802767.286569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mr3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The IPS format is a wrapper around a crash log. It adds a JSON header that is not documented. The crash log itself can be either plain text or JSON. The plain text format is documented at the link above, but the JSON format has not been documented. If you're interested in seeing more documentation for these, please file a feedback report."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ae95d828-7d0d-48d5-a915-a95bf06d695b",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "I accidentally dropped the link on that, you can file feedback at \u003chttps://feedbackassistant.apple.com\u003e",
          "ts": "1654803731.389889",
          "thread_ts": "1654802767.286569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+Mx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I accidentally dropped the link on that, you can file feedback at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J07WJLRK\u003e asked\n\u0026gt; Is there a way to obtain power draw (like powermetrics does on macOS) on iPadOS when profiling an application?",
      "ts": "1654803195.279229",
      "thread_ts": "1654803195.279229",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654803937.528129",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "m1mD2",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J07WJLRK"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a way to obtain power draw (like powermetrics does on macOS) on iPadOS when profiling an application?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "efe15028-73c8-4b26-98b0-c5d1e14a4555",
          "type": "message",
          "user": "U03HES3E8DT",
          "text": "There currently isn't a tool which reports power usage from an iOS or watchOS device in watts. The Xcode energy gauge offers a way to understand application impact on energy usage based on the app's behavior and an abstract cost semantics.\n\nWe typically find this to be effective for many software development scenarios because optimizing based on abstract cost semantics allows developers to follow best practices that are applicable to many devices, whereas exact power measurements are highly specific to the hardware configuration and test conditions of the device under test.\n\nWe'd love to hear your feedback on any use cases and workflows that may not be addressed by existing tools.",
          "ts": "1654803219.146649",
          "thread_ts": "1654803195.279229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Xc5OA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There currently isn't a tool which reports power usage from an iOS or watchOS device in watts. The Xcode energy gauge offers a way to understand application impact on energy usage based on the app's behavior and an abstract cost semantics.\n\nWe typically find this to be effective for many software development scenarios because optimizing based on abstract cost semantics allows developers to follow best practices that are applicable to many devices, whereas exact power measurements are highly specific to the hardware configuration and test conditions of the device under test.\n\nWe'd love to hear your feedback on any use cases and workflows that may not be addressed by existing tools."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "52250f19-e265-4bd5-b57d-888e465e3893",
          "type": "message",
          "user": "U03J07WJLRK",
          "text": "Thank you for the answer. The use case of mine is profiling GPU power draw to optimise battery life (per-device tuning configuration).",
          "ts": "1654803331.136389",
          "thread_ts": "1654803195.279229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6EGz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for the answer. The use case of mine is profiling GPU power draw to optimise battery life (per-device tuning configuration)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "adfa7ad7-67af-43ab-acc0-d72c45351cfb",
          "type": "message",
          "user": "U03HES3E8DT",
          "text": "Thank you for sharing that use case. Please file a feedback report requesting a tool to profile GPU power usage on iOS devices and share the feedback number.",
          "ts": "1654803436.970379",
          "thread_ts": "1654803195.279229",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ynr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for sharing that use case. Please file a feedback report requesting a tool to profile GPU power usage on iOS devices and share the feedback number."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ecb3923c-32b1-41b1-9085-df206627043a",
          "type": "message",
          "user": "U03J07WJLRK",
          "text": "FB10138914",
          "ts": "1654803937.528129",
          "thread_ts": "1654803195.279229",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 1,
              "users": [
                "U03HERY4SN9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AgzMX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "FB10138914"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "eb2a3133-9e9b-482d-899d-ee6afd079604",
      "type": "message",
      "user": "U03HL551ATW",
      "text": "We are getting close to the end of our time here for the Performance, Power, and Stability Q\u0026amp;A! Get your last few questions in while there's still time!",
      "ts": "1654804191.448969",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "8r4",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "We are getting close to the end of our time here for the Performance, Power, and Stability Q\u0026A! Get your last few questions in while there's still time!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "a148f3ca-f2e4-40e6-a4c7-5bb351dc407e",
      "type": "message",
      "user": "U03HL551ATW",
      "text": "Our time for the *Power, Performance, and Stability Q\u0026amp;A* is wrapping up—thanks for coming!\n\nWe got lots of questions and may not have been able to answer all of them. If your question didn't get answered, you can check to see if there are \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/|other Developer Tools Sessions, Labs, or Lounges\u003e that might be better suited to your questions. For topics not covered there, you can also post your questions in the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e.\n\nHave a great rest of your week!",
      "ts": "1654804502.351089",
      "attachments": [
        {
          "fallback": "Developer Tools - Topics - WWDC22",
          "id": 1,
          "title": "Developer Tools - Topics - WWDC22",
          "title_link": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "text": "Everything you need to know to build the next great app or game.",
          "image_url": "https://developer.apple.com/wwdc22/topics/images/og/developer-tools-og.png",
          "service_name": "developer.apple.com",
          "service_icon": "https://developer.apple.com/favicon.ico",
          "from_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "original_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "blocks": null
        },
        {
          "fallback": "Apple Developer Forums",
          "id": 2,
          "title": "Apple Developer Forums",
          "title_link": "http://developer.apple.com/forums/",
          "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
          "service_name": "developer.apple.com",
          "service_icon": "https://forums.developer.apple.com/forums/build-06082022-1/public/assets/favicon.ico",
          "from_url": "http://developer.apple.com/forums/",
          "original_url": "http://developer.apple.com/forums/",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "zXkQz",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Our time for the "
                },
                {
                  "type": "text",
                  "text": "Power, Performance, and Stability Q\u0026A",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " is wrapping up—thanks for coming!\n\nWe got lots of questions and may not have been able to answer all of them. If your question didn't get answered, you can check to see if there are "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
                  "text": "other Developer Tools Sessions, Labs, or Lounges"
                },
                {
                  "type": "text",
                  "text": " that might be better suited to your questions. For topics not covered there, you can also post your questions in the "
                },
                {
                  "type": "link",
                  "url": "http://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": ".\n\nHave a great rest of your week!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "user": "U03HL553PNG",
      "text": "set the channel topic: Q\u0026amp;A: Debug Swift debugging with LLDB",
      "ts": "1654804858.384569",
      "subtype": "channel_topic",
      "topic": "Q\u0026amp;A: Debug Swift debugging with LLDB",
      "replace_original": false,
      "delete_original": false,
      "blocks": null
    },
    {
      "client_msg_id": "5d258d7b-dac8-484b-8599-511074559383",
      "type": "message",
      "user": "U03HERYFK6H",
      "text": "Welcome :wave: to the Q\u0026amp;A session for \u003chttps://developer.apple.com/wwdc22/110370|Debugging Swift debugging with LLDB\u003e! If you have questions about setting up complex Swift projects for debugging, we want hear them!\n\nTo submit a question, use the :workflowbolt:  button below. You can also ask follow-up questions in the :thread: for each question.",
      "ts": "1654804934.018269",
      "attachments": [
        {
          "fallback": "Apple Developer: Debug Swift debugging with LLDB - WWDC22 - Videos - Apple Developer",
          "id": 1,
          "title": "Debug Swift debugging with LLDB - WWDC22 - Videos - Apple Developer",
          "title_link": "https://developer.apple.com/wwdc22/110370",
          "text": "Learn how you can set up complex Swift projects for debugging. We'll take you on a deep dive into the internals of LLDB and debug info...",
          "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/124/6724/6724_wide_250x141_2x.jpg",
          "service_name": "Apple Developer",
          "service_icon": "https://developer.apple.com/favicon.ico",
          "from_url": "https://developer.apple.com/wwdc22/110370",
          "original_url": "https://developer.apple.com/wwdc22/110370",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "RMSx",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Welcome "
                },
                {
                  "type": "emoji",
                  "name": "wave",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " to the Q\u0026A session for "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/110370",
                  "text": "Debugging Swift debugging with LLDB"
                },
                {
                  "type": "text",
                  "text": "! If you have questions about setting up complex Swift projects for debugging, we want hear them!\n\nTo submit a question, use the "
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "  button below. You can also ask follow-up questions in the "
                },
                {
                  "type": "emoji",
                  "name": "thread",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " for each question."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J1UAEU4B\u003e asked\n\u0026gt; Wild shot in the dark - I have a SwiftUI app for iPad and Mac Catalyst. It performs no networking or file operations, though it has a simple Core Data store (it's essentially a local card game). It's always performant on iPad. On Mac, most of the time there's a multiple-second beachball hang on launch before it becomes responsive, and animations are laggy. But here's the weird thing - after any OS update, or rebooting in Safe Mode, it becomes performant again for usually about 1-2 days or so. I've profiled it in Instruments and can clearly see the hang, but the deepest stack trace is all SwiftUI system calls, so I have no idea how further to debug. Any ideas for a SwiftUI performance issue that temporarily goes away on macOS after an OS update or Safe Mode reboot?",
      "ts": "1654805053.485919",
      "thread_ts": "1654805053.485919",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654874338.539789",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "10q",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J1UAEU4B"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Wild shot in the dark - I have a SwiftUI app for iPad and Mac Catalyst. It performs no networking or file operations, though it has a simple Core Data store (it's essentially a local card game). It's always performant on iPad. On Mac, most of the time there's a multiple-second beachball hang on launch before it becomes responsive, and animations are laggy. But here's the weird thing - after any OS update, or rebooting in Safe Mode, it becomes performant again for usually about 1-2 days or so. I've profiled it in Instruments and can clearly see the hang, but the deepest stack trace is all SwiftUI system calls, so I have no idea how further to debug. Any ideas for a SwiftUI performance issue that temporarily goes away on macOS after an OS update or Safe Mode reboot?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ff78acec-6f75-4835-bbb7-a42862154671",
          "type": "message",
          "user": "U03HB5HL8NS",
          "text": "Hi Jason,\n\nat first glance, this sounds like it might be an issue with SwiftUI or even a system performance issue, but it's obviously hard to tell via Slack. We'd like to invite you to \u003chttp://feedbackassistant.apple.com|file a feedback\u003e and register for the \u003chttps://developer.apple.com/wwdc22/labs-and-lounges/dashboard/TJ7F5J2CSP/dashboard|Performance, power and stability lab\u003e tomorrow, so we can take a look together with you and help you figure out why this is happening and whether it's a bug to file or something you can resolve.\n\nIf you can either reproduce the issue during the lab or bring a .trace file, that would hopefully allow us to investigate this together.",
          "ts": "1654805066.535859",
          "thread_ts": "1654805053.485919",
          "attachments": [
            {
              "fallback": "Sign In - Apple",
              "id": 1,
              "title": "Sign In - Apple",
              "title_link": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/TJ7F5J2CSP/dashboard",
              "text": "Sign in with your Apple ID",
              "service_name": "idmsa.apple.com",
              "service_icon": "https://appleid.cdn-apple.com/daw/IDMSWebAuth/static/20Apr2022/images/favicon.ico",
              "from_url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/TJ7F5J2CSP/dashboard",
              "original_url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/TJ7F5J2CSP/dashboard",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03J1UAEU4B"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6x8AK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Jason,\n\nat first glance, this sounds like it might be an issue with SwiftUI or even a system performance issue, but it's obviously hard to tell via Slack. We'd like to invite you to "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "file a feedback"
                    },
                    {
                      "type": "text",
                      "text": " and register for the "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc22/labs-and-lounges/dashboard/TJ7F5J2CSP/dashboard",
                      "text": "Performance, power and stability lab"
                    },
                    {
                      "type": "text",
                      "text": " tomorrow, so we can take a look together with you and help you figure out why this is happening and whether it's a bug to file or something you can resolve.\n\nIf you can either reproduce the issue during the lab or bring a .trace file, that would hopefully allow us to investigate this together."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6beaa07a-12a7-40cc-901c-f30ccda89dcd",
          "type": "message",
          "user": "U03J1UAEU4B",
          "text": "Thanks!",
          "ts": "1654805293.904029",
          "thread_ts": "1654805053.485919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zgjC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2384a4f5-0594-4b73-880d-82ad9ce96697",
          "type": "message",
          "user": "U03HB5HL8NS",
          "text": "Thanks for signing up for the lab, looking forward to chat with you!\n\nIf you can, it would be awesome if you can bring the following: A device with the new macOS Ventura Beta + Xcode 14 beta on which you can reproduce the issue. macOS + Instruments have new hang tracing functionality that will make it easier for us to see what's going on.\n\nHowever, your question suggests that updating the OS would make the issue go away for a few days so if you don't have a 2nd device to try this on, having the current macOS version + Instruments is totally fine as well. Having a reproduceable issue is more important than being on the betas. We'll just see what we can find together starting from there.",
          "ts": "1654844571.851269",
          "thread_ts": "1654805053.485919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Yqq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for signing up for the lab, looking forward to chat with you!\n\nIf you can, it would be awesome if you can bring the following: A device with the new macOS Ventura Beta + Xcode 14 beta on which you can reproduce the issue. macOS + Instruments have new hang tracing functionality that will make it easier for us to see what's going on.\n\nHowever, your question suggests that updating the OS would make the issue go away for a few days so if you don't have a 2nd device to try this on, having the current macOS version + Instruments is totally fine as well. Having a reproduceable issue is more important than being on the betas. We'll just see what we can find together starting from there."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "162eff2f-ade1-48cc-8a66-edeba145f220",
          "type": "message",
          "user": "U03J1UAEU4B",
          "text": "Hi, thank you! Yes, because updating the OS would make the issue go away, and I do not have a second device, I will only have my current MacBook Pro running Monterey 12.4, and which the issue is currently happening on. I attached a trace to the Lab request - hope you were able to get it, but I should also be able to regenerate it in the Lab if necessary.",
          "ts": "1654874338.539789",
          "thread_ts": "1654805053.485919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8Db",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi, thank you! Yes, because updating the OS would make the issue go away, and I do not have a second device, I will only have my current MacBook Pro running Monterey 12.4, and which the issue is currently happening on. I attached a trace to the Lab request - hope you were able to get it, but I should also be able to regenerate it in the Lab if necessary."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JJUG3BQ9\u003e asked\n\u0026gt; :workflowbolt: When debugging Swift, is there anything I could do to fix the following error:\n\u0026gt; error: virtual filesystem overlay file ‘…/iOS-ReferenceData/DerivedData/Build/Intermediates.noindex/ArchiveIntermediates/ReferenceData/IntermediateBuildFilesPath/ReferenceData.build/Release-iphonesimulator/ReferenceData.build/all-product-headers.yaml’ not found.\n\u0026gt; error: couldn’t IRGen expression. Please check the above error messages for possible root causes.",
      "ts": "1654805152.630699",
      "thread_ts": "1654805152.630699",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654805168.905329",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "CkSN",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JJUG3BQ9"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"emoji\",\"name\":\"workflowbolt\"},{\"type\":\"text\",\"text\":\" When debugging Swift, is there anything I could do to fix the following error:\\nerror: virtual filesystem overlay file \\u2018\\u2026\\/iOS-ReferenceData\\/DerivedData\\/Build\\/Intermediates.noindex\\/ArchiveIntermediates\\/ReferenceData\\/IntermediateBuildFilesPath\\/ReferenceData.build\\/Release-iphonesimulator\\/ReferenceData.build\\/all-product-headers.yaml\\u2019 not found.\\nerror: couldn\\u2019t IRGen expression. Please check the above error messages for possible root causes.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "3933b56b-dba3-4551-afc2-635ad60d17b0",
          "type": "message",
          "user": "U03HERYFK6H",
          "text": "LLDB's Swift expression evaluator wants to import the Swift module of the current context. Swift modules can depend on Clang modules. In this case it looks like a temporary build product cannot be found during debugging. If you built the code on a different machine, one way to work around this is to turn off search path serialization when building Swift modules. Please check out \u003chttps://developer.apple.com/wwdc22/110370\u003e for more details on how to do this!",
          "ts": "1654805168.905329",
          "thread_ts": "1654805152.630699",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "21o",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "LLDB's Swift expression evaluator wants to import the Swift module of the current context. Swift modules can depend on Clang modules. In this case it looks like a temporary build product cannot be found during debugging. If you built the code on a different machine, one way to work around this is to turn off search path serialization when building Swift modules. Please check out "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc22/110370",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " for more details on how to do this!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ39CGAH\u003e asked\n\u0026gt; Hi team! A recurring problem for many people with diverse code bases seems to be a symptom in which lldb running under Xcode just \"hangs\". What can we do to gather pertinent debug information in this scenario and help either the open source lldb teams, or Apple, to address the issues that are affecting us?",
      "ts": "1654806258.910829",
      "thread_ts": "1654806258.910829",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654807001.675649",
      "reactions": [
        {
          "name": "point_up_2",
          "count": 1,
          "users": [
            "U03K3R7RP6C"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "wsI",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ39CGAH"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi team! A recurring problem for many people with diverse code bases seems to be a symptom in which lldb running under Xcode just \\\"hangs\\\". What can we do to gather pertinent debug information in this scenario and help either the open source lldb teams, or Apple, to address the issues that are affecting us?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "c584711f-ce2a-4853-b78f-c143a65a29b6",
          "type": "message",
          "user": "U03HWCZC2HX",
          "text": "The first thing to determine is whether this is indeed a hang or a (very) slow operation. The easiest way to do that is probably to sit back and see if it completes within a \"reasonable\" amount of time (e.g. 10 minutes). The best way to help us figure out what's causing this is to grab a sample of `lldb-rpc-server` with the following command `sample lldb-rpc-server 60` . The last value specifies the length of the sample in seconds, which you'll want to make as large as possible. Please file a feedback report with that information and post the number here so we can follow up.",
          "ts": "1654806294.458319",
          "thread_ts": "1654806258.910829",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YGl3V",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The first thing to determine is whether this is indeed a hang or a (very) slow operation. The easiest way to do that is probably to sit back and see if it completes within a \"reasonable\" amount of time (e.g. 10 minutes). The best way to help us figure out what's causing this is to grab a sample of "
                    },
                    {
                      "type": "text",
                      "text": "lldb-rpc-server",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " with the following command "
                    },
                    {
                      "type": "text",
                      "text": "sample lldb-rpc-server 60",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " . The last value specifies the length of the sample in seconds, which you'll want to make as large as possible. Please file a feedback report with that information and post the number here so we can follow up."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5c1cde00-49f9-404d-afe6-9cc923693435",
          "type": "message",
          "user": "U03HZ39CGAH",
          "text": "Thank you!",
          "ts": "1654807001.675649",
          "thread_ts": "1654806258.910829",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8+j",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J0QXPYA3\u003e asked\n\u0026gt; In a modular project setup that has subprojects that generate frameworks, are there any recommendations/suggestions around a number of these subprojects that generate dylibs might be? I’ve heard of suggestions of staying near 6 (pre-dyld3) but am curious if there is still a suggested ceiling with all of the recent improvements over the past few years?",
      "ts": "1654806292.862129",
      "thread_ts": "1654806292.862129",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654806509.108379",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "cv9X",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J0QXPYA3"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"In a modular project setup that has subprojects that generate frameworks, are there any recommendations\\/suggestions around a number of these subprojects that generate dylibs might be? I\\u2019ve heard of suggestions of staying near 6 (pre-dyld3) but am curious if there is still a suggested ceiling with all of the recent improvements over the past few years?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "7cdd42aa-2e0d-4b04-adfa-8e84070d500a",
          "type": "message",
          "user": "U03HHP75UJF",
          "text": "Hi, Jordan.\nThat’s a good question. We don’t have a specific recommendation on the number of dynamic libraries. As a rule of thumb it’s always a good idea to measure performance and bottlenecks first and make a decision based on results. App Launch template in Instruments can be used to profile app launch time on multiple physical device configurations. Don’t forget to avoid using any `DYLD_*` environment variables during these tests. To learn more about dyld enhancements this year: \u003chttps://developer.apple.com/videos/play/wwdc2022/110362/\u003e",
          "ts": "1654806311.103839",
          "thread_ts": "1654806292.862129",
          "attachments": [
            {
              "fallback": "Apple Developer: Link fast: Improve build and launch times - WWDC22 - Videos - Apple Developer",
              "id": 1,
              "title": "Link fast: Improve build and launch times - WWDC22 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/videos/play/wwdc2022/110362/",
              "text": "Discover how to improve your app's build and runtime linking performance. We'll take you behind the scenes to learn more about linking,...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/124/6716/6716_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/videos/play/wwdc2022/110362/",
              "original_url": "https://developer.apple.com/videos/play/wwdc2022/110362/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sh8Q",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi, Jordan.\nThat’s a good question. We don’t have a specific recommendation on the number of dynamic libraries. As a rule of thumb it’s always a good idea to measure performance and bottlenecks first and make a decision based on results. App Launch template in Instruments can be used to profile app launch time on multiple physical device configurations. Don’t forget to avoid using any `DYLD_*` environment variables during these tests. To learn more about dyld enhancements this year: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/videos/play/wwdc2022/110362/",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "669fb340-aeef-41b8-8a87-6313cadc2bd3",
          "type": "message",
          "user": "U03JS1GFH44",
          "text": ":+1:",
          "ts": "1654806441.405879",
          "thread_ts": "1654806292.862129",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vHGB2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "emoji",
                      "name": "+1",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b400af26-1241-4f13-8585-e8a5cc088278",
          "type": "message",
          "user": "U03J0QXPYA3",
          "text": "This was a fantastic video and lead me to ask the question! I always cautiously approach the idea of adding a new subproject that needs to generate a dylib, and it can be a lot of work to walk it back if it were to have devastating effects :joy:\n\nThanks for the answer. Where my thought pattern was headed (too much variability involved) but the confirmation is helpful.",
          "ts": "1654806509.108379",
          "thread_ts": "1654806292.862129",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "r9P7c",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This was a fantastic video and lead me to ask the question! I always cautiously approach the idea of adding a new subproject that needs to generate a dylib, and it can be a lot of work to walk it back if it were to have devastating effects "
                    },
                    {
                      "type": "emoji",
                      "name": "joy",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\n\nThanks for the answer. Where my thought pattern was headed (too much variability involved) but the confirmation is helpful."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRPTDF6U\u003e asked\n\u0026gt; Hey there! I am looking to understand what kinds of things I can do with lldb in terms of  stack trace recording, demangling, and making things human readable. This is a long, wild shot in the dark: is it at all possible to 'record' the execution of a running application, persist it to a file or series of files somewhere, and then use it as a backing store to piece through the execution trace? There are tools like \u003chttps://github.com/johnno1962/SwiftTrace|https://github.com/johnno1962/SwiftTrace\u003e that are extremely powerful, but a bit difficult to clear up data and get specific information ordering, timing, etc. Very curious what tools might already exist for this use case, as I'm sure this isn't a new idea, haha!",
      "ts": "1654806388.401849",
      "thread_ts": "1654806388.401849",
      "attachments": [
        {
          "fallback": "GitHub: GitHub - johnno1962/SwiftTrace: Trace Swift and Objective-C method invocations",
          "id": 1,
          "title": "GitHub - johnno1962/SwiftTrace: Trace Swift and Objective-C method invocations",
          "title_link": "https://github.com/johnno1962/SwiftTrace",
          "text": "Trace Swift and Objective-C method invocations. Contribute to johnno1962/SwiftTrace development by creating an account on GitHub.",
          "image_url": "https://opengraph.githubassets.com/487e0d67c131f3852055c1e12c0d2816ce7a0d5363088836fce5dfc10b05a793/johnno1962/SwiftTrace",
          "service_name": "GitHub",
          "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
          "from_url": "https://github.com/johnno1962/SwiftTrace",
          "original_url": "https://github.com/johnno1962/SwiftTrace",
          "blocks": null
        }
      ],
      "edited": {
        "user": "B03HGE996MA",
        "ts": "1654806389.000000"
      },
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654807630.515539",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "24T",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRPTDF6U"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hey there! I am looking to understand what kinds of things I can do with lldb in terms of  stack trace recording, demangling, and making things human readable. This is a long, wild shot in the dark: is it at all possible to 'record' the execution of a running application, persist it to a file or series of files somewhere, and then use it as a backing store to piece through the execution trace? There are tools like \"},{\"type\":\"link\",\"url\":\"https:\\/\\/github.com\\/johnno1962\\/SwiftTrace\",\"text\":\"https:\\/\\/github.com\\/johnno1962\\/SwiftTrace\"},{\"type\":\"text\",\"text\":\" that are extremely powerful, but a bit difficult to clear up data and get specific information ordering, timing, etc. Very curious what tools might already exist for this use case, as I'm sure this isn't a new idea, haha!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "eed61a64-f55c-45b3-ba9e-bcd793d92d0a",
          "type": "message",
          "user": "U03HWCZC2HX",
          "text": "We currently do not support recording or examining execution traces. You could use LLDB's scripting capabilities to record arbitrary information at certain points with the help of breakpoints callbacks and implement your own tracing framework that way, but it would be less efficient than modifying the code, if that's an option. Here's a link to LLDB's scripting documentation: \u003chttps://lldb.llvm.org/use/python.html\u003e",
          "ts": "1654806417.688129",
          "thread_ts": "1654806388.401849",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JRPTDF6U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "u1JC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We currently do not support recording or examining execution traces. You could use LLDB's scripting capabilities to record arbitrary information at certain points with the help of breakpoints callbacks and implement your own tracing framework that way, but it would be less efficient than modifying the code, if that's an option. Here's a link to LLDB's scripting documentation: "
                    },
                    {
                      "type": "link",
                      "url": "https://lldb.llvm.org/use/python.html",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "92bb02fe-6c78-4cca-bcb1-37c94e16263e",
          "type": "message",
          "user": "U03HES2QKGV",
          "text": "Another option is to use Instruments to profile the app, specifically the \"Time Profiler\" template. This will collect samples at fast rate.",
          "ts": "1654806591.121339",
          "thread_ts": "1654806388.401849",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "3dnao",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Another option is to use Instruments to profile the app, specifically the \"Time Profiler\" template. This will collect samples at fast rate."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0C78D74C-9EDC-4F00-AD99-CF65B54C4155",
          "type": "message",
          "user": "U03JRPTDF6U",
          "text": "Thank you so much for the feedback!\n\nI'm curious: since it seems there is plenty of tooling for code generation, do you think it's a reasonable path to use something ‘swift-syntax’ to rewrite or regenerate a set of code files that have tracing calls by default? For example, I have a sample that simply adds a function call to a log output, which I can then write to disk and read. Using macros like #line and #file, I can pseudo trace execution and args. Should I explore that more do you think?\n\n\u003c@U03HES2QKGV\u003e , thank you! Is the profile trace a manageable file format of some kind that I could parse out and read from? Even it requires manual formatting, that would be a wonderful solution to experiment with!",
          "ts": "1654806753.463629",
          "thread_ts": "1654806388.401849",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "an3zl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "so"
                    },
                    {
                      "type": "text",
                      "text": " much "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " feedback"
                    },
                    {
                      "type": "text",
                      "text": "!"
                    },
                    {
                      "type": "text",
                      "text": "\n\nI'm curious"
                    },
                    {
                      "type": "text",
                      "text": ":"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "since"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "seems"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "there"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " plenty "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "tooling"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "code"
                    },
                    {
                      "type": "text",
                      "text": " generation"
                    },
                    {
                      "type": "text",
                      "text": ","
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "do"
                    },
                    {
                      "type": "text",
                      "text": " you think"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it's "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "reasonable"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "path"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "use"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "something"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "‘swift-syntax’"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "rewrite"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "or"
                    },
                    {
                      "type": "text",
                      "text": " regenerate "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "set"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " code "
                    },
                    {
                      "type": "text",
                      "text": "files"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "have"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "tracing"
                    },
                    {
                      "type": "text",
                      "text": " calls by default"
                    },
                    {
                      "type": "text",
                      "text": "?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "For"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "example,"
                    },
                    {
                      "type": "text",
                      "text": " I have "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "sample"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "simply"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "adds"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " function "
                    },
                    {
                      "type": "text",
                      "text": "call"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "log"
                    },
                    {
                      "type": "text",
                      "text": " output"
                    },
                    {
                      "type": "text",
                      "text": ","
                    },
                    {
                      "type": "text",
                      "text": " which I "
                    },
                    {
                      "type": "text",
                      "text": "can"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "then"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "write"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " di"
                    },
                    {
                      "type": "text",
                      "text": "sk"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "read."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Using"
                    },
                    {
                      "type": "text",
                      "text": " macros "
                    },
                    {
                      "type": "text",
                      "text": "like"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "#line"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "#file,"
                    },
                    {
                      "type": "text",
                      "text": " I can pseudo trace "
                    },
                    {
                      "type": "text",
                      "text": "execution"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " ar"
                    },
                    {
                      "type": "text",
                      "text": "gs."
                    },
                    {
                      "type": "text",
                      "text": " Should I "
                    },
                    {
                      "type": "text",
                      "text": "explore"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "more"
                    },
                    {
                      "type": "text",
                      "text": " do you t"
                    },
                    {
                      "type": "text",
                      "text": "hink?"
                    },
                    {
                      "type": "text",
                      "text": "\n\n"
                    },
                    {
                      "type": "user",
                      "user_id": "U03HES2QKGV"
                    },
                    {
                      "type": "text",
                      "text": " ,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "thank"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " profile "
                    },
                    {
                      "type": "text",
                      "text": "trace"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " manageable "
                    },
                    {
                      "type": "text",
                      "text": "file"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "format"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "some"
                    },
                    {
                      "type": "text",
                      "text": " kind "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " I "
                    },
                    {
                      "type": "text",
                      "text": "could"
                    },
                    {
                      "type": "text",
                      "text": " parse "
                    },
                    {
                      "type": "text",
                      "text": "out"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "read"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "from?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Even"
                    },
                    {
                      "type": "text",
                      "text": " it requires "
                    },
                    {
                      "type": "text",
                      "text": "manual"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "formatting,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "would"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " wonderful solution "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " experiment "
                    },
                    {
                      "type": "text",
                      "text": "with!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7ea527b1-e29d-4a10-bc52-76a02b472d29",
          "type": "message",
          "user": "U03HES2QKGV",
          "text": "Instruments has some ability to get at the data, though I think it will require some investigation, trial and error. Instruments has a command line tool, `xcrun xtrace`. One of its subcommands is `export`.  If you run `xcrun xctrace export` without any arguments, it will print the help. The help shows you that you want to look at the `--toc` (table of contents) and then from there select which data to export using the `--xpath` flag. Beyond this, check if there are labs or Q\u0026amp;A with Instruments engineers to get more help.",
          "ts": "1654807309.022619",
          "thread_ts": "1654806388.401849",
          "edited": {
            "user": "U03HES2QKGV",
            "ts": "1654807338.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "100",
              "count": 1,
              "users": [
                "U03JRPTDF6U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FQD",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Instruments has some ability to get at the data, though I think it will require some investigation, trial and error. Instruments has a command line tool, "
                    },
                    {
                      "type": "text",
                      "text": "xcrun xtrace",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". One of its subcommands is "
                    },
                    {
                      "type": "text",
                      "text": "export",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ".  If you run "
                    },
                    {
                      "type": "text",
                      "text": "xcrun xctrace export",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " without any arguments, it will print the help. The help shows you that you want to look at the "
                    },
                    {
                      "type": "text",
                      "text": "--toc",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " (table of contents) and then from there select which data to export using the "
                    },
                    {
                      "type": "text",
                      "text": "--xpath",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " flag. Beyond this, check if there are labs or Q\u0026A with Instruments engineers to get more help."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "533b09ed-c149-4e07-88b0-7ec0a03f05c6",
          "type": "message",
          "user": "U03JRPTDF6U",
          "text": "That’s fantastic, I’ll give the CLI a good scouring tonight. I appreciate the heads up on the arguments and expected output, puts a nice target at the end of the tunnel :smiley: There’s an Xcode open chat tomorrow, and I’ll see if I can find specific tooling ones too.",
          "ts": "1654807450.045929",
          "thread_ts": "1654806388.401849",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "F3B",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That’s fantastic, I’ll give the CLI a good scouring tonight. I appreciate the heads up on the arguments and expected output, puts a nice target at the end of the tunnel "
                    },
                    {
                      "type": "emoji",
                      "name": "smiley",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " There’s an Xcode open chat tomorrow, and I’ll see if I can find specific tooling ones too."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a25ce235-4a8e-462a-9695-9861fd882dd1",
          "type": "message",
          "user": "U03HES2QKGV",
          "text": "Good luck I hope you get the data you're looking for!",
          "ts": "1654807630.515539",
          "thread_ts": "1654806388.401849",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-asl",
              "count": 1,
              "users": [
                "U03JRPTDF6U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6by",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Good luck I hope you get the data you're looking for!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "a035d577-a90d-4873-92c6-0a18b8f0afba",
      "type": "message",
      "user": "U03HERYFK6H",
      "text": "Great questions thus far! We're always excited to learn how developers customize their debugger. What's in _your_ `.lldbinit`?",
      "ts": "1654806882.085559",
      "thread_ts": "1654806882.085559",
      "reply_count": 7,
      "latest_reply": "1654808070.685099",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "L4L4U",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Great questions thus far! We're always excited to learn how developers customize their debugger. What's in "
                },
                {
                  "type": "text",
                  "text": "your",
                  "style": {
                    "italic": true
                  }
                },
                {
                  "type": "text",
                  "text": " "
                },
                {
                  "type": "text",
                  "text": ".lldbinit",
                  "style": {
                    "code": true
                  }
                },
                {
                  "type": "text",
                  "text": "?"
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "0d45ef01-f05b-446b-bd0f-3f2f61bb23fa",
          "type": "message",
          "user": "U03HERYFK6H",
          "text": "I like extra context: `settings set stop-line-count-before 8`.",
          "ts": "1654806966.783449",
          "thread_ts": "1654806882.085559",
          "parent_user_id": "U03HERYFK6H",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "V+feC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I like extra context: "
                    },
                    {
                      "type": "text",
                      "text": "settings set stop-line-count-before 8",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ba7ad26f-f8a4-40f6-b568-691973677ef3",
          "type": "message",
          "user": "U03HWCZC2HX",
          "text": "I like to import the `crashlog` command and friends:\n```# Silently import the lldb.macosx scripts\ncommand script import -s lldb.macosx```\n",
          "ts": "1654807072.775819",
          "thread_ts": "1654806882.085559",
          "parent_user_id": "U03HERYFK6H",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dbn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I like to import the "
                    },
                    {
                      "type": "text",
                      "text": "crashlog",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " command and friends:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"# Silently import the lldb.macosx scripts\\ncommand script import -s lldb.macosx\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": []
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "90918e46-1d65-44b8-b7cf-27b7308934a4",
          "type": "message",
          "user": "U03HL55CCSG",
          "text": "I like to save my debug sessions on disk in case I want to retrieve some investigation work from a past debug session\n```settings set interpreter.save-session-directory /tmp/\nsettings set interpreter.save-session-on-quit True```",
          "ts": "1654807430.866139",
          "thread_ts": "1654806882.085559",
          "parent_user_id": "U03HERYFK6H",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "njmJJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I like to save my debug sessions on disk in case I want to retrieve some investigation work from a past debug session\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"settings set interpreter.save-session-directory \\/tmp\\/\\nsettings set interpreter.save-session-on-quit True\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d33fc876-2034-4dc7-92f9-2cb69e4c2cc6",
          "type": "message",
          "user": "U03HES2QKGV",
          "text": "First I have:\n```command alias alias command alias```\nSo that I can add aliases with `alias` instead of `command alias`.",
          "ts": "1654807564.009549",
          "thread_ts": "1654806882.085559",
          "parent_user_id": "U03HERYFK6H",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "laughing",
              "count": 4,
              "users": [
                "U03HL55CCSG",
                "U03JFQM041M",
                "U03JPFQNX5K",
                "U03J4D7EZNY"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XWyt",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "First I have:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"command alias alias command alias\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So that I can add aliases with "
                    },
                    {
                      "type": "text",
                      "text": "alias",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " instead of "
                    },
                    {
                      "type": "text",
                      "text": "command alias",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "29d6a9a9-0749-4b50-b7c0-13568275699a",
          "type": "message",
          "user": "U03HES2QKGV",
          "text": "Here's a fun one…\n```command alias % shell```\nThen you can run shell commands by running `% ls` etc. I picked `%` because it's the default prompt character for the shell I use.\n\nIn general, aliases can use non-alpha characters. I also have:\n```command alias 0 frame select 0```",
          "ts": "1654807580.556659",
          "thread_ts": "1654806882.085559",
          "edited": {
            "user": "U03HES2QKGV",
            "ts": "1654807666.000000"
          },
          "parent_user_id": "U03HERYFK6H",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ixGCx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Here's a fun one…\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"command alias % shell\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Then you can run shell commands by running "
                    },
                    {
                      "type": "text",
                      "text": "% ls",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " etc. I picked "
                    },
                    {
                      "type": "text",
                      "text": "%",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " because it's the default prompt character for the shell I use.\n\nIn general, aliases can use non-alpha characters. I also have:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"command alias 0 frame select 0\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2953ba39-747a-4809-97df-7c6a1521c1b4",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "I use little command to parse NSData to pretty JSON\n```command regex json 's/(.+)/expr let input = %1; print(String(data: try! JSONSerialization.data(withJSONObject: (input is String ? try! JSONSerialization.jsonObject(with: (input as! String).data(using: .utf8)!, options: []) : (input is Data ? (try! JSONSerialization.jsonObject(with: input as! Data, options: [])) : input as! Any)), options: [.prettyPrinted]), encoding: .utf8)!)/'```",
          "ts": "1654807863.862499",
          "thread_ts": "1654806882.085559",
          "parent_user_id": "U03HERYFK6H",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "exploding_head",
              "count": 3,
              "users": [
                "U03HL55CCSG",
                "U03HHPTPN10",
                "U03J4D7EZNY"
              ]
            },
            {
              "name": "partying_face",
              "count": 1,
              "users": [
                "U03HES2QKGV"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TH4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I use little command to parse NSData to pretty JSON\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"command regex json 's\\/(.+)\\/expr let input = %1; print(String(data: try! JSONSerialization.data(withJSONObject: (input is String ? try! JSONSerialization.jsonObject(with: (input as! String).data(using: .utf8)!, options: []) : (input is Data ? (try! JSONSerialization.jsonObject(with: input as! Data, options: [])) : input as! Any)), options: [.prettyPrinted]), encoding: .utf8)!)\\/'\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "651cbe59-be6b-428b-94f8-ed698e6f7072",
          "type": "message",
          "user": "U03HL55CCSG",
          "text": "\u003c@U03JSFUKL2U\u003e Pretty cool!",
          "ts": "1654808070.685099",
          "thread_ts": "1654806882.085559",
          "parent_user_id": "U03HERYFK6H",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-spasibo",
              "count": 2,
              "users": [
                "U03JSFUKL2U",
                "U03HWCZLQ9X"
              ]
            },
            {
              "name": "gratitude-thank-you",
              "count": 1,
              "users": [
                "U03JSFUKL2U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uKUC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03JSFUKL2U"
                    },
                    {
                      "type": "text",
                      "text": " Pretty cool!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JGKAB4AE\u003e asked\n\u0026gt; We're starting to see some app hangs already come in from the Xcode Organizer!  Do we know how far back has the system been tracking this information?",
      "ts": "1654807110.886789",
      "thread_ts": "1654807110.886789",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654807163.965919",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "dSpZ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JGKAB4AE"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We're starting to see some app hangs already come in from the Xcode Organizer!  Do we know how far back has the system been tracking this information?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "e8a04e28-fab2-436e-9a64-4863ce3cd521",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Great to hear that you're already finding the new hang reports useful! You should be able to see data collected over the last two months from devices running iOS 14.4 or newer.\n\nAlso in case you want more information about investigating hangs in your app, please check out \u003chttps://developer.apple.com/wwdc22/10082|Track down hangs with Xcode and on-device detection\u003e from this morning.",
          "ts": "1654807142.034619",
          "thread_ts": "1654807110.886789",
          "attachments": [
            {
              "fallback": "Apple Developer: Track down hangs with Xcode and on-device detection - WWDC22 - Videos - Apple Developer",
              "id": 1,
              "title": "Track down hangs with Xcode and on-device detection - WWDC22 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/wwdc22/10082",
              "text": "Learn how you can increase responsiveness and eliminate hangs in your app and make even better experiences. Hang out with the Performance...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/124/6576/6576_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/wwdc22/10082",
              "original_url": "https://developer.apple.com/wwdc22/10082",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Z/I2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Great to hear that you're already finding the new hang reports useful! You should be able to see data collected over the last two months from devices running iOS 14.4 or newer.\n\nAlso in case you want more information about investigating hangs in your app, please check out "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc22/10082",
                      "text": "Track down hangs with Xcode and on-device detection"
                    },
                    {
                      "type": "text",
                      "text": " from this morning."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "00fdbe2e-ab55-40cf-959b-992da77b3b6a",
          "type": "message",
          "user": "U03JGKAB4AE",
          "text": "Thanks!",
          "ts": "1654807163.965919",
          "thread_ts": "1654807110.886789",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Yc0",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03K3R7RP6C\u003e asked\n\u0026gt; I've found at time that pausing at a breakpoint in Xcode is really slow to update the variables views, etc. (10-60 secs at times), which makes debugging difficult and breaks the workflow. Has there been improvements to Xcode on that front?",
      "ts": "1654807269.824909",
      "thread_ts": "1654807269.824909",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654808450.554749",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "+HE",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K3R7RP6C"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I've found at time that pausing at a breakpoint in Xcode is really slow to update the variables views, etc. (10-60 secs at times), which makes debugging difficult and breaks the workflow. Has there been improvements to Xcode on that front?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "c902f462-a1d0-4bad-8e56-21bac9474706",
          "type": "message",
          "user": "U03HERYFK6H",
          "text": "We made several performance improvements in Xcode 14. If it's still slow in the Xcode 14 beta, could you run `sample lldb-rpc-server 60` in Terminal before launching your process and send a Developer Feedback our way?",
          "ts": "1654807293.171179",
          "thread_ts": "1654807269.824909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9N/9M",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We made several performance improvements in Xcode 14. If it's still slow in the Xcode 14 beta, could you run "
                    },
                    {
                      "type": "text",
                      "text": "sample lldb-rpc-server 60",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in Terminal before launching your process and send a Developer Feedback our way?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e7082f7a-21eb-4b43-b3f7-5f4553aa6b13",
          "type": "message",
          "user": "U03K3R7RP6C",
          "text": "Sounds good - I’ll keep an eye out with XC14 and keep the sampling in mind if it ever happens. Thx!",
          "ts": "1654807338.937689",
          "thread_ts": "1654807269.824909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "z+Cad",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sounds good - I’ll keep an eye out with XC14 and keep the sampling in mind if it ever happens. Thx!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "113ddda6-157f-4e7f-9a5f-f232cd5d6fe2",
          "type": "message",
          "user": "U03HERYFK6H",
          "text": "Bridging headers can also contribute to slow debugger startup times. In contrast to Clang Modules, bridging headers cannot be cached, so LLDB has to recompile them from source every time the project launches. Where possible, we encourage migrating to Clang Modules.",
          "ts": "1654807491.099269",
          "thread_ts": "1654807269.824909",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "thinking_face",
              "count": 1,
              "users": [
                "U03K3R7RP6C"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gVcYq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Bridging headers can also contribute to slow debugger startup times. In contrast to Clang Modules, bridging headers cannot be cached, so LLDB has to recompile them from source every time the project launches. Where possible, we encourage migrating to Clang Modules."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dbe1eeb7-6f71-4756-b567-5c7cf16615fa",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "How would you migrate? Those seem to be two different things?",
          "ts": "1654808223.968339",
          "thread_ts": "1654807269.824909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "r+r4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "How would you migrate? Those seem to be two different things?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f0b5d735-620c-45a5-a37c-0eb4c868f0fa",
          "type": "message",
          "user": "U03HERYFK6H",
          "text": "You can define new Clang modules by putting a `modules.modulemap` file into the same directory that describes which header files form one module. Then you can importthem in Swift with `import ModuleName`.\n\u003chttps://clang.llvm.org/docs/Modules.html\u003e",
          "ts": "1654808308.804599",
          "thread_ts": "1654807269.824909",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U03JFQM041M"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4Sv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can define new Clang modules by putting a "
                    },
                    {
                      "type": "text",
                      "text": "modules.modulemap",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " file into the same directory that describes which header files form one module. Then you can importthem in Swift with "
                    },
                    {
                      "type": "text",
                      "text": "import ModuleName",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ".\n"
                    },
                    {
                      "type": "link",
                      "url": "https://clang.llvm.org/docs/Modules.html",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d7b11f78-acac-4241-9f22-52f802caa984",
          "type": "message",
          "user": "U03HERYFK6H",
          "text": "In the simplest case something like:\n```module MyModule { header \"MyHeader.h\" }```\nwould be sufficient.",
          "ts": "1654808388.128689",
          "thread_ts": "1654807269.824909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oq/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In the simplest case something like:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"module MyModule { header \\\"MyHeader.h\\\" }\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "would be sufficient."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f8b2854b-8952-4562-89f4-7e5f0dc6879b",
          "type": "message",
          "user": "U03HERYFK6H",
          "text": "If you put this module map next to `MyHeader.h` you will be able to import it into Swift via `import MyModule`.",
          "ts": "1654808450.554749",
          "thread_ts": "1654807269.824909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mEBnv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you put this module map next to "
                    },
                    {
                      "type": "text",
                      "text": "MyHeader.h",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " you will be able to import it into Swift via "
                    },
                    {
                      "type": "text",
                      "text": "import MyModule",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "e9ef8e47-58af-49ca-a540-c9c9bd0f0bfc",
      "type": "message",
      "user": "U03HERYFK6H",
      "text": "Great suggestions in the lldbinit :thread:! Have any of you written your own LLDB commands in Python? What command would you wish LLDB had?",
      "ts": "1654809454.391049",
      "thread_ts": "1654809454.391049",
      "reply_count": 1,
      "latest_reply": "1654810039.315779",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "F/D",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Great suggestions in the lldbinit "
                },
                {
                  "type": "emoji",
                  "name": "thread",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "! Have any of you written your own LLDB commands in Python? What command would you wish LLDB had?"
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "5c9ec203-07e8-4d6c-a261-21478db62728",
          "type": "message",
          "user": "U03HES2QKGV",
          "text": "Here's a command called `sequence` that allows you to combine and run multiple commands.",
          "ts": "1654810039.315779",
          "thread_ts": "1654809454.391049",
          "is_starred": true,
          "parent_user_id": "U03HERYFK6H",
          "files": [
            {
              "id": "F03JVCG37P0",
              "created": 1654810029,
              "timestamp": 1654810029,
              "name": "Untitled.py",
              "title": "Untitled",
              "mimetype": "text/plain",
              "image_exif_rotation": 0,
              "filetype": "python",
              "pretty_type": "Python",
              "user": "U03HES2QKGV",
              "mode": "snippet",
              "editable": true,
              "is_external": false,
              "external_type": "",
              "size": 502,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03JVCG37P0-Untitled.py",
              "url_private_download": "C03H0JN431U/F03JVCG37P0-Untitled.py",
              "original_h": 0,
              "original_w": 0,
              "thumb_64": "",
              "thumb_80": "",
              "thumb_160": "",
              "thumb_360": "",
              "thumb_360_gif": "",
              "thumb_360_w": 0,
              "thumb_360_h": 0,
              "thumb_480": "",
              "thumb_480_w": 0,
              "thumb_480_h": 0,
              "thumb_720": "",
              "thumb_720_w": 0,
              "thumb_720_h": 0,
              "thumb_960": "",
              "thumb_960_w": 0,
              "thumb_960_h": 0,
              "thumb_1024": "",
              "thumb_1024_w": 0,
              "thumb_1024_h": 0,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03HES2QKGV/F03JVCG37P0/untitled.py",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03JVCG37P0-6e4ba71461",
              "edit_link": "https://appleevents.enterprise.slack.com/files/U03HES2QKGV/F03JVCG37P0/untitled.py/edit",
              "preview": "import lldb\n\n@lldb.command()\ndef sequence(debugger, command_str, exe_ctx, result, _):\n    commands = command_str.split(\";\")",
              "preview_highlight": "\u003cdiv class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\"\u003e\n\u003cdiv class=\"CodeMirror-code\"\u003e\n\u003cdiv\u003e\u003cpre\u003e\u003cspan class=\"cm-keyword\"\u003eimport\u003c/span\u003e \u003cspan class=\"cm-variable\"\u003elldb\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e\u0026#8203;\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e\u003cspan class=\"cm-meta\"\u003e@\u003c/span\u003e\u003cspan class=\"cm-meta\"\u003elldb\u003c/span\u003e.\u003cspan class=\"cm-property\"\u003ecommand\u003c/span\u003e()\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e\u003cspan class=\"cm-keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"cm-def\"\u003esequence\u003c/span\u003e(\u003cspan class=\"cm-variable\"\u003edebugger\u003c/span\u003e, \u003cspan class=\"cm-variable\"\u003ecommand_str\u003c/span\u003e, \u003cspan class=\"cm-variable\"\u003eexe_ctx\u003c/span\u003e, \u003cspan class=\"cm-variable\"\u003eresult\u003c/span\u003e, \u003cspan class=\"cm-variable\"\u003e_\u003c/span\u003e):\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e    \u003cspan class=\"cm-variable\"\u003ecommands\u003c/span\u003e \u003cspan class=\"cm-operator\"\u003e=\u003c/span\u003e \u003cspan class=\"cm-variable\"\u003ecommand_str\u003c/span\u003e.\u003cspan class=\"cm-property\"\u003esplit\u003c/span\u003e(\u003cspan class=\"cm-string\"\u003e\u0026quot;;\u0026quot;\u003c/span\u003e)\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n",
              "lines": 19,
              "lines_more": 14,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "upload": true,
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kzCuy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Here's a command called "
                    },
                    {
                      "type": "text",
                      "text": "sequence",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " that allows you to combine and run multiple commands."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J201SFAP\u003e asked\n\u0026gt; I’ve been SO busy this week!  Is there a plan for capturing all of the Q\u0026amp;A across all of the Digital Lounges so I can read through them after WWDC closes?",
      "ts": "1654810049.380379",
      "thread_ts": "1654810049.380379",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654811196.750659",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "1Y4J",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J201SFAP"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I\\u2019ve been SO busy this week!  Is there a plan for capturing all of the Q\u0026A across all of the Digital Lounges so I can read through them after WWDC closes?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a1ace7af-ff23-4b6e-9762-e1569b1cbbfb",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "I'm glad you're enjoying WWDC!  I can relate to it being a busy week. :slightly_smiling_face:  I just checked and yes, the Slack Digital Lounges will remain open and read-only for a little bit after this week so you can still read through everything.",
          "ts": "1654810054.191969",
          "thread_ts": "1654810049.380379",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-thank-you",
              "count": 10,
              "users": [
                "U03JFQM041M",
                "U03KC4368BS",
                "U03K1SMSPUZ",
                "U03K3R7RP6C",
                "U03J22AU6DQ",
                "U03KH907MME",
                "U03J21ZK802",
                "U03JE7PBQPP",
                "U03J1UBVC2X",
                "U03J4EW62N8"
              ]
            },
            {
              "name": "raised_hands",
              "count": 2,
              "users": [
                "U03J4D7EZNY",
                "U03J1UBVC2X"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PI0Yx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'm glad you're enjoying WWDC!  I can relate to it being a busy week. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "  I just checked and yes, the Slack Digital Lounges will remain open and read-only for a little bit after this week so you can still read through everything."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b07b8209-7f46-43ee-bc76-6e66aaded475",
          "type": "message",
          "user": "U03J21ZK802",
          "text": "Someone did a nice thing and captured last year's, recent repo history suggests they may be prepared to do the same this year. \u003chttps://roblack.github.io/WWDCLounges/\u003e",
          "ts": "1654810975.759799",
          "thread_ts": "1654810049.380379",
          "is_starred": true,
          "attachments": [
            {
              "fallback": "WWDCLounges",
              "id": 1,
              "title": "WWDCLounges",
              "title_link": "https://roblack.github.io/WWDCLounges/",
              "text": "archive of asked questions during WWDC21 lounges",
              "service_name": "roblack.github.io",
              "from_url": "https://roblack.github.io/WWDCLounges/",
              "original_url": "https://roblack.github.io/WWDCLounges/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JTMA2FUH"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "K2Fhd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Someone did a nice thing and captured last year's, recent repo history suggests they may be prepared to do the same this year. "
                    },
                    {
                      "type": "link",
                      "url": "https://roblack.github.io/WWDCLounges/",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5FA3E5B5-BC09-4BAE-8AC5-45D1973ED561",
          "type": "message",
          "user": "U03J201SFAP",
          "text": "BUMP!!!",
          "ts": "1654811196.750659",
          "thread_ts": "1654810049.380379",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JTMA2FUH"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FPb2H",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "BUMP!!!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "7ac31e45-df33-4b47-a5fc-43d8056172f5",
      "type": "message",
      "user": "U03HERYFK6H",
      "text": ":wave: Thanks everyone for participating in the _Debug Swift debugging with LLDB_ Q\u0026amp;A! Enjoy rest of the conference and keep debugging!",
      "ts": "1654811843.921089",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "tada",
          "count": 2,
          "users": [
            "U03HES2QKGV",
            "U03JRQ81NEL"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "PKRI6",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "emoji",
                  "name": "wave",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " Thanks everyone for participating in the "
                },
                {
                  "type": "text",
                  "text": "Debug Swift debugging with LLDB",
                  "style": {
                    "italic": true
                  }
                },
                {
                  "type": "text",
                  "text": " Q\u0026A! Enjoy rest of the conference and keep debugging!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "user": "U03HL553PNG",
      "text": "set the channel topic: Q\u0026amp;A: Foundation",
      "ts": "1654812008.168829",
      "subtype": "channel_topic",
      "topic": "Q\u0026amp;A: Foundation",
      "replace_original": false,
      "delete_original": false,
      "blocks": null
    },
    {
      "client_msg_id": "2bdfd1a3-6b2a-454d-8d18-95e48c43ee4c",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": ":wave: Hello everyone and welcome to *Foundation Q\u0026amp;A*! I’m Tony, a manager on the Swift team, here with a ton of my awesome colleagues and ready to answer your questions. First up, we have a question for you, though: _What’s your personal preference for date formats (wrong answers only)?_ Answer in the :thread: The team will get us started with some of their own ‘favorites’ :slightly_smiling_face:",
      "ts": "1654812016.728089",
      "thread_ts": "1654812016.728089",
      "reply_count": 13,
      "latest_reply": "1654812362.547739",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "aRd",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "emoji",
                  "name": "wave",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " Hello everyone and welcome to "
                },
                {
                  "type": "text",
                  "text": "Foundation Q\u0026A",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "! I’m Tony, a manager on the Swift team, here with a ton of my awesome colleagues and ready to answer your questions. First up, we have a question for you, though: "
                },
                {
                  "type": "text",
                  "text": "What’s your personal preference for date formats (wrong answers only)?",
                  "style": {
                    "italic": true
                  }
                },
                {
                  "type": "text",
                  "text": " Answer in the "
                },
                {
                  "type": "emoji",
                  "name": "thread",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " The team will get us started with some of their own ‘favorites’ "
                },
                {
                  "type": "emoji",
                  "name": "slightly_smiling_face",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "45d25f83-cc67-4db3-8c4c-22d80a79c25d",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "hmm a bit chaotic evil: `h/mm/ss M:dd:yy`",
          "ts": "1654812054.883959",
          "thread_ts": "1654812016.728089",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wjd2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "hmm a bit chaotic evil: "
                    },
                    {
                      "type": "text",
                      "text": "h/mm/ss M:dd:yy",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "84649678-9acf-4fcc-a7f3-b2b1c2454534",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "`MM/YYY/DD` is kinda fun",
          "ts": "1654812113.040039",
          "thread_ts": "1654812016.728089",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RcAe",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "MM/YYY/DD",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is kinda fun"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "180d9e02-ef10-4f1a-90db-e36ed701b0f2",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Seconds since the epoch but using a different date instead of Jan 1, 1970? :slightly_smiling_face:",
          "ts": "1654812238.857599",
          "thread_ts": "1654812016.728089",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ljgve",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Seconds since the epoch but using a different date instead of Jan 1, 1970? "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8468d64b-f1e7-450c-927b-a71bd23acf89",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "Definitely:\n```let digits = Set(\"0123456789ABCDEF\")\nfunc aDigit() -\u0026gt; Character {\n    digits.randomElement()!\n}\n\nprint(\"\\(aDigit())\\(aDigit())-\\(aDigit())\\(aDigit())\\(aDigit())\\(aDigit())-\\(aDigit())\\(aDigit())\")```",
          "ts": "1654812240.996029",
          "thread_ts": "1654812016.728089",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CuE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Definitely:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"let digits = Set(\\\"0123456789ABCDEF\\\")\\nfunc aDigit() -\u003e Character {\\n    digits.randomElement()!\\n}\\n\\nprint(\\\"\\\\(aDigit())\\\\(aDigit())-\\\\(aDigit())\\\\(aDigit())\\\\(aDigit())\\\\(aDigit())-\\\\(aDigit())\\\\(aDigit())\\\")\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5d4c63de-6327-4e45-ac5c-3c2563da603e",
          "type": "message",
          "user": "U03JE7PBQPP",
          "text": "Date math with mixed formats is my favorite",
          "ts": "1654812253.877489",
          "thread_ts": "1654812016.728089",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XqH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Date math with mixed formats is my favorite"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5b4ffa47-004b-4f9c-bd3e-6c704fea79b9",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "I think anyone using ‘week of year’ gets bonus points",
          "ts": "1654812283.932199",
          "thread_ts": "1654812016.728089",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JTMA2FUH"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "16c",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I think anyone using ‘week of year’ gets bonus points"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c7b30e14-dda6-4e5c-9fc6-79733fffe5c2",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "or ‘year for week of year’",
          "ts": "1654812295.643959",
          "thread_ts": "1654812016.728089",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "v7W",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "or ‘year for week of year’"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "78bbd666-af43-4d23-98a6-f6ed47c3162e",
          "type": "message",
          "user": "U03JHE95K7C",
          "text": "oh snap, yeah just fixed a bug where I was subtracting ms from NSTimeInterval",
          "ts": "1654812303.743639",
          "thread_ts": "1654812016.728089",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5gAQR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "oh snap, yeah just fixed a bug where I was subtracting ms from NSTimeInterval"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b1487bd2-a202-4096-a88f-aed3dcb494bb",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "definitely my unending respect.",
          "ts": "1654812304.189079",
          "thread_ts": "1654812016.728089",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "EN8g8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "definitely my unending respect."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "237dcc4e-e088-406f-a24d-bbe0e94b176f",
          "type": "message",
          "user": "U03JE7PBQPP",
          "text": "Number of leap seconds since epoch",
          "ts": "1654812325.140369",
          "thread_ts": "1654812016.728089",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "face_with_hand_over_mouth",
              "count": 1,
              "users": [
                "U03J1TY2PGT"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+=yrs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Number of leap seconds since epoch"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "46ff581e-f3a9-4e6a-8024-d6df4f75a013",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "oh no, not leap seconds!",
          "ts": "1654812338.239169",
          "thread_ts": "1654812016.728089",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "open_mouth",
              "count": 1,
              "users": [
                "U03J1TY2PGT"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "iJQd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "oh no, not leap seconds!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "684c6f3f-b1cb-43c7-aa79-d46870087e28",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "does slack have enough space to handle a thread that big?",
          "ts": "1654812357.376729",
          "thread_ts": "1654812016.728089",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vfXwR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "does slack have enough space to handle a thread that big?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3b93993e-604d-49cb-9728-93f8850dc459",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "never",
          "ts": "1654812362.547739",
          "thread_ts": "1654812016.728089",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "3fBF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "never"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "964a82b8-ac56-417b-adf8-f5639b5e1cbf",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "For any other questions (or ideas), please go ahead and use that workflow to get them to us",
      "ts": "1654812131.485019",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "rV9h",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "For any other questions (or ideas), please go ahead and use that workflow to get them to us"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J214MNE6\u003e asked\n\u0026gt; When writing concurrent swift, I find methods and variables tend to get sucked into @MainActor\n\u0026gt; \n\u0026gt; I mark one @Published variable as @MainActor, then any function which writes to that needs to be @MainActor and so on\n\u0026gt; \n\u0026gt; However - this even includes functions which only _read_ from my @Published variable.\n\u0026gt; \n\u0026gt; I feel like there should be a pattern where I can read various state from different threads - and only need to constrain my writing to @MainThread.\n\u0026gt; \n\u0026gt; Is there an idiomatic way to approach this so as to minimise the functions which have to be @MainActor ?",
      "ts": "1654812263.357389",
      "thread_ts": "1654812263.357389",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654851107.292309",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "8uo",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J214MNE6"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"When writing concurrent swift, I find methods and variables tend to get sucked into @MainActor\\n\\nI mark one @Published variable as @MainActor, then any function which writes to that needs to be @MainActor and so on\\n\\nHowever - this even includes functions which only _read_ from my @Published variable.\\n\\nI feel like there should be a pattern where I can read various state from different threads - and only need to constrain my writing to @MainThread.\\n\\nIs there an idiomatic way to approach this so as to minimise the functions which have to be @MainActor ?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "538e0798-726e-473f-8001-806b42c6970b",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "I presume the question that it is not really a Combine issue but more so an issue generally about constraints about `@MainActor`.  You can mark whole types as `@MainActor` but it often infers that if you are needing to mark things included into that grouping of only being bound to the main actor with things that clearly don't belong in that isolation group. It means that those functions that do that work may be better suited for their own type that is outside of that isolation.",
          "ts": "1654812272.229139",
          "thread_ts": "1654812263.357389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+eOau",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I presume the question that it is not really a Combine issue but more so an issue generally about constraints about "
                    },
                    {
                      "type": "text",
                      "text": "@MainActor",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ".  You can mark whole types as "
                    },
                    {
                      "type": "text",
                      "text": "@MainActor",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " but it often infers that if you are needing to mark things included into that grouping of only being bound to the main actor with things that clearly don't belong in that isolation group. It means that those functions that do that work may be better suited for their own type that is outside of that isolation."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c11b973f-4add-4b22-a2d6-9ad45029bc6b",
          "type": "message",
          "user": "U03J214MNE6",
          "text": "It's more that I mark something as @MainActor because it needs to be written on @MainActor - but that inevitably sucks in any dependant functions.\nHowever if those functions are only reading the attribute, then they could (probably??) do that safely on any thread.\nIs there a way to split out the all or nothing nature of @MainActor into read/write ?",
          "ts": "1654851107.292309",
          "thread_ts": "1654812263.357389",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VJom",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It's more that I mark something as @MainActor because it needs to be written on @MainActor - but that inevitably sucks in any dependant functions.\nHowever if those functions are only reading the attribute, then they could (probably??) do that safely on any thread.\nIs there a way to split out the all or nothing nature of @MainActor into read/write ?"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J214MNE6\u003e asked\n\u0026gt; I just wrote the following code:\n\u0026gt; \n\u0026gt;     private func monitorCoordinatorUntilWeCanConnect() {\n\u0026gt;         coordinatorMonitor = appCoordinator.objectWillChange\n\u0026gt;             .receive(on: DispatchQueue.main)\n\u0026gt;             .sink(receiveValue: { [weak self] _ in\n\u0026gt;                 DispatchQueue.main.async {\n\u0026gt;                     self?.checkOnboarding()\n\u0026gt;                 }\n\u0026gt;         })\n\u0026gt;     }\n\u0026gt; \n\u0026gt; checkOnboarding() is marked as @MainActor, so the compiler insists that I call it from DispatchQueue.main\n\u0026gt; \n\u0026gt; However I have already asked combine to deliver any notifications on the main thread \n\u0026gt; \n\u0026gt; .receive(on: DispatchQueue.main)\n\u0026gt; \n\u0026gt; so the DispatchQueue.main is actually not needed\n\u0026gt; \n\u0026gt; Is there any way to say \n\u0026gt; //Hey - I promise I'm on the main thread already!\n\u0026gt; \n\u0026gt; More generally, when writing a function which always calls a block on the main thread, is there any way to annotate it so that the compiler knows that it can stop stressing?\n\u0026gt; \n\u0026gt; e.g. I have a WeakTimer class which works much like Timer except that it automatically invalidates when released, and always calls the block on the main thread.\n\u0026gt; \n\u0026gt; It would be great if I could tell the compiler that\n\u0026gt; \n\u0026gt;         let timer = WeakTimer.scheduledTimer(withTimeInterval: 1, repeats: true) { timer in\n\u0026gt;             //This is guaranteed to be on the main thread already\n\u0026gt;         } \n\u0026gt; \n\u0026gt; something like\n\u0026gt; \n\u0026gt;  public class func scheduledTimer(withTimeInterval interval: TimeInterval,\n\u0026gt;                                      repeats: Bool,\n\u0026gt;                                      block: @escaping @GuaranteedMainActor (Timer) -\u0026gt; Void) -\u0026gt; WeakTimer\n\u0026gt; \n\u0026gt; \n\u0026gt; is there anything like that available, or is DispatchQueue.main just special-cased in the compiler?",
      "ts": "1654812418.440109",
      "thread_ts": "1654812418.440109",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654865766.261919",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "t1ufM",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J214MNE6"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I just wrote the following code:\\n\\n    private func monitorCoordinatorUntilWeCanConnect() {\\n        coordinatorMonitor = appCoordinator.objectWillChange\\n            .receive(on: DispatchQueue.main)\\n            .sink(receiveValue: { [weak self] _ in\\n                DispatchQueue.main.async {\\n                    self?.checkOnboarding()\\n                }\\n        })\\n    }\\n\\ncheckOnboarding() is marked as @MainActor, so the compiler insists that I call it from DispatchQueue.main\\n\\nHowever I have already asked combine to deliver any notifications on the main thread \\n\\n.receive(on: DispatchQueue.main)\\n\\nso the DispatchQueue.main is actually not needed\\n\\nIs there any way to say \\n\\/\\/Hey - I promise I'm on the main thread already!\\n\\nMore generally, when writing a function which always calls a block on the main thread, is there any way to annotate it so that the compiler knows that it can stop stressing?\\n\\ne.g. I have a WeakTimer class which works much like Timer except that it automatically invalidates when released, and always calls the block on the main thread.\\n\\nIt would be great if I could tell the compiler that\\n\\n        let timer = WeakTimer.scheduledTimer(withTimeInterval: 1, repeats: true) { timer in\\n            \\/\\/This is guaranteed to be on the main thread already\\n        } \\n\\nsomething like\\n\\n public class func scheduledTimer(withTimeInterval interval: TimeInterval,\\n                                     repeats: Bool,\\n                                     block: @escaping @GuaranteedMainActor (Timer) -\u003e Void) -\u003e WeakTimer\\n\\n\\nis there anything like that available, or is DispatchQueue.main just special-cased in the compiler?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "e48bd8d6-2251-4104-a395-ef7ac0f8d783",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "There is an attribute for that `@MainActor(*unsafe*)` that tells the compiler; \"Yes, _I_ know it is on the main actor and I take the safety of that into my own hands\"",
          "ts": "1654812429.601719",
          "thread_ts": "1654812418.440109",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 2,
              "users": [
                "U03J22HDMSN",
                "U03JEKRK5UH"
              ]
            },
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03J214MNE6",
                "U03JWNE42P6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "t1cyb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There is an attribute for that "
                    },
                    {
                      "type": "text",
                      "text": "@MainActor(",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "unsafe",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ")",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " that tells the compiler; \"Yes, "
                    },
                    {
                      "type": "text",
                      "text": "I",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " know it is on the main actor and I take the safety of that into my own hands\""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "46409c6a-6cc1-4899-88c0-bb50ec215888",
          "type": "message",
          "user": "U03J214MNE6",
          "text": "Thanks for the response, can you point to any docs on `@MainActor(*unsafe*)` vs `@MainActor`",
          "ts": "1654865708.745389",
          "thread_ts": "1654812418.440109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9mxE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the response, can you point to any docs on "
                    },
                    {
                      "type": "text",
                      "text": "@MainActor(",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "unsafe",
                      "style": {
                        "bold": true,
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ")",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " vs "
                    },
                    {
                      "type": "text",
                      "text": "@MainActor",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "57b3084e-046b-455f-9efd-b97c908f24d3",
          "type": "message",
          "user": "U03J214MNE6",
          "text": "with some further experimentation, it seems I can do the following:\n\n\u0026gt; `*class* MainRunner {`\n\u0026gt;   *`static`* `*func* run(_ block:*@escaping* @MainActor ()-\u0026gt;Void) {`\n\u0026gt;     `DispatchQueue.main.async {`\n\u0026gt;       `block()`\n\u0026gt;     `}`\n\u0026gt;   `}`\n\u0026gt; `}`\n\u0026gt; \n\u0026gt; `*class* Foo {`\n\u0026gt;   `@MainActor *var* bar:String = \"start\"`\n\u0026gt;    \n\u0026gt;   `*func* modify() {`\n\u0026gt;     `MainRunner.run {`\n\u0026gt;       `*self*.bar = \"Test\"`\n\u0026gt;     `}`\n\u0026gt;   `}`\n\u0026gt; `}`",
          "ts": "1654865766.261919",
          "thread_ts": "1654812418.440109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Jy=x0",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "with some further experimentation, it seems I can do the following:\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"class\",\"style\":{\"bold\":true,\"code\":true}},{\"type\":\"text\",\"text\":\" MainRunner {\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"text\",\"text\":\"  \",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"static\",\"style\":{\"bold\":true,\"code\":true}},{\"type\":\"text\",\"text\":\" \",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"func\",\"style\":{\"bold\":true,\"code\":true}},{\"type\":\"text\",\"text\":\" run(_ block:\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"@escaping\",\"style\":{\"bold\":true,\"code\":true}},{\"type\":\"text\",\"text\":\" @MainActor ()-\u003eVoid) {\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"text\",\"text\":\"    DispatchQueue.main.async {\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"text\",\"text\":\"      block()\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"text\",\"text\":\"    }\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"text\",\"text\":\"  }\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"text\",\"text\":\"}\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\\n\"},{\"type\":\"text\",\"text\":\"class\",\"style\":{\"bold\":true,\"code\":true}},{\"type\":\"text\",\"text\":\" Foo {\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"text\",\"text\":\"  @MainActor \",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"var\",\"style\":{\"bold\":true,\"code\":true}},{\"type\":\"text\",\"text\":\" bar:String = \\\"start\\\"\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"text\",\"text\":\"   \",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"text\",\"text\":\"  \",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"func\",\"style\":{\"bold\":true,\"code\":true}},{\"type\":\"text\",\"text\":\" modify() {\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"text\",\"text\":\"    MainRunner.run {\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"text\",\"text\":\"      \",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"self\",\"style\":{\"bold\":true,\"code\":true}},{\"type\":\"text\",\"text\":\".bar = \\\"Test\\\"\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"text\",\"text\":\"    }\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"text\",\"text\":\"  }\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"text\",\"text\":\"}\",\"style\":{\"code\":true}}]}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMDG985D\u003e asked\n\u0026gt; I need to access an async property in a synchronous delegate method. Example: I have an async Bool I need to access to determine what to return in application(_:shouldRestoreApplicationState:) -\u0026gt; Bool. How can I do so?",
      "ts": "1654812473.309569",
      "thread_ts": "1654812473.309569",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 16,
      "latest_reply": "1654813301.473699",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "u0/iw",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMDG985D"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I need to access an async property in a synchronous delegate method. Example: I have an async Bool I need to access to determine what to return in application(_\"},{\"type\":\"emoji\",\"name\":\"shouldRestoreApplicationState\"},{\"type\":\"text\",\"text\":\") -\u003e Bool. How can I do so?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ef0958e7-666b-4fdd-8989-4ad96303de20",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "Hi! So:",
          "ts": "1654812497.422409",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "wave::skin-tone-2",
              "count": 1,
              "users": [
                "U03HMDG985D"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "saPn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi! So:"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7e4731f9-8a2a-4633-8384-e147a5144d3d",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "when you’re inside a synchronous method, in general, you cannot suspend for an `async` thing — this lets the caller know that you will complete this call on the same thread and prevents it from blocking.",
          "ts": "1654812584.421379",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GLI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "when you’re inside a synchronous method, in general, you cannot suspend for an "
                    },
                    {
                      "type": "text",
                      "text": "async",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " thing — this lets the caller know that you will complete this call on the same thread and prevents it from blocking."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7f7616cd-32ec-4d0c-9640-b5fe1876887f",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "do you need the boolean to return the value from this method? (and, if you can share: where is this boolean coming from?)",
          "ts": "1654812610.520529",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "iO2z",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "do you need the boolean to return the value from this method? (and, if you can share: where is this boolean coming from?)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "08a4cad2-bb8f-4a69-b5a1-3efde077b7a1",
          "type": "message",
          "user": "U03HMDG985D",
          "text": "I’m working on a refactor of an app where we use Realm. You can’t work with Realm objects across threads, and trying to do so across Tasks has been a headache. So I’ve started refactoring with a custom global actor so all access to Realm is controlled. Unfortunately, this means all access to this property is now async.\n\nIn our case, this is a user object, and I’m trying to see if `ourAppState.user == nil` as part of our logic for state restoration.",
          "ts": "1654812730.237659",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "3Cc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’m working on a refactor of an app where we use Realm. You can’t work with Realm objects across threads, and trying to do so across Tasks has been a headache. So I’ve started refactoring with a custom global actor so all access to Realm is controlled. Unfortunately, this means all access to this property is now async.\n\nIn our case, this is a user object, and I’m trying to see if "
                    },
                    {
                      "type": "text",
                      "text": "ourAppState.user == nil",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " as part of our logic for state restoration."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "20f36fdf-8cfd-44a0-9874-da49ff368e8a",
          "type": "message",
          "user": "U03HMDG985D",
          "text": "(So it’s not really an async bool now that I think about it; it’s accessing a property that’s marked with an actor and has become accessible only via async.)",
          "ts": "1654812792.747479",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Xhov",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(So it’s not really an async bool now that I think about it; it’s accessing a property that’s marked with an actor and has become accessible only via async.)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4ff46d4b-c8c0-474f-b9fa-1142a7a4ef61",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "There is little difference between the two, which is why `await` is used — both require a potential suspension point to occur.",
          "ts": "1654812822.029169",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "SN/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There is little difference between the two, which is why "
                    },
                    {
                      "type": "text",
                      "text": "await",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is used — both require a potential suspension point to occur."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6b667162-f73c-46de-9d92-775a9a0bdd64",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "You may need to think about how to cache this value before transferring the Realm objects to the actor, or work with the Realm objects on the main thread instead.",
          "ts": "1654812838.659589",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "U5cc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You may need to think about how to cache this value before transferring the Realm objects to the actor, or work with the Realm objects on the main thread instead."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2524918b-c850-4974-8b34-7a693604fa21",
          "type": "message",
          "user": "U03HMDG985D",
          "text": "Right now, I have annotated the property itself with `@OurActor`.",
          "ts": "1654812895.834839",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "HBX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Right now, I have annotated the property itself with "
                    },
                    {
                      "type": "text",
                      "text": "@OurActor",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a90e4b62-368d-4b87-af16-1feff046ff1d",
          "type": "message",
          "user": "U03HMDG985D",
          "text": "Can that be a computed setter/getter? In other words, if I refactor it as such in our state controller:\n```@OurActor\nvar user: User? {\n  get { localUser }\n  set { localUser = $0 }\n}\n\nprivate var localUser: User?```\nWould that be legal?",
          "ts": "1654812946.701349",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lbV+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Can that be a computed setter/getter? In other words, if I refactor it as such in our state controller:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"@OurActor\\nvar user: User? {\\n  get { localUser }\\n  set { localUser = $0 }\\n}\\n\\nprivate var localUser: User?\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Would that be legal?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f4a8ac19-f117-43b1-a295-41a93444a8a0",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "It would, but you still need to `await` it — presenting the same problem. There’s no way to both perform an `await` in the body of that method _and_ return that value synchronously, on purpose: because a task cannot block a synchronous call.",
          "ts": "1654813012.421849",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sZb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It would, but you still need to "
                    },
                    {
                      "type": "text",
                      "text": "await",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " it — presenting the same problem. There’s no way to both perform an "
                    },
                    {
                      "type": "text",
                      "text": "await",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in the body of that method "
                    },
                    {
                      "type": "text",
                      "text": "and",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " return that value synchronously, on purpose: because a task cannot block a synchronous call."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cc836410-4ec8-46c4-beb0-7da0f886e573",
          "type": "message",
          "user": "U03HMDG985D",
          "text": "In my case, presumably I don’t need to worry about the actor just to check if the user is nil.  (Hopefully it’ll just check the Optional and not the Realm object itself), so just checking if `localUser` is nil might be enough in this case, while still having the public `user` var to use in a thread safe way.",
          "ts": "1654813106.020919",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Smu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In my case, presumably I don’t need to worry about the actor just to check if the user is nil.  (Hopefully it’ll just check the Optional and not the Realm object itself), so just checking if "
                    },
                    {
                      "type": "text",
                      "text": "localUser",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is nil might be enough in this case, while still having the public "
                    },
                    {
                      "type": "text",
                      "text": "user",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " var to use in a thread safe way."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f461b994-0c83-435f-9fd2-069fd9ba1a14",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "You may find that the code you wrote doesn’t compile, and requires you to `await`, unless the `localUser` variable is a global variable, which is generally not a kind of pattern that is encouraged.",
          "ts": "1654813183.757169",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Cnv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You may find that the code you wrote doesn’t compile, and requires you to "
                    },
                    {
                      "type": "text",
                      "text": "await",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", unless the "
                    },
                    {
                      "type": "text",
                      "text": "localUser",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " variable is a global variable, which is generally not a kind of pattern that is encouraged."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "aa698049-3fe8-4106-8ef7-639701ef6bcd",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "in this case, serializing access through your global actor doesn’t do much anyway.",
          "ts": "1654813201.821999",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ovba",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "in this case, serializing access through your global actor doesn’t do much anyway."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "85858b49-5216-4dc6-81f5-6ce1cbde8e63",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "I bet that some 1:1 time at a lab would help — if you want to go a little deeper, there is a Swift open hours lab tomorrow you can sign up for today.",
          "ts": "1654813233.471999",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FvFC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I bet that some 1:1 time at a lab would help — if you want to go a little deeper, there is a Swift open hours lab tomorrow you can sign up for today."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "900e43eb-f1ac-4713-8c7e-076c1412f0db",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "(in a lab context, you can share your screen and code with an engineer, which makes this kind of question a lot easier to deep-dive in.)",
          "ts": "1654813291.186449",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "SAi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(in a lab context, you can share your screen and code with an engineer, which makes this kind of question a lot easier to deep-dive in.)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8acf3930-baa6-4804-87b4-67e1307529f9",
          "type": "message",
          "user": "U03HMDG985D",
          "text": "If I end up failing miserably with this approach, I’ll definitely book some time. Thank you for your time right now, \u003c@U03HWDD6RED\u003e :smile:",
          "ts": "1654813301.473699",
          "thread_ts": "1654812473.309569",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Oic",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If I end up failing miserably with this approach, I’ll definitely book some time. Thank you for your time right now, "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HWDD6RED"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JHE95K7C\u003e asked\n\u0026gt; Is there a way to tell URLSession/ background processing that a set of uploads are critical and shouldn't be killed across force quit?",
      "ts": "1654812622.141689",
      "thread_ts": "1654812622.141689",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654812973.179079",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "uIowu",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JHE95K7C"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a way to tell URLSession\\/ background processing that a set of uploads are critical and shouldn't be killed across force quit?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "cdef8f03-b4f2-484d-91d2-949c91a0ed68",
          "type": "message",
          "user": "U03J2SE7Z97",
          "text": "Unfortunately, no. Force quitting (swiping up from app switcher) implies the user intent that all background activities associated with the app should stop.",
          "ts": "1654812647.205269",
          "thread_ts": "1654812622.141689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eq4qC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Unfortunately, no. Force quitting (swiping up from app switcher) implies the user intent that all background activities associated with the app should stop."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d4174019-89a8-4951-aaec-94131df0680d",
          "type": "message",
          "user": "U03JHE95K7C",
          "text": "okay, so my popup notification in appWillTerminate is really the only way to (hopefully) get the user to continue the app - got it, thanks",
          "ts": "1654812693.466829",
          "thread_ts": "1654812622.141689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "l8wyb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "okay, so my popup notification in appWillTerminate is really the only way to (hopefully) get the user to continue the app - got it, thanks"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "329ebdeb-e85c-48e1-b0b4-8e0eaf28b309",
          "type": "message",
          "user": "U03JHE95K7C",
          "text": "coincidentally, just finished watching your video on async/await with URLSession :slightly_smiling_face:",
          "ts": "1654812818.439639",
          "thread_ts": "1654812622.141689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "F5VXm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "coincidentally, just finished watching your video on async/await with URLSession "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "540b04d7-18bb-4942-83c8-e431ffa03ee2",
          "type": "message",
          "user": "U03J2SE7Z97",
          "text": "Hope you liked it",
          "ts": "1654812893.036679",
          "thread_ts": "1654812622.141689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vF2X2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hope you liked it"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0c1bc82b-edb0-48e2-a573-fb7741a27566",
          "type": "message",
          "user": "U03JHE95K7C",
          "text": "yeah, going to start experimenting with concurrency, so the video was a great starting point, looking forward to cutting my 1200 line objective-c file in half or better",
          "ts": "1654812973.179079",
          "thread_ts": "1654812622.141689",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J2SE7Z97"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Srums",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "yeah, going to start experimenting with concurrency, so the video was a great starting point, looking forward to cutting my 1200 line objective-c file in half or better"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "ad3f2a8f-666d-4f24-923f-40fab85299a6",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "Time for another question — what’s the first Foundation class you subclassed (besides `NSObject` :slightly_smiling_face:)? What behavior did you add or change?:thread:",
      "ts": "1654813471.438239",
      "thread_ts": "1654813471.438239",
      "reply_count": 10,
      "latest_reply": "1654814308.094789",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Udb6",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Time for another question — what’s the first Foundation class you subclassed (besides "
                },
                {
                  "type": "text",
                  "text": "NSObject",
                  "style": {
                    "code": true
                  }
                },
                {
                  "type": "text",
                  "text": " "
                },
                {
                  "type": "emoji",
                  "name": "slightly_smiling_face",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": ")? What behavior did you add or change?"
                },
                {
                  "type": "emoji",
                  "name": "thread",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "142ef0dc-98eb-43d6-b382-3e845594491e",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "I know some of you out there have subclassed `NSArray` to return nil on out-of-bounds :slightly_smiling_face:",
          "ts": "1654813549.388909",
          "thread_ts": "1654813471.438239",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Vxf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I know some of you out there have subclassed "
                    },
                    {
                      "type": "text",
                      "text": "NSArray",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to return nil on out-of-bounds "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d3eec34d-7342-4417-9f4d-4dbefb9532fe",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "I had `sdef` subclass a subclass of `NSMutableArray` for me… does it count?",
          "ts": "1654813570.766549",
          "thread_ts": "1654813471.438239",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6svH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I had "
                    },
                    {
                      "type": "text",
                      "text": "sdef",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " subclass a subclass of "
                    },
                    {
                      "type": "text",
                      "text": "NSMutableArray",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " for me… does it count?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "25e5f27b-d4a3-48c2-bf94-1e775560ff33",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Sure!",
          "ts": "1654813618.251489",
          "thread_ts": "1654813471.438239",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fFnB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sure!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7a66d3dc-047b-4a74-b19c-6cede93f0a51",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "i'm also sure some folks have subclassed `Operation`",
          "ts": "1654813645.000479",
          "thread_ts": "1654813471.438239",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raising_hand",
              "count": 5,
              "users": [
                "U03K3R7RP6C",
                "U03J0QXPYA3",
                "U03JFQM041M",
                "U03J20RJQ2X",
                "U03HMDYDV1D"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gcTuN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "i'm also sure some folks have subclassed "
                    },
                    {
                      "type": "text",
                      "text": "Operation",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1b867fe3-8bf7-4de8-bee8-151f3bb5dd0c",
          "type": "message",
          "user": "U03K3R7RP6C",
          "text": "Can’t remember the first, but the weirdest/most complex was probably of NSOutlineView/NSTableView, to facilitate tracking within cells.\n\nWas glad when view-based tableviews came along!",
          "ts": "1654813671.305239",
          "thread_ts": "1654813471.438239",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Vicg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Can’t remember the first, but the weirdest/most complex was probably of NSOutlineView/NSTableView, to facilitate tracking within cells.\n\nWas glad when view-based tableviews came along!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "611c0213-e9e2-451f-a7ee-c2496dc86206",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "I think my first one was `NSMutableDictionary` to track when things got added/removed",
          "ts": "1654813677.586999",
          "thread_ts": "1654813471.438239",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heavy_plus_sign",
              "count": 1,
              "users": [
                "U03HELZ3GUD"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5vD3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I think my first one was "
                    },
                    {
                      "type": "text",
                      "text": "NSMutableDictionary",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to track when things got added/removed"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d27a8672-d837-4aa0-baf1-c503ebf2bc87",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "View-based table views are certainly an improvement",
          "ts": "1654813710.917859",
          "thread_ts": "1654813471.438239",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZrR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "View-based table views are certainly an improvement"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7553ca27-f6a4-4626-999e-23556533acd3",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "Waaaay back I briefly tried to make `NSArray` more like PHP `array`",
          "ts": "1654813757.458319",
          "thread_ts": "1654813471.438239",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Eff",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Waaaay back I briefly tried to make "
                    },
                    {
                      "type": "text",
                      "text": "NSArray",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " more like PHP "
                    },
                    {
                      "type": "text",
                      "text": "array",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4d140681-ed43-4090-8e8e-13db2702dc22",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "So much shade to php out there, honestly it was a pretty neat language.",
          "ts": "1654813876.121639",
          "thread_ts": "1654813471.438239",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HJ9NBK7D"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BRR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So much shade to php out there, honestly it was a pretty neat language."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "52267857-44f3-4dfb-b31b-e6a552ff4805",
          "type": "message",
          "user": "U03J2SE8Y8Z",
          "text": "NSData to add hex formatting is probably my first.",
          "ts": "1654814308.094789",
          "thread_ts": "1654813471.438239",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "39Zi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "NSData to add hex formatting is probably my first."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J1TY2PGT\u003e asked\n\u0026gt; What is the preferred way to set a basic auth header in a URLSession request? I have been setting the 'Authorization' header of the URLRequest, but according to the docs this is reserved header and should not be set (\u003chttps://developer.apple.com/documentation/foundation/nsurlrequest#1776617).|https://developer.apple.com/documentation/foundation/nsurlrequest#1776617).\u003e \n\u0026gt; ```\n\u0026gt; extension URLRequest {\n\u0026gt;     mutating func setBasicAuth(username: String, password: String) {\n\u0026gt;         guard let basicAuthData = \"\\(username):\\(password)\".data(using: .utf8)?.base64EncodedString() else { return }\n\u0026gt;         setValue(\"Basic \\(basicAuthData)\", forHTTPHeaderField: \"Authorization\")\n\u0026gt;     }\n\u0026gt; }\n\u0026gt; ```",
      "ts": "1654814011.770189",
      "thread_ts": "1654814011.770189",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654814035.417559",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "c+or",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J1TY2PGT"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What is the preferred way to set a basic auth header in a URLSession request? I have been setting the 'Authorization' header of the URLRequest, but according to the docs this is reserved header and should not be set (\"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/documentation\\/foundation\\/nsurlrequest#1776617).\",\"text\":\"https:\\/\\/developer.apple.com\\/documentation\\/foundation\\/nsurlrequest#1776617).\"},{\"type\":\"text\",\"text\":\" \\n```\\nextension URLRequest {\\n    mutating func setBasicAuth(username: String, password: String) {\\n        guard let basicAuthData = \\\"\\\\(username):\\\\(password)\\\".data(using: .utf8)?.base64EncodedString() else { return }\\n        setValue(\\\"Basic \\\\(basicAuthData)\\\", forHTTPHeaderField: \\\"Authorization\\\")\\n    }\\n}\\n```\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "3487f410-e80a-4667-9098-b381b8d8fd73",
          "type": "message",
          "user": "U03J2SE7Z97",
          "text": "URLSession supports HTTP authentication. If you implement `didReceiveChallenge` delegate method, URLSession will call it to request a credential when a 401 response is received, then we will generate the appropriate `Authorization` header for the particular type of authentication challenge when sending a new request.\n\nHowever, if you want to manually handle authentication, adding an `Authorization` header to the request is allowed.",
          "ts": "1654814035.417559",
          "thread_ts": "1654814011.770189",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J1TY2PGT"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Bp8i",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "URLSession supports HTTP authentication. If you implement "
                    },
                    {
                      "type": "text",
                      "text": "didReceiveChallenge",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " delegate method, URLSession will call it to request a credential when a 401 response is received, then we will generate the appropriate "
                    },
                    {
                      "type": "text",
                      "text": "Authorization",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " header for the particular type of authentication challenge when sending a new request.\n\nHowever, if you want to manually handle authentication, adding an "
                    },
                    {
                      "type": "text",
                      "text": "Authorization",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " header to the request is allowed."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "8acb6658-af68-426f-8d8c-b1b4ec3c7f12",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "Did everyone see some of the new features in Foundation this year? Here’s one: We have a brand new `URL` formatter that lets you customize exactly how the URL is displayed:\n```let url = URL(string: \"\u003chttps://developer.apple.com/\u003e\")!\nprint(url.formatted(.url.scheme(.never).host())) // \u003chttp://developer.apple.com|developer.apple.com\u003e```",
      "ts": "1654814310.601419",
      "thread_ts": "1654814310.601419",
      "is_starred": true,
      "reply_count": 5,
      "latest_reply": "1654842777.941309",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "hushed",
          "count": 7,
          "users": [
            "U03JHARHUTD",
            "U03JEMN82JV",
            "U03K8MB8733",
            "U03J20RJQ2X",
            "U03HWEGHRKR",
            "U03HMESB695",
            "U03JFQM041M"
          ]
        },
        {
          "name": "sunglasses",
          "count": 6,
          "users": [
            "U03HMBQ0KJB",
            "U03HZ3N1QFP",
            "U03HVD5Q8DC",
            "U03J1UBVC2X",
            "U03JFQM041M",
            "U03J21F2PQS"
          ]
        },
        {
          "name": "swift-orange",
          "count": 1,
          "users": [
            "U03HBMCMGBG"
          ]
        },
        {
          "name": "raised_hands",
          "count": 1,
          "users": [
            "U03KC2W6BEV"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Ii7",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Did everyone see some of the new features in Foundation this year? Here’s one: We have a brand new "
                },
                {
                  "type": "text",
                  "text": "URL",
                  "style": {
                    "code": true
                  }
                },
                {
                  "type": "text",
                  "text": " formatter that lets you customize exactly how the URL is displayed:\n"
                }
              ]
            },
            {
              "Type": "rich_text_preformatted",
              "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"let url = URL(string: \\\"\"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/\"},{\"type\":\"text\",\"text\":\"\\\")!\\nprint(url.formatted(.url.scheme(.never).host())) \\/\\/ developer.apple.com\"}],\"border\":0}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ca25f35b-53fd-4c71-9076-53f06dd73f98",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "Speaking of URL, I spy so many new initializers and properties in \u003chttps://developer.apple.com/documentation/foundation/url|the documentation\u003e… oh, hey, I was right, \u003chttps://forums.swift.org/t/back-from-revision-foundation-url-improvements/54605|I \u003e_\u003chttps://forums.swift.org/t/back-from-revision-foundation-url-improvements/54605|did see\u003e_\u003chttps://forums.swift.org/t/back-from-revision-foundation-url-improvements/54605| them somewhere\u003e!",
          "ts": "1654814481.293409",
          "thread_ts": "1654814310.601419",
          "attachments": [
            {
              "fallback": "Swift Forums: [Back from revision] Foundation URL Improvements",
              "id": 1,
              "title": "[Back from revision] Foundation URL Improvements",
              "title_link": "https://forums.swift.org/t/back-from-revision-foundation-url-improvements/54605",
              "text": "Hi all, Thank you all so much for the feedback on my original post on Foundation URL Improvements. I gathered so many excellent suggestions. After carefully reading through them and evaluating the pros and cons, I've revised the proposal on the URL improvements. Here's a brief overview of the changes since the original draft: Changed URL.currentDirectory to a closure to ensure its value does not change within the closure body. Added @_alwaysEmitIntoClient to the StaticString initializer so t...",
              "thumb_url": "https://aws1.discourse-cdn.com/swift/original/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6.png",
              "service_name": "Swift Forums",
              "service_icon": "https://aws1.discourse-cdn.com/swift/optimized/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6_2_180x180.png",
              "from_url": "https://forums.swift.org/t/back-from-revision-foundation-url-improvements/54605",
              "original_url": "https://forums.swift.org/t/back-from-revision-foundation-url-improvements/54605",
              "fields": [
                {
                  "title": "Reading time",
                  "value": "27 mins :clock2:",
                  "short": true
                },
                {
                  "title": "Likes",
                  "value": "47 :heart:",
                  "short": true
                }
              ],
              "blocks": null,
              "ts": 1642125715
            }
          ],
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OPvr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Speaking of URL, I spy so many new initializers and properties in "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/foundation/url",
                      "text": "the documentation"
                    },
                    {
                      "type": "text",
                      "text": "… oh, hey, I was right, "
                    },
                    {
                      "type": "link",
                      "url": "https://forums.swift.org/t/back-from-revision-foundation-url-improvements/54605",
                      "text": "I "
                    },
                    {
                      "type": "link",
                      "url": "https://forums.swift.org/t/back-from-revision-foundation-url-improvements/54605",
                      "text": "did see",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "link",
                      "url": "https://forums.swift.org/t/back-from-revision-foundation-url-improvements/54605",
                      "text": " them somewhere"
                    },
                    {
                      "type": "text",
                      "text": "!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f3bc68af-63c2-42f8-81ce-7124723c498b",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "anyone up to spend just a moment in the `URL.temporaryDirectory` before we stop home (to `URL.homeDirectory`) to have an awesome home movie night (picking from my `URL.moviesDirectory`)? or perhaps all you need is just to `.append(queryItems)` when you have a bunch of `URLQueryItem`s to add at the end, without having to round-trip into URL components?",
          "ts": "1654814759.708999",
          "thread_ts": "1654814310.601419",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "fire",
              "count": 2,
              "users": [
                "U03J20RJQ2X",
                "U03HBMCMGBG"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OmzHz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "anyone up to spend just a moment in the "
                    },
                    {
                      "type": "text",
                      "text": "URL.temporaryDirectory",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " before we stop home (to "
                    },
                    {
                      "type": "text",
                      "text": "URL.homeDirectory",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ") to have an awesome home movie night (picking from my "
                    },
                    {
                      "type": "text",
                      "text": "URL.moviesDirectory",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ")? or perhaps all you need is just to "
                    },
                    {
                      "type": "text",
                      "text": ".append(queryItems)",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " when you have a bunch of "
                    },
                    {
                      "type": "text",
                      "text": "URLQueryItem",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "s to add at the end, without having to round-trip into URL components?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "09cded37-13c2-4081-ad0f-caf1dea88ceb",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "I really like all the new additions there :slightly_smiling_face:",
          "ts": "1654814786.027579",
          "thread_ts": "1654814310.601419",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wHIhA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I really like all the new additions there "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "466d6f0d-b9ff-4d49-a1b7-1fdc8ab8630b",
          "type": "message",
          "user": "U03J20RJQ2X",
          "text": "That’s so cool! I’ve been writing my own extensions to access those directories for a while now",
          "ts": "1654815718.152979",
          "thread_ts": "1654814310.601419",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uFT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That’s so cool! I’ve been writing my own extensions to access those directories for a while now"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4fdf1c69-9225-4655-9f0b-82588b57e230",
          "type": "message",
          "user": "U03J4DREXJQ",
          "text": "Hey there, this is litlle bit offtopic -\u0026gt; is there any good OSS API to get `cURL` request out of `NSURLRequest`?",
          "ts": "1654842777.941309",
          "thread_ts": "1654814310.601419",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+0a6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hey there, this is litlle bit offtopic -\u003e is there any good OSS API to get "
                    },
                    {
                      "type": "text",
                      "text": "cURL",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " request out of "
                    },
                    {
                      "type": "text",
                      "text": "NSURLRequest",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "?"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4DRK4SY\u003e asked\n\u0026gt; Are there built in facilities for parsing user-generated URLs? I've found URL and URLComponents are both generally too strict for user-provided content when it comes to expecting the string inputs to be perfectly spec-compliant. Right now I'm using a (wonderful) 3rd party Swift package that implements the WHATWG standard (which is significantly more forgiving), but it seems like something that's common enough that it should be builtin.",
      "ts": "1654815535.652989",
      "thread_ts": "1654815535.652989",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654817216.776039",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Za1L",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4DRK4SY"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Are there built in facilities for parsing user-generated URLs? I've found URL and URLComponents are both generally too strict for user-provided content when it comes to expecting the string inputs to be perfectly spec-compliant. Right now I'm using a (wonderful) 3rd party Swift package that implements the WHATWG standard (which is significantly more forgiving), but it seems like something that's common enough that it should be builtin.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ecea8b8c-9d13-4402-a401-f4c4921a5164",
          "type": "message",
          "user": "U03HBMCMGBG",
          "text": "Hi \u003c@U03J4DRK4SY\u003e ! This year Foundation introduced `URL.ParseStrategy` (alongside with `URL.FormatStyle`) that can be used to parse user generated URLs. You can use it the same way as the rest of Foundation's parse strategies. Here's an example:\n```let strategy = URL.ParseStrategy()\n    .scheme(.defaultValue(\"https\"))\n    .user(.optional)\n    .password(.optional)\n    .host(.required)\n    .port(.defaultValue(8080))\n    .path(.optional)\n    .query(.optional)\n    .fragment(.optional)\nlet text = \"\u003chttp://www.watermelon.com/about|www.watermelon.com/about\u003e\"\nlet url = try? strategy.parse(text) // \u003chttps://www.watermelon.com:8080/about\u003e```",
          "ts": "1654816107.446859",
          "thread_ts": "1654815535.652989",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U03J5J0TUN9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kBvpV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi "
                    },
                    {
                      "type": "user",
                      "user_id": "U03J4DRK4SY"
                    },
                    {
                      "type": "text",
                      "text": " ! This year Foundation introduced "
                    },
                    {
                      "type": "text",
                      "text": "URL.ParseStrategy",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " (alongside with "
                    },
                    {
                      "type": "text",
                      "text": "URL.FormatStyle",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ") that can be used to parse user generated URLs. You can use it the same way as the rest of Foundation's parse strategies. Here's an example:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"let strategy = URL.ParseStrategy()\\n    .scheme(.defaultValue(\\\"https\\\"))\\n    .user(.optional)\\n    .password(.optional)\\n    .host(.required)\\n    .port(.defaultValue(8080))\\n    .path(.optional)\\n    .query(.optional)\\n    .fragment(.optional)\\nlet text = \\\"www.watermelon.com\\/about\\\"\\nlet url = try? strategy.parse(text) \\/\\/ \"},{\"type\":\"link\",\"url\":\"https:\\/\\/www.watermelon.com:8080\\/about\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9a807bd4-10b7-47b3-b48d-2af3cab6f3a4",
          "type": "message",
          "user": "U03HBMCMGBG",
          "text": "This new `ParseStrategy` supports Internationalized Domain Names (IDNs), so you'll be able to parse URLs like this:\n```let strategy = URL.ParseStrategy()\n// Yes, these are real URLs in use :P\ntry? strategy.parse(\"https://👁👄👁.fm\") // returns an URL instance```",
          "ts": "1654816202.056269",
          "thread_ts": "1654815535.652989",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9LvMI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This new "
                    },
                    {
                      "type": "text",
                      "text": "ParseStrategy",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " supports Internationalized Domain Names (IDNs), so you'll be able to parse URLs like this:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"let strategy = URL.ParseStrategy()\\n\\/\\/ Yes, these are real URLs in use :P\\ntry? strategy.parse(\\\"https:\\/\\/\\ud83d\\udc41\\ud83d\\udc44\\ud83d\\udc41.fm\\\") \\/\\/ returns an URL instance\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5ed8144c-32d1-4e25-8b26-fc1df637aed7",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "The parse strategy doesn’t implement the full WHATWG standard, but it can be used as a start if all you have access to is built-in functionality. If you’d like the standard to be in Foundation, the best way to track that is to send us a feedback!",
          "ts": "1654816290.174979",
          "thread_ts": "1654815535.652989",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CHYG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The parse strategy doesn’t implement the full WHATWG standard, but it can be used as a start if all you have access to is built-in functionality. If you’d like the standard to be in Foundation, the best way to track that is to send us a feedback!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "70bb53f5-d146-45e7-b1d2-f52cc7a01e50",
          "type": "message",
          "user": "U03J4DRK4SY",
          "text": "Ooh, that's very interesting, IDNA support was a big problem for me before! Can the ParseStrategy handle escaping invalid characters in the URL?",
          "ts": "1654816863.399399",
          "thread_ts": "1654815535.652989",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dxtP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ooh, that's very interesting, IDNA support was a big problem for me before! Can the ParseStrategy handle escaping invalid characters in the URL?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e15584dc-7d3c-4f4d-bf08-2628a3f01bd6",
          "type": "message",
          "user": "U03J4DRK4SY",
          "text": "The other big issue I've encountered in the past was that some remote services will produce technically malformed URLs (e.g., with an \"ü\" in the path but not percent-encoded) that make their way to my app and that I need to be able to parse",
          "ts": "1654816899.228939",
          "thread_ts": "1654815535.652989",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ac9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The other big issue I've encountered in the past was that some remote services will produce technically malformed URLs (e.g., with an \"ü\" in the path but not percent-encoded) that make their way to my app and that I need to be able to parse"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b1c1879a-6608-43bd-a36e-bca7aaf7793a",
          "type": "message",
          "user": "U03HBMCMGBG",
          "text": "\u0026gt; Can the ParseStrategy handle escaping invalid characters in the URL?\nYes! For example\n```try? URL.ParseStrategy().parse(\"\u003chttp://見.香港/热狗/🌭\u003e\")```\nshould return an URL instance like this:\n```\u003chttp://xn--nw2a.xn--j6w193g/%E7%83%AD%E7%8B%97/%F0%9F%8C%AD\u003e```\nNote that the host name has been automatically Punycode encoded while the path has been percent encoded.",
          "ts": "1654817127.727419",
          "thread_ts": "1654815535.652989",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "m=bQU",
              "elements": [
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can the ParseStrategy handle escaping invalid characters in the URL?\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes! For example\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"try? URL.ParseStrategy().parse(\\\"\"},{\"type\":\"link\",\"url\":\"http:\\/\\/\\u898b.\\u9999\\u6e2f\\/\\u70ed\\u72d7\\/\\ud83c\\udf2d\"},{\"type\":\"text\",\"text\":\"\\\")\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "should return an URL instance like this:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"link\",\"url\":\"http:\\/\\/xn--nw2a.xn--j6w193g\\/%E7%83%AD%E7%8B%97\\/%F0%9F%8C%AD\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Note that the host name has been automatically Punycode encoded while the path has been percent encoded."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "46ab3762-4921-4a7c-97c0-028570d7ba5e",
          "type": "message",
          "user": "U03J4DRK4SY",
          "text": ":heart_eyes: That is fantastic!",
          "ts": "1654817216.776039",
          "thread_ts": "1654815535.652989",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-thank-you",
              "count": 1,
              "users": [
                "U03HBMCMGBG"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "rJJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "emoji",
                      "name": "heart_eyes",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " That is fantastic!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HWEGHRKR\u003e asked\n\u0026gt; With combine, when do subscribers' closures get called? and in what order are the subscribers called with respect to each other?\n\u0026gt; \n\u0026gt; suppose i have a publisher that sends values on main. will the subscriber's closures get called before `Publisher.send()` returns? or does `send` just schedule the subscribers to receive events on the same queue as the sender?",
      "ts": "1654816625.428819",
      "thread_ts": "1654816625.428819",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 10,
      "latest_reply": "1654818138.166479",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "E+zOZ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HWEGHRKR"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"With combine, when do subscribers' closures get called? and in what order are the subscribers called with respect to each other?\\n\\nsuppose i have a publisher that sends values on main. will the subscriber's closures get called before `Publisher.send()` returns? or does `send` just schedule the subscribers to receive events on the same queue as the sender?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "01f5b7de-73c7-49bb-90bb-ddd568171e16",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "Values are delivered as soon as there is demand for them; this means that when demand is applied to a publisher any values that would be sent would be emitted immediately (barring any scheduler based operator in the chain). In short; if there is demand, you can rely on delivery to be synchronous.",
          "ts": "1654816632.481189",
          "thread_ts": "1654816625.428819",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HWEGHRKR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "iIaTy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Values are delivered as soon as there is demand for them; this means that when demand is applied to a publisher any values that would be sent would be emitted immediately (barring any scheduler based operator in the chain). In short; if there is demand, you can rely on delivery to be synchronous."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2c3169e2-5558-4988-be4f-70277e5e18f2",
          "type": "message",
          "user": "U03HWEGHRKR",
          "text": "is there anyway to order the subscribers? I assume that if a value is sent on the main thread, not all subscribers can receive the value at once.",
          "ts": "1654816806.332519",
          "thread_ts": "1654816625.428819",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RXyIV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "is there anyway to order the subscribers? I assume that if a value is sent on the main thread, not all subscribers can receive the value at once."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "330bb0b9-9b47-4725-9b1e-5a83fe369e7e",
          "type": "message",
          "user": "U03H36UD5QX",
          "text": "how do you have more than one? are you using share?",
          "ts": "1654816901.659609",
          "thread_ts": "1654816625.428819",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VWf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "how do you have more than one? are you using share?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6973867f-7d85-4d0e-9675-fbd6a76def7d",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "If you are using something like `share()` or a built-in Subject type to share the value among multiple subscribers, none of those in the Combine framework proper have guarantees for the order in which subscribers receive the value.",
          "ts": "1654816937.892159",
          "thread_ts": "1654816625.428819",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HWEGHRKR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uFw4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you are using something like "
                    },
                    {
                      "type": "text",
                      "text": "share()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " or a built-in Subject type to share the value among multiple subscribers, none of those in the Combine framework proper have guarantees for the order in which subscribers receive the value."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c0a8f942-b841-4d11-9328-7dae0474632b",
          "type": "message",
          "user": "U03HWEGHRKR",
          "text": "maybe i’m not understanding combine correctly :sweat_smile:\nsomething like this\n```@Published var myVar: Bool = false\n\nlet sub1 = $myVar.sink {\n    print($0)\n}\nlet sub2 = $myVar.sink {\n    print(!$0)\n}```",
          "ts": "1654817374.652939",
          "thread_ts": "1654816625.428819",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BKT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "maybe i’m not understanding combine correctly "
                    },
                    {
                      "type": "emoji",
                      "name": "sweat_smile",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\nsomething like this\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"@Published var myVar: Bool = false\\n\\nlet sub1 = $myVar.sink {\\n    print($0)\\n}\\nlet sub2 = $myVar.sink {\\n    print(!$0)\\n}\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b36b1072-3cd0-4027-91a4-ac4c627385c3",
          "type": "message",
          "user": "U03HELZ3GUD",
          "text": "first subscription with `sub1` would subscribe and request it’s demand and receive the current value (cause `@Published` is like a `CurrentValueSubject` ) then `sub2` would subscribe and request it’s demand and get the current value. After that the subscriptions (so long as both `sub1` and `sub2` have an active reference count) would be setup so only demand and values would be exchanged",
          "ts": "1654817750.959179",
          "thread_ts": "1654816625.428819",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HWEGHRKR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9FXi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "first subscription with "
                    },
                    {
                      "type": "text",
                      "text": "sub1",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " would subscribe and request it’s demand and receive the current value (cause "
                    },
                    {
                      "type": "text",
                      "text": "@Published",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is like a "
                    },
                    {
                      "type": "text",
                      "text": "CurrentValueSubject",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " ) then "
                    },
                    {
                      "type": "text",
                      "text": "sub2",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " would subscribe and request it’s demand and get the current value. After that the subscriptions (so long as both "
                    },
                    {
                      "type": "text",
                      "text": "sub1",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "text",
                      "text": "sub2",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " have an active reference count) would be setup so only demand and values would be exchanged"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "08172c58-a581-4bd4-9936-3dc6a4f97f82",
          "type": "message",
          "user": "U03HELZ3GUD",
          "text": "does that make sense?",
          "ts": "1654817798.263939",
          "thread_ts": "1654816625.428819",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XumH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "does that make sense?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d7e6e881-dfae-447a-ae1c-d7dd6da4a363",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "In general, though, there’s no real guarantee which closure will fire first once that first pass is done.",
          "ts": "1654817806.687589",
          "thread_ts": "1654816625.428819",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HWEGHRKR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0x2Zs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In general, though, there’s no real guarantee which closure will fire first once that first pass is done."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f750e6ad-c8f1-4be8-81d8-6983dc0e3484",
          "type": "message",
          "user": "U03HELZ3GUD",
          "text": "Right",
          "ts": "1654817844.800369",
          "thread_ts": "1654816625.428819",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "J4A",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Right"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "04bb6c1d-794a-45a3-b1a4-2b1c907848dc",
          "type": "message",
          "user": "U03HWEGHRKR",
          "text": "makes sense. thank you both :smile:",
          "ts": "1654818138.166479",
          "thread_ts": "1654816625.428819",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TuU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "makes sense. thank you both "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "b5be86c0-bace-4bc8-88e7-cd0e1e25deb6",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "Alright everyone, 25 minutes left! Another question for you: I know we have a lot of Swift developers and ObjC developers around, but anyone out there using our vintage CoreFoundation interfaces?",
      "ts": "1654817771.800809",
      "thread_ts": "1654817771.800809",
      "reply_count": 6,
      "latest_reply": "1654818076.418779",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "heavy_plus_sign",
          "count": 1,
          "users": [
            "U03HZ4PT2ER"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "cJ8",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Alright everyone, 25 minutes left! Another question for you: I know we have a lot of Swift developers and ObjC developers around, but anyone out there using our vintage CoreFoundation interfaces?"
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "4a62c58a-3940-4a56-b98c-b363cdd671a5",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Vintage means cool, you know",
          "ts": "1654817802.536209",
          "thread_ts": "1654817771.800809",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "sunglasses",
              "count": 4,
              "users": [
                "U03HELZ3GUD",
                "U03HBMCMGBG",
                "U03HQ6QV083",
                "U03HWDD6RED"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PmHyT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Vintage means cool, you know"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "33a3904c-41e2-41cc-820e-763b342b9603",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "Definitely! Of course it's in older code but still works. I just filed a bug against `NSCreateMapTable`",
          "ts": "1654817841.815699",
          "thread_ts": "1654817771.800809",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4u8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Definitely! Of course it's in older code but still works. I just filed a bug against "
                    },
                    {
                      "type": "text",
                      "text": "NSCreateMapTable",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5650f9af-17c0-46f1-9a99-036407ccaa90",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "My favorite CF API is `CFGetRetainCount`",
          "ts": "1654817845.716149",
          "thread_ts": "1654817771.800809",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heavy_plus_sign",
              "count": 1,
              "users": [
                "U03HJ9NBK7D"
              ]
            },
            {
              "name": "scream",
              "count": 1,
              "users": [
                "U03HWDD6RED"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uW5m",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "My favorite CF API is "
                    },
                    {
                      "type": "text",
                      "text": "CFGetRetainCount",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dc2624f3-003f-4be6-b731-8177565db08a",
          "type": "message",
          "user": "U03HVC2HDFG",
          "text": "Still have some sitting in our macOS app.",
          "ts": "1654817861.454309",
          "thread_ts": "1654817771.800809",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HL5K6L04"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zOvlM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Still have some sitting in our macOS app."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "964fc3a8-14df-41a0-9eec-4dcb6a2a8285",
          "type": "message",
          "user": "U03HVC2HDFG",
          "text": "Mostly dealing with the IORegistry...but a lot is bridged out as quickly as it can be these days.",
          "ts": "1654817939.738529",
          "thread_ts": "1654817771.800809",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "R7xmB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Mostly dealing with the IORegistry...but a lot is bridged out as quickly as it can be these days."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9a43d0fd-8536-45be-ad4f-8dc0e8240145",
          "type": "message",
          "user": "U03JHE95K7C",
          "text": "not anymore, but I did use it to great effect a few years ago",
          "ts": "1654818076.418779",
          "thread_ts": "1654817771.800809",
          "parent_user_id": "U03HL5K6L04",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BKJZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "not anymore, but I did use it to great effect a few years ago"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ4PT2ER\u003e asked\n\u0026gt; Taking off Tony's question, is there actually a replacement for the Virtual Keyboard enum in Carbon? (`kVK_Escape`...)",
      "ts": "1654818074.477369",
      "thread_ts": "1654818074.477369",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 10,
      "latest_reply": "1654818563.747399",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "cXbY",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ4PT2ER"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Taking off Tony's question, is there actually a replacement for the Virtual Keyboard enum in Carbon? (`kVK_Escape`...)\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "c6ba6baa-7975-4491-bb97-e03e23cd89a5",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Ok I actually don’t know the answer, but since this is my fault I thought I should say that in public here. :slightly_smiling_face:",
          "ts": "1654818094.330169",
          "thread_ts": "1654818074.477369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "WF6OM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok I actually don’t know the answer, but since this is my fault I thought I should say that in public here. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "da5ff8be-a1a4-445f-8a5a-3b5a37b89ac0",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "I will say however that some of the engineers over in the uiframeworks-lounge have been around long enough to probably know if you’re curious!",
          "ts": "1654818139.015629",
          "thread_ts": "1654818074.477369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "a9N",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I will say however that some of the engineers over in the uiframeworks-lounge have been around long enough to probably know if you’re curious!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ce77728a-600a-43c0-8256-563664f23dbb",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "e.g. what would you do in Swift if you needed to map the key code of an `NSEvent`?",
          "ts": "1654818190.117599",
          "thread_ts": "1654818074.477369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vDca",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "e.g. what would you do in Swift if you needed to map the key code of an "
                    },
                    {
                      "type": "text",
                      "text": "NSEvent",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ebe43c0c-ee87-41bb-b60f-58abee8c7049",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "pssst: \u003chttps://developer.apple.com/documentation/uikit/uikeyboardhidusage\u003e for Catalyst and iOS",
          "ts": "1654818212.610359",
          "thread_ts": "1654818074.477369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oXX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "pssst: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/uikit/uikeyboardhidusage",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " for Catalyst and iOS"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2080e752-0c68-42af-8719-6597c4c702e2",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "\u003c@U03HWDD6RED\u003e I should have mentioned macOS",
          "ts": "1654818250.947539",
          "thread_ts": "1654818074.477369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eG1an",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HWDD6RED"
                    },
                    {
                      "type": "text",
                      "text": " I should have mentioned macOS"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "89252868-c548-46e1-871c-52f4d262f898",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "oh! easy: that’s \u003chttps://developer.apple.com/documentation/appkit/nsevent/specialkey/\u003e",
          "ts": "1654818272.817879",
          "thread_ts": "1654818074.477369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "y==z",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "oh! easy: that’s "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/appkit/nsevent/specialkey/",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ab66c11f-6331-4d27-8c28-9062d051bcc6",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "which I definitely wasn’t googling around for while you were reading my previous message :stuck_out_tongue_winking_eye:",
          "ts": "1654818297.891789",
          "thread_ts": "1654818074.477369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "SH+e6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "which I definitely wasn’t googling around for while you were reading my previous message "
                    },
                    {
                      "type": "emoji",
                      "name": "stuck_out_tongue_winking_eye",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "61bf7970-da83-49bd-b6a1-f84f839a381f",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "(of course, these aren’t the only ways you can map a key to its intent; UIKey and NSEvent are your starting points there.)",
          "ts": "1654818520.975759",
          "thread_ts": "1654818074.477369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "MaQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(of course, these aren’t the only ways you can map a key to its intent; UIKey and NSEvent are your starting points there.)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2c63c960-4c6b-4fc3-ac19-e77597a84762",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "(and UIKeyCommand. But the UI Frameworks labs and lounges definitely can be more helpful there!)",
          "ts": "1654818541.115989",
          "thread_ts": "1654818074.477369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4FG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(and UIKeyCommand. But the UI Frameworks labs and lounges definitely can be more helpful there!)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2562e7b2-2087-420a-9240-6536a57c9c7f",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "I still use `kVK...` , old habit",
          "ts": "1654818563.747399",
          "thread_ts": "1654818074.477369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "09Gj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I still use "
                    },
                    {
                      "type": "text",
                      "text": "kVK...",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " , old habit"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "ce68e855-79f5-4249-a7ae-01472027927d",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": ":clock11: 5 minutes left",
      "ts": "1654818751.982769",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ivlat",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "emoji",
                  "name": "clock11",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " 5 minutes left"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "c2a31446-f523-447f-beba-324fffafa480",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "Get your last calendrical calculation questions in now, like… how do I find the time 5 minutes from now?",
      "ts": "1654818822.700109",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Ek=/",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Get your last calendrical calculation questions in now, like… how do I find the time 5 minutes from now?"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4DRK4SY\u003e asked\n\u0026gt; Do you have any favorite, oft-overlooked features of Foundation?",
      "ts": "1654818868.476359",
      "thread_ts": "1654818868.476359",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 17,
      "latest_reply": "1654819270.275729",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "NdiBp",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4DRK4SY"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Do you have any favorite, oft-overlooked features of Foundation?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "52d2eef0-735b-427b-a02c-237c8425f185",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "Good question!",
          "ts": "1654818874.932309",
          "thread_ts": "1654818868.476359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gyT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Good question!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7bba0007-103f-4236-94cf-90ae2fe22b92",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "I like `Progress` — it’s a lot more than just a double or a fraction",
          "ts": "1654818910.352549",
          "thread_ts": "1654818868.476359",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 2,
              "users": [
                "U03HZ4PT2ER",
                "U03J4DRK4SY"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "R91",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I like "
                    },
                    {
                      "type": "text",
                      "text": "Progress",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " — it’s a lot more than just a double or a fraction"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4a354fcc-dd95-4074-9b16-237e247abce6",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "To that I would add all the implicit `Progress` you get for free, even in `NSImage`",
          "ts": "1654818935.635879",
          "thread_ts": "1654818868.476359",
          "edited": {
            "user": "U03HZ4PT2ER",
            "ts": "1654818965.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hIn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "To that I would add all the implicit "
                    },
                    {
                      "type": "text",
                      "text": "Progress",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " you get for free, even in "
                    },
                    {
                      "type": "text",
                      "text": "NSImage",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0e0b5225-02dc-4687-ac47-fcafbed20b19",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "And it has a *lot* of totally localized output that you can take advantage of",
          "ts": "1654818938.622569",
          "thread_ts": "1654818868.476359",
          "edited": {
            "user": "U03HL5K6L04",
            "ts": "1654818945.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "EFp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "And it has a "
                    },
                    {
                      "type": "text",
                      "text": "lot",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " of totally localized output that you can take advantage of"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f1fd5c2c-0568-4102-ae90-31ba7be9783e",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "`Scanner` is a little old-fashioned — and certainly a lot of what it does can be done with the new Swift Regex support these days — but sometimes your state machine really needs to be coded by hand :stuck_out_tongue:",
          "ts": "1654818974.212839",
          "thread_ts": "1654818868.476359",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "surfer",
              "count": 1,
              "users": [
                "U03HELZ3GUD"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BCg/3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Scanner",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is a little old-fashioned — and certainly a lot of what it does can be done with the new Swift Regex support these days — but sometimes your state machine really needs to be coded by hand "
                    },
                    {
                      "type": "emoji",
                      "name": "stuck_out_tongue",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ff6247fd-ccbb-4d52-8b83-31c7eaab44bf",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "also, I’m biased, but that beautiful `AttributedString(markdown:…)` initializer is just splendid.",
          "ts": "1654818994.868829",
          "thread_ts": "1654818868.476359",
          "edited": {
            "user": "U03HWDD6RED",
            "ts": "1654818998.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 5,
              "users": [
                "U03HQ6QV083",
                "U03HELZ3GUD",
                "U03HWEGHRKR",
                "U03J4DRK4SY",
                "U03J1V52JQK"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xTBqg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "also, I’m biased, but that beautiful "
                    },
                    {
                      "type": "text",
                      "text": "AttributedString(markdown:…)",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " initializer is just splendid."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4a6e4eea-0846-4e7a-bc89-82a381373625",
          "type": "message",
          "user": "U03HELZ3GUD",
          "text": "for me personally it would be the objc literals like `@[ @1 ]` etc",
          "ts": "1654819016.033169",
          "thread_ts": "1654818868.476359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AMFn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "for me personally it would be the objc literals like "
                    },
                    {
                      "type": "text",
                      "text": "@[ @1 ]",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " etc"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "422f78af-aa50-46e2-a6e4-4f1c506e107d",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Each example with mapping hex to UIColor using `Scanner`",
          "ts": "1654819018.549189",
          "thread_ts": "1654818868.476359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "u3P",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Each example with mapping hex to UIColor using "
                    },
                    {
                      "type": "text",
                      "text": "Scanner",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "28b8b7bd-cb86-433e-afe6-4c6d18a28e72",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "Using `NSExpression` to let users type in basic math in your fields",
          "ts": "1654819048.370109",
          "thread_ts": "1654818868.476359",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03J4DRK4SY"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "yugrS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Using "
                    },
                    {
                      "type": "text",
                      "text": "NSExpression",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to let users type in basic math in your fields"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "90be9761-8063-4bb8-a894-9944a6570ac7",
          "type": "message",
          "user": "U03HELZ3GUD",
          "text": "reminder that you can use `plutil -convert objc myPlist.plist` to convert it to a compile time constant `.m` file to avoid disk overhead",
          "ts": "1654819078.865239",
          "thread_ts": "1654818868.476359",
          "edited": {
            "user": "U03HELZ3GUD",
            "ts": "1654819089.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U03J4EW62N8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fL2x",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "reminder that you can use "
                    },
                    {
                      "type": "text",
                      "text": "plutil -convert objc myPlist.plist",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to convert it to a compile time constant "
                    },
                    {
                      "type": "text",
                      "text": ".m",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " file to avoid disk overhead"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c3e379be-1ace-42a7-83a1-6182b32023cf",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "`NSClassFromString` and `NSStringFromClass`  my favorites!",
          "ts": "1654819081.097999",
          "thread_ts": "1654818868.476359",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "the_horns",
              "count": 3,
              "users": [
                "U03HJ9NBK7D",
                "U03HELZ3GUD",
                "U03J4EW62N8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "njpd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "NSClassFromString",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "text",
                      "text": "NSStringFromClass",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "  my favorites!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "462a5e18-4348-4e7a-8231-0a97ea22816b",
          "type": "message",
          "user": "U03J5J0TUN9",
          "text": "`Formatter` is powerful and underused. Wish SwiftUI would use more of it. (and that the newer formatters would properly support parsing and partial parsing, not just rendering)",
          "ts": "1654819093.809499",
          "thread_ts": "1654818868.476359",
          "edited": {
            "user": "U03J5J0TUN9",
            "ts": "1654819175.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U03JSFUKL2U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "iFzm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Formatter",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is powerful and underused. Wish SwiftUI would use more of it. (and that the newer formatters would properly support parsing and partial parsing, not just rendering)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "021324fb-6a00-4461-a17e-04758cdfb0eb",
          "type": "message",
          "user": "U03HJ9NBK7D",
          "text": "`CFRunLoopSourceRef` for me",
          "ts": "1654819162.261689",
          "thread_ts": "1654818868.476359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Lj4s",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "CFRunLoopSourceRef",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " for me"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7ca9da69-a61a-431e-b75a-9772e6c655f1",
          "type": "message",
          "user": "U03HESGTE77",
          "text": "Also biased, but I think all the ways you can access, mutate, and enumerate attributes on `AttributedString` is pretty neat, with some really nice syntax.",
          "ts": "1654819177.692599",
          "thread_ts": "1654818868.476359",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "partying_face",
              "count": 3,
              "users": [
                "U03HELZ3GUD",
                "U03HWDD6RED",
                "U03J4DRK4SY"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Bws",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also biased, but I think all the ways you can access, mutate, and enumerate attributes on "
                    },
                    {
                      "type": "text",
                      "text": "AttributedString",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is pretty neat, with some really nice syntax."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2fcd52ab-da5b-4dd4-8b9b-43a798af7c87",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "A lot of great advances in parsing strings this year with swift RegEx, but happy to accept feedback on more",
          "ts": "1654819222.086789",
          "thread_ts": "1654818868.476359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tC7X",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "A lot of great advances in parsing strings this year with swift RegEx, but happy to accept feedback on more"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "649976a2-3351-405b-9d94-9fe98479e227",
          "type": "message",
          "user": "U03HL5K6L04",
          "text": "(including integration with the FormatStyles/ParseStrategies in Foundation)",
          "ts": "1654819242.494739",
          "thread_ts": "1654818868.476359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "d7gdo",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(including integration with the FormatStyles/ParseStrategies in Foundation)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b3e70875-3ccf-4993-8146-c5f2c54ea622",
          "type": "message",
          "user": "U03H3NETJ7R",
          "text": "I think all of our formatters, even the more obscure ones, are really cool! Especially the format styles that allow you to receive an `AttributedString` as output",
          "ts": "1654819270.275729",
          "thread_ts": "1654818868.476359",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J5J0TUN9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pzy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I think all of our formatters, even the more obscure ones, are really cool! Especially the format styles that allow you to receive an "
                    },
                    {
                      "type": "text",
                      "text": "AttributedString",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " as output"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JSFUKL2U\u003e asked\n\u0026gt; Should I use Foundation in SPM package for non Darwin platforms?",
      "ts": "1654819213.460499",
      "thread_ts": "1654819213.460499",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654819412.086099",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "YlkE0",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JSFUKL2U"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Should I use Foundation in SPM package for non Darwin platforms?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "87206153-b0c3-4543-97d1-92ad380dcd13",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "A subset of Foundation is available in Swift for Linux and Swift for Windows. Some functionality is Darwin-only, but much of what you’ll need is there — URL, FileManager, AttributedString, UserDefaults, NotificationCenter and more. Make sure you test your package with Swift on the platform you want to run it on, as there are some important differences.",
          "ts": "1654819238.164389",
          "thread_ts": "1654819213.460499",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03JSFUKL2U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0WM6d",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "A subset of Foundation is available in Swift for Linux and Swift for Windows. Some functionality is Darwin-only, but much of what you’ll need is there — URL, FileManager, AttributedString, UserDefaults, NotificationCenter and more. Make sure you test your package with Swift on the platform you want to run it on, as there are some important differences."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0a03563d-f125-44c2-811f-521e5aaf2fa0",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Thats great news! if I understand it right, I can see sources in apple/swiftfoundation repo?",
          "ts": "1654819311.833729",
          "thread_ts": "1654819213.460499",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=g3q",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thats great news! if I understand it right, I can see sources in apple/swiftfoundation repo?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5055a438-c9ec-4534-bc87-05ac4d542632",
          "type": "message",
          "user": "U03HWDD6RED",
          "text": "Correct! Check out \u003chttp://github.com/apple/swift-corelibs-foundation|github.com/apple/swift-corelibs-foundation\u003e.",
          "ts": "1654819380.755809",
          "thread_ts": "1654819213.460499",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ew==",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Correct! Check out "
                    },
                    {
                      "type": "link",
                      "url": "http://github.com/apple/swift-corelibs-foundation",
                      "text": "github.com/apple/swift-corelibs-foundation"
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "889600e8-ac6b-4fe1-b663-ce586a95b388",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Thank you a lot!",
          "ts": "1654819412.086099",
          "thread_ts": "1654819213.460499",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OkmZb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you a lot!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "ad2bb142-945b-4db4-b97a-e28d9e967d95",
      "type": "message",
      "user": "U03HL5K6L04",
      "text": "And that’s a wrap! Thank you everyone and have a great day!",
      "ts": "1654819267.145949",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "swift-orange",
          "count": 4,
          "users": [
            "U03HWEGHRKR",
            "U03HELZ3GUD",
            "U03JSFUKL2U",
            "U03HBMCMGBG"
          ]
        },
        {
          "name": "hammer",
          "count": 5,
          "users": [
            "U03HELZ3GUD",
            "U03JSFUKL2U",
            "U03HQ6QV083",
            "U03HBMCMGBG",
            "U03HZ3UBV6H"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "NcY3s",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "And that’s a wrap! Thank you everyone and have a great day!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "fd6a06bc-6fc5-4fbc-b616-6a5754a96b79",
      "type": "message",
      "user": "U03HL553PNG",
      "text": ":burrito:  And that's it for our DevTools and Swift Lounge today!  Join us tomorrow for:\n• 9am to 11am - Swift Package Manager\n• 11am to 1pm - Xcode Q\u0026amp;A\nAll times Pacific.\n\nI'm going to leave the :workflowbolt: open overnight so you can go ahead and submit your questions for those topics.  We're going to take a break for the night :sleeping:  but join us in one hour for :laughing: Trivia Night in the \u003c#C03HX3KRW2D|\u003e channel!  Starting at 6pm Pacific, you can answer obscure trivia about Apple history, learn fun facts about Xcode, and test your knowledge of how closely you were paying attention to the session videos this year.  See you there!",
      "ts": "1654819289.313829",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 2,
          "users": [
            "U03HB5WGZU6",
            "U03JVV3LL3G"
          ]
        },
        {
          "name": "swift-orange",
          "count": 1,
          "users": [
            "U03HZ52JGKF"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "i6pVu",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "emoji",
                  "name": "burrito",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "  And that's it for our DevTools and Swift Lounge today!  Join us tomorrow for:\n"
                }
              ]
            },
            {
              "Type": "rich_text_list",
              "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"9am to 11am - Swift Package Manager\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"11am to 1pm - Xcode Q\u0026A\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
            },
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "\nAll times Pacific.\n\nI'm going to leave the "
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " open overnight so you can go ahead and submit your questions for those topics.  We're going to take a break for the night "
                },
                {
                  "type": "emoji",
                  "name": "sleeping",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "  but join us in one hour for "
                },
                {
                  "type": "emoji",
                  "name": "laughing",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " Trivia Night in the "
                },
                {
                  "type": "channel",
                  "channel_id": "C03HX3KRW2D"
                },
                {
                  "type": "text",
                  "text": " channel!  Starting at 6pm Pacific, you can answer obscure trivia about Apple history, learn fun facts about Xcode, and test your knowledge of how closely you were paying attention to the session videos this year.  See you there!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "user": "U03HL553PNG",
      "text": "set the channel topic: :zzz:  Lounge is closed for the evening but join us for Trivia Night over in \u003c#C03HX3KRW2D|thursday-trivia-night\u003e! You can still submit your questions on SwiftPM and Xcode using the :workflowbolt: and we'll see you tomorrow!",
      "ts": "1654819335.606359",
      "subtype": "channel_topic",
      "topic": ":zzz:  Lounge is closed for the evening but join us for Trivia Night over in \u003c#C03HX3KRW2D|thursday-trivia-night\u003e! You can still submit your questions on SwiftPM and Xcode using the :workflowbolt: and we'll see you tomorrow!",
      "replace_original": false,
      "delete_original": false,
      "blocks": null
    },
    {
      "type": "message",
      "user": "U03HL553PNG",
      "text": "set the channel topic: Q\u0026amp;A: Swift Package Manager",
      "ts": "1654876819.789889",
      "subtype": "channel_topic",
      "topic": "Q\u0026amp;A: Swift Package Manager",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 2,
          "users": [
            "U03K6LTQ4AG",
            "U03KVQZRF7S"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": null
    },
    {
      "client_msg_id": "4a6179c8-e506-4d9e-be21-136b1729ecfc",
      "type": "message",
      "user": "U03HWD4G94H",
      "text": "Hello everyone! Welcome to the Q\u0026amp;A session for Swift Packages at WWDC 22! We have several engineers who are experts on this topic to answer your questions. To submit a question, use the\n:workflowbolt: button below. Our engineers will review the questions and then post the answers in the appropriate thread.\n\nWe will do our best to answer all of your questions. As a gentle reminder, please keep the content professional and within our code of conduct.\n\nIf you have questions on other topics, you can check to see if there are \u003chttps://developer.apple.com/wwdc22/topics/developer-tools/|other Developer Tools Sessions, Labs, or Lounges\u003e that might be better suited to your questions. For topics not covered there, you can also post your questions in the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e.",
      "ts": "1654876883.000159",
      "attachments": [
        {
          "fallback": "Developer Tools - Topics - WWDC22",
          "id": 1,
          "title": "Developer Tools - Topics - WWDC22",
          "title_link": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "text": "Everything you need to know to build the next great app or game.",
          "image_url": "https://developer.apple.com/wwdc22/topics/images/og/developer-tools-og.png",
          "service_name": "developer.apple.com",
          "service_icon": "https://developer.apple.com/favicon.ico",
          "from_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "original_url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
          "blocks": null
        },
        {
          "fallback": "Apple Developer Forums",
          "id": 2,
          "title": "Apple Developer Forums",
          "title_link": "http://developer.apple.com/forums/",
          "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
          "service_name": "developer.apple.com",
          "service_icon": "https://forums.developer.apple.com/forums/build-06082022-1/public/assets/favicon.ico",
          "from_url": "http://developer.apple.com/forums/",
          "original_url": "http://developer.apple.com/forums/",
          "blocks": null
        }
      ],
      "edited": {
        "user": "U03HWD4G94H",
        "ts": "1654877176.000000"
      },
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "nerd_face",
          "count": 1,
          "users": [
            "U03HZ3UBV6H"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "gV+eA",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hello everyone! Welcome to the Q\u0026A session for Swift Packages at WWDC 22! We have several engineers who are experts on this topic to answer your questions. To submit a question, use the\n"
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " button below. Our engineers will review the questions and then post the answers in the appropriate thread.\n\nWe will do our best to answer all of your questions. As a gentle reminder, please keep the content professional and within our code of conduct.\n\nIf you have questions on other topics, you can check to see if there are "
                },
                {
                  "type": "link",
                  "url": "https://developer.apple.com/wwdc22/topics/developer-tools/",
                  "text": "other Developer Tools Sessions, Labs, or Lounges"
                },
                {
                  "type": "text",
                  "text": " that might be better suited to your questions. For topics not covered there, you can also post your questions in the "
                },
                {
                  "type": "link",
                  "url": "http://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KVQZRF7S\u003e asked\n\u0026gt; The session on creating a Swift package plugin mentions no network access for plugins. Is this functionality coming in a future release by chance, or should I create a feature request? I'd love to move our theming code into a package, but we utilize a JSON payload from a web service call in order to do our code generation.",
      "ts": "1654877007.751689",
      "thread_ts": "1654877007.751689",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 9,
      "latest_reply": "1654886295.586189",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "0cciu",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KVQZRF7S"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"The session on creating a Swift package plugin mentions no network access for plugins. Is this functionality coming in a future release by chance, or should I create a feature request? I'd love to move our theming code into a package, but we utilize a JSON payload from a web service call in order to do our code generation.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "429fceda-baf5-4a33-8e17-eb120909165c",
          "type": "message",
          "user": "U03HES7M40M",
          "text": "Great question. Generally swift plugins are running inside a sandbox for security reasons. This sandbox does not allow network access. If you have created your own plugin, which you trust, you can disable the sandbox on the command line with:\n\n```swift package --disable-sandbox yourPluginName```\nIf you are interested in allowing plugins specialized network access while not disabling the sandbox, we would encourage you to post a swift forums thread describing your use case.",
          "ts": "1654877185.996489",
          "thread_ts": "1654877007.751689",
          "edited": {
            "user": "U03HES7M40M",
            "ts": "1654877223.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5xbS6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Great question. Generally swift plugins are running inside a sandbox for security reasons. This sandbox does not allow network access. If you have created your own plugin, which you trust, you can disable the sandbox on the command line with:\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"swift package --disable-sandbox yourPluginName\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\nIf you are interested in allowing plugins specialized network access while not disabling the sandbox, we would encourage you to post a swift forums thread describing your use case."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3ae49d0f-3984-48c9-b621-277c5adb61f0",
          "type": "message",
          "user": "U03HVE965FY",
          "text": "is there any option to \"trust\" a plugin through xcode to disable the sandbox through the xcode integration?",
          "ts": "1654877226.489189",
          "thread_ts": "1654877007.751689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8LM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "is there any option to \"trust\" a plugin through xcode to disable the sandbox through the xcode integration?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "90a7f20a-dd0c-4fc9-b222-4fe396002c23",
          "type": "message",
          "user": "U03HES7M40M",
          "text": "This is not possible today… If this is something that is needed for your use-case we encourage you to open a feedback.",
          "ts": "1654877710.388249",
          "thread_ts": "1654877007.751689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AD8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is not possible today… If this is something that is needed for your use-case we encourage you to open a feedback."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "772e28ad-c1dd-40e4-bb62-8825163ae11a",
          "type": "message",
          "user": "U03KVQZRF7S",
          "text": "Ah, okay. Sounds like I can still accomplish what I want, I'll just need to disable the sandbox. I'll give that a shot then, thank you!",
          "ts": "1654878063.477809",
          "thread_ts": "1654877007.751689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nq0/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ah, okay. Sounds like I can still accomplish what I want, I'll just need to disable the sandbox. I'll give that a shot then, thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "adbfbdb1-b27a-40e9-99eb-4ed9bf5860aa",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Please do file a bug at \u003chttps://feedbackassistant.apple.com/\u003e or post in the open source Swift forums with the specific requirements, e.g. whether you'd want an allow-list of hosts etc.",
          "ts": "1654878276.144419",
          "thread_ts": "1654877007.751689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fS0",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Please do file a bug at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " or post in the open source Swift forums with the specific requirements, e.g. whether you'd want an allow-list of hosts etc."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f49075bd-c823-4dce-981d-0750a8b9968b",
          "type": "message",
          "user": "U03HES8111T",
          "text": "It would be useful to better understand the requirements so you wouldn't have to disable the whole sandbox.",
          "ts": "1654878297.486219",
          "thread_ts": "1654877007.751689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "DxRVG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It would be useful to better understand the requirements so you wouldn't have to disable the whole sandbox."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "daf853fb-d7cf-46b3-9fa2-a9c3c6fb30e9",
          "type": "message",
          "user": "U03KVQZRF7S",
          "text": "I will do that. The basic requirements are that we have a public endpoint that provides a JSON payload that we use to generate code for theme information as part of our deployment process. We deploy an app for ~600 financial institutions in the U.S. and release once a month. An allow-list would be a great solution for this.",
          "ts": "1654878778.700799",
          "thread_ts": "1654877007.751689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "j/Kx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I will do that. The basic requirements are that we have a public endpoint that provides a JSON payload that we use to generate code for theme information as part of our deployment process. We deploy an app for ~600 financial institutions in the U.S. and release once a month. An allow-list would be a great solution for this."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "45568fcc-df29-401c-8261-c0e273c8b6c9",
          "type": "message",
          "user": "U03KVQZRF7S",
          "text": "I do have a good majority of our generated theme code in a local package already, but have been using a project pre-build script to accomplish what I need. I'd like to make the package remote at some point, because we have additional frameworks that we currently inject the Theme info into, and I'm keen to stop doing that. :smile:",
          "ts": "1654878918.470379",
          "thread_ts": "1654877007.751689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FLa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I do have a good majority of our generated theme code in a local package already, but have been using a project pre-build script to accomplish what I need. I'd like to make the package remote at some point, because we have additional frameworks that we currently inject the Theme info into, and I'm keen to stop doing that. "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fbc925d7-662c-48b0-94a9-5dc3bc6b6be2",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Thanks for the additional information.  I think the balance here that will be interesting to find will be to allow only as much network access as you need while keeping the rest of the sandbox in place.",
          "ts": "1654886295.586189",
          "thread_ts": "1654877007.751689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6QO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the additional information.  I think the balance here that will be interesting to find will be to allow only as much network access as you need while keeping the rest of the sandbox in place."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ4JN7D3\u003e asked\n\u0026gt; Hi! During the Meet Swift Package Plugins session yesterday, in the code section of the Apple Developer App, there seemed to be a code example showing how to add support for an XcodeBuildToolPlugin, but that protocol doesn't seem to be available in the Xcode 14 beta.\n\u0026gt; \n\u0026gt; Does this mean there will be support for Build Tool Plugins (not Command) to be run as part of an Xcode build? If so, how would we define the build step?",
      "ts": "1654877196.432919",
      "thread_ts": "1654877196.432919",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654883828.282619",
      "reactions": [
        {
          "name": "+1",
          "count": 1,
          "users": [
            "U03HVE01C6A"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "aaRxL",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ4JN7D3"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi! During the Meet Swift Package Plugins session yesterday, in the code section of the Apple Developer App, there seemed to be a code example showing how to add support for an XcodeBuildToolPlugin, but that protocol doesn't seem to be available in the Xcode 14 beta.\\n\\nDoes this mean there will be support for Build Tool Plugins (not Command) to be run as part of an Xcode build? If so, how would we define the build step?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a14f3dbf-52b4-4607-a1a4-907913062536",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Thanks for the report.  The absence of this protocol in Beta 1 is a known issue that is mentioned under the Known Issues at \u003chttps://developer.apple.com/documentation/Xcode-Release-Notes/xcode-14-release-notes\u003e.",
          "ts": "1654877288.993719",
          "thread_ts": "1654877196.432919",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "white_check_mark",
              "count": 1,
              "users": [
                "U03HVE01C6A"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "93Oy6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the report.  The absence of this protocol in Beta 1 is a known issue that is mentioned under the Known Issues at "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/Xcode-Release-Notes/xcode-14-release-notes",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4DAD83F5-583F-44F5-A2DB-AE9E87856A2E",
          "type": "message",
          "user": "U03HZ4JN7D3",
          "text": "Awesome! Thanks \u003c@U03HES8111T\u003e :raised_hands: Am I right in thinking we’ll be able to use build tool plugins in Xcode projects? As in, just run them as a build phase or something similar? ",
          "ts": "1654883828.282619",
          "thread_ts": "1654877196.432919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LZJz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Awesome!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Thanks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HES8111T"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "emoji",
                      "name": "raised_hands",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Am"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "right"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "thinking"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "we’ll"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "able"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "use"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "build"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "tool"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "plugins"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Xcode"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "projects?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "As"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "just"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "run"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "them"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "as"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "build"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "phase"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "or"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "something"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "similar?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRPRFHMW\u003e asked\n\u0026gt; When using swift package manager for local packages, where is the best place to put them? Inside the project? Inside the workspace? Somewhere else?",
      "ts": "1654877488.604509",
      "thread_ts": "1654877488.604509",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654882864.820509",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "JJia",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRPRFHMW"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"When using swift package manager for local packages, where is the best place to put them? Inside the project? Inside the workspace? Somewhere else?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "5a3d0c61-0aac-417d-846f-c3213d3231e9",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "In terms of where to put them on the filesystem, adding them at the top level of your existing project makes the most sense so that it can become part of your existing SCM repository. For the references in Xcode, it depends a lot on the general organization of your project. If the given package is used by a single project, I would add it to that, but if it is used broadly across a larger workspace, it rather belongs there.",
          "ts": "1654877497.548799",
          "thread_ts": "1654877488.604509",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03HVE01C6A",
                "U03JRPRFHMW"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AAw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In terms of where to put them on the filesystem, adding them at the top level of your existing project makes the most sense so that it can become part of your existing SCM repository. For the references in Xcode, it depends a lot on the general organization of your project. If the given package is used by a single project, I would add it to that, but if it is used broadly across a larger workspace, it rather belongs there."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ca5a56cb-5848-4f44-b991-7a4ef14f6869",
          "type": "message",
          "user": "U03K1K31P8Q",
          "text": "One of the issues I run into constantly is opening the same workspace from different repo copies that have local SPMs referenced but Xcode tells me that the second opened copy of the workspace can’t open our local packages. Not an issue for the ones added from GitHub. Is there a way around this?",
          "ts": "1654878461.836639",
          "thread_ts": "1654877488.604509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "QAzts",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "One of the issues I run into constantly is opening the same workspace from different repo copies that have local SPMs referenced but Xcode tells me that the second opened copy of the workspace can’t open our local packages. Not an issue for the ones added from GitHub. Is there a way around this?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ef082105-1e54-42d6-87b9-13f6ed01838d",
          "type": "message",
          "user": "U03HES8111T",
          "text": "I believe this is an Xcode limitation, and unfortunately I don't know of a way around it.",
          "ts": "1654882765.020469",
          "thread_ts": "1654877488.604509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bU52j",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I believe this is an Xcode limitation, and unfortunately I don't know of a way around it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3b299781-2336-41e7-be5f-1bdfed95ccbe",
          "type": "message",
          "user": "U03K1K31P8Q",
          "text": "Thanks!",
          "ts": "1654882864.820509",
          "thread_ts": "1654877488.604509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mID3o",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4DF6D6G\u003e asked\n\u0026gt; Hi,\n\u0026gt; \n\u0026gt; In a xcworkspace that have client and backend code. Most of client and backend code live in SPM modules. Why when I compile only the client xcode build the server executable too ? Knowing that the App depend only the client code. The project is available in this feedback FB10115879.\n\u0026gt; \n\u0026gt; Thanks,",
      "ts": "1654877561.680259",
      "thread_ts": "1654877561.680259",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654877736.155379",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Xj1",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4DF6D6G"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi,\\n\\nIn a xcworkspace that have client and backend code. Most of client and backend code live in SPM modules. Why when I compile only the client xcode build the server executable too ? Knowing that the App depend only the client code. The project is available in this feedback FB10115879.\\n\\nThanks,\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "b6c0aa5b-ffc0-4825-8ad4-365d3042452e",
          "type": "message",
          "user": "U03H36Q9X3R",
          "text": "Building the client should not also build the server code, unless there is a dependency defined between the client and the server modules. Thank you for filing the FB10115879, we will provide additional details there.",
          "ts": "1654877736.155379",
          "thread_ts": "1654877561.680259",
          "edited": {
            "user": "U03H36Q9X3R",
            "ts": "1654877906.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GRQz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Building the client should not also build the server code, unless there is a dependency defined between the client and the server modules. Thank you for filing the FB10115879, we will provide additional details there."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03K6LTQ4AG\u003e asked\n\u0026gt; Hi! I'd like to start using SPM in a bigger project for app development. Right now we cannot use a Package.swift for this purpose and instead need to rely on Xcodes SPM version. This becomes problematic in code reviews where it would be beneficial to have a clearly readable Package.swift update for dependencies instead of some XML file. Is there any way to handle this differently? E.g. adding a separate project inside the same workspace which is using a Package.swift and contains all dependencies. Then using that package within the actual project?",
      "ts": "1654877653.862299",
      "thread_ts": "1654877653.862299",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654877665.063589",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "H3B",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K6LTQ4AG"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi! I'd like to start using SPM in a bigger project for app development. Right now we cannot use a Package.swift for this purpose and instead need to rely on Xcodes SPM version. This becomes problematic in code reviews where it would be beneficial to have a clearly readable Package.swift update for dependencies instead of some XML file. Is there any way to handle this differently? E.g. adding a separate project inside the same workspace which is using a Package.swift and contains all dependencies. Then using that package within the actual project?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "bf213698-da84-43e8-9fbc-39e3b0afb8d0",
          "type": "message",
          "user": "U03HL5FTVHS",
          "text": "Hi Roland! Generally I would recommend using using local Swift package dependencies as a solution for this problem.\n\nThere’s some documentation on \u003chttps://developer.apple.com/documentation/xcode/organizing-your-code-with-local-packages|that workflow here\u003e.",
          "ts": "1654877665.063589",
          "thread_ts": "1654877653.862299",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-thank-you",
              "count": 1,
              "users": [
                "U03K6LTQ4AG"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "V7Y4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Roland! Generally I would recommend using using local Swift package dependencies as a solution for this problem.\n\nThere’s some documentation on "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/organizing-your-code-with-local-packages",
                      "text": "that workflow here"
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVE01C6A\u003e asked\n\u0026gt; Can build plugins run on Xcode projects?\n\u0026gt; \n\u0026gt; I have seen the following code in material for WWDC session \"Meet Swift Package plugins\" but the code does not compile because  `XcodeBuildToolPlugin ` does not exist\n\u0026gt; \n\u0026gt; ```swift\n\u0026gt; #if canImport(XcodeProjectPlugin)\n\u0026gt; import XcodeProjectPlugin\n\u0026gt; \n\u0026gt; extension MyPlugin: XcodeBuildToolPlugin {\n\u0026gt; \n\u0026gt;     /// This entry point is called when operating on an Xcode project.\n\u0026gt;     func createBuildCommands(context: XcodePluginContext, target: XcodeTarget) throws -\u0026gt; [Command]\n\u0026gt;         debugPrint(context)\n\u0026gt;         return []\n\u0026gt;     }\n\u0026gt; }\n\u0026gt; #endif\n\u0026gt; ```\n\u0026gt; \n\u0026gt; Same question raised in Developer forum: \u003chttps://developer.apple.com/forums/thread/707813|https://developer.apple.com/forums/thread/707813\u003e",
      "ts": "1654877742.917499",
      "thread_ts": "1654877742.917499",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654877904.676179",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "0Ss",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVE01C6A"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can build plugins run on Xcode projects?\\n\\nI have seen the following code in material for WWDC session \\\"Meet Swift Package plugins\\\" but the code does not compile because  `XcodeBuildToolPlugin ` does not exist\\n\\n```swift\\n#if canImport(XcodeProjectPlugin)\\nimport XcodeProjectPlugin\\n\\nextension MyPlugin: XcodeBuildToolPlugin {\\n\\n    \\/\\/\\/ This entry point is called when operating on an Xcode project.\\n    func createBuildCommands(context: XcodePluginContext, target: XcodeTarget) throws -\u003e [Command]\\n        debugPrint(context)\\n        return []\\n    }\\n}\\n#endif\\n```\\n\\nSame question raised in Developer forum: \"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/707813\",\"text\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/707813\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a4f0870a-f9a6-47dc-87c0-047856c73ebe",
          "type": "message",
          "user": "U03HVE01C6A",
          "text": "Answered in \u003chttps://wwdc22.slack.com/archives/C03H0JN431U/p1654877196432919\u003e",
          "ts": "1654877777.262759",
          "thread_ts": "1654877742.917499",
          "attachments": [
            {
              "fallback": "[June 10th, 2022 9:06 AM] DevTools and Swift - Ask a Question: \u003c@U03HZ4JN7D3\u003e asked\n\u0026gt; Hi! During the Meet Swift Package Plugins session yesterday, in the code section of the Apple Developer App, there seemed to be a code example showing how to add support for an XcodeBuildToolPlugin, but that protocol doesn't seem to be available in the Xcode 14 beta.\n\u0026gt; \n\u0026gt; Does this mean there will be support for Build Tool Plugins (not Command) to be run as part of an Xcode build? If so, how would we define the build step?",
              "id": 1,
              "author_subname": "DevTools and Swift - Ask a Question",
              "author_link": "https://wwdc22.slack.com/services/B03HGE996MA",
              "author_icon": "https://avatars.slack-edge.com/2022-05-29/3593295709474_921d78dbbb8ddfd3106d_48.png",
              "text": "\u003c@U03HZ4JN7D3\u003e asked\n\u0026gt; Hi! During the Meet Swift Package Plugins session yesterday, in the code section of the Apple Developer App, there seemed to be a code example showing how to add support for an XcodeBuildToolPlugin, but that protocol doesn't seem to be available in the Xcode 14 beta.\n\u0026gt; \n\u0026gt; Does this mean there will be support for Build Tool Plugins (not Command) to be run as part of an Xcode build? If so, how would we define the build step?",
              "from_url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654877196432919",
              "original_url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654877196432919",
              "mrkdwn_in": [
                "text"
              ],
              "blocks": null,
              "footer": "Thread in #devtools-and-swift-lounge",
              "ts": 1654877196.432919
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "t+a",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Answered in "
                    },
                    {
                      "type": "link",
                      "url": "https://wwdc22.slack.com/archives/C03H0JN431U/p1654877196432919",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5c2c98e3-e28a-423b-88ff-9d84cda36973",
          "type": "message",
          "user": "U03HVE01C6A",
          "text": "Answer\n\n\u0026gt; Thanks for the report.  The absence of this protocol in Beta 1 is a known issue that is mentioned under the Known Issues at \u003chttps://developer.apple.com/documentation/Xcode-Release-Notes/xcode-14-release-notes\u003e.\n",
          "ts": "1654877813.873029",
          "thread_ts": "1654877742.917499",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "white_check_mark",
              "count": 1,
              "users": [
                "U03HES7M40M"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Dc93z",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Answer\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Thanks for the report.  The absence of this protocol in Beta 1 is a known issue that is mentioned under the Known Issues at \"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/documentation\\/Xcode-Release-Notes\\/xcode-14-release-notes\"},{\"type\":\"text\",\"text\":\".\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": []
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "89124f87-45d2-405a-afb1-44c7c47d9697",
          "type": "message",
          "user": "U03HES7M40M",
          "text": "Awesome!",
          "ts": "1654877904.676179",
          "thread_ts": "1654877742.917499",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Mt2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Awesome!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVE01C6A\u003e asked\n\u0026gt; Adoption of `XcodeProjectPlugin` in Swift package plugins is needed so that command plugins (and build plugins in future betas) can run on Xcode projects? Existing command plugin(s), used in a Swift package (!!!), can be triggered interactively in Xcode 14 out-of-the-box. Is that right?",
      "ts": "1654877954.194989",
      "thread_ts": "1654877954.194989",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654878027.883469",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "rxl",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVE01C6A"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Adoption of `XcodeProjectPlugin` in Swift package plugins is needed so that command plugins (and build plugins in future betas) can run on Xcode projects? Existing command plugin(s), used in a Swift package (!!!), can be triggered interactively in Xcode 14 out-of-the-box. Is that right?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "1de58475-f836-4138-a925-f5b8e15070b5",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Yes, that is correct:  existing command and build tool package plugins can be invoked on regular packages, but in order to be invoked on an Xcode project, a package plugin has to use APIs from the XcodeProjectPlugin module.  This module extends the APIs in the regular PackagePlugin module.",
          "ts": "1654877994.049469",
          "thread_ts": "1654877954.194989",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HVE01C6A"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vnTO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, that is correct:  existing command and build tool package plugins can be invoked on regular packages, but in order to be invoked on an Xcode project, a package plugin has to use APIs from the XcodeProjectPlugin module.  This module extends the APIs in the regular PackagePlugin module."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "05386c4d-9d8d-45ed-a481-f67c3712b279",
          "type": "message",
          "user": "U03HES8111T",
          "text": "This is described in a little more detail here:  \u003chttps://github.com/apple/swift-package-manager/blob/main/Documentation/Plugins.md\u003e",
          "ts": "1654878027.883469",
          "thread_ts": "1654877954.194989",
          "attachments": [
            {
              "fallback": "GitHub: swift-package-manager/Plugins.md at main · apple/swift-package-manager",
              "id": 1,
              "title": "swift-package-manager/Plugins.md at main · apple/swift-package-manager",
              "title_link": "https://github.com/apple/swift-package-manager/blob/main/Documentation/Plugins.md",
              "text": "The Package Manager for the Swift Programming Language - swift-package-manager/Plugins.md at main · apple/swift-package-manager",
              "image_url": "https://opengraph.githubassets.com/04b1ea10d12cba6fb53a557343f56b9d58618a76cdf6973f29d112b0a7d3f6ca/apple/swift-package-manager",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/apple/swift-package-manager/blob/main/Documentation/Plugins.md",
              "original_url": "https://github.com/apple/swift-package-manager/blob/main/Documentation/Plugins.md",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "white_check_mark",
              "count": 1,
              "users": [
                "U03HVE01C6A"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "EAR4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is described in a little more detail here:  "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-package-manager/blob/main/Documentation/Plugins.md",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRQGTPB2\u003e asked\n\u0026gt; Hi! Many thanks for creating Swift Package plugins API, it seems to be very powerful, looking forward to using those integrations for dev tools. I was wondering if it's possible to use Swift Package plugins in ordinary .xcodeproj (non-SPM) projects too?",
      "ts": "1654878195.953579",
      "thread_ts": "1654878195.953579",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654878892.776849",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "IR=6",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRQGTPB2"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi! Many thanks for creating Swift Package plugins API, it seems to be very powerful, looking forward to using those integrations for dev tools. I was wondering if it's possible to use Swift Package plugins in ordinary .xcodeproj (non-SPM) projects too?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "244c10e5-85af-4d9d-bf6e-4341a434bf9f",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "Yes, there’s a separate XcodeProjectPlugin module for this in Xcode 14. Using this API, the plugin can get a simplified description of the Xcode project’s structure. This lets adapted plugins running in Xcode take advantage of using this API on Xcode projects. You can still use packages that haven’t been adapted to support Xcode projects with Swift Packages in Xcode. Note that build tool plugins that are adapted to support Xcode projects can’t yet be used with Xcode targets to generate source code and resources. This functionality is expected to be available in a future Xcode 14 beta.",
          "ts": "1654878204.498639",
          "thread_ts": "1654878195.953579",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JRQGTPB2"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+5u",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, there’s a separate XcodeProjectPlugin module for this in Xcode 14. Using this API, the plugin can get a simplified description of the Xcode project’s structure. This lets adapted plugins running in Xcode take advantage of using this API on Xcode projects. You can still use packages that haven’t been adapted to support Xcode projects with Swift Packages in Xcode. Note that build tool plugins that are adapted to support Xcode projects can’t yet be used with Xcode targets to generate source code and resources. This functionality is expected to be available in a future Xcode 14 beta."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e0d36e7a-f4fb-4791-a5b4-00f54f42b8ff",
          "type": "message",
          "user": "U03JRQGTPB2",
          "text": "Sounds great, thank you very much for the answer!",
          "ts": "1654878892.776849",
          "thread_ts": "1654878195.953579",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+pBfu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sounds great, thank you very much for the answer!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J1UBVC2X\u003e asked\n\u0026gt; I've seen references of folks online moving almost all their app code into a Swift Package, and then having the App module/top level Xcode project just contain a little configuration (build phase scripts, etc). The AppDelegate lives in said Xcode project and just calls into this jumbo swift package where most of the app lives. As most files aren't in the xcodeproj file they avoid merge conflicts here. What do y'all think of this approach/does anything jump out around launch time/linking or SPM gotchas?",
      "ts": "1654878268.550989",
      "thread_ts": "1654878268.550989",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654890279.321999",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "gZN4",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J1UBVC2X"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I've seen references of folks online moving almost all their app code into a Swift Package, and then having the App module\\/top level Xcode project just contain a little configuration (build phase scripts, etc). The AppDelegate lives in said Xcode project and just calls into this jumbo swift package where most of the app lives. As most files aren't in the xcodeproj file they avoid merge conflicts here. What do y'all think of this approach\\/does anything jump out around launch time\\/linking or SPM gotchas?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "8d138984-e6f1-4d9d-8566-d144d025002b",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "Typically, this will have no effect on launch time since the packages will get linked statically and can be a reasonable approach to organize your project.",
          "ts": "1654878278.088779",
          "thread_ts": "1654878268.550989",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03J22AU6DQ",
                "U03J1UBVC2X"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8OAig",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Typically, this will have no effect on launch time since the packages will get linked statically and can be a reasonable approach to organize your project."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "59342908-33e5-47a4-988a-15d1e60013c0",
          "type": "message",
          "user": "U03JELM0ZNV",
          "text": "Does this approach have any implications for code reuse between an iMessage app extension and main app? I have about 20KLoC in core logic am about to start sharing with my main app.\n\nAlso, as an old-timer, :smiling_face_with_tear: at seeing the dogcow avatar.",
          "ts": "1654890279.321999",
          "thread_ts": "1654878268.550989",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "aqK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Does this approach have any implications for code reuse between an iMessage app extension and main app? I have about 20KLoC in core logic am about to start sharing with my main app.\n\nAlso, as an old-timer, "
                    },
                    {
                      "type": "emoji",
                      "name": "smiling_face_with_tear",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " at seeing the dogcow avatar."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J1UBVC2X\u003e asked\n\u0026gt; After that the great talk around linking static and dynamic libraries, how does SPM decide on how package products are built? If our 3rd party libraries don't explicitly specify dynamic or static in their package manifest, will it just \"work it out\" (like building them dynamically if a lib is used by two packages Or statically if it's only used by one or just the app target)?",
      "ts": "1654878366.819249",
      "thread_ts": "1654878366.819249",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654878950.945019",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Ne2PJ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J1UBVC2X"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"After that the great talk around linking static and dynamic libraries, how does SPM decide on how package products are built? If our 3rd party libraries don't explicitly specify dynamic or static in their package manifest, will it just \\\"work it out\\\" (like building them dynamically if a lib is used by two packages Or statically if it's only used by one or just the app target)?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "5e14c76c-d51c-4277-8eb4-b34ab10a6eaf",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "If a product does use automatic linkage, Xcode will built it dynamically depending on the situation, e.g. if it is used by the app and its test bundle — this is done to avoid duplicated symbols at runtime. In `swift build`, automatic products always build statically.",
          "ts": "1654878380.850319",
          "thread_ts": "1654878366.819249",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03J1UBVC2X"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pOSbR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If a product does use automatic linkage, Xcode will built it dynamically depending on the situation, e.g. if it is used by the app and its test bundle — this is done to avoid duplicated symbols at runtime. In "
                    },
                    {
                      "type": "text",
                      "text": "swift build",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", automatic products always build statically."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c93d1e30-a16e-4b3f-b4cc-1d88bc66a3e2",
          "type": "message",
          "user": "U03KC4368BS",
          "text": "Is there any way to have more direct control of this? Or visibility into why the build system chooses one over the other in case we want different behavior?",
          "ts": "1654878733.453139",
          "thread_ts": "1654878366.819249",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JrOl",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is there any way to have more direct control of this? Or visibility into why the build system chooses one over the other in case we want different behavior?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "69030455-41db-4aff-ac82-9826778e5970",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "There’s no way to control it from the client side, only the `type` parameter on the package product itself.",
          "ts": "1654878950.945019",
          "thread_ts": "1654878366.819249",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-thank-you",
              "count": 2,
              "users": [
                "U03KC4368BS",
                "U03J1UBVC2X"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "v6Cs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There’s no way to control it from the client side, only the "
                    },
                    {
                      "type": "text",
                      "text": "type",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " parameter on the package product itself."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ3E3GTF\u003e asked\n\u0026gt; I have another question for Xcode Q\u0026amp;A. I have a simple iOS app with one heavy SPM dependency — Firebase.\n\u0026gt; \n\u0026gt; When I switch between branches/commits, Xcode starts to “Resolving package graph” and use 100% CPU, next “Preparing editor functionality” and use 750% CPU. It freezes my Mac for about 10-15 seconds and I can’t do anything.\n\u0026gt; \n\u0026gt; So, I have 3 questions:\n\u0026gt; 1. Why Xcode starts to “Resolving package graph” when I switch git branch/commit? Is it a bug?\n\u0026gt; 2. Why Xcode uses 750% CPU when doing “Preparing editor functionality”? Is it a bug?\n\u0026gt; 3. It seems that Xcode rebuilding SymbolCache when I change git branch/commit. Is it a bug?\n\u0026gt; \n\u0026gt; I’ve found two issues posted of the developer forum that describe my issue:\n\u0026gt; \u003chttps://developer.apple.com/forums/thread/699112|https://developer.apple.com/forums/thread/699112\u003e\n\u0026gt; \u003chttps://developer.apple.com/forums/thread/694058|https://developer.apple.com/forums/thread/694058\u003e",
      "ts": "1654878503.297639",
      "thread_ts": "1654878503.297639",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654889911.255309",
      "reactions": [
        {
          "name": "+1",
          "count": 5,
          "users": [
            "U03K1K31P8Q",
            "U03K6LTQ4AG",
            "U03JG9L7NH5",
            "U03K5SD6CLT",
            "U03JE7VT43Z"
          ]
        },
        {
          "name": "eyes",
          "count": 2,
          "users": [
            "U03HZ3N1QFP",
            "U03JE7VT43Z"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "A39",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ3E3GTF"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I have another question for Xcode Q\u0026A. I have a simple iOS app with one heavy SPM dependency\\u00a0\\u2014\\u00a0Firebase.\\n\\nWhen I switch between branches\\/commits, Xcode starts to \\u201cResolving package graph\\u201d and use 100% CPU, next \\u201cPreparing editor functionality\\u201d and use 750% CPU. It freezes my Mac for about 10-15 seconds and I can\\u2019t do anything.\\n\\nSo, I have 3 questions:\\n1. Why Xcode starts to \\u201cResolving package graph\\u201d when I switch git branch\\/commit? Is it a bug?\\n2. Why Xcode uses 750% CPU when doing \\u201cPreparing editor functionality\\u201d? Is it a bug?\\n3. It seems that Xcode rebuilding SymbolCache when I change git branch\\/commit. Is it a bug?\\n\\nI\\u2019ve found two issues posted of the developer forum that describe my issue:\\n\"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/699112\",\"text\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/699112\"},{\"type\":\"text\",\"text\":\"\\n\"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/694058\",\"text\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/694058\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "1e9e9e6c-1801-4e1d-abbf-7c5399c05ce0",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Switching branches can cause packages to be re-resolved if there are any changes to the package manifests or to the structure of the packages.\n\nThat said, this shouldn't cause the user interface to become unresponsive.  This sounds like a bug, and it would be very appreciated if you could file a bug report at \u003chttps://feedbackassistant.apple.com/\u003e and attach a sysdiagnose that shows what Xcode is doing that is taking so long.",
          "ts": "1654878528.274869",
          "thread_ts": "1654878503.297639",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KZ6j",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Switching branches can cause packages to be re-resolved if there are any changes to the package manifests or to the structure of the packages.\n\nThat said, this shouldn't cause the user interface to become unresponsive.  This sounds like a bug, and it would be very appreciated if you could file a bug report at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " and attach a sysdiagnose that shows what Xcode is doing that is taking so long."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9ddab920-630c-4a86-858e-9104f5a7e232",
          "type": "message",
          "user": "U03K1K31P8Q",
          "text": "I’ve been seeing this issue for many versions of Xcode 13. The “resolving package graph” also is very slow to cancel, if it works at all. Xcode 14 beta 1 is performing similarly for me.",
          "ts": "1654878722.611369",
          "thread_ts": "1654878503.297639",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sm=n",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’ve been seeing this issue for many versions of Xcode 13. The “resolving package graph” also is very slow to cancel, if it works at all. Xcode 14 beta 1 is performing similarly for me."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b9ab4c4a-3716-41c3-ae3d-51c85ec09d00",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Yeah, Xcode 14 has all of the same, existing SPM bugs, including breaking package resolution when switching branches or even when just resetting the project file on the existing branch with Xcode open.",
          "ts": "1654878834.065719",
          "thread_ts": "1654878503.297639",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "sob",
              "count": 3,
              "users": [
                "U03HZ3N1QFP",
                "U03K1K31P8Q",
                "U03HZ3E3GTF"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Yrbr",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yeah, Xcode 14 has all of the same, existing SPM bugs, including breaking package resolution when switching branches or even when just resetting the project file on the existing branch with Xcode open."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c8404693-78d3-462a-ac02-5588432b7e17",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "In none of these cases have the dependency versions changed.",
          "ts": "1654878853.560559",
          "thread_ts": "1654878503.297639",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03K1K31P8Q",
                "U03HZ3N1QFP"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Tp8/K",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In none of these cases have the dependency versions changed."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "05c6b00a-1ae0-4e9e-bd23-2448fb236640",
          "type": "message",
          "user": "U03HZ3N1QFP",
          "text": "Definitely see this too",
          "ts": "1654878917.868769",
          "thread_ts": "1654878503.297639",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qx4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Definitely see this too"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4a33463d-a579-405e-9ed5-ff5221cdb8c2",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Thanks for the additional reports.  If you have already filed feedback tickets, would you mind pasting the numbers here so we can follow up?  Having sysdiagnoses for these cases to see what Xcode is doing would be really helpful in trying to track it down.",
          "ts": "1654878943.346209",
          "thread_ts": "1654878503.297639",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "u0Gz8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the additional reports.  If you have already filed feedback tickets, would you mind pasting the numbers here so we can follow up?  Having sysdiagnoses for these cases to see what Xcode is doing would be really helpful in trying to track it down."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "42f104f4-7cc6-4e09-bad6-98c3ae2ca663",
          "type": "message",
          "user": "U03HZ3E3GTF",
          "text": "\u003c@U03HES8111T\u003e I've filed a feedback and attach a sysdiagnose file. Ticket FB10163853. Hope this issue will be fixed in the release version of Xcode 14. If you need additional info contact me.",
          "ts": "1654889772.120129",
          "thread_ts": "1654878503.297639",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Z7crw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HES8111T"
                    },
                    {
                      "type": "text",
                      "text": " I've filed a feedback and attach a sysdiagnose file. Ticket FB10163853. Hope this issue will be fixed in the release version of Xcode 14. If you need additional info contact me."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "281c29b5-9aa9-4422-95c3-c0e7829f0bd9",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Thank you very much!  The attached project and sysdiagnose are really helpful!  I'll make sure this gets routed to the right team, and will reach out through the feedback system if there is anything else that would be helpful.  Much appreciated!",
          "ts": "1654889911.255309",
          "thread_ts": "1654878503.297639",
          "edited": {
            "user": "U03HES8111T",
            "ts": "1654889945.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03HZ3E3GTF",
                "U03J1UBVC2X"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JxGp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you very much!  The attached project and sysdiagnose are really helpful!  I'll make sure this gets routed to the right team, and will reach out through the feedback system if there is anything else that would be helpful.  Much appreciated!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVE01C6A\u003e asked\n\u0026gt; Pre-compiled version of module(s) in Swift package are often preferred by consumers. Are there out-of-the-box capabilities by Apple SPM or other tooling which help with that?",
      "ts": "1654878565.387199",
      "thread_ts": "1654878565.387199",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654879814.500819",
      "reactions": [
        {
          "name": "heavy_plus_sign",
          "count": 1,
          "users": [
            "U03K6LTQ4AG"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "eigus",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVE01C6A"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Pre-compiled version of module(s) in Swift package are often preferred by consumers. Are there out-of-the-box capabilities by Apple SPM or other tooling which help with that?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "99270f0a-cec2-4448-a66f-4cf59da3421c",
          "type": "message",
          "user": "U03HES7M40M",
          "text": "SPM offers the option to consume pre-compiled xcframeworks. Learn more about it here:\n\n\u003chttps://developer.apple.com/documentation/xcode/distributing-binary-frameworks-as-swift-packages\u003e",
          "ts": "1654878579.872619",
          "thread_ts": "1654878565.387199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qlA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "SPM offers the option to consume pre-compiled xcframeworks. Learn more about it here:\n\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/distributing-binary-frameworks-as-swift-packages",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a7e65e09-731f-41c0-8f51-e76160d714c9",
          "type": "message",
          "user": "U03HVE01C6A",
          "text": "My question is different. Swift packages are compiled by consumers in their app. Ideally the same package could be provided as xcframework.\n\nProminent example is Firebase iOS SDK which is open-source and made out of various Swift packages. But they provide for each target(s) in their Swift packages a binary framework. Firebase is achieving this through a custom build process involving CocoaPods\n\nIdeally Apple would provide capabilities of converting a Swift package to binary framework(s) to speed up compilation time for consumers",
          "ts": "1654878939.697109",
          "thread_ts": "1654878565.387199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+cS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "My question is different. Swift packages are compiled by consumers in their app. Ideally the same package could be provided as xcframework.\n\nProminent example is Firebase iOS SDK which is open-source and made out of various Swift packages. But they provide for each target(s) in their Swift packages a binary framework. Firebase is achieving this through a custom build process involving CocoaPods\n\nIdeally Apple would provide capabilities of converting a Swift package to binary framework(s) to speed up compilation time for consumers"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cc710779-81f5-41bf-9ce8-cc6132643664",
          "type": "message",
          "user": "U03HES7M40M",
          "text": "This sounds like an interesting use-case. Would you mind opening a feedback for this?",
          "ts": "1654879117.527149",
          "thread_ts": "1654878565.387199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ux4W7",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This sounds like an interesting use-case. Would you mind opening a feedback for this?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "580664aa-10d0-4ed0-b853-0f65bbf761c0",
          "type": "message",
          "user": "U03JGH0JLMQ",
          "text": "ooi which Feedback category would be appropriate for something like this?  I’m not sure if it would be “Swift compiler” or “pkg Authoring” or something else",
          "ts": "1654879354.224029",
          "thread_ts": "1654878565.387199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0Bpp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "ooi which Feedback category would be appropriate for something like this?  I’m not sure if it would be “Swift compiler” or “pkg Authoring” or something else"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5e778820-389f-4c46-a9f4-3594b3f43563",
          "type": "message",
          "user": "U03HVE01C6A",
          "text": "I created FB10160671. Please change category (Swift compiler) if necessary.\n\n\u003c@U03JGH0JLMQ\u003e please create a feedback as well as it bumps up visibility :)",
          "ts": "1654879814.500819",
          "thread_ts": "1654878565.387199",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fYeG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I created FB10160671. Please change category (Swift compiler) if necessary.\n\n"
                    },
                    {
                      "type": "user",
                      "user_id": "U03JGH0JLMQ"
                    },
                    {
                      "type": "text",
                      "text": " please create a feedback as well as it bumps up visibility :)"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JE2LACMS\u003e asked\n\u0026gt; I see in the Package Plugins session that in case it needs disk access it will show a pop up to the user. Can this be managed programatically? (Thinking of running some of these tools in the CI) Does disabling the sandbox automatically enable write access to the disk too?",
      "ts": "1654878701.765599",
      "thread_ts": "1654878701.765599",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654878836.382169",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "nSfG",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JE2LACMS"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I see in the Package Plugins session that in case it needs disk access it will show a pop up to the user. Can this be managed programatically? (Thinking of running some of these tools in the CI) Does disabling the sandbox automatically enable write access to the disk too?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "1be9625f-a676-46f4-9e75-76e797f927c6",
          "type": "message",
          "user": "U03JE2LACMS",
          "text": "I wrote this question as I was watching the video. Just 2 minutes after sending it I saw that you can pass in a parameter to enable write access :man-facepalming:",
          "ts": "1654878740.470999",
          "thread_ts": "1654878701.765599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FxAEt",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I wrote this question as I was watching the video. Just 2 minutes after sending it I saw that you can pass in a parameter to enable write access "
                    },
                    {
                      "type": "emoji",
                      "name": "man-facepalming",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7ffd685e-a8a4-4ff6-95f8-a6cef469f092",
          "type": "message",
          "user": "U03JE2LACMS",
          "text": "`--allow-writing-to-package-directory`",
          "ts": "1654878796.430859",
          "thread_ts": "1654878701.765599",
          "edited": {
            "user": "U03JE2LACMS",
            "ts": "1654878809.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kimf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "--allow-writing-to-package-directory",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b70ba60f-20d1-42cc-810d-e8a4e60d6f74",
          "type": "message",
          "user": "U03HES7M40M",
          "text": "The better options here is to allow only write access to your files instead of disabling the sandbox altogether. This will ensure the plugin still can not communicate with the network/internet, but allows write access…\n\n```swift package --allow-writing-to-package-directory yourPluginThatWantsWriteAccess```\nYou can learn more about it here:\n\u003chttps://github.com/apple/swift-package-manager/blob/main/Documentation/Plugins.md\u003e",
          "ts": "1654878815.300299",
          "thread_ts": "1654878701.765599",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03JE2LACMS"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9M/4D",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The better options here is to allow only write access to your files instead of disabling the sandbox altogether. This will ensure the plugin still can not communicate with the network/internet, but allows write access…\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"swift package --allow-writing-to-package-directory yourPluginThatWantsWriteAccess\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\nYou can learn more about it here:\n"
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-package-manager/blob/main/Documentation/Plugins.md",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b6f81320-b5b8-44b7-bf72-0f3b7d3ad725",
          "type": "message",
          "user": "U03JE2LACMS",
          "text": "Thanks a bunch Fabian",
          "ts": "1654878829.749259",
          "thread_ts": "1654878701.765599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BxIA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks a bunch Fabian"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "02495cc6-9ea8-4d5b-bd7b-734c764fe62d",
          "type": "message",
          "user": "U03JE2LACMS",
          "text": "really looking forward to migrating to plugins",
          "ts": "1654878836.382169",
          "thread_ts": "1654878701.765599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PheG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "really looking forward to migrating to plugins"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRQ81NEL\u003e asked\n\u0026gt; Xcode SPM Question: \n\u0026gt; \n\u0026gt; I am trying to run server side app in the `Release` build configuration, and I have test cases in which I am importing the app using \n\u0026gt; `@testable import App`\n\u0026gt; \n\u0026gt; When I try to run it is giving \n\u0026gt; \n\u0026gt; `Module 'App' was not compiled for testing`. Is this a bug or I am missing some configurations? ",
      "ts": "1654879734.180019",
      "thread_ts": "1654879734.180019",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654882263.425889",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "p5bN",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRQ81NEL"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Xcode SPM Question: \\n\\nI am trying to run server side app in the `Release` build configuration, and I have test cases in which I am importing the app using \\n`@testable import App`\\n\\nWhen I try to run it is giving \\n\\n`Module 'App' was not compiled for testing`. Is this a bug or I am missing some configurations? \"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "62487751-06b2-42ea-89d5-ccd37252d082",
          "type": "message",
          "user": "U03HES7M40M",
          "text": "Hi! It sounds like you try to run your tests in release configurations to test/measure performance. In those cases we recommend setting up two different test targets:\n\n1. One for unit tests that uses `@testable import App`\n2. One for performance tests that does not use `@testable`. \nThis way you can only run the performance test target with release configuration.\n\nIs this a workable solution for you?",
          "ts": "1654880465.531039",
          "thread_ts": "1654879734.180019",
          "edited": {
            "user": "U03HES7M40M",
            "ts": "1654880499.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "S+IqF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi! It sounds like you try to run your tests in release configurations to test/measure performance. In those cases we recommend setting up two different test targets:\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"One for unit tests that uses \"},{\"type\":\"text\",\"text\":\"@testable import App\",\"style\":{\"code\":true}}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"One for performance tests that does not use \"},{\"type\":\"text\",\"text\":\"@testable\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\". \"}]}],\"style\":\"ordered\",\"indent\":0,\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\nThis way you can only run the performance test target with release configuration.\n\nIs this a workable solution for you?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4B0AA3F2-B4F0-4627-AECD-D28421534D24",
          "type": "message",
          "user": "U03JRQ81NEL",
          "text": "Thanks for the reply. Sure, I will try. One follow up question here, for the unit test target in spm package, how I can avoid that not to compile for release config in Xcode?\nRight now I am using `#if DEBUG` flag to bypass the tests. Are there any other options?",
          "ts": "1654880837.107329",
          "thread_ts": "1654879734.180019",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eb/D",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "reply."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Sure,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "will"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "try."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "One"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "follow"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "up"
                    },
                    {
                      "type": "text",
                      "text": " question "
                    },
                    {
                      "type": "text",
                      "text": "here,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "unit"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "test"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "target"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "spm"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "package,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "how"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "can"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "avoid"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "not"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "compile"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "release"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "config"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Xcode?"
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "Right"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "now"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "am"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "using"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "#if DEBUG",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "flag"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bypass"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "tests."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Are"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "there"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "any"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "other"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "options?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "58573177-10bd-4565-bbbd-2c09ecf5666f",
          "type": "message",
          "user": "U03HES7M40M",
          "text": "Did you create a xcodeproj file from the `Package.swift`? If yes, we don’t recommend this approach anymore. Instead open the Package.swift with Xcode directly.",
          "ts": "1654881267.090279",
          "thread_ts": "1654879734.180019",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OEz2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Did you create a xcodeproj file from the "
                    },
                    {
                      "type": "text",
                      "text": "Package.swift",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "? If yes, we don’t recommend this approach anymore. Instead open the Package.swift with Xcode directly."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "20D47C85-CE36-42FC-A46F-333F2B3B1CFC",
          "type": "message",
          "user": "U03JRQ81NEL",
          "text": "I am having a Stand-alone spm project with direct opening the `Package.swift` file.",
          "ts": "1654881597.228719",
          "thread_ts": "1654879734.180019",
          "edited": {
            "user": "U03JRQ81NEL",
            "ts": "1654881744.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "q1D",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "am"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "having"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Stand-alone spm project with direct opening the "
                    },
                    {
                      "type": "text",
                      "text": "Package.swift",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " file."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "db272d87-0aca-4e9c-8118-bc0eb8196716",
          "type": "message",
          "user": "U03HES7M40M",
          "text": "I would use two different xcode schemes to toggle between unit and performance tests",
          "ts": "1654882056.822969",
          "thread_ts": "1654879734.180019",
          "edited": {
            "user": "U03HES7M40M",
            "ts": "1654882080.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "X9xIb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I would use two different xcode schemes to toggle between unit and performance tests"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "E4595005-8813-40D1-BEF1-39DA26D7ED40",
          "type": "message",
          "user": "U03JRQ81NEL",
          "text": "Thanks :bow:. I will try this.",
          "ts": "1654882263.425889",
          "thread_ts": "1654879734.180019",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "EOR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "emoji",
                      "name": "bow",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "will"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "try"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "this."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVC6M81L\u003e asked\n\u0026gt; Am I missing something? I have a Swift package with some SwiftUI views that load assets from an asset catalog... but when I add that package to a project the images can't be found...",
      "ts": "1654879938.683439",
      "thread_ts": "1654879938.683439",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654880827.370869",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "DMNyM",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVC6M81L"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Am I missing something? I have a Swift package with some SwiftUI views that load assets from an asset catalog... but when I add that package to a project the images can't be found...\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "92437e16-c657-4f3e-b40f-e2c0b09ecdcd",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "I am assuming you are already using `Bundle.module` to reference the asset. Does this work when previewing from within the module itself but not when using it in a larger project?",
          "ts": "1654879960.383779",
          "thread_ts": "1654879938.683439",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Rlh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I am assuming you are already using "
                    },
                    {
                      "type": "text",
                      "text": "Bundle.module",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to reference the asset. Does this work when previewing from within the module itself but not when using it in a larger project?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "be254fcf-fea2-41e5-b3ef-4079650a9d4d",
          "type": "message",
          "user": "U03HVC6M81L",
          "text": "When I use Bundle.module I get the following error:\n`MyApplePie/Sources/MyApplePie/TreeView.swift:12:58: Type 'Bundle' has no member 'module'`\n\nWhen I use Bundle(for:Self.self) it still doesn’t find them. In the project I add the package to I *do* see the resources in the Asset catalog, I just can’t figure out how to refer to them…",
          "ts": "1654880248.600549",
          "thread_ts": "1654879938.683439",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "32E",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "When I use Bundle.module I get the following error:\n"
                    },
                    {
                      "type": "text",
                      "text": "MyApplePie/Sources/MyApplePie/TreeView.swift:12:58: Type 'Bundle' has no member 'module'",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\n\nWhen I use Bundle(for:Self.self) it still doesn’t find them. In the project I add the package to I "
                    },
                    {
                      "type": "text",
                      "text": "do",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " see the resources in the Asset catalog, I just can’t figure out how to refer to them…"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6726cdc2-d952-4aaa-9ca2-c50a3ebf9762",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "Is `TreeView.swift` part of the package that contains the assets? Or outside of it?",
          "ts": "1654880341.919019",
          "thread_ts": "1654879938.683439",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "d7l",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is "
                    },
                    {
                      "type": "text",
                      "text": "TreeView.swift",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " part of the package that contains the assets? Or outside of it?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6425a766-41e9-4a02-8cd9-5fa5dbd225b5",
          "type": "message",
          "user": "U03HVC6M81L",
          "text": "It’s part of the package that contains the assets.\n\u003chttps://github.com/mhanlon/MyApplePie\u003e",
          "ts": "1654880369.695219",
          "thread_ts": "1654879938.683439",
          "attachments": [
            {
              "fallback": "GitHub: GitHub - mhanlon/MyApplePie: A Swift package SwiftUI implementation of the Apple Pie game from Develop in Swift Fundamentals, Unit 2.",
              "id": 1,
              "title": "GitHub - mhanlon/MyApplePie: A Swift package SwiftUI implementation of the Apple Pie game from Develop in Swift Fundamentals, Unit 2.",
              "title_link": "https://github.com/mhanlon/MyApplePie",
              "text": "A Swift package SwiftUI implementation of the Apple Pie game from Develop in Swift Fundamentals, Unit 2. - GitHub - mhanlon/MyApplePie: A Swift package SwiftUI implementation of the Apple Pie game ...",
              "image_url": "https://opengraph.githubassets.com/ed699078d9b06d902afb5ab477cbd705ab8ba985679affea2ebd6f4cc99630f8/mhanlon/MyApplePie",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/mhanlon/MyApplePie",
              "original_url": "https://github.com/mhanlon/MyApplePie",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KLESa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It’s part of the package that contains the assets.\n"
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/mhanlon/MyApplePie",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fb78e32c-d8a7-4aad-8017-c7dd7d800621",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "Ah I think I see the issue, you need to use tools-version 5.3 or newer for your package, since that is when resources were introduced",
          "ts": "1654880445.091719",
          "thread_ts": "1654879938.683439",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Dt2C",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ah I think I see the issue, you need to use tools-version 5.3 or newer for your package, since that is when resources were introduced"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9d1de284-e15e-469f-af81-8443d352edb8",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "Once you do that, the `Bundle.module` accessor should be generated for you at build time",
          "ts": "1654880489.970159",
          "thread_ts": "1654879938.683439",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "e5tu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Once you do that, the "
                    },
                    {
                      "type": "text",
                      "text": "Bundle.module",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " accessor should be generated for you at build time"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "84c9b1e3-0828-4218-9043-f8bc348968e2",
          "type": "message",
          "user": "U03HVC6M81L",
          "text": "Got it. Excellent. Thanks!",
          "ts": "1654880608.617129",
          "thread_ts": "1654879938.683439",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Qr=2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Got it. Excellent. Thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "25f0ba12-9fa5-49bb-8928-d17a90d573eb",
          "type": "message",
          "user": "U03HVC6M81L",
          "text": "Oh man, you’ve saved me so so so much time. Thanks a million.",
          "ts": "1654880827.370869",
          "thread_ts": "1654879938.683439",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J7H4LJ5N"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TJk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oh man, you’ve saved me so so so much time. Thanks a million."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRP6568Y\u003e asked\n\u0026gt; Is a package registry service for Swift Package Manager still moving forward? This was proposed and accepted in SE-0292 but it doesn't seem like there has been any more concrete implementation in the tooling.",
      "ts": "1654880190.273509",
      "thread_ts": "1654880190.273509",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654880707.164899",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "YIXc",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRP6568Y"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is a package registry service for Swift Package Manager still moving forward? This was proposed and accepted in SE-0292 but it doesn't seem like there has been any more concrete implementation in the tooling.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "8bf98b19-7b85-4e0b-aa9b-cd1c8c6f87e8",
          "type": "message",
          "user": "U03H36Q1EH5",
          "text": "The 5.7 release of SwiftPM will support package registry servers that are compliant with SE-0292. We suggest checking the forums for any future announcement of server implementations, for that will most likely be the place where people would make such news public.",
          "ts": "1654880223.970709",
          "thread_ts": "1654880190.273509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pkX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The 5.7 release of SwiftPM will support package registry servers that are compliant with SE-0292. We suggest checking the forums for any future announcement of server implementations, for that will most likely be the place where people would make such news public."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "915a0a99-9263-42bd-be54-37842227ce47",
          "type": "message",
          "user": "U03JGH0JLMQ",
          "text": "\u003c@U03JRP6568Y\u003e This popped up a couple of days ago: \u003chttps://jfrog.com/blog/artifactory-your-swift-package-repository/\u003e, which I assume is an implementation of the service.",
          "ts": "1654880504.744499",
          "thread_ts": "1654880190.273509",
          "attachments": [
            {
              "fallback": "JFrog: Artifactory, Your Swift Package Repository",
              "id": 1,
              "title": "Artifactory, Your Swift Package Repository",
              "title_link": "https://jfrog.com/blog/artifactory-your-swift-package-repository/",
              "text": "JFrog now offers the first and only Swift binary package repository, enabling developers to use JFrog Artifactory for resolving Swift dependencies instead of enterprise source control (Git) systems.",
              "image_url": "https://media.jfrog.com/wp-content/uploads/2022/06/03225224/1200x628_BTN.png",
              "service_name": "JFrog",
              "service_icon": "https://media.jfrog.com/wp-content/uploads/2019/04/20131046/Jfrog16-1.png",
              "from_url": "https://jfrog.com/blog/artifactory-your-swift-package-repository/",
              "original_url": "https://jfrog.com/blog/artifactory-your-swift-package-repository/",
              "fields": [
                {
                  "title": "Written by",
                  "value": "giannit",
                  "short": true
                },
                {
                  "title": "Est. reading time",
                  "value": "3 minutes",
                  "short": true
                }
              ],
              "blocks": null,
              "ts": 1654527714
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "F1S",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03JRP6568Y"
                    },
                    {
                      "type": "text",
                      "text": " This popped up a couple of days ago: "
                    },
                    {
                      "type": "link",
                      "url": "https://jfrog.com/blog/artifactory-your-swift-package-repository/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ", which I assume is an implementation of the service."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "95568551-a4d8-40d0-afd5-3453407f3bc4",
          "type": "message",
          "user": "U03JRP6568Y",
          "text": "Oh very exciting, thank you! We use Artifactory so extra exciting.",
          "ts": "1654880540.426039",
          "thread_ts": "1654880190.273509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "aKII/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oh very exciting, thank you! We use Artifactory so extra exciting."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8d1407a0-748c-4273-84c2-1fa0d09f04d8",
          "type": "message",
          "user": "U03JRP6568Y",
          "text": "Is this still only for source packages or will binary packages be supported? The original evolution thread didn't mention binary.",
          "ts": "1654880617.146149",
          "thread_ts": "1654880190.273509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vKYx",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is this still only for source packages or will binary packages be supported? The original evolution thread didn't mention binary."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9cda4e5c-a201-43e6-adc8-a8e2ce9ee55b",
          "type": "message",
          "user": "U03JGH0JLMQ",
          "text": "The blog post mentions binary :crossed_fingers:",
          "ts": "1654880640.534009",
          "thread_ts": "1654880190.273509",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "sparkling_heart",
              "count": 1,
              "users": [
                "U03JRP6568Y"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "C4T",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The blog post mentions binary "
                    },
                    {
                      "type": "emoji",
                      "name": "crossed_fingers",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bba560ab-8f7b-4a49-ac99-dbea248c5a19",
          "type": "message",
          "user": "U03JRP6568Y",
          "text": "Thank you. This will make our devops team super happy.",
          "ts": "1654880707.164899",
          "thread_ts": "1654880190.273509",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FRF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you. This will make our devops team super happy."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JETJ7UU9\u003e asked\n\u0026gt; Trying to make an XcodeCommandPlugin for my iOS app. The plugin has a dependency on swift format that has a platform requirement for `.macOS(.v10_11)`. This is causing the build plugin to be compiled into inaccessible build folder in derived data. Any thoughts on how I can avoid this?",
      "ts": "1654880371.365919",
      "thread_ts": "1654880371.365919",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 14,
      "latest_reply": "1654884109.702659",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "j/=d",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JETJ7UU9"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Trying to make an XcodeCommandPlugin for my iOS app. The plugin has a dependency on swift format that has a platform requirement for `.macOS(.v10_11)`. This is causing the build plugin to be compiled into inaccessible build folder in derived data. Any thoughts on how I can avoid this?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "bf0e08d7-b6d1-44c5-84ce-2b45a4d301ea",
          "type": "message",
          "user": "U03HES8111T",
          "text": "This sounds like a bug — dependencies of the plugin, such as SwiftFormat in this case, should be getting compiled for the host in a way that makes it reachable from the plugin via the `tool(named:)` API.  It should not matter that the package has a lower platform requirement than what you are currently using.\n\nWould you mind filing a bug report at \u003chttps://feedbackassistant.apple.com/\u003e with as much information as you can provide so that we can investigate?  If you are able to attach the plugin, that would be ideal.",
          "ts": "1654880403.745669",
          "thread_ts": "1654880371.365919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jfiZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This sounds like a bug — dependencies of the plugin, such as SwiftFormat in this case, should be getting compiled for the host in a way that makes it reachable from the plugin via the "
                    },
                    {
                      "type": "text",
                      "text": "tool(named:)",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " API.  It should not matter that the package has a lower platform requirement than what you are currently using.\n\nWould you mind filing a bug report at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " with as much information as you can provide so that we can investigate?  If you are able to attach the plugin, that would be ideal."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9543e5e6-0151-4882-8d15-ee96aa2e6259",
          "type": "message",
          "user": "U03JETJ7UU9",
          "text": "Hmm okay I can definitely make a feedback. Should we have a specific target in Xcode? I point to the iOS sim right now?",
          "ts": "1654880683.866239",
          "thread_ts": "1654880371.365919",
          "files": [
            {
              "id": "F03KWALSSMN",
              "created": 1654880681,
              "timestamp": 1654880681,
              "name": "image.png",
              "title": "image.png",
              "mimetype": "image/png",
              "image_exif_rotation": 0,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03JETJ7UU9",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 29062,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03KWALSSMN-image.png",
              "url_private_download": "C03H0JN431U/F03KWALSSMN-image.png",
              "original_h": 132,
              "original_w": 606,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KWALSSMN-f48d087e55/image_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KWALSSMN-f48d087e55/image_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KWALSSMN-f48d087e55/image_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KWALSSMN-f48d087e55/image_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 360,
              "thumb_360_h": 78,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KWALSSMN-f48d087e55/image_480.png",
              "thumb_480_w": 480,
              "thumb_480_h": 105,
              "thumb_720": "",
              "thumb_720_w": 0,
              "thumb_720_h": 0,
              "thumb_960": "",
              "thumb_960_w": 0,
              "thumb_960_h": 0,
              "thumb_1024": "",
              "thumb_1024_w": 0,
              "thumb_1024_h": 0,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03JETJ7UU9/F03KWALSSMN/image.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03KWALSSMN-5e8d979de8",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oGmxg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hmm okay I can definitely make a feedback. Should we have a specific target in Xcode? I point to the iOS sim right now?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "55c3db33-2bbb-4fc1-9580-61824c93ce12",
          "type": "message",
          "user": "U03JETJ7UU9",
          "text": "Or perhaps specify a `platform` in my plugins package manifest?",
          "ts": "1654880787.489049",
          "thread_ts": "1654880371.365919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "WQX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Or perhaps specify a "
                    },
                    {
                      "type": "text",
                      "text": "platform",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in my plugins package manifest?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5bbe8ba6-5f81-4742-b0b7-5c4af4086a9f",
          "type": "message",
          "user": "U03JETJ7UU9",
          "text": "Also I should note that it's `swift-format` rather than `SwiftFormat`  :slightly_smiling_face:",
          "ts": "1654881123.818199",
          "thread_ts": "1654880371.365919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ttu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also I should note that it's "
                    },
                    {
                      "type": "text",
                      "text": "swift-format",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " rather than "
                    },
                    {
                      "type": "text",
                      "text": "SwiftFormat",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4e7a99ee-e5e2-4971-94c7-073c9702c8bb",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Thank you for clarifying — I misunderstood which package your were referring to.  It should still work the same, so a bug report with as much information as you can provide would be great.  It shouldn't matter whether you are building for the simulator or device — the dependencies of the plugin should always be getting built for the macOS platform on which they will run.",
          "ts": "1654881829.798709",
          "thread_ts": "1654880371.365919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6RjN8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for clarifying — I misunderstood which package your were referring to.  It should still work the same, so a bug report with as much information as you can provide would be great.  It shouldn't matter whether you are building for the simulator or device — the dependencies of the plugin should always be getting built for the macOS platform on which they will run."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f53f42b7-a729-4219-9189-bbe41bbfda33",
          "type": "message",
          "user": "U03HES8111T",
          "text": "The question about the `platform` is a good one — but it doesn't actually affect the way in which the plugin is built, and so only the `platform` in the package that defines the executable would affect it.",
          "ts": "1654881878.063669",
          "thread_ts": "1654880371.365919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KM8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The question about the "
                    },
                    {
                      "type": "text",
                      "text": "platform",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is a good one — but it doesn't actually affect the way in which the plugin is built, and so only the "
                    },
                    {
                      "type": "text",
                      "text": "platform",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in the package that defines the executable would affect it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0c1f5822-2d0c-4c6b-86aa-a71b2f9d99f0",
          "type": "message",
          "user": "U03HES8111T",
          "text": "In this case, I would be particularly interested in seeing what local path the executable is getting built into such that the plugin cannot find it.",
          "ts": "1654881904.890159",
          "thread_ts": "1654880371.365919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qqERV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In this case, I would be particularly interested in seeing what local path the executable is getting built into such that the plugin cannot find it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f457e06c-7568-4f9b-a05d-af19f9ff9d48",
          "type": "message",
          "user": "U03JETJ7UU9",
          "text": "Ah gotcha. That makes sense. Yes it seems `swift-format` is located in `/DerivedData/MyApp-baylwqivgphkmvgkekypuexdjmvt/Build/Products/Debug`  but the context running the actual plugin is looking in `/DerivedData/MyApp-baylwqivgphkmvgkekypuexdjmvt/Build/Products/Debug-iphonesimulator`",
          "ts": "1654881994.966569",
          "thread_ts": "1654880371.365919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "u/iBH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ah gotcha. That makes sense. Yes it seems "
                    },
                    {
                      "type": "text",
                      "text": "swift-format",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is located in "
                    },
                    {
                      "type": "text",
                      "text": "/DerivedData/MyApp-baylwqivgphkmvgkekypuexdjmvt/Build/Products/Debug",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "  but the context running the actual plugin is looking in "
                    },
                    {
                      "type": "text",
                      "text": "/DerivedData/MyApp-baylwqivgphkmvgkekypuexdjmvt/Build/Products/Debug-iphonesimulator",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0ee32d86-f405-4292-80ca-97516e13403f",
          "type": "message",
          "user": "U03JETJ7UU9",
          "text": "I've got it working in a very small sample app. I'll include that in the feedback",
          "ts": "1654882021.922339",
          "thread_ts": "1654880371.365919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "A10x",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I've got it working in a very small sample app. I'll include that in the feedback"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d2f27715-990b-4f9f-95f4-bbb2f86212cc",
          "type": "message",
          "user": "U03JETJ7UU9",
          "text": "Sorry by working I'm mean repro'd :sweat_smile:",
          "ts": "1654882034.449589",
          "thread_ts": "1654880371.365919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5DJJS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sorry by working I'm mean repro'd "
                    },
                    {
                      "type": "emoji",
                      "name": "sweat_smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8b836b77-707a-428b-a17e-27b5f7783129",
          "type": "message",
          "user": "U03HES8111T",
          "text": "This sounds like a bug, and so a feedback ticket would be very much appreciated!  If you have the FB number and can post it here, that would be great.  Thank you!",
          "ts": "1654883574.151819",
          "thread_ts": "1654880371.365919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "G6Fy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This sounds like a bug, and so a feedback ticket would be very much appreciated!  If you have the FB number and can post it here, that would be great.  Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "be23b7fa-e99f-4fec-bac5-275ebddcbca9",
          "type": "message",
          "user": "U03JETJ7UU9",
          "text": "\u003c@U03HES8111T\u003e just submitted' it! `FB10162156`",
          "ts": "1654884083.025519",
          "thread_ts": "1654880371.365919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zVb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HES8111T"
                    },
                    {
                      "type": "text",
                      "text": " just submitted' it! "
                    },
                    {
                      "type": "text",
                      "text": "FB10162156",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "875a7387-5e6a-4358-90e4-6c49c35db3f7",
          "type": "message",
          "user": "U03JETJ7UU9",
          "text": "Demo project attached",
          "ts": "1654884094.351059",
          "thread_ts": "1654880371.365919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pW37",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Demo project attached"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "75dc0ef2-119b-435f-921e-c4f714cd8978",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Thank you very much!",
          "ts": "1654884109.702659",
          "thread_ts": "1654880371.365919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "3xO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you very much!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KH907MME\u003e asked\n\u0026gt; Could you clarify what the Package.resolved is used for by SPM? \n\u0026gt; \n\u0026gt; I keep thinking it's like a .lock file used by other package managers, but SPM seems to use it more like a record of what was installed rather than specifying the exact versions to install.",
      "ts": "1654880407.280929",
      "thread_ts": "1654880407.280929",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654880421.929579",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "n3bho",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KH907MME"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Could you clarify what the Package.resolved is used for by SPM? \\n\\nI keep thinking it's like a .lock file used by other package managers, but SPM seems to use it more like a record of what was installed rather than specifying the exact versions to install.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "99d08908-2f85-403a-a038-9c7dccf6a643",
          "type": "message",
          "user": "U03HL5FTVHS",
          "text": "Hi Craig! You’re correct in that the Package.resolved file is designed to be distinct from a .lock file but it does have some overlap. Here’s a snippet from the proposal:\n\n\u0026gt; The version of every resolved dependency will be recorded in a Package.resolved file in the top-level package, and when this file is present in the top-level package it will be used when performing dependency resolution, rather than the package manager finding the latest eligible version of each package. swift package update will update all dependencies to the latest eligible versions and update the Package.resolved file accordingly.\nYou can read more about the detailed design of the Package.resolved file in this \u003chttps://github.com/apple/swift-evolution/blob/main/proposals/0175-package-manager-revised-dependency-resolution.md|Swift Evolution proposal\u003e.\n\nBy default the version in the Package.resolved is used as a base when resolving existing dependencies but if you want to enforce the usage of the Package.resolved file as a true lock, you can pass the `--only-use-versions-from-resolved-file` to SwiftPM or the `-onlyUsePackageVersionsFromResolvedFile` flag to `xcodebuild`.",
          "ts": "1654880421.929579",
          "thread_ts": "1654880407.280929",
          "attachments": [
            {
              "fallback": "GitHub: swift-evolution/0175-package-manager-revised-dependency-resolution.md at main · apple/swift-evolution",
              "id": 1,
              "title": "swift-evolution/0175-package-manager-revised-dependency-resolution.md at main · apple/swift-evolution",
              "title_link": "https://github.com/apple/swift-evolution/blob/main/proposals/0175-package-manager-revised-dependency-resolution.md",
              "text": "This maintains proposals for changes and user-visible enhancements to the Swift Programming Language. - swift-evolution/0175-package-manager-revised-dependency-resolution.md at main · apple/swift-e...",
              "image_url": "https://opengraph.githubassets.com/ed875a6466f03a36170c9cc86c9dcf4f22285132dedb6df4d8b395ed3d5dd9bb/apple/swift-evolution",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/apple/swift-evolution/blob/main/proposals/0175-package-manager-revised-dependency-resolution.md",
              "original_url": "https://github.com/apple/swift-evolution/blob/main/proposals/0175-package-manager-revised-dependency-resolution.md",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Igb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Craig! You’re correct in that the Package.resolved file is designed to be distinct from a .lock file but it does have some overlap. Here’s a snippet from the proposal:\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"The version of every resolved dependency will be recorded in a Package.resolved file in the top-level package, and when this file is present in the top-level package it will be used when performing dependency resolution, rather than the package manager finding the latest eligible version of each package. swift package update will update all dependencies to the latest eligible versions and update the Package.resolved file accordingly.\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\nYou can read more about the detailed design of the Package.resolved file in this "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-evolution/blob/main/proposals/0175-package-manager-revised-dependency-resolution.md",
                      "text": "Swift Evolution proposal"
                    },
                    {
                      "type": "text",
                      "text": ".\n\nBy default the version in the Package.resolved is used as a base when resolving existing dependencies but if you want to enforce the usage of the Package.resolved file as a true lock, you can pass the "
                    },
                    {
                      "type": "text",
                      "text": "--only-use-versions-from-resolved-file",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to SwiftPM or the "
                    },
                    {
                      "type": "text",
                      "text": "-onlyUsePackageVersionsFromResolvedFile",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " flag to "
                    },
                    {
                      "type": "text",
                      "text": "xcodebuild",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JGH0JLMQ\u003e asked\n\u0026gt; We distribute a large number of binary Swift frameworks, and would love to be able to distribute them using SPM. How would you recommend constructing our package definitions so that our packages can correctly declare dependencies on each other?",
      "ts": "1654880548.801789",
      "thread_ts": "1654880548.801789",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654888490.405509",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "IMj",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JGH0JLMQ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We distribute a large number of binary Swift frameworks, and would love to be able to distribute them using SPM. How would you recommend constructing our package definitions so that our packages can correctly declare dependencies on each other?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "07d358ba-c330-4110-bfd5-4ec031233d91",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "I am assuming you are talking about the fact that a binary target cannot declare dependencies in the package manifest. This is a known issue we are already tracking, in the meantime, there is some discussion around a workaround on the Swift forums here: \u003chttps://forums.swift.org/t/swiftpm-binary-target-with-sub-dependencies/40197/5\u003e",
          "ts": "1654880555.387739",
          "thread_ts": "1654880548.801789",
          "attachments": [
            {
              "fallback": "Swift Forums: SwiftPM - Binary target with sub-dependencies",
              "id": 1,
              "title": "SwiftPM - Binary target with sub-dependencies",
              "title_link": "https://forums.swift.org/t/swiftpm-binary-target-with-sub-dependencies/40197/5",
              "text": "We used a wrapper target to solve dependencies for a binary framework. See \u003chttps://github.com/firebase/firebase-ios-sdk/blob/master/Package.swift#L203\u003e",
              "thumb_url": "https://aws1.discourse-cdn.com/swift/original/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6.png",
              "service_name": "Swift Forums",
              "service_icon": "https://aws1.discourse-cdn.com/swift/optimized/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6_2_180x180.png",
              "from_url": "https://forums.swift.org/t/swiftpm-binary-target-with-sub-dependencies/40197/5",
              "original_url": "https://forums.swift.org/t/swiftpm-binary-target-with-sub-dependencies/40197/5",
              "blocks": null,
              "ts": 1599861045
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "R9V",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I am assuming you are talking about the fact that a binary target cannot declare dependencies in the package manifest. This is a known issue we are already tracking, in the meantime, there is some discussion around a workaround on the Swift forums here: "
                    },
                    {
                      "type": "link",
                      "url": "https://forums.swift.org/t/swiftpm-binary-target-with-sub-dependencies/40197/5",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a2d7fa13-29ec-40ad-982a-6fd661060290",
          "type": "message",
          "user": "U03JGH0JLMQ",
          "text": "Thanks for the reply! I was, though hadn’t found that page. Was wondering if there was a better workaround, but glad I hadn’t missed anything obvious",
          "ts": "1654888490.405509",
          "thread_ts": "1654880548.801789",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/fDj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the reply! I was, though hadn’t found that page. Was wondering if there was a better workaround, but glad I hadn’t missed anything obvious"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KVQZRF7S\u003e asked\n\u0026gt; Can image assets that are part of a package be used in storyboards and nibs outside of that package? They display fine in IB, but when running in the simulator or device I always get an error that the resource can't be found.",
      "ts": "1654881230.651359",
      "thread_ts": "1654881230.651359",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654881719.174709",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "i7/7S",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KVQZRF7S"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can image assets that are part of a package be used in storyboards and nibs outside of that package? They display fine in IB, but when running in the simulator or device I always get an error that the resource can't be found.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "b60a43fe-4207-4500-acdd-65b4302a628b",
          "type": "message",
          "user": "U03HES8111T",
          "text": "A packages target's resources can only be accessed from within the package target that declares them.  This is done using the `Bundle.module` accessor that is synthesized for each package target.\n\nTo access these resources from outside the package target, the package target can implement an accessor that returns the target's own resource bundle to the caller, but there isn't currently a way to do that directly in Storyboards and Nibs.",
          "ts": "1654881250.009239",
          "thread_ts": "1654881230.651359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "17oE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "A packages target's resources can only be accessed from within the package target that declares them.  This is done using the "
                    },
                    {
                      "type": "text",
                      "text": "Bundle.module",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " accessor that is synthesized for each package target.\n\nTo access these resources from outside the package target, the package target can implement an accessor that returns the target's own resource bundle to the caller, but there isn't currently a way to do that directly in Storyboards and Nibs."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "69109672-edfb-4372-8a4f-0aa3c23a47d4",
          "type": "message",
          "user": "U03KVQZRF7S",
          "text": "Ok, confirms what I'm seeing, thank you!",
          "ts": "1654881305.918939",
          "thread_ts": "1654881230.651359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ve/F",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok, confirms what I'm seeing, thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c2734ccb-cf60-4719-9e5e-80df8b64c44c",
          "type": "message",
          "user": "U03HES8111T",
          "text": "If you have time, would you mind filing a feedback ticket at \u003chttps://feedbackassistant.apple.com/\u003e since it seems like a bug that there is a discrepancy between what you see at editing time and at runtime?",
          "ts": "1654881373.523219",
          "thread_ts": "1654881230.651359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zV3q",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you have time, would you mind filing a feedback ticket at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " since it seems like a bug that there is a discrepancy between what you see at editing time and at runtime?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a4ca03c9-498e-417d-9173-5a28fdb0bd4f",
          "type": "message",
          "user": "U03HES8111T",
          "text": "That would be very appreciated!",
          "ts": "1654881381.756959",
          "thread_ts": "1654881230.651359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sq8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That would be very appreciated!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7aee9c04-b116-4905-8cdd-72a00005ea0b",
          "type": "message",
          "user": "U03KVQZRF7S",
          "text": "Yes, I can do that!",
          "ts": "1654881459.405099",
          "thread_ts": "1654881230.651359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UWS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, I can do that!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f0d94614-db80-47ac-b3d2-ebbdf521b636",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Thank you!",
          "ts": "1654881719.174709",
          "thread_ts": "1654881230.651359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RFi=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J1UAEU4B\u003e asked\n\u0026gt; Is there any modern guidance on when to use Swift Packages vs. dynamically linked frameworks when sharing code *internally* across multiple targets? Say I have an iOS app, a Siri intent, and a widget - I've always relied on making a MyCoolKit framework with shared code and importing that framework into each user-facing target. Should I migrate to a Swift package instead? Are there pros and cons or tradeoffs to consider?",
      "ts": "1654881252.678519",
      "thread_ts": "1654881252.678519",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654883705.666029",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "+UGl",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J1UAEU4B"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there any modern guidance on when to use Swift Packages vs. dynamically linked frameworks when sharing code *internally* across multiple targets? Say I have an iOS app, a Siri intent, and a widget - I've always relied on making a MyCoolKit framework with shared code and importing that framework into each user-facing target. Should I migrate to a Swift package instead? Are there pros and cons or tradeoffs to consider?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "b90db864-5f11-4286-9102-7c0d414d42dc",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "Packages can be a good way to organize your internal modules, especially if you may plan on splitting them out into separate SCM repositories in the future, e.g. to share them between multiple apps. For the concrete case of sharing code between an app and app extensions, frameworks would still be the tool of choice to share code at runtime. You are able to take advantage of both by having a shared framework between your app and extensions which links any local packages statically.",
          "ts": "1654881265.494079",
          "thread_ts": "1654881252.678519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hFCV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Packages can be a good way to organize your internal modules, especially if you may plan on splitting them out into separate SCM repositories in the future, e.g. to share them between multiple apps. For the concrete case of sharing code between an app and app extensions, frameworks would still be the tool of choice to share code at runtime. You are able to take advantage of both by having a shared framework between your app and extensions which links any local packages statically."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "818f96bc-7f68-4a6e-a54d-24897d332459",
          "type": "message",
          "user": "U03J1UAEU4B",
          "text": "Ah, great idea, thank you!",
          "ts": "1654881334.426649",
          "thread_ts": "1654881252.678519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5KN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ah, great idea, thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dde5c59b-d9e7-4b0e-8528-aaf09350b637",
          "type": "message",
          "user": "U03J1UAEU4B",
          "text": "I have had that happen before, where I have code within my framework that ultimately I want to split out into a library - in the past that's required refactoring, moving it out of the repo, making it a cocoapod.",
          "ts": "1654881357.132659",
          "thread_ts": "1654881252.678519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PHof",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I have had that happen before, where I have code within my framework that ultimately I want to split out into a library - in the past that's required refactoring, moving it out of the repo, making it a cocoapod."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b70ba287-d4ec-42cd-ba0f-5acc34bfe5ab",
          "type": "message",
          "user": "U03J1UAEU4B",
          "text": "I'll try that approach instead next time",
          "ts": "1654881363.163829",
          "thread_ts": "1654881252.678519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Fi68",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'll try that approach instead next time"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d9bf035d-df8b-44fc-b495-ebfe10bd3fdb",
          "type": "message",
          "user": "U03HVE01C6A",
          "text": "\u003c@U03J7H4LJ5N\u003e  can you elaborate further on why using a framework is the tool of choice here?\n\n\u0026gt; For the concrete case of sharing code between an app and app extensions, frameworks would still be the tool of choice to share code at runtime. You are able to take advantage of both by having a shared framework between your app and extensions which links any local packages statically.",
          "ts": "1654881712.399229",
          "thread_ts": "1654881252.678519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "u3Ob",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03J7H4LJ5N"
                    },
                    {
                      "type": "text",
                      "text": "  can you elaborate further on why using a framework is the tool of choice here?\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"For the concrete case of sharing code between an app and app extensions, frameworks would still be the tool of choice to share code at runtime. You are able to take advantage of both by having a shared framework between your app and extensions which links any local packages statically.\"}]}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6ae9d5f7-d7a9-49fd-bafd-ac142e0ca9c5",
          "type": "message",
          "user": "U03J4DRK4SY",
          "text": "I'd love to know more about this ^ as well. I'm using a Swift package for my app's shared code, because otherwise depending on another package in both my app target and the shared framework causes the package to be linked dynamically resulting in a big file size increase since dead code stripping isn't performed on it (I think)",
          "ts": "1654883148.448819",
          "thread_ts": "1654881252.678519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "EzZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'd love to know more about this ^ as well. I'm using a Swift package for my app's shared code, because otherwise depending on another package in both my app target and the shared framework causes the package to be linked dynamically resulting in a big file size increase since dead code stripping isn't performed on it (I think)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "19d0ed0d-12de-43ea-9825-734687039f74",
          "type": "message",
          "user": "U03J1UAEU4B",
          "text": "If your framework links the package, does the app target need to link it too? You could just import your framework anytime you need the stuff from the package.",
          "ts": "1654883705.666029",
          "thread_ts": "1654881252.678519",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2wiw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If your framework links the package, does the app target need to link it too? You could just import your framework anytime you need the stuff from the package."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ52JGKF\u003e asked\n\u0026gt; Hi! I'm in large scale apps we want to optimize as aggressively as possible to have a smaller app size. We'd like to switch to SPM to manage our dependencies but there are a few restrictions in flexibility that impeded us from doing so:\n\u0026gt; * We need to use the -Oz optimization flag, without using unsafeFlags (for release builds)\n\u0026gt; * We need to be able to produce LLVM BC instead of Mach-O files, as we have additional size optimization steps at that level.\n\u0026gt; Are these things something that can be done now with the new announcements or is in the roadmap for SPM?",
      "ts": "1654881674.080809",
      "thread_ts": "1654881674.080809",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654881697.636209",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "npD",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ52JGKF"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi! I'm in large scale apps we want to optimize as aggressively as possible to have a smaller app size. We'd like to switch to SPM to manage our dependencies but there are a few restrictions in flexibility that impeded us from doing so:\\n* We need to use the -Oz optimization flag, without using unsafeFlags (for release builds)\\n* We need to be able to produce LLVM BC instead of Mach-O files, as we have additional size optimization steps at that level.\\nAre these things something that can be done now with the new announcements or is in the roadmap for SPM?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "433c72b2-3ef7-4f59-bb4e-ea5cde157de8",
          "type": "message",
          "user": "U03HES8111T",
          "text": "This customization isn't currently possible with Swift Packages, so for now staying with Xcode projects is probably the best option.\n\nTo help shape the future of Swift Packages  customization, the best way is to get involved in the package-specific forums at \u003chttps://forums.swift.org\u003e.  That would be a great way to discuss what kinds of customization you need and suggestions for how you would like to express that customization.",
          "ts": "1654881697.636209",
          "thread_ts": "1654881674.080809",
          "attachments": [
            {
              "fallback": "Swift Forums",
              "id": 1,
              "title": "Swift Forums",
              "title_link": "https://forums.swift.org/",
              "text": "Swift Forums",
              "thumb_url": "https://aws1.discourse-cdn.com/swift/original/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6.png",
              "service_name": "forums.swift.org",
              "service_icon": "https://aws1.discourse-cdn.com/swift/optimized/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6_2_180x180.png",
              "from_url": "https://forums.swift.org/",
              "original_url": "https://forums.swift.org",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "swift-orange",
              "count": 1,
              "users": [
                "U03HZ52JGKF"
              ]
            },
            {
              "name": "gratitude-thank-you",
              "count": 1,
              "users": [
                "U03HZ52JGKF"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ia80J",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This customization isn't currently possible with Swift Packages, so for now staying with Xcode projects is probably the best option.\n\nTo help shape the future of Swift Packages  customization, the best way is to get involved in the package-specific forums at "
                    },
                    {
                      "type": "link",
                      "url": "https://forums.swift.org",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ".  That would be a great way to discuss what kinds of customization you need and suggestions for how you would like to express that customization."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J22AU6DQ\u003e asked\n\u0026gt; Is there a way to set \"Valid Archs\"/\"Excluded Architectures\" for a SPM target or the whole library for simulator builds?",
      "ts": "1654882324.029029",
      "thread_ts": "1654882324.029029",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654882351.425879",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "=AD=",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J22AU6DQ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a way to set \\\"Valid Archs\\\"\\/\\\"Excluded Architectures\\\" for a SPM target or the whole library for simulator builds?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "101b8eaa-b23c-493b-83fb-dc86b7a20c64",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "There is no way to currently do this, but we consider it a known issue that package products do not build for the same set of architectures as their clients automatically.",
          "ts": "1654882331.502879",
          "thread_ts": "1654882324.029029",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Cbk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There is no way to currently do this, but we consider it a known issue that package products do not build for the same set of architectures as their clients automatically."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "24410cab-a1d1-41c9-a1c1-bfa907c232c4",
          "type": "message",
          "user": "U03J22AU6DQ",
          "text": "Got it, thank you!",
          "ts": "1654882351.425879",
          "thread_ts": "1654882324.029029",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "QM60",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Got it, thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVE01C6A\u003e asked\n\u0026gt; Swift package plugins might rely on executables which may or may not exist on the local machine, e.g SwiftLint. Can those be bundled as part of the package (if not locally available) ?",
      "ts": "1654882379.544559",
      "thread_ts": "1654882379.544559",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654882405.558229",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "OEjrg",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVE01C6A"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Swift package plugins might rely on executables which may or may not exist on the local machine, e.g SwiftLint. Can those be bundled as part of the package (if not locally available) ?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6f1c0ac1-7fd5-4f4c-9ec4-0e6c0b8f9e26",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Yes they can.  Our recommendation is to have a dependency on a source package if the executable is built using SwiftPM and the command is used as a regular build command.  If the executable is built using a different tool than SwiftPM or needs to be invoked from a prebuild command, the executable can also be bundled as a binary artifact archive.\n\nFor more information see \u003chttps://github.com/apple/swift-package-manager/blob/main/Documentation/Plugins.md\u003e",
          "ts": "1654882405.558229",
          "thread_ts": "1654882379.544559",
          "attachments": [
            {
              "fallback": "GitHub: swift-package-manager/Plugins.md at main · apple/swift-package-manager",
              "id": 1,
              "title": "swift-package-manager/Plugins.md at main · apple/swift-package-manager",
              "title_link": "https://github.com/apple/swift-package-manager/blob/main/Documentation/Plugins.md",
              "text": "The Package Manager for the Swift Programming Language - swift-package-manager/Plugins.md at main · apple/swift-package-manager",
              "image_url": "https://opengraph.githubassets.com/04b1ea10d12cba6fb53a557343f56b9d58618a76cdf6973f29d112b0a7d3f6ca/apple/swift-package-manager",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/apple/swift-package-manager/blob/main/Documentation/Plugins.md",
              "original_url": "https://github.com/apple/swift-package-manager/blob/main/Documentation/Plugins.md",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03HVE01C6A"
              ]
            },
            {
              "name": "white_check_mark",
              "count": 1,
              "users": [
                "U03HVE01C6A"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "psm4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes they can.  Our recommendation is to have a dependency on a source package if the executable is built using SwiftPM and the command is used as a regular build command.  If the executable is built using a different tool than SwiftPM or needs to be invoked from a prebuild command, the executable can also be bundled as a binary artifact archive.\n\nFor more information see "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-package-manager/blob/main/Documentation/Plugins.md",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVE01C6A\u003e asked\n\u0026gt; Does Apple provide a set of own, open-source Swift package plugins to the community?",
      "ts": "1654883078.182559",
      "thread_ts": "1654883078.182559",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654883093.186139",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "=Dp",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVE01C6A"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Does Apple provide a set of own, open-source Swift package plugins to the community?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "f840d487-3418-4a45-bce0-24ee8e2e7010",
          "type": "message",
          "user": "U03HL5FTVHS",
          "text": "Apple routinely provides Swift open source libraries, and some of them could include plugins. For example, Apple recently opened sourced a \u003chttps://github.com/apple/swift-docc-plugin|Swift-DocC plugin\u003e as part of Swift 5.6. The plugin provides an easy way to generate documentation for Swift Package libraries and executables from the command-line.",
          "ts": "1654883093.186139",
          "thread_ts": "1654883078.182559",
          "attachments": [
            {
              "fallback": "GitHub: GitHub - apple/swift-docc-plugin: Swift Package Manager command plugin for Swift-DocC",
              "id": 1,
              "title": "GitHub - apple/swift-docc-plugin: Swift Package Manager command plugin for Swift-DocC",
              "title_link": "https://github.com/apple/swift-docc-plugin",
              "text": "Swift Package Manager command plugin for Swift-DocC - GitHub - apple/swift-docc-plugin: Swift Package Manager command plugin for Swift-DocC",
              "image_url": "https://opengraph.githubassets.com/c3a34c28d05996c0196b1d573e95bc15cd8a4e8e28015b721cca992788e99ada/apple/swift-docc-plugin",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/apple/swift-docc-plugin",
              "original_url": "https://github.com/apple/swift-docc-plugin",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03HVD5Q8DC"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Rw66",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Apple routinely provides Swift open source libraries, and some of them could include plugins. For example, Apple recently opened sourced a "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-docc-plugin",
                      "text": "Swift-DocC plugin"
                    },
                    {
                      "type": "text",
                      "text": " as part of Swift 5.6. The plugin provides an easy way to generate documentation for Swift Package libraries and executables from the command-line."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03K5SD6CLT\u003e asked\n\u0026gt; I work on a complex enterprise app that uses many SPM dependencies under the hood (over 100 packages). Since we've onboarded to building our app with SPM, our engineers are complaining about slow and error prone package resolution times which require multiple cycles of \n\u0026gt; \n\u0026gt; File \u0026gt; Packages \u0026gt; Reset Package Caches / Resolve Package Versions\n\u0026gt; \n\u0026gt; Should we expect Xcode 14 to resolve many of these issues? We are currently using Xcode 13.3 and 13.4.",
      "ts": "1654883139.225189",
      "thread_ts": "1654883139.225189",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654883242.518219",
      "reactions": [
        {
          "name": "+1",
          "count": 1,
          "users": [
            "U03KQQK9RNU"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "b08",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K5SD6CLT"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I work on a complex enterprise app that uses many SPM dependencies under the hood (over 100 packages). Since we've onboarded to building our app with SPM, our engineers are complaining about slow and error prone package resolution times which require multiple cycles of \\n\\nFile \u003e Packages \u003e Reset Package Caches \\/ Resolve Package Versions\\n\\nShould we expect Xcode 14 to resolve many of these issues? We are currently using Xcode 13.3 and 13.4.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "5b94a33c-2758-4902-a2b8-779184eb0da6",
          "type": "message",
          "user": "U03H36Q9X3R",
          "text": "Thanks for reporting. We would need to work together with you to collect additional information about these issues. Please file a feedback (\u003chttps://feedbackassistant.apple.com/\u003e) with as many technical details as possible. For example, a sysdiganose would help understand the performance issues.",
          "ts": "1654883206.106269",
          "thread_ts": "1654883139.225189",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8b8O",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for reporting. We would need to work together with you to collect additional information about these issues. Please file a feedback ("
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ") with as many technical details as possible. For example, a sysdiganose would help understand the performance issues."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2fe3c9ed-8e6e-40cc-b86e-b87d443bd594",
          "type": "message",
          "user": "U03H36Q9X3R",
          "text": "Please post the feedback ID here once filed so we can follow up on it",
          "ts": "1654883242.518219",
          "thread_ts": "1654883139.225189",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "I5P",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Please post the feedback ID here once filed so we can follow up on it"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J22AU6DQ\u003e asked\n\u0026gt; Is it possible to use Xcode's Package Collections UI for a Swift Package without an xcodeproj? The only way I managed to find is manually adding a dependency in code.",
      "ts": "1654883281.697969",
      "thread_ts": "1654883281.697969",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654883504.951859",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ad4",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J22AU6DQ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is it possible to use Xcode's Package Collections UI for a Swift Package without an xcodeproj? The only way I managed to find is manually adding a dependency in code.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "9a37eacc-649c-474b-bb49-983ef1965f72",
          "type": "message",
          "user": "U03H36Q9X3R",
          "text": "Package manifests are code, and could be arbitrarily complex, so there is currently no way to programmatically modify the package manifest. As such the collection UI only offers a copy-to-clipboard helper and the manifest changes have to be done manually",
          "ts": "1654883504.951859",
          "thread_ts": "1654883281.697969",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qz3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Package manifests are code, and could be arbitrarily complex, so there is currently no way to programmatically modify the package manifest. As such the collection UI only offers a copy-to-clipboard helper and the manifest changes have to be done manually"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVE01C6A\u003e asked\n\u0026gt; How can SPM subcommands like diagnose-api-breaking-changes be used for Swift packages which require xcodebuild for compilation (example: a package targeting iOS only with heavy use of UIKit) ?",
      "ts": "1654883475.343279",
      "thread_ts": "1654883475.343279",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654883545.035749",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "3FoN",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVE01C6A"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"How can SPM subcommands like diagnose-api-breaking-changes be used for Swift packages which require xcodebuild for compilation (example: a package targeting iOS only with heavy use of UIKit) ?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "8dfbafc5-b9a1-41f2-8a62-49c599cb020c",
          "type": "message",
          "user": "U03HES7M40M",
          "text": "The SwiftPM cli tools are currently not supported for iOS projects. `xcodebuild` is the CLI tool for iOS projects. `xcodebuild` does not provide the diagnose-api-breaking-changes feature. If you would like to use such a feature for iOS projects, we recommend you to open a feedback.",
          "ts": "1654883545.035749",
          "thread_ts": "1654883475.343279",
          "edited": {
            "user": "U03HES7M40M",
            "ts": "1654883686.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2Njj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The SwiftPM cli tools are currently not supported for iOS projects. "
                    },
                    {
                      "type": "text",
                      "text": "xcodebuild",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is the CLI tool for iOS projects. "
                    },
                    {
                      "type": "text",
                      "text": "xcodebuild",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " does not provide the diagnose-api-breaking-changes feature. If you would like to use such a feature for iOS projects, we recommend you to open a feedback."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JPFQNX5K\u003e asked\n\u0026gt; Hey there! :wave: In our company we have a project basically split between a bunch of Swift packages, including a top-level one wrapping all of these into an app target, also delivering some external packages by providing wrapping protocols to have it properly abstracted.\n\u0026gt; \n\u0026gt; The issue we have is that basically most of our packages are resolved automatically (products with no explicit `type` setting) so that these can be linked either statically or dynamically, yet a couple of these packages needs to be kept explicitly as `.dynamic` due to an issue with tests. Building the app for running compiles perfectly, with all our packages being linked statically to the app binary, keeping only a few 3rd-party frameworks aside in the Frameworks folder. Once there are some specific Test targets involved, we're getting a “Swift package product 'OrbitStatic' is linked as a static library by 'SnapshotTests' and 'App'. This will result in duplication of library code.” – The mentioned package is being `@_exported import`ed and statically linked by our wrapping UI package (SharedUI) so that it bundles our external package with basic UI kit (Orbit), another package with SwiftUI (SharedSwiftUI) views and basic legacy code with UIKit (SharedUI, the wrapping one). This SharedUI package is linked both by the App target and SnapshotTests, I'd say the problem is being in the build list by both targets while requiring different linking type for each one of them. Could you suggest anything related to this specific error message? Possible solutions? Thanks! :raised_hands:",
      "ts": "1654883623.808659",
      "thread_ts": "1654883623.808659",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 7,
      "latest_reply": "1654886444.801759",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "PTc1",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JPFQNX5K"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hey there! \"},{\"type\":\"emoji\",\"name\":\"wave\"},{\"type\":\"text\",\"text\":\" In our company we have a project basically split between a bunch of Swift packages, including a top-level one wrapping all of these into an app target, also delivering some external packages by providing wrapping protocols to have it properly abstracted.\\n\\nThe issue we have is that basically most of our packages are resolved automatically (products with no explicit `type` setting) so that these can be linked either statically or dynamically, yet a couple of these packages needs to be kept explicitly as `.dynamic` due to an issue with tests. Building the app for running compiles perfectly, with all our packages being linked statically to the app binary, keeping only a few 3rd-party frameworks aside in the Frameworks folder. Once there are some specific Test targets involved, we're getting a \\u201cSwift package product 'OrbitStatic' is linked as a static library by 'SnapshotTests' and 'App'. This will result in duplication of library code.\\u201d \\u2013\\u00a0The mentioned package is being `@_exported import`ed and statically linked by our wrapping UI package (SharedUI) so that it bundles our external package with basic UI kit (Orbit), another package with SwiftUI (SharedSwiftUI) views and basic legacy code with UIKit (SharedUI, the wrapping one). This SharedUI package is linked both by the App target and SnapshotTests, I'd say the problem is being in the build list by both targets while requiring different linking type for each one of them. Could you suggest anything related to this specific error message? Possible solutions? Thanks! \"},{\"type\":\"emoji\",\"name\":\"raised_hands\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "77d47817-47b6-4125-8249-b1ad8ce1dd7d",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "This error message suggests that Xcodes automatic handling for the duplicated symbol issue has failed. Are you marking any package products explicitly as static by any chance? You also have the option of setting `DISABLE_DIAMOND_PROBLEM_DIAGNOSTIC` in the client target to suppress the diagnostic, however this means that you will potentially encounter a duplicated symbol issue at runtime.",
          "ts": "1654883635.914159",
          "thread_ts": "1654883623.808659",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "P=v5t",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This error message suggests that Xcodes automatic handling for the duplicated symbol issue has failed. Are you marking any package products explicitly as static by any chance? You also have the option of setting "
                    },
                    {
                      "type": "text",
                      "text": "DISABLE_DIAMOND_PROBLEM_DIAGNOSTIC",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in the client target to suppress the diagnostic, however this means that you will potentially encounter a duplicated symbol issue at runtime."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0c00a198-7a17-49d4-8e89-f96e5fff718f",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "Yea, definitely, the `SharedUI` one links those underlying `Orbit` and two others in the `SharedSwiftUI` statically (references the explicit `OrbitStatic`, `AccessibilityStringsStatic`, … products). If the error basically causes the duplication between different targets (App and Tests), could it be safe to use tle flag then?",
          "ts": "1654884487.935589",
          "thread_ts": "1654883623.808659",
          "edited": {
            "user": "U03JPFQNX5K",
            "ts": "1654884565.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PNd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yea, definitely, the "
                    },
                    {
                      "type": "text",
                      "text": "SharedUI",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " one links those underlying "
                    },
                    {
                      "type": "text",
                      "text": "Orbit",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and two others in the "
                    },
                    {
                      "type": "text",
                      "text": "SharedSwiftUI",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " statically (references the explicit "
                    },
                    {
                      "type": "text",
                      "text": "OrbitStatic",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", "
                    },
                    {
                      "type": "text",
                      "text": "AccessibilityStringsStatic",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", … products). If the error basically causes the duplication between different targets (App and Tests), could it be safe to use tle flag then?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "770ccac9-8307-41dd-9e77-aba0cb022ecf",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "It’s difficult to say, but it is reasonably safe to try since any issues would surface at launch time. If there’s actual duplication, you might see a crash on launch due to it or potentially warnings that there is ambiguity with duplicated types.",
          "ts": "1654884702.337799",
          "thread_ts": "1654883623.808659",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uhXC/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It’s difficult to say, but it is reasonably safe to try since any issues would surface at launch time. If there’s actual duplication, you might see a crash on launch due to it or potentially warnings that there is ambiguity with duplicated types."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7f255c4f-d02d-4d10-ba18-63cf611af910",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "We'll definitely try :eyes: we lived with some symbols duplication (having the whole Orbit duplicated in ealier-separated `Shared*UI` packages twice) for some time, eventually discovered this static encapsulation solving the bundle size troubles quite nicely. This is a quickly drawn scheme just to illustrate it better (green-suffixed explicitly `static`, intermediates all `auto`, SharedUI currently `dynamic` and working with all targets, setting it `auto` will result in that duplication error).",
          "ts": "1654885061.886159",
          "thread_ts": "1654883623.808659",
          "edited": {
            "user": "U03JPFQNX5K",
            "ts": "1654885167.000000"
          },
          "files": [
            {
              "id": "F03K6UKN4Q2",
              "created": 1654884946,
              "timestamp": 1654884946,
              "name": "scheme.jpg",
              "title": "scheme.jpg",
              "mimetype": "image/jpeg",
              "image_exif_rotation": 0,
              "filetype": "jpg",
              "pretty_type": "JPEG",
              "user": "U03JPFQNX5K",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 60664,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03K6UKN4Q2-scheme.jpg",
              "url_private_download": "C03H0JN431U/F03K6UKN4Q2-scheme.jpg",
              "original_h": 1024,
              "original_w": 768,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K6UKN4Q2-bd4b788866/scheme_64.jpg",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K6UKN4Q2-bd4b788866/scheme_80.jpg",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K6UKN4Q2-bd4b788866/scheme_160.jpg",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K6UKN4Q2-bd4b788866/scheme_360.jpg",
              "thumb_360_gif": "",
              "thumb_360_w": 270,
              "thumb_360_h": 360,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K6UKN4Q2-bd4b788866/scheme_480.jpg",
              "thumb_480_w": 360,
              "thumb_480_h": 480,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K6UKN4Q2-bd4b788866/scheme_720.jpg",
              "thumb_720_w": 540,
              "thumb_720_h": 720,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K6UKN4Q2-bd4b788866/scheme_960.jpg",
              "thumb_960_w": 720,
              "thumb_960_h": 960,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K6UKN4Q2-bd4b788866/scheme_1024.jpg",
              "thumb_1024_w": 768,
              "thumb_1024_h": 1024,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03JPFQNX5K/F03K6UKN4Q2/scheme.jpg",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03K6UKN4Q2-9c5db33f74",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Weid",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We'll definitely try "
                    },
                    {
                      "type": "emoji",
                      "name": "eyes",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " we lived with some symbols duplication (having the whole Orbit duplicated in ealier-separated "
                    },
                    {
                      "type": "text",
                      "text": "Shared*UI",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " packages twice) for some time, eventually discovered this static encapsulation solving the bundle size troubles quite nicely. This is a quickly drawn scheme just to illustrate it better (green-suffixed explicitly "
                    },
                    {
                      "type": "text",
                      "text": "static",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", intermediates all "
                    },
                    {
                      "type": "text",
                      "text": "auto",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", SharedUI currently "
                    },
                    {
                      "type": "text",
                      "text": "dynamic",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and working with all targets, setting it "
                    },
                    {
                      "type": "text",
                      "text": "auto",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " will result in that duplication error)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9759b544-821a-4bef-9367-1b92c6eab77d",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "The duplication shouldn't really be in a single binary, my guesses were that :one: app resolves statically and SnapshotTests dynamically for some reason and building both would be a duplicate building or :two: something more internal I can't really think about. I'd say if both `App` and `SnapshotTests` targets would ask for a `static` build of `SharedUI`, using a single one to link into both should be okay. :thinking_face: `SnapshotTests` have a Build phase dependency on `App` but only because it uses it to run the tests, there's no linking in between them.",
          "ts": "1654885292.049109",
          "thread_ts": "1654883623.808659",
          "edited": {
            "user": "U03JPFQNX5K",
            "ts": "1654885381.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oqI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The duplication shouldn't really be in a single binary, my guesses were that "
                    },
                    {
                      "type": "emoji",
                      "name": "one",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " app resolves statically and SnapshotTests dynamically for some reason and building both would be a duplicate building or "
                    },
                    {
                      "type": "emoji",
                      "name": "two",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " something more internal I can't really think about. I'd say if both "
                    },
                    {
                      "type": "text",
                      "text": "App",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "text",
                      "text": "SnapshotTests",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " targets would ask for a "
                    },
                    {
                      "type": "text",
                      "text": "static",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " build of "
                    },
                    {
                      "type": "text",
                      "text": "SharedUI",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", using a single one to link into both should be okay. "
                    },
                    {
                      "type": "emoji",
                      "name": "thinking_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "SnapshotTests",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " have a Build phase dependency on "
                    },
                    {
                      "type": "text",
                      "text": "App",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " but only because it uses it to run the tests, there's no linking in between them."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f12c2478-7729-48f1-be08-e39bf0c6c422",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "So during test execution the test bundle will be loaded into the app’s address space, so that’s where duplicated symbols *can* be an issue. We are bit careful about these issues because they can surface as crashes on launch when executing tests that are very confusing to developers.",
          "ts": "1654885772.261149",
          "thread_ts": "1654883623.808659",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "IJJK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So during test execution the test bundle will be loaded into the app’s address space, so that’s where duplicated symbols "
                    },
                    {
                      "type": "text",
                      "text": "can",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " be an issue. We are bit careful about these issues because they can surface as crashes on launch when executing tests that are very confusing to developers."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "66633908-b114-41a5-beab-089f04a0a5cc",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "Ah, I see, different setting of Host App unlike Target App in UI tests, that makes total sense then :thinking_face: I'll definitely try more shuffling with configuration, maybe some workaround will be possible. Not sure whether we're just doing something unique, or just can't figure out how to put stuff together correctly, as the linker expects. :smile: Anyways, thanks very much for your precious help and insight during these two days :raised_hands: Have a nice rest of the Dub Dub!",
          "ts": "1654886444.801759",
          "thread_ts": "1654883623.808659",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 1,
              "users": [
                "U03J7H4LJ5N"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KYixm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ah, I see, different setting of Host App unlike Target App in UI tests, that makes total sense then "
                    },
                    {
                      "type": "emoji",
                      "name": "thinking_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " I'll definitely try more shuffling with configuration, maybe some workaround will be possible. Not sure whether we're just doing something unique, or just can't figure out how to put stuff together correctly, as the linker expects. "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " Anyways, thanks very much for your precious help and insight during these two days "
                    },
                    {
                      "type": "emoji",
                      "name": "raised_hands",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " Have a nice rest of the Dub Dub!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JSFUKL2U\u003e asked\n\u0026gt; Are you planing to add support for importing custom modules to Package.swift manifest file? \u003chttp://tuist.io|tuist.io\u003e can handle PackageDescriptionHelpers where user can write complicated scenario and\n\u0026gt; in the end import to manifest file and call\n\u0026gt; smth like \"\u003chttp://Project.app|Project.app\u003e(liOS], named: \"MyGreatApp\")\n\u0026gt; \n\u0026gt; The reason is to avoid massive files with\n\u0026gt; manifests. Some manifest can contains\n\u0026gt; more than 1000 loc (Firebase/AppCenter\n\u0026gt; and etc)!",
      "ts": "1654883665.216659",
      "thread_ts": "1654883665.216659",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654883990.132579",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "WDl",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JSFUKL2U"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Are you planing to add support for importing custom modules to Package.swift manifest file? tuist.io can handle PackageDescriptionHelpers where user can write complicated scenario and\\nin the end import to manifest file and call\\nsmth like \\\"Project.app(liOS], named: \\\"MyGreatApp\\\")\\n\\nThe reason is to avoid massive files with\\nmanifests. Some manifest can contains\\nmore than 1000 loc (Firebase\\/AppCenter\\nand etc)!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6a6d67b4-80a1-4e24-a33c-257ce0bac93e",
          "type": "message",
          "user": "U03HES8111T",
          "text": "This sounds like a great idea, and it is something that has had some discussion in the Package Manager section of the Swift forums in the past.\n\nAny developments in this area would go through the Swift Evolution Process, and getting involved in the discussions at \u003chttps://forums.swift.org\u003e would be a good way to influence such a feature.",
          "ts": "1654883699.883949",
          "thread_ts": "1654883665.216659",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "deM5p",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This sounds like a great idea, and it is something that has had some discussion in the Package Manager section of the Swift forums in the past.\n\nAny developments in this area would go through the Swift Evolution Process, and getting involved in the discussions at "
                    },
                    {
                      "type": "link",
                      "url": "https://forums.swift.org",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " would be a good way to influence such a feature."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0ce37c16-b55b-4b7c-907c-00c0a73f6ea2",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Ok, I will!",
          "ts": "1654883990.132579",
          "thread_ts": "1654883665.216659",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "yyZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok, I will!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "6ef57c46-3ddc-4287-9e2b-10f41246c080",
      "type": "message",
      "user": "U03HL5ERG5S",
      "text": "Hello, Everyone! We're coming to the end of the Swift Package Manager portion of the Q\u0026amp;A Digital Lounge at WWDC 22. Thank you for all your questions, and I hope you got answers for all of them.\nWe;'re going to be switching over to the Xcode Q\u0026amp;A session in just a little bit. The engineers will try to answer any remaining questions. Thank you!\n:wwdc22:",
      "ts": "1654884066.190009",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "pray",
          "count": 1,
          "users": [
            "U03HVE01C6A"
          ]
        },
        {
          "name": "gratitude-spasibo",
          "count": 3,
          "users": [
            "U03JSFUKL2U",
            "U03J22AU6DQ",
            "U03HWQNU65D"
          ]
        },
        {
          "name": "gratitude-merci",
          "count": 1,
          "users": [
            "U03HVE01C6A"
          ]
        },
        {
          "name": "package",
          "count": 1,
          "users": [
            "U03J7H4LJ5N"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "mcr",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hello, Everyone! We're coming to the end of the Swift Package Manager portion of the Q\u0026A Digital Lounge at WWDC 22. Thank you for all your questions, and I hope you got answers for all of them.\nWe;'re going to be switching over to the Xcode Q\u0026A session in just a little bit. The engineers will try to answer any remaining questions. Thank you!\n"
                },
                {
                  "type": "emoji",
                  "name": "wwdc22",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JSFUKL2U\u003e asked\n\u0026gt; Can I add a new platform support and contribute it to SPM? Or new features in SPM can be added only by SPM Workgroup member?",
      "ts": "1654884066.850189",
      "thread_ts": "1654884066.850189",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654884192.554659",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "vjl",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JSFUKL2U"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can I add a new platform support and contribute it to SPM? Or new features in SPM can be added only by SPM Workgroup member?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "779feb05-77c6-4e3c-b718-f2c0ccacca85",
          "type": "message",
          "user": "U03H36Q9X3R",
          "text": "SwiftPM, and more broadly the Swift project, are open source projects, and folks are welcome to make contributions. Adding a new platform support may require changes beyond SwiftPM itself, and this is something we can discuss on the Swift forums \u003chttp://forums.swift.org|forums.swift.org\u003e or on github \u003chttps://github.com/apple/swift-package-manager/\u003e.",
          "ts": "1654884107.203529",
          "thread_ts": "1654884066.850189",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03JSFUKL2U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "q4M",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "SwiftPM, and more broadly the Swift project, are open source projects, and folks are welcome to make contributions. Adding a new platform support may require changes beyond SwiftPM itself, and this is something we can discuss on the Swift forums "
                    },
                    {
                      "type": "link",
                      "url": "http://forums.swift.org",
                      "text": "forums.swift.org"
                    },
                    {
                      "type": "text",
                      "text": " or on github "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-package-manager/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bca22c01-6604-4948-97ce-3d3e51fa0e13",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Great! Thanks a lot!",
          "ts": "1654884192.554659",
          "thread_ts": "1654884066.850189",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OHZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Great! Thanks a lot!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "user": "U03HL553PNG",
      "text": "set the channel topic: Q\u0026amp;A: Xcode",
      "ts": "1654884134.463969",
      "subtype": "channel_topic",
      "topic": "Q\u0026amp;A: Xcode",
      "replace_original": false,
      "delete_original": false,
      "blocks": null
    },
    {
      "client_msg_id": "bd0adadc-e71b-4740-8279-9d2f383ae2f4",
      "type": "message",
      "user": "U03HES8CXHB",
      "text": "Hi everyone! Welcome to *Xcode Open Hours*. We have several engineers who work on Xcode to answer your questions. For questions, use the lightning bolt icon :workflowbolt: at the lower left and select *Ask a question*. Your questions are shared with the Xcode engineers who will do their best to get all your questions answered. As a reminder, please keep the content professional and within our code of conduct.\n\nFor topics not covered here, you can post your questions in the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e.",
      "ts": "1654884183.106559",
      "attachments": [
        {
          "fallback": "Apple Developer Forums",
          "id": 1,
          "title": "Apple Developer Forums",
          "title_link": "http://developer.apple.com/forums/",
          "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
          "service_name": "developer.apple.com",
          "service_icon": "https://forums.developer.apple.com/forums/build-06082022-1/public/assets/favicon.ico",
          "from_url": "http://developer.apple.com/forums/",
          "original_url": "http://developer.apple.com/forums/",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "jIw",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Hi everyone! Welcome to "
                },
                {
                  "type": "text",
                  "text": "Xcode Open Hours",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": ". We have several engineers who work on Xcode to answer your questions. For questions, use the lightning bolt icon "
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " at the lower left and select "
                },
                {
                  "type": "text",
                  "text": "Ask a question",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": ". Your questions are shared with the Xcode engineers who will do their best to get all your questions answered. As a reminder, please keep the content professional and within our code of conduct.\n\nFor topics not covered here, you can post your questions in the "
                },
                {
                  "type": "link",
                  "url": "http://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J20E7UBV\u003e asked\n\u0026gt; Does the iOS simulator run in x86_64?  I notice that I get one set of build errors when building to a Simulator but not to a practical device?  If it helps, I’m on Apple Silicon running Xcode natively.",
      "ts": "1654884270.558319",
      "thread_ts": "1654884270.558319",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654889329.428139",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "omh7b",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J20E7UBV"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Does the iOS simulator run in x86_64?  I notice that I get one set of build errors when building to a Simulator but not to a practical device?  If it helps, I\\u2019m on Apple Silicon running Xcode natively.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "7077ea9d-67bb-4d99-98b4-ef7261c0a9a9",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "The simulator runs in the native architecture. Sounds like you are using a third party library that hasn’t been updated to support arm64 in the simulator. If that’s the case, we encourage you to contact the developers of this library to make sure they update for arm64 when targeting the simulator. In the meanwhile, if that library is not essential to build your app in the simulator, you can conditionally remove this library when targeting the simulator with `#if targetEnvironment(simulator)`.",
          "ts": "1654884328.689819",
          "thread_ts": "1654884270.558319",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J20E7UBV"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "49eMu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The simulator runs in the native architecture. Sounds like you are using a third party library that hasn’t been updated to support arm64 in the simulator. If that’s the case, we encourage you to contact the developers of this library to make sure they update for arm64 when targeting the simulator. In the meanwhile, if that library is not essential to build your app in the simulator, you can conditionally remove this library when targeting the simulator with "
                    },
                    {
                      "type": "text",
                      "text": "#if targetEnvironment(simulator)",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6363FB78-A7D4-4ADF-B78D-4A1030994BF2",
          "type": "message",
          "user": "U03J20E7UBV",
          "text": "Thank you!!!",
          "ts": "1654885297.824119",
          "thread_ts": "1654884270.558319",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "e6N",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank "
                    },
                    {
                      "type": "text",
                      "text": "you!!!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6c93c674-bae4-4859-8fd9-706215d5f30a",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Aren't older sims (\u0026lt;=iOS 13) x86 only?",
          "ts": "1654889329.428139",
          "thread_ts": "1654884270.558319",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "44PL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Aren't older sims (\u003c=iOS 13) x86 only?"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JUPYKNSY\u003e asked\n\u0026gt; Hey there! We have automated the process of creating VM images of macOS to use in our CI/CD pipeline. This includes multiple Xcode versions being installed using cli tools like xcode-install or xcodes. \n\u0026gt; \n\u0026gt; Since Xcode 14 doesn't ship with all simulator runtimes by default (watchOS/tvOS), is there a easy way to download the missing runtimes using a command?  :)",
      "ts": "1654884278.992219",
      "thread_ts": "1654884278.992219",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654884417.145609",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "HGr",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JUPYKNSY"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hey there! We have automated the process of creating VM images of macOS to use in our CI\\/CD pipeline. This includes multiple Xcode versions being installed using cli tools like xcode-install or xcodes. \\n\\nSince Xcode 14 doesn't ship with all simulator runtimes by default (watchOS\\/tvOS), is there a easy way to download the missing runtimes using a command?  :)\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "7a4a588a-63c3-4a0e-a736-866a59b267c9",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "There are a few ways to do this. The simplest would be to  use the `xcodebuild -downloadAllPlatforms` command to download and install the additional simulator runtimes. Alternatively, the individual runtime images are available to download from \u003chttps://developer.apple.com/download/all\u003e. You can install them via the `xcrun simctl runtime add` command. More information and instructions are available here: \u003chttps://developer.apple.com/documentation/xcode/installing-additional-simulator-runtimes\u003e",
          "ts": "1654884295.514699",
          "thread_ts": "1654884278.992219",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03JUPYKNSY",
                "U03HVE965FY"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7KRe2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There are a few ways to do this. The simplest would be to  use the "
                    },
                    {
                      "type": "text",
                      "text": "xcodebuild -downloadAllPlatforms",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " command to download and install the additional simulator runtimes. Alternatively, the individual runtime images are available to download from "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/download/all",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ". You can install them via the "
                    },
                    {
                      "type": "text",
                      "text": "xcrun simctl runtime add",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " command. More information and instructions are available here: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/installing-additional-simulator-runtimes",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "037e6b1c-a10d-4b2c-b482-6684b483a057",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Similarly, is there a way to remove runtimes when added?",
          "ts": "1654884333.618199",
          "thread_ts": "1654884278.992219",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XxO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Similarly, is there a way to remove runtimes when added?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "55ddd014-2e93-4034-9f13-dcd98729c054",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Yes! You can use the `xcrun simctl runtime delete` command to do so.",
          "ts": "1654884389.451889",
          "thread_ts": "1654884278.992219",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2B=r",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes! You can use the "
                    },
                    {
                      "type": "text",
                      "text": "xcrun simctl runtime delete",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " command to do so."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "633c52ea-d5b9-4874-b828-01bf68e57090",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Or you can delete them via the Platforms preference pane in Xcode.",
          "ts": "1654884417.145609",
          "thread_ts": "1654884278.992219",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "a3iR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Or you can delete them via the Platforms preference pane in Xcode."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03K8US1GD7\u003e asked\n\u0026gt; Using codesign to extract the entitlements plist from an app is broken on Monterey, we are getting a weird dictionary like this. Is there an alternative to codesign for this workflow? Is this expected to fix in Ventura?\n\u0026gt; \n\u0026gt; Command used: `/usr/bin/codesign -d --entitlements - \u0026lt;appName\u0026gt;.app`\n\u0026gt; \n\u0026gt; ```\n\u0026gt; [Dict]\n\u0026gt; \t[Key] application-identifier\n\u0026gt; \t[Value]\n\u0026gt; \t\t[String] \u0026lt;appID\u0026gt;\n\u0026gt; \t[Key] com.apple.developer.team-identifier\n\u0026gt; \t[Value]\n\u0026gt; \t\t[String] \u0026lt;teamID\u0026gt;\n\u0026gt; \t[Key] get-task-allow\n\u0026gt; \t[Value]\n\u0026gt; \t\t[Bool] true\n\u0026gt; \t[Key] keychain-access-groups\n\u0026gt; \t[Value]\n\u0026gt; \t\t[Array]\n\u0026gt; \t\t\t[String] \u0026lt;appID\u0026gt;\n\u0026gt; ```",
      "ts": "1654884322.884169",
      "thread_ts": "1654884322.884169",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654886832.895459",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "iYdI",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K8US1GD7"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Using codesign to extract the entitlements plist from an app is broken on Monterey, we are getting a weird dictionary like this. Is there an alternative to codesign for this workflow? Is this expected to fix in Ventura?\\n\\nCommand used: `\\/usr\\/bin\\/codesign -d --entitlements - \u003cappName\u003e.app`\\n\\n```\\n[Dict]\\n\\t[Key] application-identifier\\n\\t[Value]\\n\\t\\t[String] \u003cappID\u003e\\n\\t[Key] com.apple.developer.team-identifier\\n\\t[Value]\\n\\t\\t[String] \u003cteamID\u003e\\n\\t[Key] get-task-allow\\n\\t[Value]\\n\\t\\t[Bool] true\\n\\t[Key] keychain-access-groups\\n\\t[Value]\\n\\t\\t[Array]\\n\\t\\t\\t[String] \u003cappID\u003e\\n```\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "faf6e1c9-fa96-4fb1-9510-615e8de09bb2",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "The output you're seeing is a more user readable form that was introduced in Monterey. You can still get the XML output you're used to by passing the `--xml` flag to `codesign`.",
          "ts": "1654884329.174079",
          "thread_ts": "1654884322.884169",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4VCw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The output you're seeing is a more user readable form that was introduced in Monterey. You can still get the XML output you're used to by passing the "
                    },
                    {
                      "type": "text",
                      "text": "--xml",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " flag to "
                    },
                    {
                      "type": "text",
                      "text": "codesign",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b4423f2b-b188-403e-9334-9eccb7cc0efb",
          "type": "message",
          "user": "U03K8US1GD7",
          "text": "But that output is a single line xml and not properly formatted as it used to be in bigsur. Outputting that into a plist file file is creating a corrupted file.",
          "ts": "1654884544.398279",
          "thread_ts": "1654884322.884169",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Gug",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "But that output is a single line xml and not properly formatted as it used to be in bigsur. Outputting that into a plist file file is creating a corrupted file."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e5c351f3-d4c1-4ac8-8ddb-706145733d3e",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "There is an issue we're tracking where the output contains a NUL character at the end, but if you remove that you'll have a valid plist. Another option is to use the `SecStaticCode` API to retrieve this programatically.",
          "ts": "1654885874.814319",
          "thread_ts": "1654884322.884169",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5dU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There is an issue we're tracking where the output contains a NUL character at the end, but if you remove that you'll have a valid plist. Another option is to use the "
                    },
                    {
                      "type": "text",
                      "text": "SecStaticCode",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " API to retrieve this programatically."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4b809b81-dac6-440f-855e-2cecc95034a9",
          "type": "message",
          "user": "U03K8US1GD7",
          "text": "Ok. `SecStaticCode` won’t work for our workflow. Looks like removing the final Nul character is working. Maybe we can work that into our script to get a valid plist.",
          "ts": "1654886832.895459",
          "thread_ts": "1654884322.884169",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7s=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok. "
                    },
                    {
                      "type": "text",
                      "text": "SecStaticCode",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " won’t work for our workflow. Looks like removing the final Nul character is working. Maybe we can work that into our script to get a valid plist."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J1UX2CQK\u003e asked\n\u0026gt; I see there's now a way to submit builds for notarization from non-Macs (the new REST api). That's super awesome \u0026amp; will definitely unblock some work I've been doing on our distribution process. Is there a way to staple the notarization ticket to our binary on Linux/non-Macs in general? \n\u0026gt; \n\u0026gt; If not, notarization workflows still need to find a cloud-based Mac somewhere.",
      "ts": "1654884358.387159",
      "thread_ts": "1654884358.387159",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654885773.835949",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "QRg",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J1UX2CQK"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I see there's now a way to submit builds for notarization from non-Macs (the new REST api). That's super awesome \u0026 will definitely unblock some work I've been doing on our distribution process. Is there a way to staple the notarization ticket to our binary on Linux\\/non-Macs in general? \\n\\nIf not, notarization workflows still need to find a cloud-based Mac somewhere.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "512df005-1254-4cef-a725-19717129ed45",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "If you're notarizing an application package, you can grab the ticket directly from CloudKit by reproducing the call that `stapler` uses. You can see that call by running the tool in verbose mode. However, you'd have to calculate the cdHash manually. We'd welcome your \u003chttps://feedbackassistant.apple.com|feedback\u003e if you'd like to see improvements to this process .",
          "ts": "1654884366.062649",
          "thread_ts": "1654884358.387159",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "05c",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you're notarizing an application package, you can grab the ticket directly from CloudKit by reproducing the call that "
                    },
                    {
                      "type": "text",
                      "text": "stapler",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " uses. You can see that call by running the tool in verbose mode. However, you'd have to calculate the cdHash manually. We'd welcome your "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": "feedback"
                    },
                    {
                      "type": "text",
                      "text": " if you'd like to see improvements to this process ."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d509c941-37ea-47b1-a8a0-5d224d9e1458",
          "type": "message",
          "user": "U03J1UX2CQK",
          "text": "Thank you! Feedback: FB10162550 -- apologies for the poor title, I hit submit too early :grimacing:",
          "ts": "1654885459.603499",
          "thread_ts": "1654884358.387159",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "HPde5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you! Feedback: FB10162550 -- apologies for the poor title, I hit submit too early "
                    },
                    {
                      "type": "emoji",
                      "name": "grimacing",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "20650630-08cd-4e5b-918f-0ba901a405f3",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Thank you!",
          "ts": "1654885773.835949",
          "thread_ts": "1654884358.387159",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TyCys",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRPWSDJ4\u003e asked\n\u0026gt; I'm looking to add testing to my SwiftUI multiplatform app. What's the best approach. Is it XCTest? XCode Cloud? Or something else?",
      "ts": "1654884388.623259",
      "thread_ts": "1654884388.623259",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654884919.823259",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Cr2",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRPWSDJ4"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I'm looking to add testing to my SwiftUI multiplatform app. What's the best approach. Is it XCTest? XCode Cloud? Or something else?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ac4e4132-d20f-47f2-b690-f659f807f63c",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "You should start locally with XCTest before using Xcode Cloud. We recommend you to add some unit tests and UI tests first and once you are happy with that and your tests pass in your Mac, you can configure Xcode Cloud to run your tests.\nRemember writing tests is a process that never ends, so do it incrementally, here are some tips:\n• identify what’s most important to test on your app and start from there\n• when you add new features or fix some bugs in your app, make sure you also write tests to avoid regressions in the future",
          "ts": "1654884425.871099",
          "thread_ts": "1654884388.623259",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JEEUJPMJ",
                "U03JRPWSDJ4"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "reE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You should start locally with XCTest before using Xcode Cloud. We recommend you to add some unit tests and UI tests first and once you are happy with that and your tests pass in your Mac, you can configure Xcode Cloud to run your tests.\nRemember writing tests is a process that never ends, so do it incrementally, here are some tips:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"identify what\\u2019s most important to test on your app and start from there\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"when you add new features or fix some bugs in your app, make sure you also write tests to avoid regressions in the future\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e4c30ad6-4ead-4709-a232-8b073ff32ae6",
          "type": "message",
          "user": "U03JRPWSDJ4",
          "text": "Perfect. Thank you",
          "ts": "1654884919.823259",
          "thread_ts": "1654884388.623259",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2WbQI",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Perfect. Thank you"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JT8KS7J8\u003e asked\n\u0026gt; Does Apple have a supported mechanism for re-signing already archived and signed Ad Hoc IPA apps?\n\u0026gt; For example, if we archive an (ad hoc) IPA, can it be re-signed by someone else if they have an Enterprise Distribution Certificate?",
      "ts": "1654884462.813129",
      "thread_ts": "1654884462.813129",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654885531.447529",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "wcy7",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JT8KS7J8"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Does Apple have a supported mechanism for re-signing already archived and signed Ad Hoc IPA apps?\\nFor example, if we archive an (ad hoc) IPA, can it be re-signed by someone else if they have an Enterprise Distribution Certificate?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "eadfcf6b-9209-4b8a-83e1-58d24d53f08d",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "We don't provide a supported mechanism for accomplishing this, but we'd welcome a \u003chttps://feedbackassistant.apple.com|feedback\u003e report describing the details of your use case.",
          "ts": "1654884475.053509",
          "thread_ts": "1654884462.813129",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oyv4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We don't provide a supported mechanism for accomplishing this, but we'd welcome a "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": "feedback"
                    },
                    {
                      "type": "text",
                      "text": " report describing the details of your use case."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0ff30f0d-48b5-4dd4-85ec-afd51daf1525",
          "type": "message",
          "user": "U03JEEUJPMJ",
          "text": "(Ahmed– forgive me if you already knew this, but: an IPA file is a zip archive, with the .app directory nested inside. Unless I’m missing something– when we’ve needed to do something similar: the .ipa can be extracted, Apple’s `codesign` program could be run on the .app directory, and the .ipa re-created by zipping back up the directory)",
          "ts": "1654885531.447529",
          "thread_ts": "1654884462.813129",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "point_up",
              "count": 1,
              "users": [
                "U03JG9L7NH5"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tg/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(Ahmed– forgive me if you already knew this, but: an IPA file is a zip archive, with the .app directory nested inside. Unless I’m missing something– when we’ve needed to do something similar: the .ipa can be extracted, Apple’s "
                    },
                    {
                      "type": "text",
                      "text": "codesign",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " program could be run on the .app directory, and the .ipa re-created by zipping back up the directory)"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JSPSLWG3\u003e asked\n\u0026gt; I am writing an iOS app using SwiftUI and was wondering what framework do you recommend to call Rest APIs from AWS? sample code would be good",
      "ts": "1654884468.536599",
      "thread_ts": "1654884468.536599",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654885557.600489",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 1,
          "users": [
            "U03JSPSLWG3"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "tiWao",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JSPSLWG3"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I am writing an iOS app using SwiftUI and was wondering what framework do you recommend to call Rest APIs from AWS? sample code would be good\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "38d9c101-aea3-4324-86e4-beb265db6aa4",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "You should take a look at \u003chttps://developer.apple.com/documentation/foundation/urlsession|URLSession\u003e in Foundation. There are also several open-source frameworks from the community that wrap URLSession in different ways. Take a look at \u003chttps://developer.apple.com/wwdc21/10095|Use async/await with URLSession\u003e from WWDC 2021 for some code samples.",
          "ts": "1654884497.446139",
          "thread_ts": "1654884468.536599",
          "attachments": [
            {
              "fallback": "Apple Developer: Use async/await with URLSession - WWDC21 - Videos - Apple Developer",
              "id": 1,
              "title": "Use async/await with URLSession - WWDC21 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/wwdc21/10095",
              "text": "Discover how you can adopt Swift concurrency in URLSession using async/await and AsyncSequence, and how you can apply Swift concurrency...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/119/4990/4990_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/wwdc21/10095",
              "original_url": "https://developer.apple.com/wwdc21/10095",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "UaoG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You should take a look at "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/foundation/urlsession",
                      "text": "URLSession"
                    },
                    {
                      "type": "text",
                      "text": " in Foundation. There are also several open-source frameworks from the community that wrap URLSession in different ways. Take a look at "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc21/10095",
                      "text": "Use async/await with URLSession"
                    },
                    {
                      "type": "text",
                      "text": " from WWDC 2021 for some code samples."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "44ac4211-6594-461f-9048-5482ae9182cc",
          "type": "message",
          "user": "U03JSPSLWG3",
          "text": "Thanks!",
          "ts": "1654885557.600489",
          "thread_ts": "1654884468.536599",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "EOX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "d5eb50c2-e657-419d-aea1-72bbad99e3f4",
      "type": "message",
      "user": "U03HL553PNG",
      "text": "\u003c@U03JSFUKL2U\u003e asked:\n\u0026gt; Add glob support for `Resource.copy()`!",
      "ts": "1654884520.138319",
      "thread_ts": "1654884520.138319",
      "reply_count": 4,
      "latest_reply": "1654886205.299259",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "i5A",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JSFUKL2U"
                },
                {
                  "type": "text",
                  "text": " asked:\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Add glob support for `Resource.copy()`!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "bcbe7ec9-13ef-4e64-a3c1-2a8844ee24bd",
          "type": "message",
          "user": "U03HES8111T",
          "text": "This is definitely a highly requested improvement, and is something that would be done through the Swift Evolution Process since it would require additions to the Swift Package manifest API.\n\nIf you have particular ideas on how it should be expressed in the manifest, please do raise the issue in the Package Manager section in \u003chttps://forums.swift.org\u003e.",
          "ts": "1654884665.978769",
          "thread_ts": "1654884520.138319",
          "parent_user_id": "U03HL553PNG",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "F=7CB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is definitely a highly requested improvement, and is something that would be done through the Swift Evolution Process since it would require additions to the Swift Package manifest API.\n\nIf you have particular ideas on how it should be expressed in the manifest, please do raise the issue in the Package Manager section in "
                    },
                    {
                      "type": "link",
                      "url": "https://forums.swift.org",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c5465d9a-349f-4ebd-946a-2ba53f79ed2e",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Thanks \u003c@U03HL553PNG\u003e :muscle:",
          "ts": "1654885540.012479",
          "thread_ts": "1654884520.138319",
          "parent_user_id": "U03HL553PNG",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fFHM5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HL553PNG"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "emoji",
                      "name": "muscle",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "53d12d5f-b2bf-4edb-a071-78f072516af6",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Ok, time to sign up to \u003chttp://forums.swift.org|forums.swift.org\u003e :smile:",
          "ts": "1654885558.176159",
          "thread_ts": "1654884520.138319",
          "parent_user_id": "U03HL553PNG",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "smiley",
              "count": 1,
              "users": [
                "U03HL553PNG"
              ]
            },
            {
              "name": "partying_face",
              "count": 1,
              "users": [
                "U03HES8111T"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mQH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok, time to sign up to "
                    },
                    {
                      "type": "link",
                      "url": "http://forums.swift.org",
                      "text": "forums.swift.org"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "eb549a90-fb5f-476f-af14-2525e44bd45b",
          "type": "message",
          "user": "U03HES8111T",
          "text": "That would be great.  Swift Package Manager (and all of Swift) really is a collaborative effort, and ideas (and code contributions!) from all members of the community help shape these kinds of features.  There are already some threads that have discussed this particular topic, so there may already be some ideas there to build off of.",
          "ts": "1654886205.299259",
          "thread_ts": "1654884520.138319",
          "parent_user_id": "U03HL553PNG",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "smiling_face_with_3_hearts",
              "count": 1,
              "users": [
                "U03JSFUKL2U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "98mVy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That would be great.  Swift Package Manager (and all of Swift) really is a collaborative effort, and ideas (and code contributions!) from all members of the community help shape these kinds of features.  There are already some threads that have discussed this particular topic, so there may already be some ideas there to build off of."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4PHHF7G\u003e asked\n\u0026gt; Hello! I'm really excited to use the new features in Swift 5.7 that improve the usability of existential types. Do these features require increasing my deployment target to iOS 16, or are they all at the compiler level?",
      "ts": "1654884554.834129",
      "thread_ts": "1654884554.834129",
      "is_starred": true,
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654902130.579099",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ret",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4PHHF7G"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hello! I'm really excited to use the new features in Swift 5.7 that improve the usability of existential types. Do these features require increasing my deployment target to iOS 16, or are they all at the compiler level?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a8cce011-9055-4a36-bfc0-0b44bbe4dddf",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "It’s a Swift feature, so it doesn’t require increasing the deployment target. You should be fine as long as you build using Swift 5.7+",
          "ts": "1654884567.256699",
          "thread_ts": "1654884554.834129",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JEEUJPMJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "m/lb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It’s a Swift feature, so it doesn’t require increasing the deployment target. You should be fine as long as you build using Swift 5.7+"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4ca63cea-68bc-48e2-abf5-6c9965317147",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "I should note that using generics in concert with the new existential type features _may_ require you to increase your deployment target. Essentially, if Swift can determine something statically you're free to use it on whatever OS you'd like. However, when Swift needs to make runtime calls (the big ones are casting with `is/as!/as?`!) you will need to use availability guards.",
          "ts": "1654901986.251799",
          "thread_ts": "1654884554.834129",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vv+x",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I should note that using generics in concert with the new existential type features "
                    },
                    {
                      "type": "text",
                      "text": "may",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " require you to increase your deployment target. Essentially, if Swift can determine something statically you're free to use it on whatever OS you'd like. However, when Swift needs to make runtime calls (the big ones are casting with "
                    },
                    {
                      "type": "text",
                      "text": "is/as!/as?",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "!) you will need to use availability guards."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "76e89643-5b0b-46e0-8d05-19fb4683fc98",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "So something that compiles:\n```let xs = [ \"Hello\" ] as any Collection\u0026lt;String\u0026gt;```\n",
          "ts": "1654902011.993289",
          "thread_ts": "1654884554.834129",
          "edited": {
            "user": "U03HWDCSCHX",
            "ts": "1654902036.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "MkFDG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So something that compiles:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"let xs = [ \\\"Hello\\\" ] as any Collection\u003cString\u003e\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": []
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9c2679c2-c93e-4f4d-92a2-49e7e1c1f749",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "But something that requires a deployment target bump:\n```let fail = Array\u0026lt;any Collection\u0026lt;String\u0026gt;\u0026gt;() // Requires runtime support to know the layout of `any Collection\u0026lt;String\u0026gt;````",
          "ts": "1654902130.579099",
          "thread_ts": "1654884554.834129",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BKn3+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "But something that requires a deployment target bump:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"let fail = Array\u003cany Collection\u003cString\u003e\u003e() \\/\\/ Requires runtime support to know the layout of `any Collection\u003cString\u003e`\"}],\"border\":0}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "448491f3-d70e-49f9-bde5-47424c68bd87",
      "type": "message",
      "user": "U03HL553PNG",
      "text": "\u003c@U03J1TRADJ7\u003e asked:\n\u0026gt; Beyond making sure that Debug Information Format is set to DWARF with dSYM File, is there anything else I need to do to make sure my Mac Catalyst crash logs symbolicate properly in the Xcode Organizer? I've been trying to track down an issue for a while without success. \u003chttps://developer.apple.com/forums/thread/704694\u003e\n",
      "ts": "1654884694.681719",
      "thread_ts": "1654884694.681719",
      "reply_count": 1,
      "latest_reply": "1654884888.984859",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "g8l1",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J1TRADJ7"
                },
                {
                  "type": "text",
                  "text": " asked:\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Beyond making sure that Debug Information Format is set to DWARF with dSYM File, is there anything else I need to do to make sure my Mac Catalyst crash logs symbolicate properly in the Xcode Organizer? I've been trying to track down an issue for a while without success. \"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/704694\"}]}"
            },
            {
              "type": "rich_text_section",
              "elements": []
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "54955122-402b-4599-8b50-83604a5b87b8",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Sorry to hear you're having trouble getting crash logs for this app. You're most likely hitting an Xcode bug that we are already tracking, but we'd would welcome your \u003chttps://feedbackassistant.apple.com|feedback\u003e with additional details about your project and your xcarchive. That may help us track down the cause of the bug.",
          "ts": "1654884888.984859",
          "thread_ts": "1654884694.681719",
          "parent_user_id": "U03HL553PNG",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J1TRADJ7"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+oRRH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sorry to hear you're having trouble getting crash logs for this app. You're most likely hitting an Xcode bug that we are already tracking, but we'd would welcome your "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": "feedback"
                    },
                    {
                      "type": "text",
                      "text": " with additional details about your project and your xcarchive. That may help us track down the cause of the bug."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ3E3GTF\u003e asked\n\u0026gt; I have a question for Xcode Q\u0026amp;A. I want to reset permission status for booted simulator. When I call `xcrun simctl privacy` commands, nothing happens. Example commands:\n\u0026gt; `xcrun simctl privacy booted reset contacts MY_APP_ID`\n\u0026gt; `xcrun simctl privacy booted reset all`\n\u0026gt; This issue happens for all types of permissions: contacts, notifications, reminders etc.\n\u0026gt; I submitted a bug report last year FB9737211 but the issue is not fixed in Xcode 14.\n\u0026gt; When the issue will be fixed?",
      "ts": "1654884759.172139",
      "thread_ts": "1654884759.172139",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654888415.051459",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "h1b",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ3E3GTF"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I have a question for Xcode Q\u0026A. I want to reset permission status for booted simulator. When I call `xcrun simctl privacy` commands, nothing happens. Example commands:\\n`xcrun simctl privacy booted reset contacts MY_APP_ID`\\n`xcrun simctl privacy booted reset all`\\nThis issue happens for all types of permissions: contacts, notifications, reminders etc.\\nI submitted a bug report last year FB9737211 but the issue is not fixed in Xcode 14.\\nWhen the issue will be fixed?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "4c20d0a1-4796-405d-9107-892d138cb54f",
          "type": "message",
          "user": "U03H36PM1BR",
          "text": "Thanks so much for filing a great Feedback for this. It looks like this issue is still being looked at internally. I see you've already provided sysdiagnoses, so thank you for this!! Could you please reproduce this issue again and this time run `xcrun simctl diagnose` and attach that to the Feedback issue? That might give us some more information to look at. Thank you!!",
          "ts": "1654884798.123779",
          "thread_ts": "1654884759.172139",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pSRFh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks so much for filing a great Feedback for this. It looks like this issue is still being looked at internally. I see you've already provided sysdiagnoses, so thank you for this!! Could you please reproduce this issue again and this time run "
                    },
                    {
                      "type": "text",
                      "text": "xcrun simctl diagnose",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and attach that to the Feedback issue? That might give us some more information to look at. Thank you!!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "29FBF037-B8B7-49D4-A145-8503F07F9739",
          "type": "message",
          "user": "U03HZ3E3GTF",
          "text": "Yes, I will do it within several hours.",
          "ts": "1654886774.869359",
          "thread_ts": "1654884759.172139",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03H36PM1BR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "aX9gc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes,"
                    },
                    {
                      "type": "text",
                      "text": " I "
                    },
                    {
                      "type": "text",
                      "text": "will"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "do"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " within "
                    },
                    {
                      "type": "text",
                      "text": "several"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "hours."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "35ccbba8-9bfe-403f-9a22-e321d66f152e",
          "type": "message",
          "user": "U03HZ3E3GTF",
          "text": "\u003c@U03H36PM1BR\u003e I've reproduced the issue and added a sysdiagnose file to the FB9737211.",
          "ts": "1654888269.325769",
          "thread_ts": "1654884759.172139",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BXDUO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03H36PM1BR"
                    },
                    {
                      "type": "text",
                      "text": " I've reproduced the issue and added a sysdiagnose file to the FB9737211."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c53a1706-90e3-4395-a47f-9672bebc222f",
          "type": "message",
          "user": "U03H36PM1BR",
          "text": "Thanks Daniil. To clarify, did you attach the output of `xcrun simctl diagnose`  or a regular `sysdiagnose` output? The 2 are different things and the former gives us a bit more information from the Simulator side of things. Both are important here. :slightly_smiling_face:",
          "ts": "1654888415.051459",
          "thread_ts": "1654884759.172139",
          "edited": {
            "user": "U03H36PM1BR",
            "ts": "1654888547.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BFqi",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks Daniil. To clarify, did you attach the output of "
                    },
                    {
                      "type": "text",
                      "text": "xcrun simctl diagnose",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "  or a regular "
                    },
                    {
                      "type": "text",
                      "text": "sysdiagnose",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " output? The 2 are different things and the former gives us a bit more information from the Simulator side of things. Both are important here. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JVMGR3RT\u003e asked\n\u0026gt; I was just flicking through the Xcode14 release notes and spotted this :\n\u0026gt; \n\u0026gt; Deprecations\n\u0026gt; Building iOS projects with deployment targets for the armv7, armv7s, and i386 architectures is no longer supported. (92831716)\n\u0026gt; \n\u0026gt; So once Apple require submissions to use Xcode14 (any idea when this might be?) will that mean we won't be able to deploy to devices older than iPhone 5s (the first arm8 phone) eg 5c, 5, 4s etc (that were all arm7) are excluded?",
      "ts": "1654884788.089939",
      "thread_ts": "1654884788.089939",
      "is_starred": true,
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 13,
      "latest_reply": "1654886200.762409",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "JsGUo",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JVMGR3RT"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I was just flicking through the Xcode14 release notes and spotted this :\\n\\nDeprecations\\nBuilding iOS projects with deployment targets for the armv7, armv7s, and i386 architectures is no longer supported. (92831716)\\n\\nSo once Apple require submissions to use Xcode14 (any idea when this might be?) will that mean we won't be able to deploy to devices older than iPhone 5s (the first arm8 phone) eg 5c, 5, 4s etc (that were all arm7) are excluded?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "04b36bc2-76d1-4002-900e-d74db300d636",
          "type": "message",
          "user": "U03HHPDDRK5",
          "text": "That’s correct.",
          "ts": "1654884807.973669",
          "thread_ts": "1654884788.089939",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "WQcoD",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That’s correct."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8d284722-d06c-48fa-8eab-d650f2b1740a",
          "type": "message",
          "user": "U03JEEUJPMJ",
          "text": "Edit: oh gosh, App Store submissions will cut off support!\n\n[Previously: what’s the recommended route forward for building for older devices, given that older versions of Xcode are prevented from running on newer macOS versions, and vice-versa?– somehow obtain older versions of macOS, virtualise them, and use an older Xcode version?]",
          "ts": "1654884937.262519",
          "thread_ts": "1654884788.089939",
          "edited": {
            "user": "U03JEEUJPMJ",
            "ts": "1654885010.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/iPX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Edit: oh gosh, App Store submissions will cut off support!\n\n[Previously: what’s the recommended route forward for building for older devices, given that older versions of Xcode are prevented from running on newer macOS versions, and vice-versa?– somehow obtain older versions of macOS, virtualise them, and use an older Xcode version?]"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7737abd9-bc72-4f6a-bd1d-b4aafa3b0c61",
          "type": "message",
          "user": "U03JVMGR3RT",
          "text": "Thanks \u003c@U03HHPDDRK5\u003e - when do you think requirement to submit with Xcode14 would come into force (roughly :smile: ).",
          "ts": "1654884951.109739",
          "thread_ts": "1654884788.089939",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nGBE/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HHPDDRK5"
                    },
                    {
                      "type": "text",
                      "text": " - when do you think requirement to submit with Xcode14 would come into force (roughly "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " )."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7f7ed0c9-f658-40d8-a67f-ac0d73b33474",
          "type": "message",
          "user": "U03J7BXV8KA",
          "text": "Sorry, we can't comment on any \"when\" questions.",
          "ts": "1654885148.155949",
          "thread_ts": "1654884788.089939",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JVMGR3RT"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "K7+M",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sorry, we can't comment on any \"when\" questions."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0c2a9f8f-0e9d-4948-9ae7-bb934cdd5c6f",
          "type": "message",
          "user": "U03J7BXV8KA",
          "text": "\u0026gt; obtain older versions of macOS, virtualise them, and use an older Xcode version?\nThis is a reasonable approach, yes.",
          "ts": "1654885196.954839",
          "thread_ts": "1654884788.089939",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pMN",
              "elements": [
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"obtain older versions of macOS, virtualise them, and use an older Xcode version?\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is a reasonable approach, yes."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5f0ad2a3-d7f8-442d-9885-983696b993eb",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "\u003c@U03JEEUJPMJ\u003e rest assured that when we do require a newer Xcode/SDK, we will announce that through the regular channels.  I believe there's usually an email from Developer Relations when those changes happen.",
          "ts": "1654885644.378639",
          "thread_ts": "1654884788.089939",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "DFilN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03JEEUJPMJ"
                    },
                    {
                      "type": "text",
                      "text": " rest assured that when we do require a newer Xcode/SDK, we will announce that through the regular channels.  I believe there's usually an email from Developer Relations when those changes happen."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3fc3ebb0-fe2b-420e-b2ce-b36c6d292172",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Another suggestion - in App Store Connect, you can also see your usage by OS version which is a good way to make that decision about when to cut off support for those devices.  You can't exactly tell (at least that I could figure out) what device they're on, but you can tell their OS version and since they will be capped at a certain OS, you'll know when it's safe to move your deployment target up.",
          "ts": "1654885729.955479",
          "thread_ts": "1654884788.089939",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JEEUJPMJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Y4FUq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Another suggestion - in App Store Connect, you can also see your usage by OS version which is a good way to make that decision about when to cut off support for those devices.  You can't exactly tell (at least that I could figure out) what device they're on, but you can tell their OS version and since they will be capped at a certain OS, you'll know when it's safe to move your deployment target up."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "083f470b-7363-42d6-afc6-1e422095ca1f",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "You can also \u003chttps://support.apple.com/en-us/HT208891|dual boot multiple macOS versions\u003e on the same computer without virtualization.",
          "ts": "1654885808.109769",
          "thread_ts": "1654884788.089939",
          "attachments": [
            {
              "fallback": "Apple Support: Use more than one version of macOS on a Mac",
              "id": 1,
              "title": "Use more than one version of macOS on a Mac",
              "title_link": "https://support.apple.com/en-us/HT208891",
              "text": "If you install a compatible macOS on a new volume of your built-in startup disk, your Mac can start up from either volume. It's an easy way to use a newer macOS while keeping a previously installed macOS for software that might require it.",
              "service_name": "Apple Support",
              "service_icon": "https://support.apple.com/favicon.ico",
              "from_url": "https://support.apple.com/en-us/HT208891",
              "original_url": "https://support.apple.com/en-us/HT208891",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JEEUJPMJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qOM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can also "
                    },
                    {
                      "type": "link",
                      "url": "https://support.apple.com/en-us/HT208891",
                      "text": "dual boot multiple macOS versions"
                    },
                    {
                      "type": "text",
                      "text": " on the same computer without virtualization."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fc9837c5-0259-413a-bd0a-a2818869d789",
          "type": "message",
          "user": "U03JVMGR3RT",
          "text": "Thanks for clarifying - the potential date is important for us as ware are currently working on a project that will launch end of Q1 2023.  If we were fairly certain older devices would not be supported by this point we could reduce the amount of QA required for the project.",
          "ts": "1654885846.775119",
          "thread_ts": "1654884788.089939",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=7zXG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for clarifying - the potential date is important for us as ware are currently working on a project that will launch end of Q1 2023.  If we were fairly certain older devices would not be supported by this point we could reduce the amount of QA required for the project."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b7c362ac-98a3-4d59-8f3f-7abb5272b7ea",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Yeah, I understand that's a tough call to make. :slightly_smiling_face:   You can also try reaching out to \u003chttp://developer.apple.com/contact\u003e to see if they have any more guidance but I suspect they'll probably say the same thing.",
          "ts": "1654885938.914889",
          "thread_ts": "1654884788.089939",
          "attachments": [
            {
              "fallback": "Sign In - Apple",
              "id": 1,
              "title": "Sign In - Apple",
              "title_link": "http://developer.apple.com/contact",
              "text": "Sign in with your Apple ID",
              "service_name": "idmsa.apple.com",
              "service_icon": "https://appleid.cdn-apple.com/daw/IDMSWebAuth/static/20Apr2022/images/favicon.ico",
              "from_url": "http://developer.apple.com/contact",
              "original_url": "http://developer.apple.com/contact",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Dv5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yeah, I understand that's a tough call to make. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "   You can also try reaching out to "
                    },
                    {
                      "type": "link",
                      "url": "http://developer.apple.com/contact",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " to see if they have any more guidance but I suspect they'll probably say the same thing."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8c6dcd5e-7adc-48cc-a626-1b98bf9e8715",
          "type": "message",
          "user": "U03JVMGR3RT",
          "text": "Thanks - I'll give them a shot but understand if it's not possible :smile:\n(this info would also help us guide the client towards only supporting back to iOS13 instead of 12 ! )",
          "ts": "1654886051.587939",
          "thread_ts": "1654884788.089939",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Jay",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks - I'll give them a shot but understand if it's not possible "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\n(this info would also help us guide the client towards only supporting back to iOS13 instead of 12 ! )"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7cf24709-e239-48b9-bb31-bb30d4991082",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "I don't know about you, but I love data-driven decisions.  So if I was your client and you showed me a cool pie chart with usage by OS version, that would definitely help me make that call!",
          "ts": "1654886103.252429",
          "thread_ts": "1654884788.089939",
          "edited": {
            "user": "U03HL553PNG",
            "ts": "1654886112.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uba",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I don't know about you, but I love data-driven decisions.  So if I was your client and you showed me a cool pie chart with usage by OS version, that would definitely help me make that call!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cdb314a2-d819-42f2-9523-c61d5455b8dd",
          "type": "message",
          "user": "U03JVMGR3RT",
          "text": ":laughing:\nBelieve me I have plenty of pie charts and infographics!\nEvery little bit of extra ammo helps :+1:",
          "ts": "1654886200.762409",
          "thread_ts": "1654884788.089939",
          "edited": {
            "user": "U03JVMGR3RT",
            "ts": "1654886217.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ASC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "emoji",
                      "name": "laughing",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\nBelieve me I have plenty of pie charts and infographics!\nEvery little bit of extra ammo helps "
                    },
                    {
                      "type": "emoji",
                      "name": "+1",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JT8KS7J8\u003e asked\n\u0026gt; We've been having issues when adding new files to local Swift packages that's embedded into an Xcode project. Xcode crashes for the most part, and it's quite difficult to modify local Swift Packages this way. Was this issue addressed in Xcode 14?\n\u0026gt; \n\u0026gt; We filed a Radar ticket and posted about the issue on the dev forum as well; please find it here: \u003chttps://developer.apple.com/forums/thread/704568?login=true|https://developer.apple.com/forums/thread/704568?login=true\u003e\n\u0026gt; \n\u0026gt; Thank you!",
      "ts": "1654885036.684689",
      "thread_ts": "1654885036.684689",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654885099.051719",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "MZ=w",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JT8KS7J8"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We've been having issues when adding new files to local Swift packages that's embedded into an Xcode project. Xcode crashes for the most part, and it's quite difficult to modify local Swift Packages this way. Was this issue addressed in Xcode 14?\\n\\nWe filed a Radar ticket and posted about the issue on the dev forum as well; please find it here: \"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/704568?login=true\",\"text\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/704568?login=true\"},{\"type\":\"text\",\"text\":\"\\n\\nThank you!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "75187b9f-a902-4424-bf4a-756940466a0f",
          "type": "message",
          "user": "U03HES8111T",
          "text": "It looks like this issue was reported against 13.3, and it should already be addressed in Xcode 13.4.  If you are still seeing it in 13.4 or later, we would very much appreciate it if you could add the crash report to the feedback ticket you filed and send back as not fixed, or to file a new feedback ticket if the feedback system doesn't let you add to the original report.",
          "ts": "1654885099.051719",
          "thread_ts": "1654885036.684689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6OR/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It looks like this issue was reported against 13.3, and it should already be addressed in Xcode 13.4.  If you are still seeing it in 13.4 or later, we would very much appreciate it if you could add the crash report to the feedback ticket you filed and send back as not fixed, or to file a new feedback ticket if the feedback system doesn't let you add to the original report."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRPEC4AU\u003e asked\n\u0026gt; In Xcode 14 running on macOS Ventura, when I try to launch an app that uses CloudKit in Simulator, I get the following error: \n\u0026gt; \n\u0026gt; ------------------\n\u0026gt; dyld[6296]: Library not loaded: /usr/lib/swift/libswiftCloudKit.dylib\n\u0026gt;   Referenced from: \u0026lt;18DE50F3-6EE7-3075-AB2F-BFADE7C3496E\u0026gt; /Users/testuser/Library/Developer/CoreSimulator/Devices/33CB0140-D129-46AE-8D54-D3372393031B/data/Containers/Bundle/Application/3BD45E5E-19D4-4716-84A8-E0247CDCBF98/FSTestApp.app/FSTestApp\n\u0026gt;   Reason: tried: '/Users/testuser/Library/Developer/Xcode/DerivedData/FSTestApp-drxbwyfqohpnyqfrmpspvebmsjkp/Build/Products/Debug-iphonesimulator/libswiftCloudKit.dylib' (no such file), '/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime/Contents/Resources/RuntimeRoot/usr/lib/system/introspection/libswiftCloudKit.dylib' (no such file), '/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime/Contents/Resources/RuntimeRoot/usr/lib/swift/libswiftCloudKit.dylib' (no such file), '/usr/lib/swift/libswiftCloudKit.dylib' (no such file, not in dyld cache), '/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime/Contents/Resources/RuntimeRoot/usr/lib/libswiftCloudKit.dylib' (no such file)\n\u0026gt; ------------------\n\u0026gt; \n\u0026gt; The app runs without any problem on the actual device running iOS 16. Could this be a known issue?",
      "ts": "1654885061.381499",
      "thread_ts": "1654885061.381499",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654885150.659809",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "kwL",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRPEC4AU"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"In Xcode 14 running on macOS Ventura, when I try to launch an app that uses CloudKit in Simulator, I get the following error: \\n\\n------------------\\ndyld[6296]: Library not loaded: \\/usr\\/lib\\/swift\\/libswiftCloudKit.dylib\\n  Referenced from: \u003c18DE50F3-6EE7-3075-AB2F-BFADE7C3496E\u003e \\/Users\\/testuser\\/Library\\/Developer\\/CoreSimulator\\/Devices\\/33CB0140-D129-46AE-8D54-D3372393031B\\/data\\/Containers\\/Bundle\\/Application\\/3BD45E5E-19D4-4716-84A8-E0247CDCBF98\\/FSTestApp.app\\/FSTestApp\\n  Reason: tried: '\\/Users\\/testuser\\/Library\\/Developer\\/Xcode\\/DerivedData\\/FSTestApp-drxbwyfqohpnyqfrmpspvebmsjkp\\/Build\\/Products\\/Debug-iphonesimulator\\/libswiftCloudKit.dylib' (no such file), '\\/Applications\\/Xcode-beta.app\\/Contents\\/Developer\\/Platforms\\/iPhoneOS.platform\\/Library\\/Developer\\/CoreSimulator\\/Profiles\\/Runtimes\\/iOS.simruntime\\/Contents\\/Resources\\/RuntimeRoot\\/usr\\/lib\\/system\\/introspection\\/libswiftCloudKit.dylib' (no such file), '\\/Applications\\/Xcode-beta.app\\/Contents\\/Developer\\/Platforms\\/iPhoneOS.platform\\/Library\\/Developer\\/CoreSimulator\\/Profiles\\/Runtimes\\/iOS.simruntime\\/Contents\\/Resources\\/RuntimeRoot\\/usr\\/lib\\/swift\\/libswiftCloudKit.dylib' (no such file), '\\/usr\\/lib\\/swift\\/libswiftCloudKit.dylib' (no such file, not in dyld cache), '\\/Applications\\/Xcode-beta.app\\/Contents\\/Developer\\/Platforms\\/iPhoneOS.platform\\/Library\\/Developer\\/CoreSimulator\\/Profiles\\/Runtimes\\/iOS.simruntime\\/Contents\\/Resources\\/RuntimeRoot\\/usr\\/lib\\/libswiftCloudKit.dylib' (no such file)\\n------------------\\n\\nThe app runs without any problem on the actual device running iOS 16. Could this be a known issue?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "c489fe29-c14c-4b53-b9fa-494b5556b479",
          "type": "message",
          "user": "U03H36PM1BR",
          "text": "Hi there! Thanks for the great question! I believe this issue is noted on the Xcode 14 Beta Release Notes page at \u003chttps://developer.apple.com/documentation/xcode-release-notes/xcode-14-release-notes\u003e:\n```Apps won't launch in simulator and the following error occurs when viewing Xcode's Target Output: Library not loaded: /usr/lib/swift/libswiftCloudKit.dylib (94331191)\nWorkaround: Set your app's minimum deployment target to iOS 16, tvOS 16, or watchOS 9.```\nHope that helps!!",
          "ts": "1654885150.659809",
          "thread_ts": "1654885061.381499",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zF+0e",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi there! Thanks for the great question! I believe this issue is noted on the Xcode 14 Beta Release Notes page at "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode-release-notes/xcode-14-release-notes",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ":\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"Apps won't launch in simulator and the following error occurs when viewing Xcode's Target Output: Library not loaded: \\/usr\\/lib\\/swift\\/libswiftCloudKit.dylib (94331191)\\nWorkaround: Set your app's minimum deployment target to iOS 16, tvOS 16, or watchOS 9.\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hope that helps!!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JLTMSAV7\u003e asked\n\u0026gt; Xcode question. First beta of Xcode 14 seems to include SDK and simulator only for iOS 16. It doesn’t seem to be possible to install and use previous SDK-s and simulators? Can we expect this to be added in a future seed?",
      "ts": "1654885562.903359",
      "thread_ts": "1654885562.903359",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654885905.682919",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "AEdMJ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JLTMSAV7"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Xcode question. First beta of Xcode 14 seems to include SDK and simulator only for iOS 16. It doesn\\u2019t seem to be possible to install and use previous SDK-s and simulators? Can we expect this to be added in a future seed?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "277e73f8-0344-4744-bee9-0ddb75f71203",
          "type": "message",
          "user": "U03HL5ECHUL",
          "text": "Previously released simulators are available by clicking on the '+' button in the lower left corner of the Platforms Preference pane. This will bring up a menu of platforms to choose a previously released simulator to download and install.\n\nWhile you can install previously released simulators, you cannot install older SDKs. Instead you should set the \"Minimum Deployment\" target for each of your app's platforms (in the General section of your app's target) to control the minimum OSes your app can run on and use availability macros to control usage of APIs that are only available on newer OS versions.",
          "ts": "1654885905.682919",
          "thread_ts": "1654885562.903359",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LxRZE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Previously released simulators are available by clicking on the '+' button in the lower left corner of the Platforms Preference pane. This will bring up a menu of platforms to choose a previously released simulator to download and install.\n\nWhile you can install previously released simulators, you cannot install older SDKs. Instead you should set the \"Minimum Deployment\" target for each of your app's platforms (in the General section of your app's target) to control the minimum OSes your app can run on and use availability macros to control usage of APIs that are only available on newer OS versions."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JEEUJPMJ\u003e asked\n\u0026gt; I have a workspace with two projects, and each project contains the same shared framework sub-project:\n\u0026gt; \n\u0026gt; Workspace\n\u0026gt; - Project: app A for macOS\n\u0026gt; –– Project: shared code B\n\u0026gt; - Project: app A for iOS\n\u0026gt; –– Project: shared code B\n\u0026gt; \n\u0026gt; What would you recommend for handling source control / git in this scenario; with shared frameworks? (git submodule for for the framework, no source control over the whole workspace etc?)\n\u0026gt; \n\u0026gt; (We've blissfully-ignorantly not used source control properly so far. :skull:)",
      "ts": "1654885613.732859",
      "thread_ts": "1654885613.732859",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 6,
      "latest_reply": "1654887716.164989",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "VrP7b",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JEEUJPMJ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I have a workspace with two projects, and each project contains the same shared framework sub-project:\\n\\nWorkspace\\n- Project: app A for macOS\\n\\u2013\\u2013 Project: shared code B\\n- Project: app A for iOS\\n\\u2013\\u2013 Project: shared code B\\n\\nWhat would you recommend for handling source control \\/ git in this scenario; with shared frameworks? (git submodule for for the framework, no source control over the whole workspace etc?)\\n\\n(We've blissfully-ignorantly not used source control properly so far. \"},{\"type\":\"emoji\",\"name\":\"skull\"},{\"type\":\"text\",\"text\":\")\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "0fd1a71f-7665-40d7-9c7a-6ee36da7b9b7",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "The answer is… it depends! if `shared code B` is also used by a different project that lives in another git repository, you should consider having it in its own repository. Then you can use git submodules, or even better, Swift Package Manager to import that into the different projects that use it.\nIf `shared code B` is not used from a different repository, then having it in the same repository is probably easier.",
          "ts": "1654885632.505659",
          "thread_ts": "1654885613.732859",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JEEUJPMJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "S=jSJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The answer is… it depends! if "
                    },
                    {
                      "type": "text",
                      "text": "shared code B",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is also used by a different project that lives in another git repository, you should consider having it in its own repository. Then you can use git submodules, or even better, Swift Package Manager to import that into the different projects that use it.\nIf "
                    },
                    {
                      "type": "text",
                      "text": "shared code B",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is not used from a different repository, then having it in the same repository is probably easier."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "26cdaf36-ba4a-4523-871e-5ef0e042d517",
          "type": "message",
          "user": "U03JEEUJPMJ",
          "text": "Just to check: _years ago_ I worked with a team on an Xcode-based project, and I remember a lot of headaches relating to source control (git) and merging _non-source-code_; `.xcodeproj` and `.xcworkspace` contents. More specifically, I have memories of having to merge Xcode-internal contents of files that …I didn’t understand.\n\nAre there any obvious recommendations these days re source control \u0026amp; these directories?\n\n(and: looking inside each of those _now_, I notably see an `xcuserdata` directory containing files seemingly specific to _me_. Is it advisable to check in _all but_ this `xcuserdata` directory? – i.e. check in everything else in the `.xcodeproj` and `.xcworkspace` directories. Or does Xcode reference these elsewhere, and …not having them in source control is _bad_.)",
          "ts": "1654886608.826169",
          "thread_ts": "1654885613.732859",
          "edited": {
            "user": "U03JEEUJPMJ",
            "ts": "1654886758.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "WSm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Just to check: "
                    },
                    {
                      "type": "text",
                      "text": "years ago",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " I worked with a team on an Xcode-based project, and I remember a lot of headaches relating to source control (git) and merging "
                    },
                    {
                      "type": "text",
                      "text": "non-source-code",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "; "
                    },
                    {
                      "type": "text",
                      "text": ".xcodeproj",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "text",
                      "text": ".xcworkspace",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " contents. More specifically, I have memories of having to merge Xcode-internal contents of files that …I didn’t understand.\n\nAre there any obvious recommendations these days re source control \u0026 these directories?\n\n(and: looking inside each of those "
                    },
                    {
                      "type": "text",
                      "text": "now",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", I notably see an "
                    },
                    {
                      "type": "text",
                      "text": "xcuserdata",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " directory containing files seemingly specific to "
                    },
                    {
                      "type": "text",
                      "text": "me",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". Is it advisable to check in "
                    },
                    {
                      "type": "text",
                      "text": "all but",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " this "
                    },
                    {
                      "type": "text",
                      "text": "xcuserdata",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " directory? – i.e. check in everything else in the "
                    },
                    {
                      "type": "text",
                      "text": ".xcodeproj",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "text",
                      "text": ".xcworkspace",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " directories. Or does Xcode reference these elsewhere, and …not having them in source control is "
                    },
                    {
                      "type": "text",
                      "text": "bad",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ".)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4f73fc94-c561-4a84-89b8-e379e401f3cb",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "That’s right, `xcuserdata` is only specific to you and you probably don’t want to share that with your team. It contains information like your local schemes, breakpoints, etc. I recommend you to put `xcuserdata/` in your `.gitignore` :slightly_smiling_face:",
          "ts": "1654887059.373469",
          "thread_ts": "1654885613.732859",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JEEUJPMJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5LLsB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That’s right, "
                    },
                    {
                      "type": "text",
                      "text": "xcuserdata",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is only specific to you and you probably don’t want to share that with your team. It contains information like your local schemes, breakpoints, etc. I recommend you to put "
                    },
                    {
                      "type": "text",
                      "text": "xcuserdata/",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in your "
                    },
                    {
                      "type": "text",
                      "text": ".gitignore",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f62d9b52-697a-495f-ac41-70115c6fc752",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "You can still share schemes, breakpoints and some other things if you want, most of these offer a checkbox to share them in their own editors",
          "ts": "1654887115.179639",
          "thread_ts": "1654885613.732859",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GULJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can still share schemes, breakpoints and some other things if you want, most of these offer a checkbox to share them in their own editors"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "57d2225a-b10a-4957-a169-ffde68ec5045",
          "type": "message",
          "user": "U03JEEUJPMJ",
          "text": "A) *OH!* That’s what the `Shared` checkbox refers to? (in the schemes window) :ok_hand::skin-tone-3:\n\nB) Ah, is the `xcshareddata` directory where those (shared schemes, breakpoints, etc) would live instead?",
          "ts": "1654887321.274509",
          "thread_ts": "1654885613.732859",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Cfh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "A) "
                    },
                    {
                      "type": "text",
                      "text": "OH!",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " That’s what the "
                    },
                    {
                      "type": "text",
                      "text": "Shared",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " checkbox refers to? (in the schemes window) "
                    },
                    {
                      "type": "emoji",
                      "name": "ok_hand",
                      "skin_tone": 3
                    },
                    {
                      "type": "text",
                      "text": "\n\nB) Ah, is the "
                    },
                    {
                      "type": "text",
                      "text": "xcshareddata",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " directory where those (shared schemes, breakpoints, etc) would live instead?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ddc1259a-f6c5-429e-9dcc-eade94684ff6",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "Yes and yes :smiley:",
          "ts": "1654887716.164989",
          "thread_ts": "1654885613.732859",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03JEEUJPMJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ubOF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes and yes "
                    },
                    {
                      "type": "emoji",
                      "name": "smiley",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J1U2G8PM\u003e asked\n\u0026gt; My project has a dependency on an older framework I have imported. XCode builds the project locally just fine, however XCode Cloud fails at 'xcodebuild archive', issuing a 'Precompile bridging header' error, due to a .h file I'm referring to, that's located in the framework bundle. The framework bundle is present in the Git repo. Am I overlooking something? Would there be a workaround to solve such an issue? Thank you!",
      "ts": "1654885906.242369",
      "thread_ts": "1654885906.242369",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654889156.315359",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "5i93y",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J1U2G8PM"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"My project has a dependency on an older framework I have imported. XCode builds the project locally just fine, however XCode Cloud fails at 'xcodebuild archive', issuing a 'Precompile bridging header' error, due to a .h file I'm referring to, that's located in the framework bundle. The framework bundle is present in the Git repo. Am I overlooking something? Would there be a workaround to solve such an issue? Thank you!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "26846d84-ad8b-4c18-a367-6e71e490abe0",
          "type": "message",
          "user": "U03HESABNTX",
          "text": "I recommend ensuring your project fully specifies the necessary dependencies between its targets, especially the target with the bridging header and the target with the header it failed to import. If you continue to experience this issue, please file a bug report including the full log of the failing build from clean so we can investigate further.",
          "ts": "1654885949.758549",
          "thread_ts": "1654885906.242369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JxxO+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I recommend ensuring your project fully specifies the necessary dependencies between its targets, especially the target with the bridging header and the target with the header it failed to import. If you continue to experience this issue, please file a bug report including the full log of the failing build from clean so we can investigate further."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "119d02bb-fe02-40fc-ad39-15716df5ef7d",
          "type": "message",
          "user": "U03J1U2G8PM",
          "text": "Thank you! When you say “fully specifies the necessary dependencies”, do you mean the Framework search paths in the build settings of the target? At the moment that setting specifies an absolute path (on my local machine).. I will try to poke around this and if I can’t resolve it I will file a FB.",
          "ts": "1654886438.344459",
          "thread_ts": "1654885906.242369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PZZiS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you! When you say “fully specifies the necessary dependencies”, do you mean the Framework search paths in the build settings of the target? At the moment that setting specifies an absolute path (on my local machine).. I will try to poke around this and if I can’t resolve it I will file a FB."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "231f2c68-cc08-4b53-b784-6ffa91500f91",
          "type": "message",
          "user": "U03HESABNTX",
          "text": "You can view the dependencies of a target in the build phases tab of the target editor, under the \"Dependencies\" section. If your scheme has \"Find Implicit Dependencies\" enabled, Xcode will also discover dependencies for you based on the contents of the \"Link Binary with Libraries\" section, and the \"OTHER_LD_FLAGS\" build setting.",
          "ts": "1654886654.357449",
          "thread_ts": "1654885906.242369",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J1U2G8PM"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8tpY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can view the dependencies of a target in the build phases tab of the target editor, under the \"Dependencies\" section. If your scheme has \"Find Implicit Dependencies\" enabled, Xcode will also discover dependencies for you based on the contents of the \"Link Binary with Libraries\" section, and the \"OTHER_LD_FLAGS\" build setting."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "873dac6c-dc63-4fd1-bed5-a150e75c24c7",
          "type": "message",
          "user": "U03J1U2G8PM",
          "text": "Indeed, the scheme has Find Implicit Dependencies enabled and the framework is under “Link Binary Wth Libraries” section of the target Build Phases… I should maybe try to add the framework explicitly in “Dependencies”?  Thanks again, much appreciated :slightly_smiling_face:",
          "ts": "1654886943.277429",
          "thread_ts": "1654885906.242369",
          "edited": {
            "user": "U03J1U2G8PM",
            "ts": "1654887035.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Y+f",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Indeed, the scheme has Find Implicit Dependencies enabled and the framework is under “Link Binary Wth Libraries” section of the target Build Phases… I should maybe try to add the framework explicitly in “Dependencies”?  Thanks again, much appreciated "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bbb2d804-b19e-4c39-9537-62db9cc9eea2",
          "type": "message",
          "user": "U03J1U2G8PM",
          "text": "Quick update: I just solved the issue.. I removed, then added back again the framework to the project. Not 100% certain but I suspect a path issue… Anyway, Wohooo! My very first Xcode Cloud build works! :partying_face:",
          "ts": "1654889156.315359",
          "thread_ts": "1654885906.242369",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xHheH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Quick update: I just solved the issue.. I removed, then added back again the framework to the project. Not 100% certain but I suspect a path issue… Anyway, Wohooo! My very first Xcode Cloud build works! "
                    },
                    {
                      "type": "emoji",
                      "name": "partying_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JBD8GCF8\u003e asked\n\u0026gt; hi, I am working on a big project and the building and run function work well on Xcode 12, but 2 months ago, we moved toward Xcode 13 and the nightmare began across almost of all members in teams. Even a small change in source file will lead to Xcode to indexing and pre-build which always take 30G memory on our MBP. We can do nothing at all. Each time the indexing and pre-building would take 2 ~3 hour to finish. Such insane, so we all disabled the indexing function by `defaults write com.apple.dt.XCode IDEIndexDisable 1`. Eventually, the Xcode would not freeze Mac, we can write code and easily build and run. through we lost the support of auto-complete from Xcode. \n\u0026gt; \n\u0026gt; Any advises to avoid consuming 30 G mem and freezing Mac and I still get auto-complete support meanwhile?\n\u0026gt; Thanks.",
      "ts": "1654885952.217269",
      "thread_ts": "1654885952.217269",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654886478.757139",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "v5z",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JBD8GCF8"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"hi, I am working on a big project and the building and run function work well on Xcode 12, but 2 months ago, we moved toward Xcode 13 and the nightmare began across almost of all members in teams. Even a small change in source file will lead to Xcode to indexing and pre-build which always take 30G memory on our MBP. We can do nothing at all. Each time the indexing and pre-building would take 2 ~3 hour to finish. Such insane, so we all disabled the indexing function by `defaults write com.apple.dt.XCode IDEIndexDisable 1`. Eventually, the Xcode would not freeze Mac, we can write code and easily build and run. through we lost the support of auto-complete from Xcode. \\n\\nAny advises to avoid consuming 30 G mem and freezing Mac and I still get auto-complete support meanwhile?\\nThanks.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "43198037-3823-4c53-b014-d05ac0f009c5",
          "type": "message",
          "user": "U03J7H72X5W",
          "text": "That memory usage definitely sounds like a bug. To help us determine the root cause of the issue, could you file a bugreport on \u003chttps://feedbackassistant.apple.com\u003e with the following information\n1. Let Xcode index for a while (~10 minutes), reproducing the issue you describe, gather a sysdiagnose using `sudo sysdiagnose` and attach it to the feedback. This should tell us which process is doing all the work\n2. Could you manually trigger an index build using the following command and capture its output using the following command `xcrun xcindex-test -project \u0026lt;path/to/your.xcodeproj or path/to/your.xcworkspace\u0026gt; -derivedDataPath index-data -- create-build-description -destination \u0026lt;run destination, eg. generic/platform=macOS\u0026gt; -scheme \u0026lt;scheme\u0026gt; -- prepare -all-targets -- index-files -all-targets -- quit \u0026amp;\u0026gt; index.log` wait for it to run, which might take a while because as you described your index takes long, and also attach it to the bug report.\n3. About 10 minutes into the `xcindex-test` run described above, could you capture another sysdiagnose (using the same procedure as in (1)) while taking a screen recording of `xcindex-test` output at the same time. This will allow us to correlate the work that `xcindex-test` is doing with entries in the log\n\nYou can also try the Xcode 14 beta, which includes improvements to indexing and see if your issue has already been fixed.\n\nIn your bug report, you can also mention that you brought this up in the Friday Slack lounge, so we can link the report to your question.",
          "ts": "1654885963.209499",
          "thread_ts": "1654885952.217269",
          "edited": {
            "user": "U03J7H72X5W",
            "ts": "1654886021.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9Gd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That memory usage definitely sounds like a bug. To help us determine the root cause of the issue, could you file a bugreport on "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " with the following information\n1. Let Xcode index for a while (~10 minutes), reproducing the issue you describe, gather a sysdiagnose using `sudo sysdiagnose` and attach it to the feedback. This should tell us which process is doing all the work\n2. Could you manually trigger an index build using the following command and capture its output using the following command "
                    },
                    {
                      "type": "text",
                      "text": "xcrun xcindex-test -project \u003cpath/to/your.xcodeproj or path/to/your.xcworkspace\u003e -derivedDataPath index-data -- create-build-description -destination \u003crun destination, eg. generic/platform=macOS\u003e -scheme \u003cscheme\u003e -- prepare -all-targets -- index-files -all-targets -- quit \u0026\u003e index.log",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " wait for it to run, which might take a while because as you described your index takes long, and also attach it to the bug report.\n3. About 10 minutes into the "
                    },
                    {
                      "type": "text",
                      "text": "xcindex-test",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " run described above, could you capture another sysdiagnose (using the same procedure as in (1)) while taking a screen recording of "
                    },
                    {
                      "type": "text",
                      "text": "xcindex-test",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " output at the same time. This will allow us to correlate the work that "
                    },
                    {
                      "type": "text",
                      "text": "xcindex-test",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is doing with entries in the log\n\nYou can also try the Xcode 14 beta, which includes improvements to indexing and see if your issue has already been fixed.\n\nIn your bug report, you can also mention that you brought this up in the Friday Slack lounge, so we can link the report to your question."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "34d8c481-f0ae-4cfc-b38a-6e1180b6571e",
          "type": "message",
          "user": "U03J7H72X5W",
          "text": "Sorry, I made a typo above. Step (2) should have `2\u0026gt;\u0026amp;1 | tee index.log` instead of `\u0026amp;\u0026gt; index.log`",
          "ts": "1654886478.757139",
          "thread_ts": "1654885952.217269",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "quB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sorry, I made a typo above. Step (2) should have "
                    },
                    {
                      "type": "text",
                      "text": "2\u003e\u00261 | tee index.log",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " instead of "
                    },
                    {
                      "type": "text",
                      "text": "\u0026\u003e index.log",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JN34N5TL\u003e asked\n\u0026gt; Hi, I saw this MXAppLaunchDiagnostic in the API diffs and was wondering if there was any more detail on what it's for? Does it give you a trace of app launches in production by including time spent for nodes within `callStackTree`?",
      "ts": "1654886052.415049",
      "thread_ts": "1654886052.415049",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 16,
      "latest_reply": "1654890782.040599",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "g0mcI",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JN34N5TL"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi, I saw this MXAppLaunchDiagnostic in the API diffs and was wondering if there was any more detail on what it's for? Does it give you a trace of app launches in production by including time spent for nodes within `callStackTree`?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "9a4e5831-18ef-4753-8a83-59541e413158",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "Hi there, thanks for the question! The new app launch diagnostic will provide you a backtrace for launches that exceed a duration threshold we define as a \"long launch\" and for a random subset of \"normal\" launches. The backtraces they contain are weighted, and can be used to determine where the majority of time is spent during the launch. Note that this diagnostic is sub-sampled in your user population, so not all devices running MetricKit will report that diagnostic.",
          "ts": "1654886131.298619",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vTla",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi there, thanks for the question! The new app launch diagnostic will provide you a backtrace for launches that exceed a duration threshold we define as a \"long launch\" and for a random subset of \"normal\" launches. The backtraces they contain are weighted, and can be used to determine where the majority of time is spent during the launch. Note that this diagnostic is sub-sampled in your user population, so not all devices running MetricKit will report that diagnostic."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dd778f87-542a-44a8-85cf-764c3cb59a82",
          "type": "message",
          "user": "U03JN34N5TL",
          "text": "I see, so long launch and normal launch information is merged? Is more weight given to long launches?",
          "ts": "1654886224.903249",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ix=H",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I see, so long launch and normal launch information is merged? Is more weight given to long launches?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d4a0be7e-e100-431e-bc22-186c86f8a64a",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "Indeed. Long launches will be the preference. Random launches will be sampled less frequently on enabled devices.",
          "ts": "1654886357.079439",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+e7T",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Indeed. Long launches will be the preference. Random launches will be sampled less frequently on enabled devices."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "959a22e0-814a-46eb-8428-2285f26f4d1b",
          "type": "message",
          "user": "U03JN34N5TL",
          "text": "Cool, good to know. Are there any WWDC talks that discuss this? Are there any other new sorts of production performance data that are available in iOS 16, aside from hang detection?",
          "ts": "1654887572.321339",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1fDfT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Cool, good to know. Are there any WWDC talks that discuss this? Are there any other new sorts of production performance data that are available in iOS 16, aside from hang detection?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "02a6d6d6-3f77-414a-974a-e0ee7f4dc621",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "We don't have a specific talk on these diagnostics this year. For production performance data, we've also introduced an API for extended launch telemetry via MetricKit, which will let you inform the system when its expected that you're taking a bit longer to launch.",
          "ts": "1654887799.622309",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nshE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We don't have a specific talk on these diagnostics this year. For production performance data, we've also introduced an API for extended launch telemetry via MetricKit, which will let you inform the system when its expected that you're taking a bit longer to launch."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "19801ee9-156c-4982-974a-02b081e8c03d",
          "type": "message",
          "user": "U03JN34N5TL",
          "text": "I see, it looks like `+extendLaunchMeasurementForTaskID:error:`  is part of that, and that appears to include a task ID. Are there further docs around what an `MXLaunchTaskID` is?",
          "ts": "1654888105.359969",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Kx6Xw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I see, it looks like "
                    },
                    {
                      "type": "text",
                      "text": "+extendLaunchMeasurementForTaskID:error:",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "  is part of that, and that appears to include a task ID. Are there further docs around what an "
                    },
                    {
                      "type": "text",
                      "text": "MXLaunchTaskID",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "776e94a7-5959-454b-b542-f8db4fb42421",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "Our documentation should have some information. \u003chttps://developer.apple.com/documentation/metrickit/mxmetricmanager/3979268-extendlaunchmeasurementfortaskid?language=objc\u003e\n\nI think we can probably do a better job explaining how to use it here though. If you can file a feedback, I can get someone looking at it :slightly_smiling_face:",
          "ts": "1654889878.515299",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "fEb",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Our documentation should have some information. "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/metrickit/mxmetricmanager/3979268-extendlaunchmeasurementfortaskid?language=objc",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n\nI think we can probably do a better job explaining how to use it here though. If you can file a feedback, I can get someone looking at it "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a80f6820-5d61-45ae-949f-c8d195de117b",
          "type": "message",
          "user": "U03JN34N5TL",
          "text": "I guess I’m not sure what an extended launch task is, or how that affects the metrics Apple would report to me. Is it that I can manually tell the system how long my launch took, so that it will provide data for that whole time frame, if I consider my launch to be finished at a further point than Apple automatically would? E.g., I unblock the main thread early on but have to show a spinner as I’m loading some database from disk, so the app would only be really interactive once that loading is done.",
          "ts": "1654890054.093649",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4f8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I guess I’m not sure what an extended launch task is, or how that affects the metrics Apple would report to me. Is it that I can manually tell the system how long my launch took, so that it will provide data for that whole time frame, if I consider my launch to be finished at a further point than Apple automatically would? E.g., I unblock the main thread early on but have to show a spinner as I’m loading some database from disk, so the app would only be really interactive once that loading is done."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7fce3d70-d574-487a-93a8-36003bbccbb9",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "That's about right. You're basically telling us \"I have some extra work to do, can you collapse the system measured launch time with my extra work time?\" The metrics that would be reported to you wouldn't be impacted as long as you don't have conflicting taskID's. We report a histogram of launch times where you explicitly called the extendedLaunch APIs properly.",
          "ts": "1654890189.913449",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XlCfj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That's about right. You're basically telling us \"I have some extra work to do, can you collapse the system measured launch time with my extra work time?\" The metrics that would be reported to you wouldn't be impacted as long as you don't have conflicting taskID's. We report a histogram of launch times where you explicitly called the extendedLaunch APIs properly."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1d7eb36f-91ad-46bf-964c-5e10886b8266",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "And to be clear, an extended launch task is any work thats going to start before or during UISceneDelegate.scene(_:restoreInteractionStateWith:), or before UISceneDelegate.sceneDidBecomeActive(_:) is called on the first scene to connect.",
          "ts": "1654890321.638979",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "F8kgX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "And to be clear, an extended launch task is any work thats going to start before or during UISceneDelegate.scene(_:restoreInteractionStateWith:), or before UISceneDelegate.sceneDidBecomeActive(_:) is called on the first scene to connect."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "98735d8d-884b-4d55-8ab8-45f9efde7a65",
          "type": "message",
          "user": "U03JN34N5TL",
          "text": "Cool, thanks :thumbsup:",
          "ts": "1654890358.440799",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PMudK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Cool, thanks "
                    },
                    {
                      "type": "emoji",
                      "name": "thumbsup",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "06a4cca0-2489-4356-8771-a72f3f660b8d",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "And one quick example of defining a taskID for you:\n\n\u0026gt; static let loadingUpMainContent = MXLaunchTaskID(\"loadingUpMainContent\")\nAnd subsequent usage w/ the API:\n\n\u0026gt; try MXMetricManager.extendLaunchMeasurement(forTaskID: .loadingUpMainContent)\n...\n\u0026gt; try MXMetricManager.finishExtendedLaunchMeasurement(forTaskID: .loadingUpMainContent)",
          "ts": "1654890493.994679",
          "thread_ts": "1654886052.415049",
          "edited": {
            "user": "U03HHPU5NLS",
            "ts": "1654890531.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bNXGN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "And one quick example of defining a taskID for you:\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"static let loadingUpMainContent = MXLaunchTaskID(\\\"loadingUpMainContent\\\")\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\nAnd subsequent usage w/ the API:\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"try MXMetricManager.extendLaunchMeasurement(forTaskID: .loadingUpMainContent)\"}]}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "...\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"try MXMetricManager.finishExtendedLaunchMeasurement(forTaskID: .loadingUpMainContent)\"}]}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1a44c3a2-43b9-4b7e-bf5a-74ec219b5f26",
          "type": "message",
          "user": "U03JN34N5TL",
          "text": "Cool, and would the call stack tree that Apple reports in MXAppLaunchDiagnostic include backtraces up until the last launch task was finished?",
          "ts": "1654890612.971509",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qgFg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Cool, and would the call stack tree that Apple reports in MXAppLaunchDiagnostic include backtraces up until the last launch task was finished?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e2130ada-6914-443e-88b6-198423ace904",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "Great question. You actually won't (shouldn't) get launch diagnostics for launches you're telling the system are purposefully extended.",
          "ts": "1654890675.034889",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XlyQG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Great question. You actually won't (shouldn't) get launch diagnostics for launches you're telling the system are purposefully extended."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7ebcd6b2-bc42-4c4b-bdf8-9ec0e9e0c686",
          "type": "message",
          "user": "U03JN34N5TL",
          "text": "Oh, OK. So it’d be for a case like, “I’m doing this one-time db migration that I know will be slow, please don’t pollute my startup time info with it”?",
          "ts": "1654890752.407419",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RXn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oh, OK. So it’d be for a case like, “I’m doing this one-time db migration that I know will be slow, please don’t pollute my startup time info with it”?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5594ec71-5e25-43e1-ad3b-97aa786e24c0",
          "type": "message",
          "user": "U03HHPU5NLS",
          "text": "Correct - the logic here is that launch diagnostics are designed to help you catch the unexpectedly slow launches, not the ones you expect :slightly_smiling_face:",
          "ts": "1654890782.040599",
          "thread_ts": "1654886052.415049",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JN34N5TL"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "M0PLF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Correct - the logic here is that launch diagnostics are designed to help you catch the unexpectedly slow launches, not the ones you expect "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVCK66P8\u003e asked\n\u0026gt; I got an unexpected error on Xcode 14. Anyone know the reason?\n\u0026gt; \n\u0026gt; Stored properties cannot be marked potentially unavailable with '@available'",
      "ts": "1654886172.874209",
      "thread_ts": "1654886172.874209",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 10,
      "latest_reply": "1654887187.604029",
      "reactions": [
        {
          "name": "eyes",
          "count": 1,
          "users": [
            "U03HVES3A4E"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "OcZ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVCK66P8"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I got an unexpected error on Xcode 14. Anyone know the reason?\\n\\nStored properties cannot be marked potentially unavailable with '@available'\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ec3d0404-335f-402b-83af-14e68b92fa60",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "That’s normal, the compiler needs to know how much space in memory a type needs, so stored properties cannot be marked with `@available`",
          "ts": "1654886181.327209",
          "thread_ts": "1654886172.874209",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "ok_hand",
              "count": 1,
              "users": [
                "U03HVCK66P8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oA22",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That’s normal, the compiler needs to know how much space in memory a type needs, so stored properties cannot be marked with "
                    },
                    {
                      "type": "text",
                      "text": "@available",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f8975e2c-b8c5-4fcc-a23b-da27217444a0",
          "type": "message",
          "user": "U03HVCK66P8",
          "text": "However, it is working on Xcode 13? Or just changed.",
          "ts": "1654886402.866039",
          "thread_ts": "1654886172.874209",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "N9A",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "However, it is working on Xcode 13? Or just changed."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "313ee10c-01cd-450e-baf2-1c5376ec507f",
          "type": "message",
          "user": "U03HVCK66P8",
          "text": "I just got this error after Xcode 14. Just wondering it is a bug, or I should put it to ‘upper level’",
          "ts": "1654886462.709439",
          "thread_ts": "1654886172.874209",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KvYPT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I just got this error after Xcode 14. Just wondering it is a bug, or I should put it to ‘upper level’"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "08264b68-9661-4270-a056-f2def19289f4",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "This was a bug in conjunction with `lazy` that was fixed in Swift 5.7.",
          "ts": "1654886529.580179",
          "thread_ts": "1654886172.874209",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YzzM=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This was a bug in conjunction with "
                    },
                    {
                      "type": "text",
                      "text": "lazy",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " that was fixed in Swift 5.7."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fa157cef-08f4-4635-8ba2-1c94da16f444",
          "type": "message",
          "user": "U03HVCK66P8",
          "text": "So this is no longer work?",
          "ts": "1654886549.911579",
          "thread_ts": "1654886172.874209",
          "files": [
            {
              "id": "F03KKN79J9X",
              "created": 1654886538,
              "timestamp": 1654886538,
              "name": "CleanShot 2022-06-11 at 02.42.04@2x.png",
              "title": "CleanShot 2022-06-11 at 02.42.04@2x.png",
              "mimetype": "image/png",
              "image_exif_rotation": 0,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03HVCK66P8",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 95454,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03KKN79J9X-CleanShot 2022-06-11 at 02.42.04@2x.png",
              "url_private_download": "C03H0JN431U/F03KKN79J9X-CleanShot 2022-06-11 at 02.42.04@2x.png",
              "original_h": 226,
              "original_w": 1670,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KKN79J9X-c4de705572/cleanshot_2022-06-11_at_02.42.04_2x_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KKN79J9X-c4de705572/cleanshot_2022-06-11_at_02.42.04_2x_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KKN79J9X-c4de705572/cleanshot_2022-06-11_at_02.42.04_2x_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KKN79J9X-c4de705572/cleanshot_2022-06-11_at_02.42.04_2x_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 360,
              "thumb_360_h": 49,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KKN79J9X-c4de705572/cleanshot_2022-06-11_at_02.42.04_2x_480.png",
              "thumb_480_w": 480,
              "thumb_480_h": 65,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KKN79J9X-c4de705572/cleanshot_2022-06-11_at_02.42.04_2x_720.png",
              "thumb_720_w": 720,
              "thumb_720_h": 97,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KKN79J9X-c4de705572/cleanshot_2022-06-11_at_02.42.04_2x_960.png",
              "thumb_960_w": 960,
              "thumb_960_h": 130,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03KKN79J9X-c4de705572/cleanshot_2022-06-11_at_02.42.04_2x_1024.png",
              "thumb_1024_w": 1024,
              "thumb_1024_h": 139,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03HVCK66P8/F03KKN79J9X/cleanshot_2022-06-11_at_02.42.04_2x.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03KKN79J9X-219f9965e8",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ch2Ho",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So this is no longer work?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b4d4037f-2a07-4448-a21f-e81fe3a24bbf",
          "type": "message",
          "user": "U03HVCK66P8",
          "text": ":smiling_face_with_tear:",
          "ts": "1654886554.220169",
          "thread_ts": "1654886172.874209",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eqzVh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "emoji",
                      "name": "smiling_face_with_tear",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6e941926-8617-4e60-b889-675463435159",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "I don't believe it properly worked before.",
          "ts": "1654886611.421719",
          "thread_ts": "1654886172.874209",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "HGuH3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I don't believe it properly worked before."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f3eff792-36e2-4132-a8a5-604aa1e59f04",
          "type": "message",
          "user": "U03HWEGHRKR",
          "text": "yea this no longer works. this is a solution someone gave\n```final class Foo {\n  private lazy var _myBackingVar: Any { ... }\n  @available(iOS 15.0, *)\n  var myConditionallyAvailableVar: RealType { _myBackingVar as! RealType }\n}```\n",
          "ts": "1654886648.424969",
          "thread_ts": "1654886172.874209",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HVCK66P8"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1oXoh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "yea this no longer works. this is a solution someone gave\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"final class Foo {\\n  private lazy var _myBackingVar: Any { ... }\\n  @available(iOS 15.0, *)\\n  var myConditionallyAvailableVar: RealType { _myBackingVar as! RealType }\\n}\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": []
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d7dc256e-0ec5-478d-a5bb-0a7efdfa9805",
          "type": "message",
          "user": "U03HVCK66P8",
          "text": "Thanks \u003c@U03HWEGHRKR\u003e \u003c@U03J22A0C4S\u003e\nWill give it a try :slightly_smiling_face:",
          "ts": "1654886688.421469",
          "thread_ts": "1654886172.874209",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HWEGHRKR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oe8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HWEGHRKR"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "user",
                      "user_id": "U03J22A0C4S"
                    },
                    {
                      "type": "text",
                      "text": "\nWill give it a try "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0b3addd3-7802-4238-9b7d-2db31e6df67b",
          "type": "message",
          "user": "U03HVCK66P8",
          "text": "Works again :tada:",
          "ts": "1654887187.604029",
          "thread_ts": "1654886172.874209",
          "edited": {
            "user": "U03HVCK66P8",
            "ts": "1654887218.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03HWEGHRKR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sVH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Works again "
                    },
                    {
                      "type": "emoji",
                      "name": "tada",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HMCR1CFR\u003e asked\n\u0026gt; The compiler doesn't seem to be looking for the correct specialization overload when there's at least one generic indirection: \u003chttps://github.com/apple/swift/issues/59333|https://github.com/apple/swift/issues/59333\u003e\n\u0026gt; Is this expected?",
      "ts": "1654886297.264039",
      "thread_ts": "1654886297.264039",
      "attachments": [
        {
          "fallback": "GitHub: Swift does not always invoke the more specific version of a generic function · Issue #59333 · apple/swift",
          "id": 1,
          "title": "Swift does not always invoke the more specific version of a generic function · Issue #59333 · apple/swift",
          "title_link": "https://github.com/apple/swift/issues/59333",
          "text": "Describe the bug Swift does not always invoke the more specific version of a generic function. We have observed that generic specialization does not seem to occur beyond some levels of indirection....",
          "image_url": "https://opengraph.githubassets.com/2013389e73a005d5126e0e109cc679d16e74889acaa39c269efb78d1c465b9df/apple/swift/issues/59333",
          "service_name": "GitHub",
          "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
          "from_url": "https://github.com/apple/swift/issues/59333",
          "original_url": "https://github.com/apple/swift/issues/59333",
          "blocks": null
        }
      ],
      "edited": {
        "user": "B03HGE996MA",
        "ts": "1654886299.000000"
      },
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 10,
      "latest_reply": "1654902905.858519",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "rGM",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HMCR1CFR"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"The compiler doesn't seem to be looking for the correct specialization overload when there's at least one generic indirection: \"},{\"type\":\"link\",\"url\":\"https:\\/\\/github.com\\/apple\\/swift\\/issues\\/59333\",\"text\":\"https:\\/\\/github.com\\/apple\\/swift\\/issues\\/59333\"},{\"type\":\"text\",\"text\":\"\\nIs this expected?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "84c9cd64-ab48-4c71-865f-eb8177ae1a37",
          "type": "message",
          "user": "U03HWD526QH",
          "text": "Hi Gonzalo, thank you for the question! That's the expected behavior. Overloaded class methods are statically dispatched and overload resolution happens at compile time. The compiler only knows that `T: A` so it can only call the \"unspecialized\" overload. You need dynamic dispatch for this to work, e.g. using protocol requirement methods. We will add some explanation in the GitHub bug.",
          "ts": "1654886323.347169",
          "thread_ts": "1654886297.264039",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2BW",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Gonzalo, thank you for the question! That's the expected behavior. Overloaded class methods are statically dispatched and overload resolution happens at compile time. The compiler only knows that "
                    },
                    {
                      "type": "text",
                      "text": "T: A",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " so it can only call the \"unspecialized\" overload. You need dynamic dispatch for this to work, e.g. using protocol requirement methods. We will add some explanation in the GitHub bug."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "828761fb-1291-4e9c-b37b-a1641f584ec9",
          "type": "message",
          "user": "U03HMCR1CFR",
          "text": "/cc \u003c@U03HVD36H54\u003e",
          "ts": "1654888039.826249",
          "thread_ts": "1654886297.264039",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KzpU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "/cc "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HVD36H54"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b2ccf942-ae99-45a2-83eb-67ccb8ddbf1d",
          "type": "message",
          "user": "U03HMCR1CFR",
          "text": "thanks Rintaro! without the intention of challenging your response :sweat_smile: but just for the sake of the conversation, we were reasoning about this potentially being solvable by the compiler tho.\n\n• 1st is `baz` where, as `T` is a parameter of what `baz` identifies as `Self` , we would’ve expected that be statically dispatchable by having two `baz` implementations: `Foo.bar()` and `Foo.bar\u0026lt;\u0026gt;()` (as identified in sil, attached later).\n• 2nd is `callBarFails` where same could happening as demonstrated by `callBarWorks` if the compiler detected that actually N versions of the function may exist depending (where N is n1 + n2 + n3 with each n being the number of overloads functions being called could have) on a yet-unknown but eventually-known type.\nis this reasonable or there’s any other implication here we might not be seeing?",
          "ts": "1654888947.646619",
          "thread_ts": "1654886297.264039",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HVD36H54"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Sa8l",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "thanks Rintaro! without the intention of challenging your response "
                    },
                    {
                      "type": "emoji",
                      "name": "sweat_smile",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " but just for the sake of the conversation, we were reasoning about this potentially being solvable by the compiler tho.\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"1st is \"},{\"type\":\"text\",\"text\":\"baz\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" where, as \"},{\"type\":\"text\",\"text\":\"T\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" is a parameter of what \"},{\"type\":\"text\",\"text\":\"baz\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" identifies as \"},{\"type\":\"text\",\"text\":\"Self\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" , we would\\u2019ve expected that be statically dispatchable by having two \"},{\"type\":\"text\",\"text\":\"baz\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" implementations: \"},{\"type\":\"text\",\"text\":\"Foo.bar()\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" and \"},{\"type\":\"text\",\"text\":\"Foo.bar\u003c\u003e()\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" (as identified in sil, attached later).\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"2nd is \"},{\"type\":\"text\",\"text\":\"callBarFails\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" where same could happening as demonstrated by \"},{\"type\":\"text\",\"text\":\"callBarWorks\",\"style\":{\"code\":true}},{\"type\":\"text\",\"text\":\" if the compiler detected that actually N versions of the function may exist depending (where N is n1 + n2 + n3 with each n being the number of overloads functions being called could have) on a yet-unknown but eventually-known type.\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\nis this reasonable or there’s any other implication here we might not be seeing?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e2e099b8-d1bf-4efa-88a7-5d25da660281",
          "type": "message",
          "user": "U03HMCR1CFR",
          "ts": "1654888975.498839",
          "thread_ts": "1654886297.264039",
          "files": [
            {
              "id": "F03K9LBCXFW",
              "created": 1654888974,
              "timestamp": 1654888974,
              "name": "Sample code.cpp",
              "title": "Sample code",
              "mimetype": "text/plain",
              "image_exif_rotation": 0,
              "filetype": "cpp",
              "pretty_type": "C++",
              "user": "U03HMCR1CFR",
              "mode": "snippet",
              "editable": true,
              "is_external": false,
              "external_type": "",
              "size": 904,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03K9LBCXFW-Sample code.cpp",
              "url_private_download": "C03H0JN431U/F03K9LBCXFW-Sample code.cpp",
              "original_h": 0,
              "original_w": 0,
              "thumb_64": "",
              "thumb_80": "",
              "thumb_160": "",
              "thumb_360": "",
              "thumb_360_gif": "",
              "thumb_360_w": 0,
              "thumb_360_h": 0,
              "thumb_480": "",
              "thumb_480_w": 0,
              "thumb_480_h": 0,
              "thumb_720": "",
              "thumb_720_w": 0,
              "thumb_720_h": 0,
              "thumb_960": "",
              "thumb_960_w": 0,
              "thumb_960_h": 0,
              "thumb_1024": "",
              "thumb_1024_w": 0,
              "thumb_1024_h": 0,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03HMCR1CFR/F03K9LBCXFW/sample_code.cpp",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03K9LBCXFW-71e34d6e9f",
              "edit_link": "https://appleevents.enterprise.slack.com/files/U03HMCR1CFR/F03K9LBCXFW/sample_code.cpp/edit",
              "preview": "protocol A {}\nprotocol B: A {}\n\nstruct TypeA: A {}\nstruct TypeB: B {}",
              "preview_highlight": "\u003cdiv class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\"\u003e\n\u003cdiv class=\"CodeMirror-code\"\u003e\n\u003cdiv\u003e\u003cpre\u003e\u003cspan class=\"cm-variable\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"cm-variable\"\u003eA\u003c/span\u003e {}\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e\u003cspan class=\"cm-variable\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"cm-variable\"\u003eB\u003c/span\u003e: \u003cspan class=\"cm-variable\"\u003eA\u003c/span\u003e {}\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e\u0026#8203;\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e\u003cspan class=\"cm-keyword\"\u003estruct\u003c/span\u003e \u003cspan class=\"cm-def\"\u003eTypeA\u003c/span\u003e: \u003cspan class=\"cm-variable\"\u003eA\u003c/span\u003e {}\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003e\u003cspan class=\"cm-keyword\"\u003estruct\u003c/span\u003e \u003cspan class=\"cm-def\"\u003eTypeB\u003c/span\u003e: \u003cspan class=\"cm-variable\"\u003eB\u003c/span\u003e {}\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n",
              "lines": 44,
              "lines_more": 39,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "upload": true,
          "replace_original": false,
          "delete_original": false,
          "blocks": null
        },
        {
          "client_msg_id": "636587bd-8d8e-442f-ac0f-6970763c6fe6",
          "type": "message",
          "user": "U03HMCR1CFR",
          "ts": "1654888993.969769",
          "thread_ts": "1654886297.264039",
          "files": [
            {
              "id": "F03K78Q6EV8",
              "created": 1654888992,
              "timestamp": 1654888992,
              "name": "Silgen",
              "title": "Silgen",
              "mimetype": "application/octet-stream",
              "image_exif_rotation": 0,
              "filetype": "binary",
              "pretty_type": "Binary",
              "user": "U03HMCR1CFR",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 60326,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03K78Q6EV8-Silgen",
              "url_private_download": "C03H0JN431U/F03K78Q6EV8-Silgen",
              "original_h": 0,
              "original_w": 0,
              "thumb_64": "",
              "thumb_80": "",
              "thumb_160": "",
              "thumb_360": "",
              "thumb_360_gif": "",
              "thumb_360_w": 0,
              "thumb_360_h": 0,
              "thumb_480": "",
              "thumb_480_w": 0,
              "thumb_480_h": 0,
              "thumb_720": "",
              "thumb_720_w": 0,
              "thumb_720_h": 0,
              "thumb_960": "",
              "thumb_960_w": 0,
              "thumb_960_h": 0,
              "thumb_1024": "",
              "thumb_1024_w": 0,
              "thumb_1024_h": 0,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03HMCR1CFR/F03K78Q6EV8/silgen",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03K78Q6EV8-1864a0b167",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "upload": true,
          "replace_original": false,
          "delete_original": false,
          "blocks": null
        },
        {
          "client_msg_id": "b3d38ec2-0464-45b7-974e-75123611ecbe",
          "type": "message",
          "user": "U03HWD526QH",
          "text": "Ah sorry for the late reply. I'm not a type checker expert, but...\nFor both cases in this specific example, yes the compiler _can_ know `T` conforms to `B` for `Foo\u0026lt;TypeB\u0026gt;` . However, in case these functions are in a different module like this:\n```// Library module.\n\npublic protocol A {}\npublic protocol B: A {}\n\npublic class Foo\u0026lt;T: A\u0026gt; {\n  public func bar() -\u0026gt; Bool\n  public func bar() -\u0026gt; Bool where T: B\n  public func baz() -\u0026gt; Bool\n}\n\npublic func callBarFails\u0026lt;X: A\u0026gt;(from foo: Foo\u0026lt;X\u0026gt;) -\u0026gt; Bool```\nAnd in the main module:\n```// main module\n\nimport Library\n\nstruct TypeA: A {}\nstruct TypeB: B {}\n\n_ = Foo\u0026lt;TypeB\u0026gt;().baz()\n_ = callBarFails(from: Foo\u0026lt;TypeB\u0026gt;())```\nIn this case, when the compiler compiles `Library.callBarFails(from:)` , it doesn't know how the function is called at all. Also, when compiling `main` module, the compiler doesn't know the implementation of the `callBarFails(from:)` . So it can't dispatch it to `Foo\u0026lt;T\u0026gt;.bar() where T: B` .",
          "ts": "1654895002.878549",
          "thread_ts": "1654886297.264039",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "idF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ah sorry for the late reply. I'm not a type checker expert, but...\nFor both cases in this specific example, yes the compiler "
                    },
                    {
                      "type": "text",
                      "text": "can",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " know "
                    },
                    {
                      "type": "text",
                      "text": "T",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " conforms to "
                    },
                    {
                      "type": "text",
                      "text": "B",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " for "
                    },
                    {
                      "type": "text",
                      "text": "Foo\u003cTypeB\u003e",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " . However, in case these functions are in a different module like this:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"\\/\\/ Library module.\\n\\npublic protocol A {}\\npublic protocol B: A {}\\n\\npublic class Foo\u003cT: A\u003e {\\n  public func bar() -\u003e Bool\\n  public func bar() -\u003e Bool where T: B\\n  public func baz() -\u003e Bool\\n}\\n\\npublic func callBarFails\u003cX: A\u003e(from foo: Foo\u003cX\u003e) -\u003e Bool\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "And in the main module:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"\\/\\/ main module\\n\\nimport Library\\n\\nstruct TypeA: A {}\\nstruct TypeB: B {}\\n\\n_ = Foo\u003cTypeB\u003e().baz()\\n_ = callBarFails(from: Foo\u003cTypeB\u003e())\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In this case, when the compiler compiles "
                    },
                    {
                      "type": "text",
                      "text": "Library.callBarFails(from:)",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " , it doesn't know how the function is called at all. Also, when compiling "
                    },
                    {
                      "type": "text",
                      "text": "main",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " module, the compiler doesn't know the implementation of the "
                    },
                    {
                      "type": "text",
                      "text": "callBarFails(from:)",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " . So it can't dispatch it to "
                    },
                    {
                      "type": "text",
                      "text": "Foo\u003cT\u003e.bar() where T: B",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " ."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e2ef2646-c772-42ec-93bf-fc4c49ce0970",
          "type": "message",
          "user": "U03HWD526QH",
          "text": "It'd be super confusable if we differentiate the behavior between `internal` decls and `public` decls.",
          "ts": "1654895100.330579",
          "thread_ts": "1654886297.264039",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tIg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It'd be super confusable if we differentiate the behavior between "
                    },
                    {
                      "type": "text",
                      "text": "internal",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " decls and "
                    },
                    {
                      "type": "text",
                      "text": "public",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " decls."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bfa09629-25c1-487c-b8d5-3e016facb121",
          "type": "message",
          "user": "U03HMCR1CFR",
          "text": "ah, that’s absolutely fair!",
          "ts": "1654901618.323519",
          "thread_ts": "1654886297.264039",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=Tv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "ah, that’s absolutely fair!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f84fede6-35e1-4206-9b4f-77cf63d31f3b",
          "type": "message",
          "user": "U03HMCR1CFR",
          "text": "thank you for answer and the follow up Rintaro :wave: nice talking to you.",
          "ts": "1654901735.131529",
          "thread_ts": "1654886297.264039",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Tu/cg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "thank you for answer and the follow up Rintaro "
                    },
                    {
                      "type": "emoji",
                      "name": "wave",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " nice talking to you."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "923cfdc7-e307-430b-b2b1-a47f625c6b7e",
          "type": "message",
          "user": "U03HWD526QH",
          "text": "Thank you! Have a good weekend!",
          "ts": "1654902905.858519",
          "thread_ts": "1654886297.264039",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vZQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you! Have a good weekend!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KH907MME\u003e asked\n\u0026gt; Our project has multiple framework targets. Each one has a build phase that runs swiftlint on its source code. It's setup so it only runs if needed using \n\u0026gt; \n\u0026gt; input file: .swiftlint.yml file \n\u0026gt; input file lists: xcfilelist with all swift files in the framework\n\u0026gt; output files: ${DERIVED_FILE_DIR}/ran-swiftlint that is touched by the script.\n\u0026gt; \n\u0026gt; This works correctly most of the time, but if the `.swiftlint.yml` is changed, it seems each target runs sequentially instead of in parallel. Any tips for what to look at that could be causing it?",
      "ts": "1654886694.434279",
      "thread_ts": "1654886694.434279",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654886836.517069",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Y4W",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KH907MME"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Our project has multiple framework targets. Each one has a build phase that runs swiftlint on its source code. It's setup so it only runs if needed using \\n\\ninput file: .swiftlint.yml file \\ninput file lists: xcfilelist with all swift files in the framework\\noutput files: ${DERIVED_FILE_DIR}\\/ran-swiftlint that is touched by the script.\\n\\nThis works correctly most of the time, but if the `.swiftlint.yml` is changed, it seems each target runs sequentially instead of in parallel. Any tips for what to look at that could be causing it?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "32ef7714-759e-44c1-bc63-1b7d27914e28",
          "type": "message",
          "user": "U03HESABNTX",
          "text": "It is a known issue that incremental builds may unnecessarily serialize build tasks of some projects when specific inputs are updated. If possible, please file a bug report including a result bundle from an incremental build that demonstrates the issue so we can investigate further. You can generate a result bundle by passing the `-resultBundlePath` argument when building with `xcodebuild` on the command line.",
          "ts": "1654886728.956089",
          "thread_ts": "1654886694.434279",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CeZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It is a known issue that incremental builds may unnecessarily serialize build tasks of some projects when specific inputs are updated. If possible, please file a bug report including a result bundle from an incremental build that demonstrates the issue so we can investigate further. You can generate a result bundle by passing the "
                    },
                    {
                      "type": "text",
                      "text": "-resultBundlePath",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " argument when building with "
                    },
                    {
                      "type": "text",
                      "text": "xcodebuild",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " on the command line."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "362cedbd-eda2-41f8-9271-554e3979406d",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "I submitted FB10143230 asking for better build script integration. In @Craig's case it probably be fine to unconditionally run the swiftlint scripts at the start of an overall build or the build of the target, but we can't express that dependency right now.",
          "ts": "1654886836.517069",
          "thread_ts": "1654886694.434279",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "uvq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I submitted FB10143230 asking for better build script integration. In @Craig's case it probably be fine to unconditionally run the swiftlint scripts at the start of an overall build or the build of the target, but we can't express that dependency right now."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "cddff28c-0add-4f2e-946f-41df39bf0215",
      "type": "message",
      "user": "U03HL553PNG",
      "text": "\u003c@U03K765E332\u003e asked:\n\u0026gt; The Take Screenshot button in the Devices window should use the com.apple.screencapture setting location instead of defaulting to the desktop :pray:\n",
      "ts": "1654886724.836699",
      "thread_ts": "1654886724.836699",
      "reply_count": 5,
      "latest_reply": "1654903230.242299",
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "heart",
          "count": 1,
          "users": [
            "U03JEEUJPMJ"
          ]
        },
        {
          "name": "gratitude-thank-you",
          "count": 1,
          "users": [
            "U03K765E332"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "fva",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K765E332"
                },
                {
                  "type": "text",
                  "text": " asked:\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"The Take Screenshot button in the Devices window should use the com.apple.screencapture setting location instead of defaulting to the desktop \"},{\"type\":\"emoji\",\"name\":\"pray\"}]}"
            },
            {
              "type": "rich_text_section",
              "elements": []
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a797d74d-8eef-4e57-9903-62b7adb32c33",
          "type": "message",
          "user": "U03H36PM1BR",
          "text": "Thanks for the question!! If the question is how to get the Simulator Device window to save its screenshots to another location than the default Desktop location, you can do that now! If you run `defaults write com.apple.iphonesimulator ScreenShotSaveLocation \"/tmp\"` (or any other location), you can change where Simulator saves its screenshots. Just FYI, I don't know that we document this anywhere currently, so this could change in the future.\n\nHope this helps!! Please let me know if this isn't what you were trying to achieve. And if this isn't what you were looking for, please do file a Feedback for what you were trying to do. :slightly_smiling_face:",
          "ts": "1654887476.316669",
          "thread_ts": "1654886724.836699",
          "parent_user_id": "U03HL553PNG",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cyDh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the question!! If the question is how to get the Simulator Device window to save its screenshots to another location than the default Desktop location, you can do that now! If you run "
                    },
                    {
                      "type": "text",
                      "text": "defaults write com.apple.iphonesimulator ScreenShotSaveLocation \"/tmp\"",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " (or any other location), you can change where Simulator saves its screenshots. Just FYI, I don't know that we document this anywhere currently, so this could change in the future.\n\nHope this helps!! Please let me know if this isn't what you were trying to achieve. And if this isn't what you were looking for, please do file a Feedback for what you were trying to do. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5702d993-73c7-49c1-a878-00444c114024",
          "type": "message",
          "user": "U03H36PM1BR",
          "text": "So, if you want to change where Simulator saves its screenshots directly, you can use `defaults write com.apple.iphonesimulator ScreenShotSaveLocation \"/tmp\"` (for example). I will add that the default behavior for Simulator should be that if you don't have that key set, it should use the location from `com.apple.screencapture`.  It might be that something set `ScreenShotSaveLocation` to your Simulator preferences in the past. You can check for that by running `defaults read com.apple.iphonesimulator ScreenShotSaveLocation`. If there's something there and you want to delete it and reset Simulator back to its default behavior of using the location from `com.apple.screencapture`, you can remove the old key with this: `defaults delete  com.apple.iphonesimulator ScreenShotSaveLocation`. If you end up doing this and you're still not seeing Simulator save its screenshots to where you expect, please do file a Feedback issue and attach the output of `xcrun simctl diagnose` for us to take a look at. :slightly_smiling_face:",
          "ts": "1654887992.820279",
          "thread_ts": "1654886724.836699",
          "parent_user_id": "U03HL553PNG",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Z98",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "So, if you want to change where Simulator saves its screenshots directly, you can use "
                    },
                    {
                      "type": "text",
                      "text": "defaults write com.apple.iphonesimulator ScreenShotSaveLocation \"/tmp\"",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " (for example). I will add that the default behavior for Simulator should be that if you don't have that key set, it should use the location from "
                    },
                    {
                      "type": "text",
                      "text": "com.apple.screencapture",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ".  It might be that something set "
                    },
                    {
                      "type": "text",
                      "text": "ScreenShotSaveLocation",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to your Simulator preferences in the past. You can check for that by running "
                    },
                    {
                      "type": "text",
                      "text": "defaults read com.apple.iphonesimulator ScreenShotSaveLocation",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". If there's something there and you want to delete it and reset Simulator back to its default behavior of using the location from "
                    },
                    {
                      "type": "text",
                      "text": "com.apple.screencapture",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", you can remove the old key with this: "
                    },
                    {
                      "type": "text",
                      "text": "defaults delete  com.apple.iphonesimulator ScreenShotSaveLocation",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". If you end up doing this and you're still not seeing Simulator save its screenshots to where you expect, please do file a Feedback issue and attach the output of "
                    },
                    {
                      "type": "text",
                      "text": "xcrun simctl diagnose",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " for us to take a look at. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4d6c46d5-51aa-4e61-8e83-e932c4c6e4ca",
          "type": "message",
          "user": "U03H36PM1BR",
          "text": "I see now that I might have misread your question. My answers above affect where Simulator itself saves screenshots, from the actual Device window. If you're talking about where the \"Devices \u0026amp; Simulators\" window saves its screenshot files, I think filing a Feedback for that is the best thing to do. Sorry for the confusion!!",
          "ts": "1654888692.191489",
          "thread_ts": "1654886724.836699",
          "parent_user_id": "U03HL553PNG",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tz6ZC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I see now that I might have misread your question. My answers above affect where Simulator itself saves screenshots, from the actual Device window. If you're talking about where the \"Devices \u0026 Simulators\" window saves its screenshot files, I think filing a Feedback for that is the best thing to do. Sorry for the confusion!!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "782f3a84-bcdd-491a-9637-f27550885043",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "In case the question was about the “Take screenshot” button in the Devices and Simulators window in Xcode, we have another user default for that :slightly_smiling_face:\nYou can set the location with `defaults write com.apple.dt.Xcode DTDKScreenshotsDirectory -string \u0026lt;path\u0026gt;`\nAs Jason said, this is also not documented anywhere, so it can change in the future!",
          "ts": "1654889226.399179",
          "thread_ts": "1654886724.836699",
          "parent_user_id": "U03HL553PNG",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "J+k",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In case the question was about the “Take screenshot” button in the Devices and Simulators window in Xcode, we have another user default for that "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\nYou can set the location with "
                    },
                    {
                      "type": "text",
                      "text": "defaults write com.apple.dt.Xcode DTDKScreenshotsDirectory -string \u003cpath\u003e",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "\nAs Jason said, this is also not documented anywhere, so it can change in the future!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "290f539c-3afc-4b8d-aa40-62247d68dc73",
          "type": "message",
          "user": "U03K765E332",
          "text": "Thanks \u003c@U03H36PM1BR\u003e and \u003c@U03HES8U8FP\u003e!  I am attempting to get a screenshot from my physical device using the Take Screenshot button in the Devices and Simulators window.  I tried the setting Juan L suggested but I have not had any luck yet, still writing it to the desktop.\n\nThis seems right, right?\n``` % defaults read com.apple.com.dt.Xcode\n{\n    DTDKScreenshotsDirectory = \"/Users/guzman/Screenshots\";\n}```\nI did file a feedback yesterday - FB10142464\n\nAnd thanks for the all the responsiveness this WWDC, this Slack setup was awesome :thumbsup:",
          "ts": "1654903230.242299",
          "thread_ts": "1654886724.836699",
          "parent_user_id": "U03HL553PNG",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cmXY5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks "
                    },
                    {
                      "type": "user",
                      "user_id": "U03H36PM1BR"
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HES8U8FP"
                    },
                    {
                      "type": "text",
                      "text": "!  I am attempting to get a screenshot from my physical device using the Take Screenshot button in the Devices and Simulators window.  I tried the setting Juan L suggested but I have not had any luck yet, still writing it to the desktop.\n\nThis seems right, right?\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\" % defaults read com.apple.com.dt.Xcode\\n{\\n    DTDKScreenshotsDirectory = \\\"\\/Users\\/guzman\\/Screenshots\\\";\\n}\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I did file a feedback yesterday - FB10142464\n\nAnd thanks for the all the responsiveness this WWDC, this Slack setup was awesome "
                    },
                    {
                      "type": "emoji",
                      "name": "thumbsup",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JQJC0N1L\u003e asked\n\u0026gt; I'm not sure the best place to ask this question, since using scripting of all kinds is so relevant to so many workflows. But, I am curious about the future of shells being included in macOS, specifically /bin/bash. In Catalina, it was announced that 3rd party scripting environments are being deprecated. The specific language was \"Scripting language runtimes such as Python, Ruby, and Perl are included in macOS for compatibility with legacy software.\" That \"such as\" leaves some ambiguity in regards to shells like bash, which could be considered a 3rd party scripting language runtime, but it could also be argued that shells fall under a different category.\n\u0026gt; \n\u0026gt; Can you share any insight on the future of bash in macOS? I don't expect it to be updated beyond version 3.2.57, but should we be preparing for a future in which /bin/bash does not exist at all on macOS?\n\u0026gt; \n\u0026gt; As a follow up question, should there be any concern for the future or 1st party scripting environments like AppleScript and JavaScript for Automation (JXA) such as being deprecated or removed from macOS?",
      "ts": "1654886943.340689",
      "thread_ts": "1654886943.340689",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 19,
      "latest_reply": "1654890107.046319",
      "reactions": [
        {
          "name": "heart",
          "count": 3,
          "users": [
            "U03JE7PBQPP",
            "U03K681G98A",
            "U03HL553PNG"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "05t1",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JQJC0N1L"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I'm not sure the best place to ask this question, since using scripting of all kinds is so relevant to so many workflows. But, I am curious about the future of shells being included in macOS, specifically \\/bin\\/bash. In Catalina, it was announced that 3rd party scripting environments are being deprecated. The specific language was \\\"Scripting language runtimes such as Python, Ruby, and Perl are included in macOS for compatibility with legacy software.\\\" That \\\"such as\\\" leaves some ambiguity in regards to shells like bash, which could be considered a 3rd party scripting language runtime, but it could also be argued that shells fall under a different category.\\n\\nCan you share any insight on the future of bash in macOS? I don't expect it to be updated beyond version 3.2.57, but should we be preparing for a future in which \\/bin\\/bash does not exist at all on macOS?\\n\\nAs a follow up question, should there be any concern for the future or 1st party scripting environments like AppleScript and JavaScript for Automation (JXA) such as being deprecated or removed from macOS?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "68A34C37-B828-4E8E-9168-E1C43250455D",
          "type": "message",
          "user": "U03HWD3Q7LH",
          "text": "We are committed to maintaining POSIX compatibility, including that of the POSIX shell (/bin/sh).  There is no guarantee that /bin/sh will be implemented by bash in the future (and in fact you can customize /bin/sh to be zsh as of a couple years ago).",
          "ts": "1654887081.823329",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qxJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "are"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "committed"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "maintaining"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "POSIX"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "compatibility,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "including"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "POSIX"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "shell"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "(/bin/sh)."
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "text",
                      "text": "There"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "no"
                    },
                    {
                      "type": "text",
                      "text": " guarantee "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "/bin/sh"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "will"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "implemented"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "by"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bash"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "future"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "(and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "fact"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "can"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "customize"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "/bin/sh"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "zsh"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "as"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "couple"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "years"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "ago)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "FBA89C1C-CF09-4937-A6BD-C54D3BB0B51B",
          "type": "message",
          "user": "U03HWD3Q7LH",
          "text": "We have no plans to update the version of bash that we are shipping but do continue to update the version of zsh we are shipping.",
          "ts": "1654887191.416729",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "K23a",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "have"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "no"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "plans"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "update"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "version"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bash"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "we"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "are"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "shipping"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "but"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "do"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "continue"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "update"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "version"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "zsh"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "we"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "are"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "shipping."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8a8a010a-6203-49f4-8596-a2af2773f0b4",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "It's zsh by default (for new installs) as of Catalina.",
          "ts": "1654887201.966969",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Cz2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It's zsh by default (for new installs) as of Catalina."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "36c14553-85d8-468f-bde2-b76fa2116982",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "But many Apple tools default to bash/sh for their scripting environments (for historical reasons)",
          "ts": "1654887223.659929",
          "thread_ts": "1654886943.340689",
          "edited": {
            "user": "U03HZ4PT2ER",
            "ts": "1654887237.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9oyJ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "But many Apple tools default to bash/sh for their scripting environments (for historical reasons)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "83DF0107-B87F-4DB3-8FF6-55C581468659",
          "type": "message",
          "user": "U03HWD3Q7LH",
          "text": "No.  /bin/sh is still bash.  $SHELL is zsh",
          "ts": "1654887226.843969",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/C7X",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "No."
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "text",
                      "text": "/bin/sh"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "still"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bash."
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "text",
                      "text": "$SHELL"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "zsh"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "778c2cdf-18e7-40a1-9c8f-07b93df9c64f",
          "type": "message",
          "user": "U03J22A0C4S",
          "text": "Ah, a distinction, thanks.",
          "ts": "1654887259.282259",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bgz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ah, a distinction, thanks."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "22617466-C0C0-4817-8BA7-4FCB904C82DF",
          "type": "message",
          "user": "U03JQJC0N1L",
          "text": "Thanks for the reply! My main concern would be for scripts specifically using the `#!/bin/bash` hashbang if `/bin/bash` were to be removed. There has been some speculation that `zsh` could emulate `bash` (the way that `/bin/sh` could be emulated by `bash` or `zsh` or `dash`), but `zsh` doesn't currently support full and proper `bash` emulation to be able to do that without breaking many `bash` scripts.",
          "ts": "1654887364.804639",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ULA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "repl"
                    },
                    {
                      "type": "text",
                      "text": "y"
                    },
                    {
                      "type": "text",
                      "text": "!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "My"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "main"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "con"
                    },
                    {
                      "type": "text",
                      "text": "cern "
                    },
                    {
                      "type": "text",
                      "text": "would"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "scripts"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "spe"
                    },
                    {
                      "type": "text",
                      "text": "cifically "
                    },
                    {
                      "type": "text",
                      "text": "using"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "#!/bin/bash",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "hashbang"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "if"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "/bin/bash",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "were"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "remo"
                    },
                    {
                      "type": "text",
                      "text": "ved"
                    },
                    {
                      "type": "text",
                      "text": "."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "There"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "has"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "been"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "some"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "speculation"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "zsh",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "could"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "emulate"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bash",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "(the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "way"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "/bin/sh",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "could"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "emu"
                    },
                    {
                      "type": "text",
                      "text": "lated "
                    },
                    {
                      "type": "text",
                      "text": "by"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bash",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "or"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "zsh",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "or"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "dash",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "), but"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "zsh",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "doesn"
                    },
                    {
                      "type": "text",
                      "text": "'t "
                    },
                    {
                      "type": "text",
                      "text": "currently"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "support"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "full"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "proper"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bash",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "emulation"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "able"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "do"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "without"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "breakin"
                    },
                    {
                      "type": "text",
                      "text": "g "
                    },
                    {
                      "type": "text",
                      "text": "many"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bash",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "s"
                    },
                    {
                      "type": "text",
                      "text": "cript"
                    },
                    {
                      "type": "text",
                      "text": "s."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "CD045648-94A0-4980-8B50-0FA03668C441",
          "type": "message",
          "user": "U03HWD3Q7LH",
          "text": "For maximal portability, I would recommend ensuring that your scripts use /bin/sh and don't use bashisms.\n\nHowever, as you point out, many scripts do use /bin/bash, so that will be a tall lift for many folks.  We would certainly not remove bash without understanding that problem space and having a solution.",
          "ts": "1654887490.847329",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dWW/y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "For"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "maximal"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "portability,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " would recommend "
                    },
                    {
                      "type": "text",
                      "text": "ensuring"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "your"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "scripts"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "use"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "/bin/sh"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "don't"
                    },
                    {
                      "type": "text",
                      "text": " use "
                    },
                    {
                      "type": "text",
                      "text": "bashisms."
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "However,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "as"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "point"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "out,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "many"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "scripts"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "do"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "use"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "/bin/bash,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "so"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "will"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "tall"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "lift"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "many"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "folks."
                    },
                    {
                      "type": "text",
                      "text": "  W"
                    },
                    {
                      "type": "text",
                      "text": "e"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "would"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "certainly"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "not"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "remove"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bash"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "without"
                    },
                    {
                      "type": "text",
                      "text": " understand"
                    },
                    {
                      "type": "text",
                      "text": "ing"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " problem space "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "having"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "solution."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "67FC7647-B889-4455-88B1-82D9AD60A78C",
          "type": "message",
          "user": "U03JQJC0N1L",
          "text": "When the default interactive shell was switched from `bash` to `zsh` in Catalina when this scripting environment deprecated was also announced, it was unclear if that meant `bash` was being deprecated as a scripting environment as well or simply being deprecated as a suggested interactive shell to use. So, it hasn't even been super clear if bash usage in scripts has been in a deprecated state for the past years.",
          "ts": "1654887599.948439",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "S7zh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "W"
                    },
                    {
                      "type": "text",
                      "text": "hen"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "de"
                    },
                    {
                      "type": "text",
                      "text": "fault "
                    },
                    {
                      "type": "text",
                      "text": "interactive"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "shell"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "was"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "switched"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "from"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bash",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "zsh",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Catalina"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "when"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "this"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "scri"
                    },
                    {
                      "type": "text",
                      "text": "pting "
                    },
                    {
                      "type": "text",
                      "text": "env"
                    },
                    {
                      "type": "text",
                      "text": "ironment "
                    },
                    {
                      "type": "text",
                      "text": "deprecated"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "was"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "also"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "announced,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "was"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "unclear"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "if"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "meant"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bash",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "was"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bein"
                    },
                    {
                      "type": "text",
                      "text": "g "
                    },
                    {
                      "type": "text",
                      "text": "deprecated"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "as"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "scripting"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "environment"
                    },
                    {
                      "type": "text",
                      "text": " as "
                    },
                    {
                      "type": "text",
                      "text": "well"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "or"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "simply"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bein"
                    },
                    {
                      "type": "text",
                      "text": "g "
                    },
                    {
                      "type": "text",
                      "text": "deprecated"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "as"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "suggested"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "interactive"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "shell"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "use."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "So,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "hasn"
                    },
                    {
                      "type": "text",
                      "text": "'t "
                    },
                    {
                      "type": "text",
                      "text": "even"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "been"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "super"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "clear"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "if"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bash"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "usage"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "scripts"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "has"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "been"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "deprecated"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "state"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " the "
                    },
                    {
                      "type": "text",
                      "text": "past"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "years."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6C806248-D382-467D-943B-62F65582AF43",
          "type": "message",
          "user": "U03JQJC0N1L",
          "text": "I really appreciate hearing that you all understand the gravity of removing `bash` and that it would not be done without a way forward. Can I assume that if this were ever to happen in the future that we would get some very explicit advance warning like was done with Python?",
          "ts": "1654887749.971159",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7JE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "r"
                    },
                    {
                      "type": "text",
                      "text": "eally "
                    },
                    {
                      "type": "text",
                      "text": "appreciate"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "hearing"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "all"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "understand"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "gravity"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "remo"
                    },
                    {
                      "type": "text",
                      "text": "ving "
                    },
                    {
                      "type": "text",
                      "text": "bash",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "w"
                    },
                    {
                      "type": "text",
                      "text": "ould "
                    },
                    {
                      "type": "text",
                      "text": "not"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "done"
                    },
                    {
                      "type": "text",
                      "text": " w"
                    },
                    {
                      "type": "text",
                      "text": "ithout"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "way"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "forward."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Can"
                    },
                    {
                      "type": "text",
                      "text": " I "
                    },
                    {
                      "type": "text",
                      "text": "assume"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "if"
                    },
                    {
                      "type": "text",
                      "text": " this "
                    },
                    {
                      "type": "text",
                      "text": "were"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "ever"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "happen"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "future"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "we"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "would"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "get"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "some"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "very"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "exp"
                    },
                    {
                      "type": "text",
                      "text": "licit "
                    },
                    {
                      "type": "text",
                      "text": "adva"
                    },
                    {
                      "type": "text",
                      "text": "nce "
                    },
                    {
                      "type": "text",
                      "text": "warning"
                    },
                    {
                      "type": "text",
                      "text": " like was"
                    },
                    {
                      "type": "text",
                      "text": " done"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "with"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "P"
                    },
                    {
                      "type": "text",
                      "text": "ython"
                    },
                    {
                      "type": "text",
                      "text": "?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "02094B25-DC42-4F9F-947A-8DE50BB98E8C",
          "type": "message",
          "user": "U03HWD3Q7LH",
          "text": "Those two events were unrelated.\n\nYes, we would almost certainly give advanced warning for something as big as that.",
          "ts": "1654887874.768579",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03JQJC0N1L",
                "U03J07WJLRK"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dI7d",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Those"
                    },
                    {
                      "type": "text",
                      "text": " two "
                    },
                    {
                      "type": "text",
                      "text": "events"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "were"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "unrelated."
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "Yes,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "we"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "would"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "almost"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "certainly"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "give"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "advanced"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "warning"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "something"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "as"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "big"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "as"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "E359497A-80B4-4C6C-9A2F-4D9F61A6884C",
          "type": "message",
          "user": "U03JQJC0N1L",
          "text": "Thank you so much for taking the time to clarify this information about `bash`!\n\nAny chance for some insight on the future of AppleScript and JXA? I think the ObjC-bridge in JXA is an incredible tool that provides some capabilities in scripts that really can't currently be done any other way without compiled code. And obviously AppleScript and JXAs ability to present basic prompts and interact with other apps is extremely valuable in countless scenarios.",
          "ts": "1654888102.258429",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+Q85U",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "y"
                    },
                    {
                      "type": "text",
                      "text": "ou "
                    },
                    {
                      "type": "text",
                      "text": "so"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "much"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "taking"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "time"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "clarify"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "this"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "information"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "about"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bash",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "!"
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "Any"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "chance"
                    },
                    {
                      "type": "text",
                      "text": " fo"
                    },
                    {
                      "type": "text",
                      "text": "r"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "some"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "insight"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "fu"
                    },
                    {
                      "type": "text",
                      "text": "ture "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Ap"
                    },
                    {
                      "type": "text",
                      "text": "ple"
                    },
                    {
                      "type": "text",
                      "text": "Script"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "JXA?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "think"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "ObjC-bridge"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "JXA"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "an"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "incredible"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "tool"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "provides"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "some"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "capabilities"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " scripts "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "reall"
                    },
                    {
                      "type": "text",
                      "text": "y "
                    },
                    {
                      "type": "text",
                      "text": "can"
                    },
                    {
                      "type": "text",
                      "text": "'t "
                    },
                    {
                      "type": "text",
                      "text": "curr"
                    },
                    {
                      "type": "text",
                      "text": "ently "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "done"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "any"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "o"
                    },
                    {
                      "type": "text",
                      "text": "ther "
                    },
                    {
                      "type": "text",
                      "text": "way"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "without"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "compiled"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "code."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "And"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "obviously"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "AppleScript"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "JXAs"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "abil"
                    },
                    {
                      "type": "text",
                      "text": "ity "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "present"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "basic"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "prompts"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "interact"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "wi"
                    },
                    {
                      "type": "text",
                      "text": "th "
                    },
                    {
                      "type": "text",
                      "text": "o"
                    },
                    {
                      "type": "text",
                      "text": "ther "
                    },
                    {
                      "type": "text",
                      "text": "apps"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "extremely"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "valuable"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " c"
                    },
                    {
                      "type": "text",
                      "text": "ountless"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "scenarios."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0DD3027C-D4BD-428B-BCB9-A5A3DAFE97A8",
          "type": "message",
          "user": "U03JQJC0N1L",
          "text": "I'll choose to hope that silence on AppleScript and JXA is not ominous :rolling_on_the_floor_laughing:\n\nReally appreciate the answers on `bash` and shell scripting!",
          "ts": "1654888675.881989",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "33p/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'll"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "choose"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "hope"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "tha"
                    },
                    {
                      "type": "text",
                      "text": "t "
                    },
                    {
                      "type": "text",
                      "text": "silence"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "AppleSc"
                    },
                    {
                      "type": "text",
                      "text": "ript "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "JXA"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " not "
                    },
                    {
                      "type": "text",
                      "text": "ominous"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "emoji",
                      "name": "rolling_on_the_floor_laughing",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "text",
                      "text": "Re"
                    },
                    {
                      "type": "text",
                      "text": "ally "
                    },
                    {
                      "type": "text",
                      "text": "appreciate"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "answers"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "bash",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " shell scripting"
                    },
                    {
                      "type": "text",
                      "text": "!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "EA991EB0-8A4E-458E-BC1F-31AB7ACB8A28",
          "type": "message",
          "user": "U03HWD3Q7LH",
          "text": "No, it's not ominous... I just don't have an answer for that part of your question because I don't know and the relevant teams are not represented in the staffers of this lab.  Given that it is Friday, I'd suggest making a forum post about that and post the URL here.",
          "ts": "1654889149.303309",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JQJC0N1L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hWlL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "No,"
                    },
                    {
                      "type": "text",
                      "text": " it's "
                    },
                    {
                      "type": "text",
                      "text": "not"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "ominous..."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "just"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "don't"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "have"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "an"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "answer"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " t"
                    },
                    {
                      "type": "text",
                      "text": "hat"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "part"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "your"
                    },
                    {
                      "type": "text",
                      "text": " question "
                    },
                    {
                      "type": "text",
                      "text": "because"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "don't"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "know"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "relevant"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "teams"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "are"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "not"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "represented"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "staffers"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "this"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "lab."
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "text",
                      "text": "Given"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Friday,"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I'd"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "suggest"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "making"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "forum"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "post"
                    },
                    {
                      "type": "text",
                      "text": " about "
                    },
                    {
                      "type": "text",
                      "text": "that"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "post"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "URL"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "here."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3fd4aa08-14b1-4504-9593-b4a840b0aa96",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "\u003c@U03JQJC0N1L\u003e Consider scripting with Swift if you only share with other developers",
          "ts": "1654889257.289479",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Srvm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03JQJC0N1L"
                    },
                    {
                      "type": "text",
                      "text": " Consider scripting with Swift if you only share with other developers"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "AC2B6708-4FC0-4C63-8C39-79305DBA8634",
          "type": "message",
          "user": "U03JQJC0N1L",
          "text": "Thank you! I will make a forum post.",
          "ts": "1654889279.841539",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xQk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you!"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "I"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "will"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "make"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "forum"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "post."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6071AA65-3437-46C2-B49B-65C2491A10C6",
          "type": "message",
          "user": "U03JQJC0N1L",
          "text": "\u003c@U03HZ4PT2ER\u003e more considering for scenarios that can run on vanilla installations. It would be very cool if uncompiled Swift scripting could be done out of the box without any dev tools needing to be installed though!",
          "ts": "1654889375.939569",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tKcVc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HZ4PT2ER"
                    },
                    {
                      "type": "text",
                      "text": " more"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "considering"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "scenarios"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "th"
                    },
                    {
                      "type": "text",
                      "text": "at "
                    },
                    {
                      "type": "text",
                      "text": "can"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "run"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "on"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "vanilla"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "installations."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "It"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "would"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "very"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "c"
                    },
                    {
                      "type": "text",
                      "text": "ool "
                    },
                    {
                      "type": "text",
                      "text": "if"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "uncompiled"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Swift"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "scripting"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "could"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "done"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "out"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " the "
                    },
                    {
                      "type": "text",
                      "text": "box"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "with"
                    },
                    {
                      "type": "text",
                      "text": "out "
                    },
                    {
                      "type": "text",
                      "text": "any"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "dev"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "tools"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "needing"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "t"
                    },
                    {
                      "type": "text",
                      "text": "o "
                    },
                    {
                      "type": "text",
                      "text": "be"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "installed"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "though!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "935729a5-c5f8-4403-8951-b7675beefe05",
          "type": "message",
          "user": "U03J07WJLRK",
          "text": "I think that Swift changes too fast to ever be outside of devtools",
          "ts": "1654890000.240299",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "K2Jgv",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I think that Swift changes too fast to ever be outside of devtools"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "afb0aa3d-997b-4737-bf69-fa8bd7ef09b3",
          "type": "message",
          "user": "U03HZ4PT2ER",
          "text": "\u003c@U03J07WJLRK\u003e You can actually specify the version in the interpreter line, I think",
          "ts": "1654890107.046319",
          "thread_ts": "1654886943.340689",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "n0IaQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03J07WJLRK"
                    },
                    {
                      "type": "text",
                      "text": " You can actually specify the version in the interpreter line, I think"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J22AU6DQ\u003e asked\n\u0026gt; With SPM time-slot and this year dub-dub coming to an end I'd like to take this opportunity to thank everyone involved in Swift Package Manager development! \n\u0026gt; I used SPM in my pet-projects since Xcode 11 and played around with CLI apps before that, and during the last year SPM made a tremendous impact for my client project allowing to do things unimaginable before and iterate on the project with lightning speed. Taking into account the fact that it is a huge 12-years old app, it is mind-blowing how well SPM fit into this puzzle. :blush:",
      "ts": "1654887423.684609",
      "thread_ts": "1654887423.684609",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654889981.612519",
      "reactions": [
        {
          "name": "heart",
          "count": 4,
          "users": [
            "U03HES8111T",
            "U03K681G98A",
            "U03H36Q9X3R",
            "U03JSFUKL2U"
          ]
        },
        {
          "name": "pray",
          "count": 3,
          "users": [
            "U03J7H4LJ5N",
            "U03HES8111T",
            "U03H36Q9X3R"
          ]
        },
        {
          "name": "100",
          "count": 4,
          "users": [
            "U03K681G98A",
            "U03JEEUJPMJ",
            "U03H36Q9X3R",
            "U03J21CNQ1G"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "amc",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J22AU6DQ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"With SPM time-slot and this year dub-dub coming to an end I'd like to take this opportunity to thank everyone involved in Swift Package Manager development! \\nI used SPM in my pet-projects since Xcode 11 and played around with CLI apps before that, and during the last year SPM made a tremendous impact for my client project allowing to do things unimaginable before and iterate on the project with lightning speed. Taking into account the fact that it is a huge 12-years old app, it is mind-blowing how well SPM fit into this puzzle. \"},{\"type\":\"emoji\",\"name\":\"blush\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "57d1a710-e99b-4450-9ede-9b8245c7890e",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Thank you, that is really nice of you to say!  It's so rewarding to hear that all of the hard work is paying off.  We really appreciate the kind words.  Hope you have a great remainder of WWDC.",
          "ts": "1654887462.518159",
          "thread_ts": "1654887423.684609",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03J22AU6DQ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FLm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you, that is really nice of you to say!  It's so rewarding to hear that all of the hard work is paying off.  We really appreciate the kind words.  Hope you have a great remainder of WWDC."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9a3105f8-e76d-4a33-9362-c56fdc275bcf",
          "type": "message",
          "user": "U03JEEUJPMJ",
          "text": "(Oh 100%! – I used to *hate* dealing with external code in my projects, using third party dependency managers– I felt like I’d sneeze and a tower of cards would come falling. I’m sure a _ton_ of effort went into those third-party dependency managers, but: the first time I added an external package as a ‘first class citizen’ …in the Xcode UI …was *phenomenal*. :partying_face:)",
          "ts": "1654887662.552859",
          "thread_ts": "1654887423.684609",
          "edited": {
            "user": "U03JEEUJPMJ",
            "ts": "1654887791.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03HES8111T"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5y+i",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(Oh 100%! – I used to "
                    },
                    {
                      "type": "text",
                      "text": "hate",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " dealing with external code in my projects, using third party dependency managers– I felt like I’d sneeze and a tower of cards would come falling. I’m sure a "
                    },
                    {
                      "type": "text",
                      "text": "ton",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " of effort went into those third-party dependency managers, but: the first time I added an external package as a ‘first class citizen’ …in the Xcode UI …was "
                    },
                    {
                      "type": "text",
                      "text": "phenomenal",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". "
                    },
                    {
                      "type": "emoji",
                      "name": "partying_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": ")"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "632c8842-6315-46f5-b2b4-373d10f22239",
          "type": "message",
          "user": "U03JPFQNX5K",
          "text": "This team really took a brave challenge to replace long-running stable parts of our projects like *CocoaPods* and *Carthage*, and I have to say – they took a great direction and after some newborn issues, I can hardly ever remember CocoaPods and its invasive integration process :smile: it's been a great move to contain something that obviously useful to Xcode tooling. Becoming better and better with each release! :star-struck: My only wish would be the possibility to mix ObjC and Swift in a single package due to some project, now it rather forces me to some separation, but nevertheless…great for having it here, along with the erudite guys taking care of it around! :raised_hands:",
          "ts": "1654889204.899189",
          "thread_ts": "1654887423.684609",
          "edited": {
            "user": "U03JPFQNX5K",
            "ts": "1654889250.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "44D",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This team really took a brave challenge to replace long-running stable parts of our projects like "
                    },
                    {
                      "type": "text",
                      "text": "CocoaPods",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "text",
                      "text": "Carthage",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", and I have to say – they took a great direction and after some newborn issues, I can hardly ever remember CocoaPods and its invasive integration process "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " it's been a great move to contain something that obviously useful to Xcode tooling. Becoming better and better with each release! "
                    },
                    {
                      "type": "emoji",
                      "name": "star-struck",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " My only wish would be the possibility to mix ObjC and Swift in a single package due to some project, now it rather forces me to some separation, but nevertheless…great for having it here, along with the erudite guys taking care of it around! "
                    },
                    {
                      "type": "emoji",
                      "name": "raised_hands",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b00ee35e-7440-4dee-9a1a-39160e5745e5",
          "type": "message",
          "user": "U03J22AU6DQ",
          "text": "\u003c@U03JPFQNX5K\u003e, but it is totally possible to mix Swift and Objective-C in a single *package*! The limitation is only for targets. Does the approach of having SwiftTarget and ObjcTarget not work for you? If so, I’d really love to know about your setup since it is extremely easy to create targets with SPM. :thinking_face:",
          "ts": "1654889981.612519",
          "thread_ts": "1654887423.684609",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tss/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03JPFQNX5K"
                    },
                    {
                      "type": "text",
                      "text": ", but it is totally possible to mix Swift and Objective-C in a single "
                    },
                    {
                      "type": "text",
                      "text": "package",
                      "style": {
                        "bold": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "! The limitation is only for targets. Does the approach of having SwiftTarget and ObjcTarget not work for you? If so, I’d really love to know about your setup since it is extremely easy to create targets with SPM. "
                    },
                    {
                      "type": "emoji",
                      "name": "thinking_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03K681G98A\u003e asked\n\u0026gt; We are developing a brand new SwiftUI app. Among other things, this includes 3 Swift packages, which were integrated via \"Add local...\". When developing, this works great for all developers, because these packages are all in the same place in the filesystem (outside the actual project). The repositories of these 3 packages are private GitHub repos.\n\u0026gt; \n\u0026gt; How do we need to set up both Xcode and Xcode Cloud with these 3 private repo packages to make it work? How can Xcode Cloud access these 3 packages if they were only added locally to the project?",
      "ts": "1654887598.743319",
      "thread_ts": "1654887598.743319",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 9,
      "latest_reply": "1654903531.318099",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Zfu",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03K681G98A"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We are developing a brand new SwiftUI app. Among other things, this includes 3 Swift packages, which were integrated via \\\"Add local...\\\". When developing, this works great for all developers, because these packages are all in the same place in the filesystem (outside the actual project). The repositories of these 3 packages are private GitHub repos.\\n\\nHow do we need to set up both Xcode and Xcode Cloud with these 3 private repo packages to make it work? How can Xcode Cloud access these 3 packages if they were only added locally to the project?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "32fe6021-6866-48d6-a0ec-d68acbaee964",
          "type": "message",
          "user": "U03HES8111T",
          "text": "In order for Xcode Cloud to have access to the three packages, the Xcode project that uses them needs to have URL references the repositories in which those packages reside.  That will cause Xcode Cloud to check them out after checking out the main repository and before building.\n\nYou can still work with those packages locally by putting locally checked-out references to them in the same workspace as the main project in the local file system.  If the workspace contains a local checkout of a package, it will shadow a remote dependency of the same name.  In this way you can work with the three package dependencies locally, but have Xcode Cloud check them out from repositories.\n\nWhen committing changes to the main project you will want to make sure to also push any required changes to the three packages as well, and if needed, to create new tags for the main project to pull.  You may find it easiest to use branch dependencies for the packages if they are always developed together with the main project and not used from other projects.\n\nThe article at \u003chttps://developer.apple.com/documentation/xcode/editing-a-package-dependency-as-a-local-package\u003e has some more information about local editing workflows.",
          "ts": "1654887694.592969",
          "thread_ts": "1654887598.743319",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03K681G98A",
                "U03KC4368BS"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VfnL5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In order for Xcode Cloud to have access to the three packages, the Xcode project that uses them needs to have URL references the repositories in which those packages reside.  That will cause Xcode Cloud to check them out after checking out the main repository and before building.\n\nYou can still work with those packages locally by putting locally checked-out references to them in the same workspace as the main project in the local file system.  If the workspace contains a local checkout of a package, it will shadow a remote dependency of the same name.  In this way you can work with the three package dependencies locally, but have Xcode Cloud check them out from repositories.\n\nWhen committing changes to the main project you will want to make sure to also push any required changes to the three packages as well, and if needed, to create new tags for the main project to pull.  You may find it easiest to use branch dependencies for the packages if they are always developed together with the main project and not used from other projects.\n\nThe article at "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/editing-a-package-dependency-as-a-local-package",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " has some more information about local editing workflows."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b86699bd-a4da-4ade-80d6-01fde8e23853",
          "type": "message",
          "user": "U03K681G98A",
          "text": "Oh, thanks Anders! I wasn't aware that I could use both local and URL references to the packages. That sounds good. :+1::skin-tone-3:",
          "ts": "1654887863.137019",
          "thread_ts": "1654887598.743319",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CkUk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oh, thanks Anders! I wasn't aware that I could use both local and URL references to the packages. That sounds good. "
                    },
                    {
                      "type": "emoji",
                      "name": "+1",
                      "skin_tone": 3
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "77a934ec-f2fa-4687-a9ec-65afc7af1316",
          "type": "message",
          "user": "U03K681G98A",
          "text": "\u003c@U03HES8111T\u003e I guess the  references must be `\u003cmailto:git@github.com|git@github.com\u003e: ...` URLs, right?",
          "ts": "1654888048.225459",
          "thread_ts": "1654887598.743319",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "G8CUP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HES8111T"
                    },
                    {
                      "type": "text",
                      "text": " I guess the  references must be "
                    },
                    {
                      "type": "text",
                      "text": "git@github.com: ...",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " URLs, right?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5395d0c6-5410-411e-a131-9dbca7b58eb4",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Yes, it's a bit subtle, but can be a very flexible way to work with dependencies.  The dependency URLs can be any remote dependencies that Swift Package Manager supports, either `https://` or `git@`.",
          "ts": "1654888091.092369",
          "thread_ts": "1654887598.743319",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "ok_hand",
              "count": 1,
              "users": [
                "U03K681G98A"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "F9l=d",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, it's a bit subtle, but can be a very flexible way to work with dependencies.  The dependency URLs can be any remote dependencies that Swift Package Manager supports, either "
                    },
                    {
                      "type": "text",
                      "text": "https://",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " or "
                    },
                    {
                      "type": "text",
                      "text": "git@",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c5003510-eaca-45eb-bd36-1616733b8633",
          "type": "message",
          "user": "U03K681G98A",
          "text": "\u003c@U03HES8111T\u003e Well, if I add `\u003cmailto:git@github.com|git@github.com\u003e` URL references (without local ones), Xcode Cloud now says me:\n\n```Could not resolve package dependencies:\nFailed to clone repository git@github.com:MY_COMPANY/MY_PROJECT.git:\nCloning into bare repository '/Volumes/workspace/DerivedData/SourcePackages/repositories/MY_PROJECT-23c66cda'.\nfatal: could not read Username for '\u003chttp://github.com\u003e':terminal prompts disabled\nFailed to clone repository git@github.com:MY_COMPANY/MY_PROJECT.git:```",
          "ts": "1654891007.556419",
          "thread_ts": "1654887598.743319",
          "edited": {
            "user": "U03K681G98A",
            "ts": "1654891023.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5+c",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HES8111T"
                    },
                    {
                      "type": "text",
                      "text": " Well, if I add "
                    },
                    {
                      "type": "link",
                      "url": "mailto:git@github.com",
                      "text": "git@github.com",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " URL references (without local ones), Xcode Cloud now says me:\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"Could not resolve package dependencies:\\nFailed to clone repository git@github.com:MY_COMPANY\\/MY_PROJECT.git:\\nCloning into bare repository '\\/Volumes\\/workspace\\/DerivedData\\/SourcePackages\\/repositories\\/MY_PROJECT-23c66cda'.\\nfatal: could not read Username for '\"},{\"type\":\"link\",\"url\":\"http:\\/\\/github.com\"},{\"type\":\"text\",\"text\":\"':terminal prompts disabled\\nFailed to clone repository git@github.com:MY_COMPANY\\/MY_PROJECT.git:\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fe39ef6b-f0ea-42e4-95c5-85df8f851aec",
          "type": "message",
          "user": "U03JH7BL15L",
          "text": "FWIW, I’m getting this same error.\n\nI posted about it to the dev forums as well.\n\n\u003chttps://developer.apple.com/forums/thread/707839\u003e",
          "ts": "1654900265.198419",
          "thread_ts": "1654887598.743319",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "r+f",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "FWIW, I’m getting this same error.\n\nI posted about it to the dev forums as well.\n\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/forums/thread/707839",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e57e62ed-3d94-49ca-ac9a-d366f1619de1",
          "type": "message",
          "user": "U03K681G98A",
          "text": "Finally I solved the problem and I would like to share my findings. It was very tricky! :slightly_smiling_face:\nHave a look at \u003chttps://gist.github.com/phranck/4d7c00e4d534d1c4abddc51d70ced81b|this Gist\u003e.",
          "ts": "1654903302.245639",
          "thread_ts": "1654887598.743319",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03JH7BL15L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2MO4L",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Finally I solved the problem and I would like to share my findings. It was very tricky! "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\nHave a look at "
                    },
                    {
                      "type": "link",
                      "url": "https://gist.github.com/phranck/4d7c00e4d534d1c4abddc51d70ced81b",
                      "text": "this Gist"
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d01b5c64-f73c-431b-ae7c-6652b32b2235",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Thank you very much for the write-up of the problem and solution here!  If you feel that there were user interface issues in Xcode that contributed to this (and it sounds is if there were!), please do file at ticket on that at \u003chttps://feedbackassistant.apple.com/\u003e.  It sounds as if the workflow in Xcode could have been more helpful and saved time in setting this up.",
          "ts": "1654903502.561589",
          "thread_ts": "1654887598.743319",
          "edited": {
            "user": "U03HES8111T",
            "ts": "1654903658.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "100",
              "count": 1,
              "users": [
                "U03JH7BL15L"
              ]
            },
            {
              "name": "pray",
              "count": 1,
              "users": [
                "U03JH7BL15L"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YJz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you very much for the write-up of the problem and solution here!  If you feel that there were user interface issues in Xcode that contributed to this (and it sounds is if there were!), please do file at ticket on that at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ".  It sounds as if the workflow in Xcode could have been more helpful and saved time in setting this up."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9330906b-e0c8-492b-a394-167414ab913a",
          "type": "message",
          "user": "U03HES8111T",
          "text": "I'm glad that you did arrive at a setup that works for you in the end, however!",
          "ts": "1654903531.318099",
          "thread_ts": "1654887598.743319",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "F/l",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'm glad that you did arrive at a setup that works for you in the end, however!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "7505fe18-e7da-4127-a47c-610c15f16c9e",
      "type": "message",
      "user": "U03HL5G7YQL",
      "text": ":stopwatch: Halfway through! So many great questions coming in... and we're ready for more!",
      "ts": "1654888281.923539",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "O77AS",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "emoji",
                  "name": "stopwatch",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " Halfway through! So many great questions coming in... and we're ready for more!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4D51VC4\u003e asked\n\u0026gt; For a workspace setup with multiple projects, is there a way to define a remote Swift package at the workspace level rather than within each project? It seems possible for local packages (drag it to the workspace) but wonder if it’s also possible for remote ones too. \n\u0026gt; \n\u0026gt; Thank you. ",
      "ts": "1654888292.308079",
      "thread_ts": "1654888292.308079",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654888508.387449",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "7QO0",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4D51VC4"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"For a workspace setup with multiple projects, is there a way to define a remote Swift package at the workspace level rather than within each project? It seems possible for local packages (drag it to the workspace) but wonder if it\\u2019s also possible for remote ones too. \\n\\nThank you. \"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "4d7b218f-3a5f-4dd5-84f1-160985754c83",
          "type": "message",
          "user": "U03HES8111T",
          "text": "There isn't currently a way to define dependencies on remote packages at the workspace level.  Part of the reason for this is that projects can belong to multiple workspaces (or even no workspace), so when the project is opened on its own or as part of a different workspace, it wouldn't have access to those dependencies.\n\nIf the project is built in Xcode Cloud, for example, it needs to be able to check out its dependencies so it can be built.\n\nThat said, there is definitely a compelling reason to be able to share dependency declarations in some form.  If you have particular needs or suggestions for how this should be expressed, we would very much like to hear about it as feedback at \u003chttps://feedbackassistant.apple.com/\u003e.",
          "ts": "1654888339.885909",
          "thread_ts": "1654888292.308079",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 1,
              "users": [
                "U03J4D51VC4"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wP+b1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There isn't currently a way to define dependencies on remote packages at the workspace level.  Part of the reason for this is that projects can belong to multiple workspaces (or even no workspace), so when the project is opened on its own or as part of a different workspace, it wouldn't have access to those dependencies.\n\nIf the project is built in Xcode Cloud, for example, it needs to be able to check out its dependencies so it can be built.\n\nThat said, there is definitely a compelling reason to be able to share dependency declarations in some form.  If you have particular needs or suggestions for how this should be expressed, we would very much like to hear about it as feedback at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2D74F0F4-59E6-4064-9B6E-81F61516E8E5",
          "type": "message",
          "user": "U03J4D51VC4",
          "text": "Thank you for your reply Anders and for clarifying some of the rationale behind this. ",
          "ts": "1654888508.387449",
          "thread_ts": "1654888292.308079",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Bqw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "your"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "reply"
                    },
                    {
                      "type": "text",
                      "text": " An"
                    },
                    {
                      "type": "text",
                      "text": "ders"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "and"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " clarifying "
                    },
                    {
                      "type": "text",
                      "text": "some"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "of"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "rationale"
                    },
                    {
                      "type": "text",
                      "text": " behind "
                    },
                    {
                      "type": "text",
                      "text": "this. "
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4D1FEP6\u003e asked\n\u0026gt; I know some of my XCTests are fast enough, but some are slow, and I could probably change that. I saw in one session there is a method for profiling individual tests but I wonder if there is something broader. Is there something akin to a table I could get at the end of running all my tests that listed each test with its run time, so I can sort by execution time and then know which individual tests to zero in on first?",
      "ts": "1654888647.608909",
      "thread_ts": "1654888647.608909",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654888737.267539",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "yJF",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4D1FEP6"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I know some of my XCTests are fast enough, but some are slow, and I could probably change that. I saw in one session there is a method for profiling individual tests but I wonder if there is something broader. Is there something akin to a table I could get at the end of running all my tests that listed each test with its run time, so I can sort by execution time and then know which individual tests to zero in on first?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "545b17d2-5719-4a6f-91fa-4e92fa60dc2d",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "You can look at this in the test summary in the report navigator :slightly_smiling_face:",
          "ts": "1654888680.111269",
          "thread_ts": "1654888647.608909",
          "files": [
            {
              "id": "F03K75X4527",
              "created": 1654888666,
              "timestamp": 1654888666,
              "name": "Screenshot 2022-06-10 at 12.17.16 PM.png",
              "title": "Screenshot 2022-06-10 at 12.17.16 PM.png",
              "mimetype": "image/png",
              "image_exif_rotation": 0,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U03HES8U8FP",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 788440,
              "url": "",
              "url_download": "",
              "url_private": "C03H0JN431U/F03K75X4527-Screenshot 2022-06-10 at 12.17.16 PM.png",
              "url_private_download": "C03H0JN431U/F03K75X4527-Screenshot 2022-06-10 at 12.17.16 PM.png",
              "original_h": 2024,
              "original_w": 3024,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K75X4527-de77713f4e/screenshot_2022-06-10_at_12.17.16_pm_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K75X4527-de77713f4e/screenshot_2022-06-10_at_12.17.16_pm_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K75X4527-de77713f4e/screenshot_2022-06-10_at_12.17.16_pm_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K75X4527-de77713f4e/screenshot_2022-06-10_at_12.17.16_pm_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 360,
              "thumb_360_h": 241,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K75X4527-de77713f4e/screenshot_2022-06-10_at_12.17.16_pm_480.png",
              "thumb_480_w": 480,
              "thumb_480_h": 321,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K75X4527-de77713f4e/screenshot_2022-06-10_at_12.17.16_pm_720.png",
              "thumb_720_w": 720,
              "thumb_720_h": 482,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K75X4527-de77713f4e/screenshot_2022-06-10_at_12.17.16_pm_960.png",
              "thumb_960_w": 960,
              "thumb_960_h": 643,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F03K75X4527-de77713f4e/screenshot_2022-06-10_at_12.17.16_pm_1024.png",
              "thumb_1024_w": 1024,
              "thumb_1024_h": 685,
              "permalink": "https://appleevents.enterprise.slack.com/files/U03HES8U8FP/F03K75X4527/screenshot_2022-06-10_at_12.17.16_pm.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F03K75X4527-d2714d6a1b",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "reactions": [
            {
              "name": "raised_hands::skin-tone-3",
              "count": 1,
              "users": [
                "U03J4D1FEP6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "j4q",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can look at this in the test summary in the report navigator "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7fe9f151-bf5b-4dd0-b42d-7e6412a4d080",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "Wat.",
          "ts": "1654888710.055399",
          "thread_ts": "1654888647.608909",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Uxa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Wat."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a0fc3b26-0f74-45ba-9bcf-32fcc5beb08d",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "This has been there all along?? 🫣🥹:laughing:",
          "ts": "1654888737.267539",
          "thread_ts": "1654888647.608909",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "smiley",
              "count": 1,
              "users": [
                "U03HES8U8FP"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "h8e",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This has been there all along?? 🫣🥹"
                    },
                    {
                      "type": "emoji",
                      "name": "laughing",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JRP6568Y\u003e asked\n\u0026gt; Question for a friend: They've been building toolchains from source for some custom work, but have noticed some source releases have slowed. Specifically LD64 hasn't seen a source release on Github in 15 months. Will we see more regular source drops for the open source components to Xcodes tooling?",
      "ts": "1654888673.609689",
      "thread_ts": "1654888673.609689",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654888689.420309",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "i68JN",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JRP6568Y"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Question for a friend: They've been building toolchains from source for some custom work, but have noticed some source releases have slowed. Specifically LD64 hasn't seen a source release on Github in 15 months. Will we see more regular source drops for the open source components to Xcodes tooling?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "b8977a95-c41f-4422-a672-8cbf95a3e3ae",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Thanks for the note, Colin.  Those drops are indeed a bit behind.  The team is aware of that and working on it but I don't have an ETA for you.  You can also reach out to \u003cmailto:opensource@apple.com|opensource@apple.com\u003e to express your support and interest.",
          "ts": "1654888689.420309",
          "thread_ts": "1654888673.609689",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JRP6568Y"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vRmh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the note, Colin.  Those drops are indeed a bit behind.  The team is aware of that and working on it but I don't have an ETA for you.  You can also reach out to "
                    },
                    {
                      "type": "link",
                      "url": "mailto:opensource@apple.com",
                      "text": "opensource@apple.com"
                    },
                    {
                      "type": "text",
                      "text": " to express your support and interest."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JEAPSKE2\u003e asked\n\u0026gt; We are trying to build some libraries for iOS that will be used by other projects within our organization.  We are finding that you cannot `lipo` binaries built for the Intel x64 catalyst target together in a single package as contains an x64 iOS Simulator target.  Are there plans to be able to do that at some point in the future, or should we just build separate \"iOS device/Simulator\" binaries and \"arm/intel catalyst\" binaries?",
      "ts": "1654888750.135639",
      "thread_ts": "1654888750.135639",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654888802.986179",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "qlWa",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JEAPSKE2"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We are trying to build some libraries for iOS that will be used by other projects within our organization.  We are finding that you cannot `lipo` binaries built for the Intel x64 catalyst target together in a single package as contains an x64 iOS Simulator target.  Are there plans to be able to do that at some point in the future, or should we just build separate \\\"iOS device\\/Simulator\\\" binaries and \\\"arm\\/intel catalyst\\\" binaries?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "14d3a141-00eb-470e-bac9-3feaa898fd8b",
          "type": "message",
          "user": "U03HHPDDRK5",
          "text": "`lipo` is an architecture-level tool, so as you’ve discovered you cannot use it to create a binary with slices for the same architecture but different platforms.\n\nXCFrameworks fill this role. You can learn about using them at these links: \u003chttps://developer.apple.com/documentation/xcode/distributing-binary-frameworks-as-swift-packages\u003e and \u003chttps://help.apple.com/xcode/mac/11.4/#/dev544efab96\u003e",
          "ts": "1654888802.986179",
          "thread_ts": "1654888750.135639",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03JEEUJPMJ",
                "U03JEAPSKE2"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oKOF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "lipo",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is an architecture-level tool, so as you’ve discovered you cannot use it to create a binary with slices for the same architecture but different platforms.\n\nXCFrameworks fill this role. You can learn about using them at these links: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/distributing-binary-frameworks-as-swift-packages",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "link",
                      "url": "https://help.apple.com/xcode/mac/11.4/#/dev544efab96",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HT20UKFZ\u003e asked\n\u0026gt; This is probably a feedback request, but is there a way to get testing comments in Xcode to avoiud having to go to the developer portal prior to releasing to testers?",
      "ts": "1654888762.917879",
      "thread_ts": "1654888762.917879",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 5,
      "latest_reply": "1654890408.506839",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "28Nv",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HT20UKFZ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"This is probably a feedback request, but is there a way to get testing comments in Xcode to avoiud having to go to the developer portal prior to releasing to testers?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "4f143259-ce0f-4483-a484-c649f99cdbce",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "There currently isn't a way to do that, but it's a great idea. We'd welcome \u003chttps://feedbackassistant.apple.com|feedback\u003e from you requesting this feature!",
          "ts": "1654888768.758029",
          "thread_ts": "1654888762.917879",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "03e17",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There currently isn't a way to do that, but it's a great idea. We'd welcome "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": "feedback"
                    },
                    {
                      "type": "text",
                      "text": " from you requesting this feature!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ed9ae946-9db1-42c2-9cb9-088b42f6823c",
          "type": "message",
          "user": "U03HT20UKFZ",
          "text": "Sweet done!",
          "ts": "1654889178.941079",
          "thread_ts": "1654888762.917879",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hnP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Sweet done!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b3fa5854-8a87-44b3-b9c7-89a7572123a3",
          "type": "message",
          "user": "U03HT20UKFZ",
          "text": "thanks",
          "ts": "1654889179.879629",
          "thread_ts": "1654888762.917879",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "od011",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "thanks"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a6e652cd-b434-4135-be1e-3018dc8ef22a",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "If you wouldn't mind, could you share the FB number with me?",
          "ts": "1654889384.742669",
          "thread_ts": "1654888762.917879",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wwi/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you wouldn't mind, could you share the FB number with me?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e2e8c89e-87aa-4750-aa48-06f72b4ec3f7",
          "type": "message",
          "user": "U03HT20UKFZ",
          "text": "FB10163784",
          "ts": "1654890408.506839",
          "thread_ts": "1654888762.917879",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 1,
              "users": [
                "U03HB5P2UTY"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zCe",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "FB10163784"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4D51VC4\u003e asked\n\u0026gt; Are the rules for how Xcode links swift package product dependencies documented? \n\u0026gt; \n\u0026gt; For cases when package products don’t define a linkage type (i.e auto) it looks like Xcode favours static unless it encounters a dynamic target in the dependency graph of a target. That seems sensible but curious if this behaviour is stable and if it can be controlled?\n\u0026gt; \n\u0026gt; Thank you :pray: ",
      "ts": "1654889057.668239",
      "thread_ts": "1654889057.668239",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654889116.810939",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "l560",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4D51VC4"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Are the rules for how Xcode links swift package product dependencies documented? \\n\\nFor cases when package products don\\u2019t define a linkage type (i.e auto) it looks like Xcode favours static unless it encounters a dynamic target in the dependency graph of a target. That seems sensible but curious if this behaviour is stable and if it can be controlled?\\n\\nThank you \"},{\"type\":\"emoji\",\"name\":\"pray\"},{\"type\":\"text\",\"text\":\" \"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "2eef3909-d9c0-4f1c-a0f3-08080e7daae5",
          "type": "message",
          "user": "U03HES8111T",
          "text": "If a product does use automatic linkage, Xcode will built it dynamically depending on the situation, e.g. if it is used by the app and its test bundle — this is done to avoid duplicated symbols at runtime. In `swift build`, automatic products always build statically.\n\nThere isn't currently any way for a client of a library to control whether to build an automatic library as static or dynamic.",
          "ts": "1654889116.810939",
          "thread_ts": "1654889057.668239",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03J4D51VC4",
                "U03JPFQNX5K"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cD4M6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If a product does use automatic linkage, Xcode will built it dynamically depending on the situation, e.g. if it is used by the app and its test bundle — this is done to avoid duplicated symbols at runtime. In "
                    },
                    {
                      "type": "text",
                      "text": "swift build",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", automatic products always build statically.\n\nThere isn't currently any way for a client of a library to control whether to build an automatic library as static or dynamic."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVE01C6A\u003e asked\n\u0026gt; s it possible to define a key binding in Xcode to trigger a command plugin more conveniently? Same is possible for Xcode Extensions today.\n\u0026gt; \n\u0026gt; Same question asked here: \u003chttps://developer.apple.com/forums/thread/707866|https://developer.apple.com/forums/thread/707866\u003e",
      "ts": "1654889423.920609",
      "thread_ts": "1654889423.920609",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654889462.430799",
      "reactions": [
        {
          "name": "white_check_mark",
          "count": 1,
          "users": [
            "U03HVES3A4E"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "XXIiM",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVE01C6A"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"s it possible to define a key binding in Xcode to trigger a command plugin more conveniently? Same is possible for Xcode Extensions today.\\n\\nSame question asked here: \"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/707866\",\"text\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/707866\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "79d54318-4fd5-461e-8a04-487d849778a6",
          "type": "message",
          "user": "U03HES8SVM3",
          "text": "Currently, there isn’t a way to do that. We’d welcome \u003chttps://feedbackassistant.apple.com/|feedback\u003e from you requesting it!",
          "ts": "1654889462.430799",
          "thread_ts": "1654889423.920609",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HN9FSVT9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XkCbV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Currently, there isn’t a way to do that. We’d welcome "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/",
                      "text": "feedback"
                    },
                    {
                      "type": "text",
                      "text": " from you requesting it!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HRR4JA31\u003e asked\n\u0026gt; Are there plans to add Behaviors in Xcode that switch to the Debug Gauges? (Or am I the only one using Behaviors?)",
      "ts": "1654889431.256619",
      "thread_ts": "1654889431.256619",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654890073.573629",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "BPCuQ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HRR4JA31"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Are there plans to add Behaviors in Xcode that switch to the Debug Gauges? (Or am I the only one using Behaviors?)\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "932c4010-0322-4f80-92cb-89ce4a9f8899",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "Can you send us a feedback about this? We would like to see what’s your use case :slightly_smiling_face:",
          "ts": "1654889443.144389",
          "thread_ts": "1654889431.256619",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "HnW",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Can you send us a feedback about this? We would like to see what’s your use case "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cbfe76b3-0541-4a62-b6b7-eeaf151f3649",
          "type": "message",
          "user": "U03HRR4JA31",
          "text": "Feedback was closed Aug 14, 2018.",
          "ts": "1654890065.567889",
          "thread_ts": "1654889431.256619",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6KG",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Feedback was closed Aug 14, 2018."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ac99f021-bbce-44d1-a84d-5985e9b1b549",
          "type": "message",
          "user": "U03HRR4JA31",
          "text": "FB5713916",
          "ts": "1654890073.573629",
          "thread_ts": "1654889431.256619",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tUrj9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "FB5713916"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVD5Q8DC\u003e asked\n\u0026gt; Is there a way to have some code in my project participate in the preview mechanism outside of SwiftUI. In particular, I'm creating drawing (and rendering) code - one produces images, another produces 3D meshes with textures (SceneKit - I'm slowing adding RealityKit support, but not there yet) - and I'd like to be able to preview the output of a bit of sample to enable the quick-iteration/verify loop for how the code I'm writing is working.\n\u0026gt; \n\u0026gt; So far I've been doing this with images by dropping the image into a SwiftUI view that only shows an image, which mostly works - but it gets notably more complicated and prone to failure when I'm looking at the resulting 3D object (through a hosting view currently).",
      "ts": "1654889569.866189",
      "thread_ts": "1654889569.866189",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654889853.179729",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "laXE",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVD5Q8DC"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a way to have some code in my project participate in the preview mechanism outside of SwiftUI. In particular, I'm creating drawing (and rendering) code - one produces images, another produces 3D meshes with textures (SceneKit - I'm slowing adding RealityKit support, but not there yet) - and I'd like to be able to preview the output of a bit of sample to enable the quick-iteration\\/verify loop for how the code I'm writing is working.\\n\\nSo far I've been doing this with images by dropping the image into a SwiftUI view that only shows an image, which mostly works - but it gets notably more complicated and prone to failure when I'm looking at the resulting 3D object (through a hosting view currently).\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "fe5d5528-787f-4be1-a2a9-7c33d85a6cc0",
          "type": "message",
          "user": "U03HB5N9QBY",
          "text": "That sounds like a good use for SwiftUI previews and generally should work. What specific issues are you seeing? (Feel free to file \u003chttps://developer.apple.com/bug-reporting/|feedback\u003e for any problems you’re encountering.)\n\nAnother suggestion for you would be to try an Xcode Playground. You can use a \u003chttps://developer.apple.com/documentation/playgroundsupport/playgroundpage/1964506-liveview|live view\u003e to show your view while working on it.",
          "ts": "1654889651.351149",
          "thread_ts": "1654889569.866189",
          "attachments": [
            {
              "fallback": "Apple Developer: Bug Reporting - Apple Developer",
              "id": 1,
              "title": "Bug Reporting - Apple Developer",
              "title_link": "https://developer.apple.com/bug-reporting/",
              "text": "Now with Feedback Assistant available on iPhone, iPad, Mac, and the web, it’s easier to submit effective bug reports and request enhancements to APIs and tools.",
              "image_url": "https://developer.apple.com/news/images/og/bug-reporting-og.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/bug-reporting/",
              "original_url": "https://developer.apple.com/bug-reporting/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HVD5Q8DC"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cug",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That sounds like a good use for SwiftUI previews and generally should work. What specific issues are you seeing? (Feel free to file "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/bug-reporting/",
                      "text": "feedback"
                    },
                    {
                      "type": "text",
                      "text": " for any problems you’re encountering.)\n\nAnother suggestion for you would be to try an Xcode Playground. You can use a "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/playgroundsupport/playgroundpage/1964506-liveview",
                      "text": "live view"
                    },
                    {
                      "type": "text",
                      "text": " to show your view while working on it."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "28ba2305-562d-4a0e-ad1d-a80f89d5d441",
          "type": "message",
          "user": "U03HVD5Q8DC",
          "text": "The biggest issue that I was hitting was breaking the preview mechanism (usually when I screw up and typo in source, breaking the compile) and having to manually restart the whole preview mechanism.",
          "ts": "1654889824.130539",
          "thread_ts": "1654889569.866189",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ilgfK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The biggest issue that I was hitting was breaking the preview mechanism (usually when I screw up and typo in source, breaking the compile) and having to manually restart the whole preview mechanism."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e6b2aa2d-4b04-4e39-b668-5cca8b5030d3",
          "type": "message",
          "user": "U03HVD5Q8DC",
          "text": "I’ll continue to use a SwiftUI View to front my visualizations for this iteration use case - sounds like the preferred means of getting these these days.",
          "ts": "1654889853.179729",
          "thread_ts": "1654889569.866189",
          "edited": {
            "user": "U03HVD5Q8DC",
            "ts": "1654889866.000000"
          },
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HB5N9QBY"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "F0nU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’ll continue to use a SwiftUI View to front my visualizations for this iteration use case - sounds like the preferred means of getting these these days."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KC4368BS\u003e asked\n\u0026gt; I have been using the workaround from this thread [\u003chttps://forums.swift.org/t/how-to-link-a-swift-package-as-dynamic/32062|https://forums.swift.org/t/how-to-link-a-swift-package-as-dynamic/32062\u003e] for a long time due to issues if a package is used by multiple frameworks/targets. tl;dr: Create a framework that links all SPM packages I use and then all of my other frameworks/extensions dynamically load that single framework. It seems like there have been some Xcode improvements such that it isn't as necessary anymore, but is there a downside to sticking with it? I think if I stopped most of those packages would have to be dynamic and thus couldn't be dead-code-stripped, right?",
      "ts": "1654889604.939959",
      "thread_ts": "1654889604.939959",
      "attachments": [
        {
          "fallback": "Swift Forums: How to link a Swift Package as dynamic",
          "id": 1,
          "title": "How to link a Swift Package as dynamic",
          "title_link": "https://forums.swift.org/t/how-to-link-a-swift-package-as-dynamic/32062",
          "text": "According to the SwiftPM documentation, when defining the type of a package: Leave this parameter unspecified to let to let the Swift Package Manager choose between static or dynamic linking (recommended). However, when using such libraries from Xcode in a fairly simple setup and running unit tests, Xcode complains about duplicated symbols: objc[97739]: Class _TtC8Deferred18POSIXReadWriteLock is implemented in both /Users/pcifani/Library/Developer/CoreSimulator/Devices/835DF32C-44B3-4841-B6...",
          "thumb_url": "https://aws1.discourse-cdn.com/swift/original/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6.png",
          "service_name": "Swift Forums",
          "service_icon": "https://aws1.discourse-cdn.com/swift/optimized/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6_2_180x180.png",
          "from_url": "https://forums.swift.org/t/how-to-link-a-swift-package-as-dynamic/32062",
          "original_url": "https://forums.swift.org/t/how-to-link-a-swift-package-as-dynamic/32062",
          "fields": [
            {
              "title": "Reading time",
              "value": "1 mins :clock2:",
              "short": true
            },
            {
              "title": "Likes",
              "value": "9 :heart:",
              "short": true
            }
          ],
          "blocks": null,
          "ts": 1577436196
        }
      ],
      "edited": {
        "user": "B03HGE996MA",
        "ts": "1654889606.000000"
      },
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654889620.262549",
      "reactions": [
        {
          "name": "eyes",
          "count": 1,
          "users": [
            "U03HVES3A4E"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "w65Y",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KC4368BS"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I have been using the workaround from this thread [\"},{\"type\":\"link\",\"url\":\"https:\\/\\/forums.swift.org\\/t\\/how-to-link-a-swift-package-as-dynamic\\/32062\",\"text\":\"https:\\/\\/forums.swift.org\\/t\\/how-to-link-a-swift-package-as-dynamic\\/32062\"},{\"type\":\"text\",\"text\":\"] for a long time due to issues if a package is used by multiple frameworks\\/targets. tl;dr: Create a framework that links all SPM packages I use and then all of my other frameworks\\/extensions dynamically load that single framework. It seems like there have been some Xcode improvements such that it isn't as necessary anymore, but is there a downside to sticking with it? I think if I stopped most of those packages would have to be dynamic and thus couldn't be dead-code-stripped, right?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "2c8036e4-4bd4-4999-b4f2-bfbe3fc41bd8",
          "type": "message",
          "user": "U03HES8111T",
          "text": "The approach you are currently using seems like the best approach also in Xcode 14.  I believe you are correct that you would lose dead-code-stripping if you switched to using purely dynamic libraries.",
          "ts": "1654889620.262549",
          "thread_ts": "1654889604.939959",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U03KC4368BS"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LpMq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The approach you are currently using seems like the best approach also in Xcode 14.  I believe you are correct that you would lose dead-code-stripping if you switched to using purely dynamic libraries."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4D1FEP6\u003e asked\n\u0026gt; When I previously used CocoaPods for my dependencies I would commit the local pods directory into my git repo. I realise there are varying views on this but I wanted to be able to roll my project back to a specific point in the past and know that I was able to build the exact same binary when I needed to. This also protects against an upstream author unpublishing their code etc. \n\u0026gt; \n\u0026gt; With SPM I have given this up, but wonder if there is a way to achieve the same thing: is it possible to specify the local checkout location of a remote package, so I could have those files committed as part of my git repo again, if I chose to?",
      "ts": "1654889648.959839",
      "thread_ts": "1654889648.959839",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654891302.981469",
      "reactions": [
        {
          "name": "100",
          "count": 1,
          "users": [
            "U03JZ218ZUY"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Bfu",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4D1FEP6"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"When I previously used CocoaPods for my dependencies I would commit the local pods directory into my git repo. I realise there are varying views on this but I wanted to be able to roll my project back to a specific point in the past and know that I was able to build the exact same binary when I needed to. This also protects against an upstream author unpublishing their code etc. \\n\\nWith SPM I have given this up, but wonder if there is a way to achieve the same thing: is it possible to specify the local checkout location of a remote package, so I could have those files committed as part of my git repo again, if I chose to?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "f38e7c78-a3ae-4a5f-8bbc-de5684396ee1",
          "type": "message",
          "user": "U03HES8111T",
          "text": "There isn't currently a way to do this with Swift Packages in Xcode, but that is an interesting idea.  If you have particular idea for how such a feature should work in order to be useful to you, we would love to hear feedback at \u003chttps://feedbackassistant.apple.com/\u003e.\n\nAn alternative would be to fork the repositories for the dependencies, though it would mean having to pull updates from the upstream repository into the fork at regular intervals.",
          "ts": "1654889720.243869",
          "thread_ts": "1654889648.959839",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1::skin-tone-3",
              "count": 1,
              "users": [
                "U03J4D1FEP6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FAN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There isn't currently a way to do this with Swift Packages in Xcode, but that is an interesting idea.  If you have particular idea for how such a feature should work in order to be useful to you, we would love to hear feedback at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ".\n\nAn alternative would be to fork the repositories for the dependencies, though it would mean having to pull updates from the upstream repository into the fork at regular intervals."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "d0329465-a219-40fe-b513-9dd6f135f1a9",
          "type": "message",
          "user": "U03J4D1FEP6",
          "text": "Will definitely file a feedback. I think this is quite straightforward to implement, if Xcode was willing.",
          "ts": "1654891302.981469",
          "thread_ts": "1654889648.959839",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ouj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Will definitely file a feedback. I think this is quite straightforward to implement, if Xcode was willing."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4EW62N8\u003e asked\n\u0026gt; Is XCUITest supported on Xcode cloud?",
      "ts": "1654889658.779179",
      "thread_ts": "1654889658.779179",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654889694.531219",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "S5y",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4EW62N8"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is XCUITest supported on Xcode cloud?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "df0cf0d0-4e5c-4016-9b12-4d4fd079b5c5",
          "type": "message",
          "user": "U03HES8U8FP",
          "text": "Yes! You can use XCUITest in Xcode Cloud",
          "ts": "1654889680.910439",
          "thread_ts": "1654889658.779179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "X9Aq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes! You can use XCUITest in Xcode Cloud"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "16f851e4-539b-4ce5-9aba-8d0a9daebe5c",
          "type": "message",
          "user": "U03J4EW62N8",
          "text": "Thanks!",
          "ts": "1654889694.531219",
          "thread_ts": "1654889658.779179",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TJw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J4D51VC4\u003e asked\n\u0026gt; Not a question, but wanted to pass my thanks :pray: for the scheme selector pop up (from Xcode 13?) when running tests :ok_hand:. It works wonders in large workspaces with several hundred schemes!",
      "ts": "1654889752.619609",
      "thread_ts": "1654889752.619609",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654889779.454809",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "EX//H",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J4D51VC4"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Not a question, but wanted to pass my thanks \"},{\"type\":\"emoji\",\"name\":\"pray\"},{\"type\":\"text\",\"text\":\" for the scheme selector pop up (from Xcode 13?) when running tests \"},{\"type\":\"emoji\",\"name\":\"ok_hand\"},{\"type\":\"text\",\"text\":\". It works wonders in large workspaces with several hundred schemes!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6c4c713f-0318-46c7-a922-8a52ffbca9a1",
          "type": "message",
          "user": "U03HES8CXHB",
          "text": "Thank you for your great feedback, Kassem. We’re glad it has been helpful!",
          "ts": "1654889779.454809",
          "thread_ts": "1654889752.619609",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03J4D51VC4"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/SV9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for your great feedback, Kassem. We’re glad it has been helpful!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HVF9E2BG\u003e asked\n\u0026gt; Is there a way with package plugins to make linters / formatters run automatically in some cases? Maybe by users setting up a behavior or when a file is saved etc?",
      "ts": "1654889805.392769",
      "thread_ts": "1654889805.392769",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 26,
      "latest_reply": "1654891541.157989",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "bc4FW",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HVF9E2BG"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a way with package plugins to make linters \\/ formatters run automatically in some cases? Maybe by users setting up a behavior or when a file is saved etc?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "cc67475b-7ef4-4b50-8a17-4802fa63e891",
          "type": "message",
          "user": "U03HES8111T",
          "text": "There isn't currently any support for that, but we would love to hear feedback about what kinds of cases would be useful to you.  You can file feedback at \u003chttps://feedbackassistant.apple.com/\u003e.",
          "ts": "1654889815.816709",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ce2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There isn't currently any support for that, but we would love to hear feedback about what kinds of cases would be useful to you.  You can file feedback at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "be59fe23-12a4-4d4a-a2ed-2a53b3c28a65",
          "type": "message",
          "user": "U03HVF9E2BG",
          "text": "sounds good",
          "ts": "1654889861.708419",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OvN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "sounds good"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "09d0d98b-f871-4cd5-8d0a-54b115f29bb6",
          "type": "message",
          "user": "U03HVF9E2BG",
          "text": "i think the clearest case is autoformatting on save if the user likes that workflow",
          "ts": "1654889873.386689",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03KC4368BS"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9Im",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "i think the clearest case is autoformatting on save if the user likes that workflow"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "36eb44b8-a6a9-424b-9487-33a5ab3b977c",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Thanks, that makes a lot of sense as one of the events to cause it to run.",
          "ts": "1654889976.464119",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 3,
              "users": [
                "U03HXC6HSGN",
                "U03KC4368BS",
                "U03HN9FSVT9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bNxlR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks, that makes a lot of sense as one of the events to cause it to run."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a13dadf2-cb63-44f2-bac2-0a6d60e69e2d",
          "type": "message",
          "user": "U03HVF9E2BG",
          "text": "i filed FB10164124",
          "ts": "1654890252.463749",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "78C",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "i filed FB10164124"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cbcebb41-242b-4993-9d4e-02abc221adf6",
          "type": "message",
          "user": "U03HVF9E2BG",
          "text": "another idea someone had here is if we could hack this into build plugins somehow, although i haven't looked around at what's possible there. today we use a run script to automatically run linters when building and output in the right format so xcode shows it inline",
          "ts": "1654890284.422249",
          "thread_ts": "1654889805.392769",
          "edited": {
            "user": "U03HVF9E2BG",
            "ts": "1654890303.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "e5K6F",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "another idea someone had here is if we could hack this into build plugins somehow, although i haven't looked around at what's possible there. today we use a run script to automatically run linters when building and output in the right format so xcode shows it inline"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "337bc98f-0a35-4e2f-9f0c-1847e6b40714",
          "type": "message",
          "user": "U03JETJ7UU9",
          "text": "I've been trying to think through this exact same problem \u003c@U03HVF9E2BG\u003e",
          "ts": "1654890430.165529",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "i8D",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I've been trying to think through this exact same problem "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HVF9E2BG"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6e35e0bb-ce9e-41d2-be85-8134eead38ad",
          "type": "message",
          "user": "U03HN9FSVT9",
          "text": "@Keith Couldn’t you trigger the linting/formatter using a tool like fswatch (used for watching for changes) and the run your linter? Or would that be to cumbersome?",
          "ts": "1654890450.145479",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "QB4uh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "@Keith Couldn’t you trigger the linting/formatter using a tool like fswatch (used for watching for changes) and the run your linter? Or would that be to cumbersome?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "471b0cfb-7012-427c-b3da-42b9629e3859",
          "type": "message",
          "user": "U03JETJ7UU9",
          "text": "Would it be possible for a build plugin to use git to find changed files and then run linting on it?",
          "ts": "1654890455.733689",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Woyy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Would it be possible for a build plugin to use git to find changed files and then run linting on it?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ff723d80-4190-4391-8f13-404739964133",
          "type": "message",
          "user": "U03HN9FSVT9",
          "text": "Could actually be awesome if the plugin context could provide you with a filelist of changed files since previous build.",
          "ts": "1654890556.812499",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "100",
              "count": 1,
              "users": [
                "U03JETJ7UU9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "eVpf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Could actually be awesome if the plugin context could provide you with a filelist of changed files since previous build."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "23f3aa66-7719-4935-bfde-f2f05e6bcc2a",
          "type": "message",
          "user": "U03HN9FSVT9",
          "text": "(But that is properly out of scope for the plugin API)",
          "ts": "1654890578.190919",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2wSR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(But that is properly out of scope for the plugin API)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "caa47dbc-45bc-41ac-b991-3fafdadf8c29",
          "type": "message",
          "user": "U03HVF9E2BG",
          "text": "one of the examples did the git file detection for sure",
          "ts": "1654890611.360649",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cV33",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "one of the examples did the git file detection for sure"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "06054ba2-f33a-4a30-9230-caa71f64b223",
          "type": "message",
          "user": "U03HVF9E2BG",
          "text": "I don't think a fswatch solution would work to also surface the issues in Xcode?",
          "ts": "1654890628.233289",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0g5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I don't think a fswatch solution would work to also surface the issues in Xcode?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bb50dd80-3590-48f2-afd2-3531388a7a13",
          "type": "message",
          "user": "U03JETJ7UU9",
          "text": "But yeah running a plugin when a file is saved would be awesome. I have codegen that generates .swift files for .graphql query files. It would be so cool to be able to save a .graphql query file and then SPM generates the .swift files instantly",
          "ts": "1654890680.779239",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nZb4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "But yeah running a plugin when a file is saved would be awesome. I have codegen that generates .swift files for .graphql query files. It would be so cool to be able to save a .graphql query file and then SPM generates the .swift files instantly"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f9a9aa62-0d95-40dd-8da2-253152e1a70f",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Build tool plugins could definitely be used to run the linting at the start of the build (this is what the example in the State of the Union video did).  The API provided for plugins currently provides the structure of the package or project, but not state information — the example used `git status` for that information.",
          "ts": "1654890710.556549",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7nEk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Build tool plugins could definitely be used to run the linting at the start of the build (this is what the example in the State of the Union video did).  The API provided for plugins currently provides the structure of the package or project, but not state information — the example used "
                    },
                    {
                      "type": "text",
                      "text": "git status",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " for that information."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e507d584-fe2f-4304-8560-f1de84e4b575",
          "type": "message",
          "user": "U03HN9FSVT9",
          "text": "Oh yeah \u003c@U03HVF9E2BG\u003e … you are right that wouldn’t do it for you.",
          "ts": "1654890710.881269",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GXtM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oh yeah "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HVF9E2BG"
                    },
                    {
                      "type": "text",
                      "text": " … you are right that wouldn’t do it for you."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7b42cc15-5017-43fe-afa7-2600ec0494f5",
          "type": "message",
          "user": "U03HES8111T",
          "text": "For code generation, it's usually a good idea to generate the code to intermediate locations, unless it is intended to become part of the checked-in code.",
          "ts": "1654890745.296989",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 2,
              "users": [
                "U03HN9FSVT9",
                "U03JETJ7UU9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ifmo",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "For code generation, it's usually a good idea to generate the code to intermediate locations, unless it is intended to become part of the checked-in code."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7eaf5bdd-0e7a-4396-a2e1-7747400645b9",
          "type": "message",
          "user": "U03HVF9E2BG",
          "text": "\u003c@U03HES8111T\u003e would mutating files with a formatter in the build tool plugin run cause issues? in the past someone recommended we shouldn't do that in run script phases. I suppose we could define all inputs and outputs, but if we just wanted to add \"all files\" there that might be cumbersome",
          "ts": "1654890813.066769",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "GMt5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HES8111T"
                    },
                    {
                      "type": "text",
                      "text": " would mutating files with a formatter in the build tool plugin run cause issues? in the past someone recommended we shouldn't do that in run script phases. I suppose we could define all inputs and outputs, but if we just wanted to add \"all files\" there that might be cumbersome"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cea1b1fd-685a-451b-8b9a-73feef5cec12",
          "type": "message",
          "user": "U03HES8111T",
          "text": "It probably would, and also the sandbox doesn't allow mutating the project / package files from a build tool plugin.",
          "ts": "1654890848.711949",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Cnu=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It probably would, and also the sandbox doesn't allow mutating the project / package files from a build tool plugin."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "49abc213-6b5a-4195-88ab-a056e496873c",
          "type": "message",
          "user": "U03HN9FSVT9",
          "text": "\u003c@U03HES8111T\u003e - but that would assume your project is stored in a git repo (which might not always be the case)?",
          "ts": "1654890907.794559",
          "thread_ts": "1654889805.392769",
          "edited": {
            "user": "U03HN9FSVT9",
            "ts": "1654890928.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "L62Kp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "user",
                      "user_id": "U03HES8111T"
                    },
                    {
                      "type": "text",
                      "text": " - but that would assume your project is stored in a git repo (which might not always be the case)?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9858bb92-5567-4589-89da-acb99f212c73",
          "type": "message",
          "user": "U03HES8111T",
          "text": "Yes, it would — that's a good point.",
          "ts": "1654890920.797499",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Mlp1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, it would — that's a good point."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "582e73d7-f51a-455b-a95f-c75d6f753240",
          "type": "message",
          "user": "U03HES8111T",
          "text": "There is a lot of room for extending the plugin support, and it would be great to have follow-on discussions in the Swift Packages section of \u003chttps://forums.swift.org\u003e about the direction the plugin capabilities should take to make them more useful broadly.",
          "ts": "1654890932.522369",
          "thread_ts": "1654889805.392769",
          "attachments": [
            {
              "fallback": "Swift Forums",
              "id": 1,
              "title": "Swift Forums",
              "title_link": "https://forums.swift.org/",
              "text": "Swift Forums",
              "thumb_url": "https://aws1.discourse-cdn.com/swift/original/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6.png",
              "service_name": "forums.swift.org",
              "service_icon": "https://aws1.discourse-cdn.com/swift/optimized/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6_2_180x180.png",
              "from_url": "https://forums.swift.org/",
              "original_url": "https://forums.swift.org",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HN9FSVT9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7kwXt",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There is a lot of room for extending the plugin support, and it would be great to have follow-on discussions in the Swift Packages section of "
                    },
                    {
                      "type": "link",
                      "url": "https://forums.swift.org",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " about the direction the plugin capabilities should take to make them more useful broadly."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a87dfc2d-fc28-4c3e-b145-d0ab9c957d83",
          "type": "message",
          "user": "U03HN9FSVT9",
          "text": "Cool - I’ll have a peak at the forum and thanks to the entire SPM team for bringing the plugin API to SPM.",
          "ts": "1654891037.549119",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U03HES8111T"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Fyj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Cool - I’ll have a peak at the forum and thanks to the entire SPM team for bringing the plugin API to SPM."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cc3b71d1-dcaa-4dbe-9b5d-60f12cce63b9",
          "type": "message",
          "user": "U03JETJ7UU9",
          "text": "Yeah agreed. This plugin API might be my favorite thing announced this year. We have a ton of command line scripts that we can drop in favor of this approach",
          "ts": "1654891191.548859",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dZqV1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yeah agreed. This plugin API might be my favorite thing announced this year. We have a ton of command line scripts that we can drop in favor of this approach"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "14270d90-002c-4959-bb38-28dbfbb723d9",
          "type": "message",
          "user": "U03J01RLBBR",
          "text": "This ^^^",
          "ts": "1654891451.467899",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tqVC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This ^^^"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ec775f7e-af41-4168-b2b6-482755f11c99",
          "type": "message",
          "user": "U03HN9FSVT9",
          "text": "Totally agree - best SPM feature",
          "ts": "1654891541.157989",
          "thread_ts": "1654889805.392769",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "S2i",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Totally agree - best SPM feature"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HN9FSVT9\u003e asked\n\u0026gt; I’m currently migrating an “old” ObjC codebase from a Xcode Framework to SPM. As I understand it, I need an include folder in my target which includes all the public headers (in my case a subfolder MyFrameworkKit) and the umbrella header (if I need a special umbrella header). I can also provide a (public and private) module map (which I have to in my case). \n\u0026gt; \n\u0026gt; I have difficulties providing a proper #include/#import  for all my private and internal headers when trying to create tests for those classes in my test target (as they are not part of the umbrella header which they rightfully shouldn’t). But how do I then access the internal/private classes in the framework from the test target?\n\u0026gt; \n\u0026gt; Additionally it seems like the private module header isn’t removed from the release build - shouldn’t it be removed or?",
      "ts": "1654890949.994659",
      "thread_ts": "1654890949.994659",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654891496.696679",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "rs+",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HN9FSVT9"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I\\u2019m currently migrating an \\u201cold\\u201d ObjC codebase from a Xcode Framework to SPM. As I understand it, I need an include folder in my target which includes all the public headers (in my case a subfolder MyFrameworkKit) and the umbrella header (if I need a special umbrella header). I can also provide a (public and private) module map (which I have to in my case). \\n\\nI have difficulties providing a proper #include\\/#import  for all my private and internal headers when trying to create tests for those classes in my test target (as they are not part of the umbrella header which they rightfully shouldn\\u2019t). But how do I then access the internal\\/private classes in the framework from the test target?\\n\\nAdditionally it seems like the private module header isn\\u2019t removed from the release build - shouldn\\u2019t it be removed or?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "08fcdf15-640b-45f5-b5e3-8c629889f01c",
          "type": "message",
          "user": "U03HES8111T",
          "text": "That's correct, for C targets in SwiftPM you do need a folder called `include` in the target (though the name can be customized in the package manifest).  You do not actually have to provide a module map — SwiftPM and Xcode will create one from standard header layouts.  But if there is anything custom, you can include a module map.\n\nI believe you should be able to have a private module that includes the header that your tests need, and to include that by having them import the private module.  There is some more information here: \u003chttps://clang.llvm.org/docs/Modules.html#private-module-map-files\u003e but I am unsure of the details of private module maps.\n\nRegarding the build artifact, that does sound like a bug if it isn't being removed.  Would you mind filing a bug report at \u003chttps://feedbackassistant.apple.com/\u003e about that.\n\nIf there isn't a way to do what you want to with private module maps, then it would be great to have a \u003chttps://forums.swift.org\u003e discussion about that as well (since the SwiftPM support for C is entirely in the open source).",
          "ts": "1654891101.221069",
          "thread_ts": "1654890949.994659",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HN9FSVT9"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sirB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That's correct, for C targets in SwiftPM you do need a folder called "
                    },
                    {
                      "type": "text",
                      "text": "include",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " in the target (though the name can be customized in the package manifest).  You do not actually have to provide a module map — SwiftPM and Xcode will create one from standard header layouts.  But if there is anything custom, you can include a module map.\n\nI believe you should be able to have a private module that includes the header that your tests need, and to include that by having them import the private module.  There is some more information here: "
                    },
                    {
                      "type": "link",
                      "url": "https://clang.llvm.org/docs/Modules.html#private-module-map-files",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " but I am unsure of the details of private module maps.\n\nRegarding the build artifact, that does sound like a bug if it isn't being removed.  Would you mind filing a bug report at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " about that.\n\nIf there isn't a way to do what you want to with private module maps, then it would be great to have a "
                    },
                    {
                      "type": "link",
                      "url": "https://forums.swift.org",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " discussion about that as well (since the SwiftPM support for C is entirely in the open source)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "36d5dff6-0dd6-4f39-acef-0e23dd764df3",
          "type": "message",
          "user": "U03HN9FSVT9",
          "text": "Thanks a lot for your answer \u003c@U03HES8111T\u003e - I’ll have to look more into the private module map (it is relative new to me). Would the private module then require an additional folder in the include folder (which I’m currently doing) or could that be avoided?",
          "ts": "1654891372.078439",
          "thread_ts": "1654890949.994659",
          "edited": {
            "user": "U03HN9FSVT9",
            "ts": "1654891651.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "3JMQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks a lot for your answer "
                    },
                    {
                      "type": "user",
                      "user_id": "U03HES8111T"
                    },
                    {
                      "type": "text",
                      "text": " - I’ll have to look more into the private module map (it is relative new to me). Would the private module then require an additional folder in the include folder (which I’m currently doing) or could that be avoided?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a4cbbcef-accd-4820-abc5-e9276f4a57ca",
          "type": "message",
          "user": "U03HN9FSVT9",
          "text": "I’ll have to be 100% sure that I understand the private module map and how it affects the   produced artifact before I file a bug (and avoid you wasting  time chasing ghosts) :slightly_smiling_face:",
          "ts": "1654891496.696679",
          "thread_ts": "1654890949.994659",
          "edited": {
            "user": "U03HN9FSVT9",
            "ts": "1654891616.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RYU=H",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’ll have to be 100% sure that I understand the private module map and how it affects the   produced artifact before I file a bug (and avoid you wasting  time chasing ghosts) "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "528151d3-1c1a-44be-9456-f9ab5fc0fe7c",
      "type": "message",
      "user": "U03HL5G7YQL",
      "text": ":stopwatch: We just have about 5 more minutes to go. Thank you so much for so many great questions so far! If you have any final questions, please submit them with the button :workflowbolt:below!",
      "ts": "1654890980.557279",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "l+uF",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "emoji",
                  "name": "stopwatch",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " We just have about 5 more minutes to go. Thank you so much for so many great questions so far! If you have any final questions, please submit them with the button "
                },
                {
                  "type": "emoji",
                  "name": "workflowbolt",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "below!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JEEUJPMJ\u003e asked\n\u0026gt; To make apps, built in Xcode on Apple silicon, run on older versions of macOS; in this post (\u003chttps://developer.apple.com/forums/thread/673323)|https://developer.apple.com/forums/thread/673323)\u003e 'eskimo' says to add `--digest-algorithm=sha1,sha256` to `codesign`\n\u0026gt; \n\u0026gt; Is there somewhere in Xcode that I can add this, so that I can archive and export \u0026amp; have `codesign` use these behind the scenes?",
      "ts": "1654891332.067779",
      "thread_ts": "1654891332.067779",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654891479.073769",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "lwCJ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JEEUJPMJ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"To make apps, built in Xcode on Apple silicon, run on older versions of macOS; in this post (\"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/673323)\",\"text\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/673323)\"},{\"type\":\"text\",\"text\":\" 'eskimo' says to add `--digest-algorithm=sha1,sha256` to `codesign`\\n\\nIs there somewhere in Xcode that I can add this, so that I can archive and export \u0026 have `codesign` use these behind the scenes?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a93f176f-6c64-4538-9f21-a4db340c1ee1",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "You can add these to your `OTHER_CODE_SIGN_FLAGS` build setting and the archive action will use them. However, there is no way to add flags to the `codesign` command when exporting. Please send us \u003chttps://feedbackassistant.apple.com|feedback\u003e if this is something you'd like to see!",
          "ts": "1654891337.481759",
          "thread_ts": "1654891332.067779",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JEEUJPMJ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "A5ZF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can add these to your "
                    },
                    {
                      "type": "text",
                      "text": "OTHER_CODE_SIGN_FLAGS",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " build setting and the archive action will use them. However, there is no way to add flags to the "
                    },
                    {
                      "type": "text",
                      "text": "codesign",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " command when exporting. Please send us "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": "feedback"
                    },
                    {
                      "type": "text",
                      "text": " if this is something you'd like to see!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cf404c0d-0e1d-449b-a65f-69e2754cfc37",
          "type": "message",
          "user": "U03JEEUJPMJ",
          "text": "Ah, so - just to clarify - I could archive, and then hit `Distribute App`, and:\n• `Copy App`\n• but not any of the other options that involve re-signing? (Developer ID / upload to App Store Connect etc)\n\u0026amp; so, to ‘Developer ID’ sign: I’d archive, export via `Copy App`, then need to use the `codesign` program?",
          "ts": "1654891479.073769",
          "thread_ts": "1654891332.067779",
          "edited": {
            "user": "U03JEEUJPMJ",
            "ts": "1654891683.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Edt",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ah, so - just to clarify - I could archive, and then hit "
                    },
                    {
                      "type": "text",
                      "text": "Distribute App",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", and:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Copy App\",\"style\":{\"code\":true}}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"but not any of the other options that involve re-signing? (Developer ID \\/ upload to App Store Connect etc)\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\n\u0026 so, to ‘Developer ID’ sign: I’d archive, export via "
                    },
                    {
                      "type": "text",
                      "text": "Copy App",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", then need to use the "
                    },
                    {
                      "type": "text",
                      "text": "codesign",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " program?"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "549ae171-fc3f-4ca1-97ee-b9aaeeae8f08",
      "type": "message",
      "user": "U03HES8CXHB",
      "text": "It’s been a great session! Thank you, everyone, for joining us today in *Xcode Open Hours* Digital Lounge. We hope you’ve had a good time getting your questions answered by the Xcode team! We're going to turn off the Ask question button in 5 minutes but we're still trying to get through all of the other great questions you all submitted!\n\nIf your question wasn’t answered, you can also post your questions in the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e. Thank you for joining us for WWDC22!",
      "ts": "1654891332.162449",
      "attachments": [
        {
          "fallback": "Apple Developer Forums",
          "id": 1,
          "title": "Apple Developer Forums",
          "title_link": "http://developer.apple.com/forums/",
          "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
          "service_name": "developer.apple.com",
          "service_icon": "https://forums.developer.apple.com/forums/build-06102022-1/public/assets/favicon.ico",
          "from_url": "http://developer.apple.com/forums/",
          "original_url": "http://developer.apple.com/forums/",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "gratitude-thank-you",
          "count": 4,
          "users": [
            "U03JE7PBQPP",
            "U03JPFQNX5K",
            "U03JEEUJPMJ",
            "U03J22AU6DQ"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "IzJ2",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "It’s been a great session! Thank you, everyone, for joining us today in "
                },
                {
                  "type": "text",
                  "text": "Xcode Open Hours",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " Digital Lounge. We hope you’ve had a good time getting your questions answered by the Xcode team! We're going to turn off the Ask question button in 5 minutes but we're still trying to get through all of the other great questions you all submitted!\n\nIf your question wasn’t answered, you can also post your questions in the "
                },
                {
                  "type": "link",
                  "url": "http://developer.apple.com/forums/",
                  "text": "Developer Forums"
                },
                {
                  "type": "text",
                  "text": ". Thank you for joining us for WWDC22!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KH907MME\u003e asked\n\u0026gt; For a build phase that modifies a file in derived data (`$(TARGET_BUILD_DIR)/$(INFOPLIST_PATH)`), what should the input and output files be set to so Xcode knows to run the phase correctly.\n\u0026gt; \n\u0026gt; Currently we just set the input files to the plist path which causes it to run for all builds since there's no output file. It's not a big deal cause the scripts are fast, but it's just extra work that isn't needed. Setting the output file to the plist path as well causes warnigns and errors.\n\u0026gt; \n\u0026gt; warning: unexpected mutating task ('PhaseScriptExecution ...') with no relation to prior mutator ('PhaseScriptExecution ...')\n\u0026gt; error: invalid task ('PhaseScriptExecution ...') with mutable output but no other virtual output node",
      "ts": "1654891968.990489",
      "thread_ts": "1654891968.990489",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654892643.055839",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "EVI",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KH907MME"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"For a build phase that modifies a file in derived data (`$(TARGET_BUILD_DIR)\\/$(INFOPLIST_PATH)`), what should the input and output files be set to so Xcode knows to run the phase correctly.\\n\\nCurrently we just set the input files to the plist path which causes it to run for all builds since there's no output file. It's not a big deal cause the scripts are fast, but it's just extra work that isn't needed. Setting the output file to the plist path as well causes warnigns and errors.\\n\\nwarning: unexpected mutating task ('PhaseScriptExecution ...') with no relation to prior mutator ('PhaseScriptExecution ...')\\nerror: invalid task ('PhaseScriptExecution ...') with mutable output but no other virtual output node\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a3eb70b1-27b6-4511-ad6e-33e61c9e3f1a",
          "type": "message",
          "user": "U03HHPDDRK5",
          "text": "What is your use case for modifying Info.plist using a script phase? To ensure dependencies between tasks are tracked correctly in builds, run script build phases generally should not modify files in place.\n\nCould you instead have your script generate the Info.plist file, and have `INFO_PLIST_FILE` point to the generated file?",
          "ts": "1654892004.375359",
          "thread_ts": "1654891968.990489",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "HY16",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "What is your use case for modifying Info.plist using a script phase? To ensure dependencies between tasks are tracked correctly in builds, run script build phases generally should not modify files in place.\n\nCould you instead have your script generate the Info.plist file, and have "
                    },
                    {
                      "type": "text",
                      "text": "INFO_PLIST_FILE",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " point to the generated file?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4c517b54-9718-4b58-9b10-903b9ac0327e",
          "type": "message",
          "user": "U03KH907MME",
          "text": "We do a couple things\n• Update the build number using the build number from CI.\n• Copy the universal link domains from the entitlement to they’re accessible at runtime.\n• Remove pinned domains for development environments in release builds.",
          "ts": "1654892330.295099",
          "thread_ts": "1654891968.990489",
          "edited": {
            "user": "U03KH907MME",
            "ts": "1654892375.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hiV+2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We do a couple things\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Update the build number using the build number from CI.\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Copy the universal link domains from the entitlement to they\\u2019re accessible at runtime.\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Remove pinned domains for development environments in release builds.\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "97680241-f6fa-4db1-bf79-e6f2f6bde122",
          "type": "message",
          "user": "U03KH907MME",
          "text": "That’s an interesting idea about changing `INFO_PLIST_FILE`. So the script build phase would need to be above `Compile Sources` and it’d have input of our plist file in `$SRCROOT` and output to the same path as `INFO_PLIST_FILE`.\n\nI think part if our issue is we have multiple build phase changing the plist when they should probably be combined into one since only one can work on the file at a time.",
          "ts": "1654892643.055839",
          "thread_ts": "1654891968.990489",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XD44",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That’s an interesting idea about changing "
                    },
                    {
                      "type": "text",
                      "text": "INFO_PLIST_FILE",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". So the script build phase would need to be above "
                    },
                    {
                      "type": "text",
                      "text": "Compile Sources",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and it’d have input of our plist file in "
                    },
                    {
                      "type": "text",
                      "text": "$SRCROOT",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " and output to the same path as "
                    },
                    {
                      "type": "text",
                      "text": "INFO_PLIST_FILE",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ".\n\nI think part if our issue is we have multiple build phase changing the plist when they should probably be combined into one since only one can work on the file at a time."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HZ3L66QM\u003e asked\n\u0026gt; Tried to build this code as Apple engineer in Xcode 14 beta 1. It seems not able to build, did i miss something? \n\u0026gt; ```\n\u0026gt; // this will be back deployable\n\u0026gt; struct AnyP\u0026lt;T\u0026gt; {\n\u0026gt;   var value: any P\u0026lt;T\u0026gt;\n\u0026gt; }\n\u0026gt; ```\n\u0026gt; \n\u0026gt; And since it is able to backport but couldn't use a type without Swift 5.7 runtime. \n\u0026gt; So does it mean if we are using it as a type argument and run app on iOS 15 (no 5.7 runtime). We will have a runtime crash or do we get compiler warning?",
      "ts": "1654892129.614089",
      "thread_ts": "1654892129.614089",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654893440.831899",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "/wdzg",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HZ3L66QM"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Tried to build this code as Apple engineer in Xcode 14 beta 1. It seems not able to build, did i miss something? \\n```\\n\\/\\/ this will be back deployable\\nstruct AnyP\u003cT\u003e {\\n  var value: any P\u003cT\u003e\\n}\\n```\\n\\nAnd since it is able to backport but couldn't use a type without Swift 5.7 runtime. \\nSo does it mean if we are using it as a type argument and run app on iOS 15 (no 5.7 runtime). We will have a runtime crash or do we get compiler warning?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "0f152fd9-20c1-47e8-a694-bff8c89f2f6a",
          "type": "message",
          "user": "U03J7H72X5W",
          "text": "The `protocol P\u0026lt;T\u0026gt;` syntax is not back-deployable to 5.6, so you need to wrap those definitions in `#if swift(\u0026gt;=5.7)`. \u003chttps://github.com/apple/swift-evolution/blob/main/proposals/0346-light-weight-same-type-syntax.md#annotate-regular-associatedtype-declarations-with-primary\u003e has some more information about that.\n\nBut you should not receive any runtime crashes. The compiler or linker should throw errors for these issues.",
          "ts": "1654892141.886689",
          "thread_ts": "1654892129.614089",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VN456",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The "
                    },
                    {
                      "type": "text",
                      "text": "protocol P\u003cT\u003e",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " syntax is not back-deployable to 5.6, so you need to wrap those definitions in "
                    },
                    {
                      "type": "text",
                      "text": "#if swift(\u003e=5.7)",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-evolution/blob/main/proposals/0346-light-weight-same-type-syntax.md#annotate-regular-associatedtype-declarations-with-primary",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " has some more information about that.\n\nBut you should not receive any runtime crashes. The compiler or linker should throw errors for these issues."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a4d9890e-f291-4d32-91de-a7432242406a",
          "type": "message",
          "user": "U03HZ3L66QM",
          "text": "Thanks for the clarifying the syntax part. I think my second question can be rephrased into :\nCan I run this code on `iOS 15` if I build with `Swift 5.7`?\n```struct AnyP\u0026lt;T\u0026gt; {\n  var value: any P\u0026lt;T\u0026gt;\n}\nlet anyP: AnyP\u0026lt;Int\u0026gt; = ....```\nand even this\n```func foo\u0026lt;T\u0026gt;(_ bar: T) { ... }\n\nfoo(any Collection\u0026lt;Int\u0026gt;) // can I run this on iOS 15 with built on Swift 5.7? ```\n",
          "ts": "1654893440.831899",
          "thread_ts": "1654892129.614089",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JMbGL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the clarifying the syntax part. I think my second question can be rephrased into :\nCan I run this code on "
                    },
                    {
                      "type": "text",
                      "text": "iOS 15",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " if I build with "
                    },
                    {
                      "type": "text",
                      "text": "Swift 5.7",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "?\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"struct AnyP\u003cT\u003e {\\n  var value: any P\u003cT\u003e\\n}\\nlet anyP: AnyP\u003cInt\u003e = ....\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\nand even this\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"func foo\u003cT\u003e(_ bar: T) { ... }\\n\\nfoo(any Collection\u003cInt\u003e) \\/\\/ can I run this on iOS 15 with built on Swift 5.7? \"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J1UX2CQK\u003e asked\n\u0026gt; I have a SwiftPM package I'm using both in other SwiftPM packages \u0026amp; in an iOS project. Unfortunately I've had to use CocoaPods to import it into my iOS app's Xcode project so far because the binary targets get super confused when using Xcode's SwiftPM integration.\n\u0026gt; \n\u0026gt; Any way to debug SwiftPM packages that work fine from the commandline (Linux + macOS) but not when imported into an Xcode project?\n\u0026gt; \n\u0026gt; An example of the sort of error I see:\n\u0026gt; NSObjCRuntime.h:523:1: Expected identifier or '('\n\u0026gt; \n\u0026gt; ^ happens while #including a header from the binary target \u0026amp; says it can't build a completely separate module in my app.",
      "ts": "1654892396.407129",
      "thread_ts": "1654892396.407129",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654893794.188769",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "pZ=",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J1UX2CQK"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I have a SwiftPM package I'm using both in other SwiftPM packages \u0026 in an iOS project. Unfortunately I've had to use CocoaPods to import it into my iOS app's Xcode project so far because the binary targets get super confused when using Xcode's SwiftPM integration.\\n\\nAny way to debug SwiftPM packages that work fine from the commandline (Linux + macOS) but not when imported into an Xcode project?\\n\\nAn example of the sort of error I see:\\nNSObjCRuntime.h\"},{\"type\":\"emoji\",\"name\":\"523\"},{\"type\":\"text\",\"text\":\"1: Expected identifier or '('\\n\\n^ happens while #including a header from the binary target \u0026 says it can't build a completely separate module in my app.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "0a1b579e-e3e5-4e1d-9bf6-f116cec60e7b",
          "type": "message",
          "user": "U03HESABNTX",
          "text": "It's possible that your package is being built with a different set of flags when using Xcode as opposed to the SwiftPM command line tool. I recommend comparing the compile commands in each build log to look for any differences between the two which may be relevant, especially flags like `-D` which impact conditional compilation. If you're unable to determine the source of the failure, please file a bug report including both the SwiftPM and Xcode build logs so we can investigate further.",
          "ts": "1654892418.545859",
          "thread_ts": "1654892396.407129",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Jahk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It's possible that your package is being built with a different set of flags when using Xcode as opposed to the SwiftPM command line tool. I recommend comparing the compile commands in each build log to look for any differences between the two which may be relevant, especially flags like "
                    },
                    {
                      "type": "text",
                      "text": "-D",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " which impact conditional compilation. If you're unable to determine the source of the failure, please file a bug report including both the SwiftPM and Xcode build logs so we can investigate further."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c125b3ba-716c-4b3e-9295-e2329ff3bb80",
          "type": "message",
          "user": "U03J1UX2CQK",
          "text": "Thank you! Will do.",
          "ts": "1654893794.188769",
          "thread_ts": "1654892396.407129",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Ky0ha",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you! Will do."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JE7PBQPP\u003e asked\n\u0026gt; Weird question - why did the defaults command get quietly (in the man page) deprecated in favor of plistbuddy and then silently un-deprecated later?",
      "ts": "1654892448.781299",
      "thread_ts": "1654892448.781299",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 4,
      "latest_reply": "1654894910.617729",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "C7iF",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JE7PBQPP"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Weird question - why did the defaults command get quietly (in the man page) deprecated in favor of plistbuddy and then silently un-deprecated later?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "1cadb19a-e68e-4a4d-bbc6-e97ab15974c4",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Hi Sara.  We don't think the `defaults` command should be deprecated either!  If you're still seeing that message in the man page, can you please \u003chttps://feedbackassistant.apple.com/|file a feedback\u003e for us to take a look?",
          "ts": "1654892456.181369",
          "thread_ts": "1654892448.781299",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nMclH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Sara.  We don't think the "
                    },
                    {
                      "type": "text",
                      "text": "defaults",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " command should be deprecated either!  If you're still seeing that message in the man page, can you please "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/",
                      "text": "file a feedback"
                    },
                    {
                      "type": "text",
                      "text": " for us to take a look?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "da1aa423-1b81-41d2-b7ab-f0ba69dfd4f7",
          "type": "message",
          "user": "U03JE7PBQPP",
          "text": "Early versions of Catalina deprecated it and I rewrote all the scripts for plistbuddy. But now it's apparently not deprecated and I'm debating re-writing the scripts again or walking quietly away :smile:",
          "ts": "1654892845.365209",
          "thread_ts": "1654892448.781299",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "j3z",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Early versions of Catalina deprecated it and I rewrote all the scripts for plistbuddy. But now it's apparently not deprecated and I'm debating re-writing the scripts again or walking quietly away "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fa3f0c61-615e-4e55-a74e-46ad0e82fc37",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Interesting!  That's very possible but we just didn't hear about it here in Dev Tools.  I think asking that question through feedback should get your question to the right folks.",
          "ts": "1654892921.174379",
          "thread_ts": "1654892448.781299",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-thank-you",
              "count": 1,
              "users": [
                "U03JE7PBQPP"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "OXBPt",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Interesting!  That's very possible but we just didn't hear about it here in Dev Tools.  I think asking that question through feedback should get your question to the right folks."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a4a00fa0-b08a-4af9-b0da-99ef151c2ca6",
          "type": "message",
          "user": "U03HESHGASH",
          "text": "In general, the rule of thumb to follow is use `defaults` for user defaults, and use other tools (plistbuddy is fine) for non-defaults plists.",
          "ts": "1654894910.617729",
          "thread_ts": "1654892448.781299",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BQJS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In general, the rule of thumb to follow is use "
                    },
                    {
                      "type": "text",
                      "text": "defaults",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " for user defaults, and use other tools (plistbuddy is fine) for non-defaults plists."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KC4LFL64\u003e asked\n\u0026gt; In deinit, the removal of an observer object reports an error for an actor.  Is there a better solution available?",
      "ts": "1654892642.874799",
      "thread_ts": "1654892642.874799",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 8,
      "latest_reply": "1654894383.928419",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "emKT",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KC4LFL64"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"In deinit, the removal of an observer object reports an error for an actor.  Is there a better solution available?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "f440a460-4aa9-401b-a155-6ddc97b21a2c",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "Hi \u003c@U03KC4LFL64\u003e, could you provide some additional information to help us answer this question:\n• What is the text of the error you're hitting?\n• Is this error occurring at build time or at run time?",
          "ts": "1654892692.783069",
          "thread_ts": "1654892642.874799",
          "edited": {
            "user": "U03HWDCSCHX",
            "ts": "1654892879.000000"
          },
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "08FTn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi "
                    },
                    {
                      "type": "user",
                      "user_id": "U03KC4LFL64"
                    },
                    {
                      "type": "text",
                      "text": ", could you provide some additional information to help us answer this question:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"What is the text of the error you're hitting?\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Is this error occurring at build time or at run time?\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "85E2E8A2-4199-4DA1-BE52-098ACF2A47D2",
          "type": "message",
          "user": "U03KC4LFL64",
          "text": "Cannot access property ‘observer’ with non-sendable type Any? From non-isolated deinit",
          "ts": "1654893450.485409",
          "thread_ts": "1654892642.874799",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nX12V",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Cannot"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "access"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "property"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "‘observer’"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "with"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "non-sendable"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "type"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Any?"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "From"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "non-isolated"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "deinit"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "B108008E-3640-4715-AB5F-B415482DB40C",
          "type": "message",
          "user": "U03KC4LFL64",
          "text": "The code is if let observer = observer {…} to remove the observer if it still exists.",
          "ts": "1654893529.802549",
          "thread_ts": "1654892642.874799",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "V61X",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "code"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "if"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "let"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "observer"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "="
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "observer"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "{…}"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "remove"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " observer "
                    },
                    {
                      "type": "text",
                      "text": "if"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "it"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "still"
                    },
                    {
                      "type": "text",
                      "text": " exists"
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "23233b6d-5061-4182-a956-d0c75d364e69",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "Okay, so the big document that has all the details here is \u003chttps://github.com/apple/swift-evolution/blob/main/proposals/0327-actor-initializers.md\u003e\n\nBut to offer a more targeted explanation of events: `deinit` is the end of the road for an actor or a class. It is called after the final reference to the actor has disappeared, which can occur at any time and on any thread. So `deinit` is _never_ actor-isolated. So the correct way to clean up is always to copy out any resources from the actor and clean up those copies. Swift is warning you that you're trying to clean up by copying a type that it does not know can be cleanly shared across isolated contexts.",
          "ts": "1654893917.106949",
          "thread_ts": "1654892642.874799",
          "attachments": [
            {
              "fallback": "GitHub: swift-evolution/0327-actor-initializers.md at main · apple/swift-evolution",
              "id": 1,
              "title": "swift-evolution/0327-actor-initializers.md at main · apple/swift-evolution",
              "title_link": "https://github.com/apple/swift-evolution/blob/main/proposals/0327-actor-initializers.md",
              "text": "This maintains proposals for changes and user-visible enhancements to the Swift Programming Language. - swift-evolution/0327-actor-initializers.md at main · apple/swift-evolution",
              "image_url": "https://opengraph.githubassets.com/ed875a6466f03a36170c9cc86c9dcf4f22285132dedb6df4d8b395ed3d5dd9bb/apple/swift-evolution",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/apple/swift-evolution/blob/main/proposals/0327-actor-initializers.md",
              "original_url": "https://github.com/apple/swift-evolution/blob/main/proposals/0327-actor-initializers.md",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AAT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Okay, so the big document that has all the details here is "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-evolution/blob/main/proposals/0327-actor-initializers.md",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n\nBut to offer a more targeted explanation of events: "
                    },
                    {
                      "type": "text",
                      "text": "deinit",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is the end of the road for an actor or a class. It is called after the final reference to the actor has disappeared, which can occur at any time and on any thread. So "
                    },
                    {
                      "type": "text",
                      "text": "deinit",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is "
                    },
                    {
                      "type": "text",
                      "text": "never",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " actor-isolated. So the correct way to clean up is always to copy out any resources from the actor and clean up those copies. Swift is warning you that you're trying to clean up by copying a type that it does not know can be cleanly shared across isolated contexts."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3f8c2ac1-e758-4a32-a620-84303bfc30be",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "If you can, please use a specific `Sendable` observer type. otherwise, you can try to schedule a set of `@Sendable` cleanup blocks in an isolated context and run those cleanup blocks in `deinit`.",
          "ts": "1654893974.846909",
          "thread_ts": "1654892642.874799",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9EK",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you can, please use a specific "
                    },
                    {
                      "type": "text",
                      "text": "Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " observer type. otherwise, you can try to schedule a set of "
                    },
                    {
                      "type": "text",
                      "text": "@Sendable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " cleanup blocks in an isolated context and run those cleanup blocks in "
                    },
                    {
                      "type": "text",
                      "text": "deinit",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "61DB608C-546C-4A42-AEBF-F4CFB436BFAA",
          "type": "message",
          "user": "U03KC4LFL64",
          "text": "Ok… thank you for the ideas.  And thanks to everyone at Apple for another great WWDC!",
          "ts": "1654894077.250909",
          "thread_ts": "1654892642.874799",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "J=z",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok…"
                    },
                    {
                      "type": "text",
                      "text": " thank "
                    },
                    {
                      "type": "text",
                      "text": "you"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "the"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "ideas."
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "text",
                      "text": "And"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "thanks"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "to"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "everyone"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "at"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "Apple"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "another"
                    },
                    {
                      "type": "text",
                      "text": " great "
                    },
                    {
                      "type": "text",
                      "text": "WWDC!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9463c6a2-28b1-42f9-81e9-522436ae22af",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "Really, `deinit` isn't the best place to cleanup, especially if you need guaranteed resource destruction. I would create some kind of `invalidate` method that you call from `defer` or some other known point where the system has asked you to clean up resources.",
          "ts": "1654894323.400599",
          "thread_ts": "1654892642.874799",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03KC4LFL64"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "b5v/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Really, "
                    },
                    {
                      "type": "text",
                      "text": "deinit",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " isn't the best place to cleanup, especially if you need guaranteed resource destruction. I would create some kind of "
                    },
                    {
                      "type": "text",
                      "text": "invalidate",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " method that you call from "
                    },
                    {
                      "type": "text",
                      "text": "defer",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " or some other known point where the system has asked you to clean up resources."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3F9F7D2D-D8E0-46DF-BF90-71FE52E73084",
          "type": "message",
          "user": "U03KC4LFL64",
          "text": "That is my plan I believe.  It was always just a fail safe in most cases.",
          "ts": "1654894383.928419",
          "thread_ts": "1654892642.874799",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "KId",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "is"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "my"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "plan"
                    },
                    {
                      "type": "text",
                      "text": " I believe"
                    },
                    {
                      "type": "text",
                      "text": "."
                    },
                    {
                      "type": "text",
                      "text": "  "
                    },
                    {
                      "type": "text",
                      "text": "It"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "was"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "always"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "just"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": " fail safe "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "most"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "cases."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03HRR4JA31\u003e asked\n\u0026gt; Are there any plans to make SwiftUI code accessible from Unit Tests (like the 3rd party lib ViewInspector does)?",
      "ts": "1654892765.000699",
      "thread_ts": "1654892765.000699",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654892775.192439",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "TwNw",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HRR4JA31"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Are there any plans to make SwiftUI code accessible from Unit Tests (like the 3rd party lib ViewInspector does)?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "383cbe41-4a10-4981-8667-8caa7f442c0f",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "Thanks for the question! We're always working to improve the tools our developers use. If there's something that isn't working for you, please let us know using the \u003chttp://feedbackassistant.apple.com|Feedback Assistant\u003e.",
          "ts": "1654892775.192439",
          "thread_ts": "1654892765.000699",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "jSiSy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the question! We're always working to improve the tools our developers use. If there's something that isn't working for you, please let us know using the "
                    },
                    {
                      "type": "link",
                      "url": "http://feedbackassistant.apple.com",
                      "text": "Feedback Assistant"
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JLTMSAV7\u003e asked\n\u0026gt; I am working on a project where all functionality is distributed across SPM packages, including SwiftUI views. All works great, except I cannot figure out how to have ‘Preview Assets’ in packages, so that SwiftUI view previews in those packages could include resources like images for previews. Is there a way to use Preview Assets with SPM packages and SwiftUI previews?",
      "ts": "1654892856.232919",
      "thread_ts": "1654892856.232919",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654893296.392629",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "tV3t",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JLTMSAV7"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I am working on a project where all functionality is distributed across SPM packages, including SwiftUI views. All works great, except I cannot figure out how to have \\u2018Preview Assets\\u2019 in packages, so that SwiftUI view previews in those packages could include resources like images for previews. Is there a way to use Preview Assets with SPM packages and SwiftUI previews?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "45aea127-5676-41c7-8932-7a0b40b84823",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "It looks like this is not currently supported as best as we can tell.  Can you please \u003chttps://feedbackassistant.apple.com/|file a feedback\u003e detailing your use case so we can consider that?  Thanks!",
          "ts": "1654892862.865469",
          "thread_ts": "1654892856.232919",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Fe9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It looks like this is not currently supported as best as we can tell.  Can you please "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/",
                      "text": "file a feedback"
                    },
                    {
                      "type": "text",
                      "text": " detailing your use case so we can consider that?  Thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5ADF3ECF-7824-42DB-BD91-B42CB8388036",
          "type": "message",
          "user": "U03J30J1S3D",
          "text": "This workaround was recently discussed in \u003c#C03HX19UNCQ|\u003e. It has served us well too for several months now. \u003chttps://dev.jeremygale.com/swiftui-how-to-use-custom-fonts-and-images-in-a-swift-package-cl0k9bv52013h6bnvhw76alid|https://dev.jeremygale.com/swiftui-how-to-use-custom-fonts-and-images-in-a-swift-package-cl0k9bv52013h6bnvhw76alid\u003e",
          "ts": "1654893296.392629",
          "thread_ts": "1654892856.232919",
          "attachments": [
            {
              "fallback": "Jeremy Gale's iOS Musings: SwiftUI: How to use custom fonts and images in a Swift Package",
              "id": 1,
              "title": "SwiftUI: How to use custom fonts and images in a Swift Package",
              "title_link": "https://dev.jeremygale.com/swiftui-how-to-use-custom-fonts-and-images-in-a-swift-package-cl0k9bv52013h6bnvhw76alid",
              "text": "Create a SwiftUI design system module with custom fonts, reusable components, and working Xcode Previews.",
              "image_url": "https://hashnode.com/utility/r?url=https%3A%2F%2Fcdn.hashnode.com%2Fres%2Fhashnode%2Fimage%2Fupload%2Fv1646872143430%2FXWQsMyoI3.png%3Fw%3D1200%26h%3D630%26fit%3Dcrop%26crop%3Dentropy%26auto%3Dcompress%2Cformat%26format%3Dwebp%26fm%3Dpng",
              "service_name": "Jeremy Gale's iOS Musings",
              "service_icon": "https://cdn.hashnode.com/res/hashnode/image/upload/v1611242155728/W3_BYVVVh.png",
              "from_url": "https://dev.jeremygale.com/swiftui-how-to-use-custom-fonts-and-images-in-a-swift-package-cl0k9bv52013h6bnvhw76alid",
              "original_url": "https://dev.jeremygale.com/swiftui-how-to-use-custom-fonts-and-images-in-a-swift-package-cl0k9bv52013h6bnvhw76alid",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "gratitude-thank-you",
              "count": 3,
              "users": [
                "U03HL553PNG",
                "U03JLTMSAV7",
                "U03J4DREXJQ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6+Y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "workaround"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "was"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "recently"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "discussed"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "in"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "channel",
                      "channel_id": "C03HX19UNCQ"
                    },
                    {
                      "type": "text",
                      "text": "."
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "It"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "has"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "served"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "us"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "well"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "too"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "for"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "several"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "months"
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "now. "
                    },
                    {
                      "type": "link",
                      "url": "https://dev.jeremygale.com/swiftui-how-to-use-custom-fonts-and-images-in-a-swift-package-cl0k9bv52013h6bnvhw76alid",
                      "text": "https://dev.jeremygale.com/swiftui-how-to-use-custom-fonts-and-images-in-a-swift-package-cl0k9bv52013h6bnvhw76alid"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J01RLBBR\u003e asked\n\u0026gt; Not a question but just wanted to say thanks... I've been developing Mac applications since 2007 and iOS from day one... Xcode has continues to improve over the years and I am very excited about the updates to Xcode 14. Thank you!",
      "ts": "1654892933.771429",
      "thread_ts": "1654892933.771429",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654894210.396159",
      "reactions": [
        {
          "name": "heart",
          "count": 2,
          "users": [
            "U03HL553PNG",
            "U03HES8SVM3"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "id881",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J01RLBBR"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Not a question but just wanted to say thanks... I've been developing Mac applications since 2007 and iOS from day one... Xcode has continues to improve over the years and I am very excited about the updates to Xcode 14. Thank you!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "b3c79f29-d901-4183-b6b1-1973927a1add",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "Thank you so much for the nice note, Ryan!  We all work really hard on Xcode so glad to hear that you're as excited as we are. :slightly_smiling_face:  Thanks for brightening our day!",
          "ts": "1654892992.483179",
          "thread_ts": "1654892933.771429",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "TTd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you so much for the nice note, Ryan!  We all work really hard on Xcode so glad to hear that you're as excited as we are. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "  Thanks for brightening our day!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2c5f83ed-0ef5-4314-a80f-8bfc81682620",
          "type": "message",
          "user": "U03J01RLBBR",
          "text": "The only other thing that made me happier was the addition (and improvements this year) of DocC. :rolling_on_the_floor_laughing:",
          "ts": "1654894210.396159",
          "thread_ts": "1654892933.771429",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "A19T",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The only other thing that made me happier was the addition (and improvements this year) of DocC. "
                    },
                    {
                      "type": "emoji",
                      "name": "rolling_on_the_floor_laughing",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "94cd330e-84f5-4912-a0a0-a57dac2bc59b",
      "type": "message",
      "user": "U03HL553PNG",
      "text": "Folks, I also just wanted to say a big *thank you* for all of the awesome questions all week and for joining us in the Dev Tools and Swift Digital Lounge!  We all hope you enjoyed the space as much as we did! :star-struck: Before you head out: *\u003chttps://essentials.applesurveys.com/jfe/form/SV_2cw6N3JbrxFcoiq|Our WWDC22 Developer Survey is now live\u003e*! It would mean SO much to us if you could take a few moments — 5 minutes, max — and let us know what you loved about WWDC22 and what we could make better for you. Your feedback has major impact on the programs and events we host for developers, and we’re excited to hear from you.\n\nWe're still trying to get through the last of your questions that you submitted but I'm going to keep :thread: turned on for a little while.  Feel free to comment in this thread with your thoughts on how things went and throw us an emoji to tell us which activities you loved!\n\n:woman-raising-hand::skin-tone-4: Q\u0026amp;A\n:partying_face: Meet the Presenter Watch Parties\n:jigsaw: Challenges in the \u003c#C03JPCE9ZED|\u003e\n:1234: Trivia Night",
      "ts": "1654893028.356339",
      "pinned_to": [
        "C03H0JN431U"
      ],
      "attachments": [
        {
          "fallback": "Apple",
          "id": 1,
          "title": "Apple",
          "title_link": "https://essentials.applesurveys.com/jfe/form/SV_2cw6N3JbrxFcoiq",
          "text": "Thanks for joining us this year. WWDC is designed for you and your feedback is important to us. Providing responses to this survey is voluntary. It should take 5 minutes or less of your time. Do not include any information that may identify you in the text boxes. Your responses will not be tied to you and will be aggregated with other responses.",
          "service_name": "essentials.applesurveys.com",
          "service_icon": "https://essentials.applesurveys.com/brand-management/apple-touch-icon",
          "from_url": "https://essentials.applesurveys.com/jfe/form/SV_2cw6N3JbrxFcoiq",
          "original_url": "https://essentials.applesurveys.com/jfe/form/SV_2cw6N3JbrxFcoiq",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 3,
          "users": [
            "U03JELM0ZNV",
            "U03HVE4TV8E",
            "U03JFMDUYF9"
          ]
        },
        {
          "name": "man-raising-hand",
          "count": 2,
          "users": [
            "U03JPFQNX5K",
            "U03HVE4TV8E"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "TSd/K",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Folks, I also just wanted to say a big "
                },
                {
                  "type": "text",
                  "text": "thank you",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " for all of the awesome questions all week and for joining us in the Dev Tools and Swift Digital Lounge!  We all hope you enjoyed the space as much as we did! "
                },
                {
                  "type": "emoji",
                  "name": "star-struck",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " Before you head out: "
                },
                {
                  "type": "link",
                  "url": "https://essentials.applesurveys.com/jfe/form/SV_2cw6N3JbrxFcoiq",
                  "text": "Our WWDC22 Developer Survey is now live",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "! It would mean SO much to us if you could take a few moments — 5 minutes, max — and let us know what you loved about WWDC22 and what we could make better for you. Your feedback has major impact on the programs and events we host for developers, and we’re excited to hear from you.\n\nWe're still trying to get through the last of your questions that you submitted but I'm going to keep "
                },
                {
                  "type": "emoji",
                  "name": "thread",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " turned on for a little while.  Feel free to comment in this thread with your thoughts on how things went and throw us an emoji to tell us which activities you loved!\n\n"
                },
                {
                  "type": "emoji",
                  "name": "woman-raising-hand",
                  "skin_tone": 4
                },
                {
                  "type": "text",
                  "text": " Q\u0026A\n"
                },
                {
                  "type": "emoji",
                  "name": "partying_face",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " Meet the Presenter Watch Parties\n"
                },
                {
                  "type": "emoji",
                  "name": "jigsaw",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " Challenges in the "
                },
                {
                  "type": "channel",
                  "channel_id": "C03JPCE9ZED"
                },
                {
                  "type": "text",
                  "text": "\n"
                },
                {
                  "type": "emoji",
                  "name": "1234",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " Trivia Night"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "0737fe4d-70ad-487a-bb1d-9a2dc9ffe94b",
      "type": "message",
      "user": "U03HL553PNG",
      "text": "\u003c@U03HWEGHRKR\u003e asked:\n\u0026gt; How do we debug AttributeGraph crashes? When i click \"open in project\" from the organizer, it doesn't really go anywhere in the xcode code editor.\n",
      "ts": "1654893178.396449",
      "thread_ts": "1654893178.396449",
      "reply_count": 1,
      "latest_reply": "1654893317.229299",
      "team": "T031SG5MZ7U",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "KCDJv",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03HWEGHRKR"
                },
                {
                  "type": "text",
                  "text": " asked:\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"How do we debug AttributeGraph crashes? When i click \\\"open in project\\\" from the organizer, it doesn't really go anywhere in the xcode code editor.\"}]}"
            },
            {
              "type": "rich_text_section",
              "elements": []
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ebd76358-83fd-458a-be41-c3e7d73bb844",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "We'd love for you to send us \u003chttps://feedbackassistant.apple.com|feedback\u003e requesting enhancements in this area. In particular, if you have suggestions that would make these crashes easier to investigate, please let us know.",
          "ts": "1654893317.229299",
          "thread_ts": "1654893178.396449",
          "parent_user_id": "U03HL553PNG",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03HWEGHRKR"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mv8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We'd love for you to send us "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": "feedback"
                    },
                    {
                      "type": "text",
                      "text": " requesting enhancements in this area. In particular, if you have suggestions that would make these crashes easier to investigate, please let us know."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J07GGVDK\u003e asked\n\u0026gt; What's the proper way to separate keywords when uploading an app? The help tooltip says to \"separate keywords with an English comma, Chinese comma, or a mix of both\" but can you please give an example of a properly delineated string of keywords?\n\u0026gt; \n\u0026gt; \"termA, termB, termC, … \"   or\n\u0026gt; \"termA,termB,termC,…\" with no spaces in between?\n\u0026gt; \n\u0026gt; What about for foreign characters like\n\u0026gt; \"キーワードA、キーワードB、…\" \n\u0026gt; \n\u0026gt; Do we use the local comma character:  、 ?",
      "ts": "1654893184.349109",
      "thread_ts": "1654893184.349109",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654893199.187729",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "o=HJ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J07GGVDK"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What's the proper way to separate keywords when uploading an app? The help tooltip says to \\\"separate keywords with an English comma, Chinese comma, or a mix of both\\\" but can you please give an example of a properly delineated string of keywords?\\n\\n\\\"termA, termB, termC, \\u2026 \\\"   or\\n\\\"termA,termB,termC,\\u2026\\\" with no spaces in between?\\n\\nWhat about for foreign characters like\\n\\\"\\u30ad\\u30fc\\u30ef\\u30fc\\u30c9A\\u3001\\u30ad\\u30fc\\u30ef\\u30fc\\u30c9B\\u3001\\u2026\\\" \\n\\nDo we use the local comma character:  \\u3001 ?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ce0d4c29-4fbc-4e2b-8b30-9090ab7a4de4",
          "type": "message",
          "user": "U03HB5P2UTY",
          "text": "Hi \u003c@U03J07GGVDK\u003e, spaces are optional when including keywords so both of the examples you provided would work. As indicated in the tooltip, Chinese commas are also supported so those commas (and the spaces after them) would be accepted. More information on keywords and other App Store metadata can be found here: \u003chttps://help.apple.com/app-store-connect/#/devf29afbb74\u003e",
          "ts": "1654893199.187729",
          "thread_ts": "1654893184.349109",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "white_check_mark",
              "count": 1,
              "users": [
                "U03J07GGVDK"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lgHC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi "
                    },
                    {
                      "type": "user",
                      "user_id": "U03J07GGVDK"
                    },
                    {
                      "type": "text",
                      "text": ", spaces are optional when including keywords so both of the examples you provided would work. As indicated in the tooltip, Chinese commas are also supported so those commas (and the spaces after them) would be accepted. More information on keywords and other App Store metadata can be found here: "
                    },
                    {
                      "type": "link",
                      "url": "https://help.apple.com/app-store-connect/#/devf29afbb74",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03KWLVQP96\u003e asked\n\u0026gt; Hi,\n\u0026gt; \n\u0026gt; I know Swift is designed mostly to build apps on Apple ecosystem. I would like to ask if there is initiative to make it more algorithm problem solving language. What I mean is, as a being as an enthusiastic problem solver, many talented competitive programmer or skilled Leetcoder suggest that to not use Swift. Especially in String manipulation while solving problem, is not so straightforward as Java or Phyton and there is no big community support. Do you guys have any plan to make Swift more algorithm problem solver friendly in the future? \n\u0026gt; \n\u0026gt; Or any plan to expand Swift Problem solver community?\n\u0026gt; \n\u0026gt;  Thanks.",
      "ts": "1654895003.618859",
      "thread_ts": "1654895003.618859",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654895343.535349",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "SNQzJ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03KWLVQP96"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi,\\n\\nI know Swift is designed mostly to build apps on Apple ecosystem. I would like to ask if there is initiative to make it more algorithm problem solving language. What I mean is, as a being as an enthusiastic problem solver, many talented competitive programmer or skilled Leetcoder suggest that to not use Swift. Especially in String manipulation while solving problem, is not so straightforward as Java or Phyton and there is no big community support. Do you guys have any plan to make Swift more algorithm problem solver friendly in the future? \\n\\nOr any plan to expand Swift Problem solver community?\\n\\n Thanks.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "98b5efa8-fe4c-4a82-87e0-3e94bcfeb2b0",
          "type": "message",
          "user": "U03HESHGASH",
          "text": "hi! We have a few potential solutions here. In particular, you may find the Algorithms and Collections packages useful:\n\n\u003chttps://github.com/apple/swift-algorithms\u003e\n\u003chttps://github.com/apple/swift-collections\u003e\n\nand the new Regular Expression features announced this week may help with String manipulation.",
          "ts": "1654895089.013049",
          "thread_ts": "1654895003.618859",
          "attachments": [
            {
              "fallback": "GitHub: GitHub - apple/swift-algorithms: Commonly used sequence and collection algorithms for Swift",
              "id": 1,
              "title": "GitHub - apple/swift-algorithms: Commonly used sequence and collection algorithms for Swift",
              "title_link": "https://github.com/apple/swift-algorithms",
              "text": "Commonly used sequence and collection algorithms for Swift - GitHub - apple/swift-algorithms: Commonly used sequence and collection algorithms for Swift",
              "image_url": "https://opengraph.githubassets.com/05c78bc31ca488fd21ffb5b356bca009be2de732895db8ee02465c8899f5c27f/apple/swift-algorithms",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/apple/swift-algorithms",
              "original_url": "https://github.com/apple/swift-algorithms",
              "blocks": null
            },
            {
              "fallback": "GitHub: GitHub - apple/swift-collections: Commonly used data structures for Swift",
              "id": 2,
              "title": "GitHub - apple/swift-collections: Commonly used data structures for Swift",
              "title_link": "https://github.com/apple/swift-collections",
              "text": "Commonly used data structures for Swift. Contribute to apple/swift-collections development by creating an account on GitHub.",
              "image_url": "https://opengraph.githubassets.com/03c9d52eba9ed9aa8dcd115cffec778a191e81ef283643f7f4421b7d0e2362ca/apple/swift-collections",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/apple/swift-collections",
              "original_url": "https://github.com/apple/swift-collections",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "JtC",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "hi! We have a few potential solutions here. In particular, you may find the Algorithms and Collections packages useful:\n\n"
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-algorithms",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n"
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/apple/swift-collections",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n\nand the new Regular Expression features announced this week may help with String manipulation."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "85fdb650-6056-4986-93cb-2f9e10df0999",
          "type": "message",
          "user": "U03KWLVQP96",
          "text": "Thank you for answer!",
          "ts": "1654895343.535349",
          "thread_ts": "1654895003.618859",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "k0FF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for answer!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JWDF002F\u003e asked\n\u0026gt; I wish Swift cross platform, not just a Apple language, Why not support Windows,Linux as well.  Dart lang, Rust lang, Golang can even support both platform, but currently Swift lang is just ugly to support with windows, linux. that's should not be ...",
      "ts": "1654895042.681949",
      "thread_ts": "1654895042.681949",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 14,
      "latest_reply": "1654898492.247179",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "dgTXW",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JWDF002F"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I wish Swift cross platform, not just a Apple language, Why not support Windows,Linux as well.  Dart lang, Rust lang, Golang can even support both platform, but currently Swift lang is just ugly to support with windows, linux. that's should not be ...\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "035e4cc6-15ee-4ff8-a8fa-da48d394b01f",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "Swift officially supports Ubuntu Linux! :partying_face: The community has also worked hard to add Windows support, and our CI is set up to automatically build every PR for both platforms. For more information on the platforms we support, see the \u003chttps://www.swift.org/platform-support/|Platform Support\u003e page on \u003chttp://swift.org|swift.org\u003e.\n\nThe Swift compiler, runtime, and standard library are open source, so if you notice an issue using Swift on Linux or Windows, a PR would be welcome! If you see a way to improve the Swift user experience, please let us know on the Swift forums.",
          "ts": "1654895100.829479",
          "thread_ts": "1654895042.681949",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "1z7v",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Swift officially supports Ubuntu Linux! "
                    },
                    {
                      "type": "emoji",
                      "name": "partying_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " The community has also worked hard to add Windows support, and our CI is set up to automatically build every PR for both platforms. For more information on the platforms we support, see the "
                    },
                    {
                      "type": "link",
                      "url": "https://www.swift.org/platform-support/",
                      "text": "Platform Support"
                    },
                    {
                      "type": "text",
                      "text": " page on "
                    },
                    {
                      "type": "link",
                      "url": "http://swift.org",
                      "text": "swift.org"
                    },
                    {
                      "type": "text",
                      "text": ".\n\nThe Swift compiler, runtime, and standard library are open source, so if you notice an issue using Swift on Linux or Windows, a PR would be welcome! If you see a way to improve the Swift user experience, please let us know on the Swift forums."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "07531a40-bbce-4fd0-8141-86cddab28240",
          "type": "message",
          "user": "U03JELM0ZNV",
          "text": "If you want an IDE on the other platforms, I'm a huge fan of the Jetbrains products. I use AppCode on Mac as my main editing environment, although XCode in recent years has closed the gap a lot.\n\n\u003chttps://plugins.jetbrains.com/plugin/8240-swift\u003e",
          "ts": "1654895570.914429",
          "thread_ts": "1654895042.681949",
          "is_starred": true,
          "attachments": [
            {
              "fallback": "JetBrains Marketplace: Swift - IntelliJ IDEs Plugin | Marketplace",
              "id": 1,
              "title": "Swift - IntelliJ IDEs Plugin | Marketplace",
              "title_link": "https://plugins.jetbrains.com/plugin/8240-swift",
              "text": "Plugin for Swift language support in CLion.",
              "thumb_url": "https://plugins.jetbrains.com/files/8240/183518/icon/pluginIcon.png",
              "service_name": "JetBrains Marketplace",
              "service_icon": "https://resources.jetbrains.com/storage/ui/favicons/apple-touch-icon-57x57.png",
              "from_url": "https://plugins.jetbrains.com/plugin/8240-swift",
              "original_url": "https://plugins.jetbrains.com/plugin/8240-swift",
              "fields": [
                {
                  "title": "Tags:",
                  "value": "Programming Language",
                  "short": true
                },
                {
                  "title": "Rating:",
                  "value": ":star::star::star::star:",
                  "short": true
                }
              ],
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "aoyD",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you want an IDE on the other platforms, I'm a huge fan of the Jetbrains products. I use AppCode on Mac as my main editing environment, although XCode in recent years has closed the gap a lot.\n\n"
                    },
                    {
                      "type": "link",
                      "url": "https://plugins.jetbrains.com/plugin/8240-swift",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3c9d3e7c-e320-41a5-b205-77041c1d36d2",
          "type": "message",
          "user": "U03JELM0ZNV",
          "text": "I have a massive body of Swift to port to Android starting later this year. I'm hoping to keep most of it still working, rather than back-porting to C++.",
          "ts": "1654895616.529839",
          "thread_ts": "1654895042.681949",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "R/h",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I have a massive body of Swift to port to Android starting later this year. I'm hoping to keep most of it still working, rather than back-porting to C++."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bc252300-122e-4440-82f3-8c1a1300afe7",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "I know some folks in the community have been working to make Swift happy on Android. :slightly_smiling_face: Hopefully you'll be able to take advantage of that effort!",
          "ts": "1654895771.348449",
          "thread_ts": "1654895042.681949",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 2,
              "users": [
                "U03JELM0ZNV",
                "U03JTMA2FUH"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6KAft",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I know some folks in the community have been working to make Swift happy on Android. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " Hopefully you'll be able to take advantage of that effort!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f2f23c37-6830-4fc8-9726-1f76090d541e",
          "type": "message",
          "user": "U03JRQHF7T2",
          "text": "I’ve used Swift for some linux utility (command-line) projects very successfully. Gets built via Github Action on a linux node, then packaged up into a ubuntu-based docker container.\n\nSo while there is probably room for improvements, I can honestly say it works well for me.",
          "ts": "1654895775.016479",
          "thread_ts": "1654895042.681949",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dRR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I’ve used Swift for some linux utility (command-line) projects very successfully. Gets built via Github Action on a linux node, then packaged up into a ubuntu-based docker container.\n\nSo while there is probably room for improvements, I can honestly say it works well for me."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4806808a-136c-4265-a4aa-898d948f1449",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "There's _always_ room for improvement! If there's something specific you think can be improved, the Swift forums and bug tracker are great resources.",
          "ts": "1654895807.717029",
          "thread_ts": "1654895042.681949",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "100",
              "count": 1,
              "users": [
                "U03JRQHF7T2"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZhQ51",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There's "
                    },
                    {
                      "type": "text",
                      "text": "always",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " room for improvement! If there's something specific you think can be improved, the Swift forums and bug tracker are great resources."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "50b3324b-cb72-4646-a176-8761a81f9287",
          "type": "message",
          "user": "U03JRQHF7T2",
          "text": "Swift is now my favorite tool for scripting (has replaced bash!) and creating CLIs",
          "ts": "1654895813.311929",
          "thread_ts": "1654895042.681949",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03H36U6JHM",
                "U03JTPM78E7"
              ]
            },
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U03JTMA2FUH"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sokSU",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Swift is now my favorite tool for scripting (has replaced bash!) and creating CLIs"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2066d836-99c5-455e-b80f-cb356cb18cbb",
          "type": "message",
          "user": "U03JELM0ZNV",
          "text": "This may be a bit cheeky, but my porting to Android is going to involve wrapping the Cocos2D-X game engine to expose a subset of SpriteKit APIs, so I can reuse my code. Once (if?) I get beyond a trivial proof-of-concept, I'll make that bit an open source project.",
          "ts": "1654895939.152389",
          "thread_ts": "1654895042.681949",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "+1",
              "count": 3,
              "users": [
                "U03JRQHF7T2",
                "U03JPFQNX5K",
                "U03JTMA2FUH"
              ]
            },
            {
              "name": "clap",
              "count": 1,
              "users": [
                "U03JPFQNX5K"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "v6tj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This may be a bit cheeky, but my porting to Android is going to involve wrapping the Cocos2D-X game engine to expose a subset of SpriteKit APIs, so I can reuse my code. Once (if?) I get beyond a trivial proof-of-concept, I'll make that bit an open source project."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "79807c83-6996-47f0-8594-3498e703be04",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "I haven't tried to write any gaming graphics code since the mid-1990s, so I can't really speak to the effort there (although I appreciate a good sprite.) But it sounds like an interesting project. Please share it with us in the \u003chttps://forums.swift.org/c/community-showcase/|Community Showcase\u003e (\"didn't he mention the forums already?\") when you post it! :smile:",
          "ts": "1654896056.318869",
          "thread_ts": "1654895042.681949",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "white_check_mark",
              "count": 3,
              "users": [
                "U03JELM0ZNV",
                "U03JSFUKL2U",
                "U03JRQHF7T2"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "kIm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I haven't tried to write any gaming graphics code since the mid-1990s, so I can't really speak to the effort there (although I appreciate a good sprite.) But it sounds like an interesting project. Please share it with us in the "
                    },
                    {
                      "type": "link",
                      "url": "https://forums.swift.org/c/community-showcase/",
                      "text": "Community Showcase"
                    },
                    {
                      "type": "text",
                      "text": " (\"didn't he mention the forums already?\") when you post it! "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "73d5120a-b750-4200-bb05-003360f7c326",
          "type": "message",
          "user": "U03JELM0ZNV",
          "text": "I _started_ with a common C++ core using Cocos2D-X but once I moved from Objective-C++ to Swift, I dearly wanted to stay in that world. Also, as 99% of my app runs in iMessage as an extension, went conservative picking Apple tech over 3rd party as much as possible.",
          "ts": "1654896060.408249",
          "thread_ts": "1654895042.681949",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "V0JV",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I "
                    },
                    {
                      "type": "text",
                      "text": "started",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " with a common C++ core using Cocos2D-X but once I moved from Objective-C++ to Swift, I dearly wanted to stay in that world. Also, as 99% of my app runs in iMessage as an extension, went conservative picking Apple tech over 3rd party as much as possible."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "71c581c2-b5d1-4db2-b39d-2c788243be7c",
          "type": "message",
          "user": "U03JELM0ZNV",
          "text": "Note _massive body of Swift_ is about 20KLoC, which I reckon would be near double that in C++. It's enough to seriously give time to such wrapper projects rather than maintaining two codebases (solo founder).",
          "ts": "1654896213.626239",
          "thread_ts": "1654895042.681949",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "3Gm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Note "
                    },
                    {
                      "type": "text",
                      "text": "massive body of Swift",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is about 20KLoC, which I reckon would be near double that in C++. It's enough to seriously give time to such wrapper projects rather than maintaining two codebases (solo founder)."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e34207e1-b978-47ed-bc91-202d03505b0c",
          "type": "message",
          "user": "U03JSFUKL2U",
          "text": "Community Showcase is very great topic!",
          "ts": "1654896283.077489",
          "thread_ts": "1654895042.681949",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U03H36U6JHM",
                "U03JRQHF7T2"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Sz=8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Community Showcase is very great topic!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "44faba81-6142-4645-9e3c-bc32d1122750",
          "type": "message",
          "user": "U03JRP6568Y",
          "text": "We use Swift for some of our utility libraries - and actually sometimes do our CI inside of Linux Docker images. We sometimes manually test on Windows as well. The command line parser library is also a big help. Swift Packages work pretty well on Linux and Windows. Would love to see interop with Java on Android but thats a whole different deal...",
          "ts": "1654898034.641409",
          "thread_ts": "1654895042.681949",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AI5+",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We use Swift for some of our utility libraries - and actually sometimes do our CI inside of Linux Docker images. We sometimes manually test on Windows as well. The command line parser library is also a big help. Swift Packages work pretty well on Linux and Windows. Would love to see interop with Java on Android but thats a whole different deal..."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1120de20-7e09-4b5b-ba41-3d45c2a0778a",
          "type": "message",
          "user": "U03H36U6JHM",
          "text": "If that'd be useful to it, raise it on the Swift forums! I am sure the folks working on Android support would be interested in discussing it.",
          "ts": "1654898492.247179",
          "thread_ts": "1654895042.681949",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FCf",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If that'd be useful to it, raise it on the Swift forums! I am sure the folks working on Android support would be interested in discussing it."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J22AU6DQ\u003e asked\n\u0026gt; When building SwiftPM Library for iPhone Simulator there are now issue, but when trying to preview a view in the target I see the following issue:\n\u0026gt; error build: multiple configured targets of 'MyPackageName_MyTargetName' are being created for watchOS Simulator\n\u0026gt; \n\u0026gt; What might be the reason of such a behaviour?",
      "ts": "1654896378.596479",
      "thread_ts": "1654896378.596479",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654896384.216609",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Q5v",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J22AU6DQ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"When building SwiftPM Library for iPhone Simulator there are now issue, but when trying to preview a view in the target I see the following issue:\\nerror build: multiple configured targets of 'MyPackageName_MyTargetName' are being created for watchOS Simulator\\n\\nWhat might be the reason of such a behaviour?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "cd7382d8-1341-4265-ad39-7ed5a0498182",
          "type": "message",
          "user": "U03HL553PNG",
          "text": "The rest of the team is off in 1:1 labs right now so they asked me to pass along that this doesn't look intended.  Would you mind \u003chttps://feedbackassistant.apple.com/|filing a feedback report\u003e for that issue so we can take a look?  You may also want to post on the \u003chttp://developer.apple.com/forums/|Developer Forums\u003e to see if someone else is having the same issue.",
          "ts": "1654896384.216609",
          "thread_ts": "1654896378.596479",
          "attachments": [
            {
              "fallback": "Apple Developer Forums",
              "id": 1,
              "title": "Apple Developer Forums",
              "title_link": "http://developer.apple.com/forums/",
              "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
              "service_name": "developer.apple.com",
              "service_icon": "https://forums.developer.apple.com/forums/build-06102022-1/public/assets/favicon.ico",
              "from_url": "http://developer.apple.com/forums/",
              "original_url": "http://developer.apple.com/forums/",
              "blocks": null
            }
          ],
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "L39M",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The rest of the team is off in 1:1 labs right now so they asked me to pass along that this doesn't look intended.  Would you mind "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com/",
                      "text": "filing a feedback report"
                    },
                    {
                      "type": "text",
                      "text": " for that issue so we can take a look?  You may also want to post on the "
                    },
                    {
                      "type": "link",
                      "url": "http://developer.apple.com/forums/",
                      "text": "Developer Forums"
                    },
                    {
                      "type": "text",
                      "text": " to see if someone else is having the same issue."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J7LBB9DM\u003e asked\n\u0026gt; I maintain a popular project that integrates with a vendor swift framework. We'd like to call some and debug some swift functions in the framework. Unfortunately there is no .swiftinterface for it. Is there any tools or improvements in this Xcode release to go from stable ABI -\u0026gt; .swiftinerface?",
      "ts": "1654901677.847109",
      "thread_ts": "1654901677.847109",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 2,
      "latest_reply": "1654901734.873159",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "+1BT",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J7LBB9DM"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I maintain a popular project that integrates with a vendor swift framework. We'd like to call some and debug some swift functions in the framework. Unfortunately there is no .swiftinterface for it. Is there any tools or improvements in this Xcode release to go from stable ABI -\u003e .swiftinerface?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "16fe1868-24eb-410d-afbb-2dfa4e3757eb",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "There's no official tool for this. It would be very fun to build it yourself - it's essentially class dump for Swift which you can accomplish by reading existing runtime metadata embedded in the binary \u003chttps://twitter.com/CodaFi_/status/1113576538446991360?s=20\u0026amp;t=6I1HWyERO40FYAgfLdamuQ\u003e",
          "ts": "1654901713.136609",
          "thread_ts": "1654901677.847109",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "exploding_head",
              "count": 1,
              "users": [
                "U03JSFUKL2U"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YUkt",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There's no official tool for this. It would be very fun to build it yourself - it's essentially class dump for Swift which you can accomplish by reading existing runtime metadata embedded in the binary "
                    },
                    {
                      "type": "link",
                      "url": "https://twitter.com/CodaFi_/status/1113576538446991360?s=20\u0026t=6I1HWyERO40FYAgfLdamuQ",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9149da09-86d3-4db6-9b50-1ef8cfce11f3",
          "type": "message",
          "user": "U03HWDCSCHX",
          "text": "Also note that swiftinterface files are entirely human readable, so you can write one yourself too!",
          "ts": "1654901734.873159",
          "thread_ts": "1654901677.847109",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=WT",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also note that swiftinterface files are entirely human readable, so you can write one yourself too!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03JETJ7UU9\u003e asked\n\u0026gt; We have an iOS app that has some SPM dependencies which in turn have SPM subdependencies. Some of these are shared:\n\u0026gt; ie \n\u0026gt; App - FrameworkA -\u0026gt; FrameworkB, FrameworkC\n\u0026gt;          -FrameworkD -\u0026gt; FrameworkB, FrameworkC\n\u0026gt; \n\u0026gt; The app builds find locally and on CI but during archive and submission we see errors where the bundle has duplicates of FrameworkB and FrameworkC. We had to add a Post Build Action on release like so:\n\u0026gt; ```\n\u0026gt; #!/bin/bash\n\u0026gt; \n\u0026gt; # Source: \u003chttps://forums.swift.org/t/swift-packages-in-multiple-targets-results-in-this-will-result-in-duplication-of-library-code-errors/34892/67|https://forums.swift.org/t/swift-packages-in-multiple-targets-results-in-this-will-result-in-duplication-of-library-code-errors/34892/67\u003e\n\u0026gt; \n\u0026gt; APP_PATH=\"$ARCHIVE_PATH/Products/Applications/$\u003chttp://PRODUCT_NAME.app|PRODUCT_NAME.app\u003e\"\n\u0026gt; \n\u0026gt; # Nested Frameworks in Frameworks\n\u0026gt; cd \"${APP_PATH}/Frameworks/\"\n\u0026gt; for framework in *; do\n\u0026gt;     if [ -d \"$framework\" ]; then\n\u0026gt;         if [ -d \"${framework}/Frameworks\" ]; then\n\u0026gt;             echo \"Delete nested frameworks from ${framework}/Frameworks/\"\n\u0026gt;             rm -rf \"${framework}/Frameworks\"\n\u0026gt;         fi\n\u0026gt;     fi\n\u0026gt; done\n\u0026gt; ```",
      "ts": "1654902760.737069",
      "thread_ts": "1654902760.737069",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 3,
      "latest_reply": "1654909053.214419",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "6wJx",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03JETJ7UU9"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We have an iOS app that has some SPM dependencies which in turn have SPM subdependencies. Some of these are shared:\\nie \\nApp - FrameworkA -\u003e FrameworkB, FrameworkC\\n         -FrameworkD -\u003e FrameworkB, FrameworkC\\n\\nThe app builds find locally and on CI but during archive and submission we see errors where the bundle has duplicates of FrameworkB and FrameworkC. We had to add a Post Build Action on release like so:\\n```\\n#!\\/bin\\/bash\\n\\n# Source: \"},{\"type\":\"link\",\"url\":\"https:\\/\\/forums.swift.org\\/t\\/swift-packages-in-multiple-targets-results-in-this-will-result-in-duplication-of-library-code-errors\\/34892\\/67\",\"text\":\"https:\\/\\/forums.swift.org\\/t\\/swift-packages-in-multiple-targets-results-in-this-will-result-in-duplication-of-library-code-errors\\/34892\\/67\"},{\"type\":\"text\",\"text\":\"\\n\\nAPP_PATH=\\\"$ARCHIVE_PATH\\/Products\\/Applications\\/$PRODUCT_NAME.app\\\"\\n\\n# Nested Frameworks in Frameworks\\ncd \\\"${APP_PATH}\\/Frameworks\\/\\\"\\nfor framework in *; do\\n    if [ -d \\\"$framework\\\" ]; then\\n        if [ -d \\\"${framework}\\/Frameworks\\\" ]; then\\n            echo \\\"Delete nested frameworks from ${framework}\\/Frameworks\\/\\\"\\n            rm -rf \\\"${framework}\\/Frameworks\\\"\\n        fi\\n    fi\\ndone\\n```\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ed6e99dd-93e8-4197-b6dd-bcece1aaa377",
          "type": "message",
          "user": "U03J7H4LJ5N",
          "text": "Could you please clarify if you are still seeing this issue in Xcode version 13.4 or newer (Xcode 13.4 did include a fix for this type of issue)? If yes, filing a bug report at \u003chttps://feedbackassistant.apple.com\u003e would be greatly appreciated.",
          "ts": "1654902769.515889",
          "thread_ts": "1654902760.737069",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+U9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Could you please clarify if you are still seeing this issue in Xcode version 13.4 or newer (Xcode 13.4 did include a fix for this type of issue)? If yes, filing a bug report at "
                    },
                    {
                      "type": "link",
                      "url": "https://feedbackassistant.apple.com",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " would be greatly appreciated."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1da2d866-ab29-4592-9259-f3c46801b82d",
          "type": "message",
          "user": "U03JETJ7UU9",
          "text": "Hey \u003c@U03J7H4LJ5N\u003e! (We met at the event on Monday :smile:). Let me try again with Xcode 13.4 and see. When we put this fix in place it was months back and we haven't really revisited it since.",
          "ts": "1654907358.277739",
          "thread_ts": "1654902760.737069",
          "team": "T031SG5MZ7U",
          "reactions": [
            {
              "name": "pray",
              "count": 1,
              "users": [
                "U03J7H4LJ5N"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/53F",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hey "
                    },
                    {
                      "type": "user",
                      "user_id": "U03J7H4LJ5N"
                    },
                    {
                      "type": "text",
                      "text": "! (We met at the event on Monday "
                    },
                    {
                      "type": "emoji",
                      "name": "smile",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "). Let me try again with Xcode 13.4 and see. When we put this fix in place it was months back and we haven't really revisited it since."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0625e5cf-612a-4f4e-a8ed-6959f5594a66",
          "type": "message",
          "user": "U03JETJ7UU9",
          "text": "Hmm that's weird... I just tried with 13.3.1 and I don't see any of our in house frameworks in the `Framework` folder after archiving? Maybe they were all statically linked? Downloading 13.2 to try again",
          "ts": "1654909053.214419",
          "thread_ts": "1654902760.737069",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lZW=m",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hmm that's weird... I just tried with 13.3.1 and I don't see any of our in house frameworks in the "
                    },
                    {
                      "type": "text",
                      "text": "Framework",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " folder after archiving? Maybe they were all statically linked? Downloading 13.2 to try again"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03J20E7UBV\u003e asked\n\u0026gt; I had a great lab yesterday (thank you, Apple!) for trying to resolve an issue in Xcode 14 beta 1 that my project gets when trying to build; `Undefined symbols for architecture arm64:`.  I went back and confirmed that I can build with no issue on Xcode 13.4.1, so I'm wondering if there are any docs outside of the release notes that might help me in figuring out why I'm getting such an error only in Xcode 14.",
      "ts": "1654905666.531679",
      "thread_ts": "1654905666.531679",
      "subtype": "bot_message",
      "bot_id": "B03HGE996MA",
      "username": "DevTools and Swift - Ask a Question",
      "reply_count": 1,
      "latest_reply": "1654905724.214609",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "AVx2",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03J20E7UBV"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I had a great lab yesterday (thank you, Apple!) for trying to resolve an issue in Xcode 14 beta 1 that my project gets when trying to build; `Undefined symbols for architecture arm64:`.  I went back and confirmed that I can build with no issue on Xcode 13.4.1, so I'm wondering if there are any docs outside of the release notes that might help me in figuring out why I'm getting such an error only in Xcode 14.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "cca7994d-0cff-411d-9f58-40ada71c30a0",
          "type": "message",
          "user": "U03J7BXV8KA",
          "text": "That sounds like one of your dependencies might be a static library which is missing an arm64 slice. Is this for watchOS, or a different platform?",
          "ts": "1654905724.214609",
          "thread_ts": "1654905666.531679",
          "team": "T031SG5MZ7U",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "a8Y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That sounds like one of your dependencies might be a static library which is missing an arm64 slice. Is this for watchOS, or a different platform?"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "388ea129-ab52-4c97-af34-4350818882e2",
      "type": "message",
      "user": "U03HL553PNG",
      "text": ":wave::skin-tone-2: I think we have finally gotten through all of the outstanding questions.  Thank you again for a great WWDC and one final plug to \u003chttps://essentials.applesurveys.com/jfe/form/SV_2cw6N3JbrxFcoiq|fill out the survey\u003e if you haven't already done so!  See you all next year!",
      "ts": "1654912097.982419",
      "attachments": [
        {
          "fallback": "Apple",
          "id": 1,
          "title": "Apple",
          "title_link": "https://essentials.applesurveys.com/jfe/form/SV_2cw6N3JbrxFcoiq",
          "text": "Thanks for joining us this year. WWDC is designed for you and your feedback is important to us. Providing responses to this survey is voluntary. It should take 5 minutes or less of your time. Do not include any information that may identify you in the text boxes. Your responses will not be tied to you and will be aggregated with other responses.",
          "service_name": "essentials.applesurveys.com",
          "service_icon": "https://essentials.applesurveys.com/brand-management/apple-touch-icon",
          "from_url": "https://essentials.applesurveys.com/jfe/form/SV_2cw6N3JbrxFcoiq",
          "original_url": "https://essentials.applesurveys.com/jfe/form/SV_2cw6N3JbrxFcoiq",
          "blocks": null
        }
      ],
      "team": "T031SG5MZ7U",
      "reactions": [
        {
          "name": "wave",
          "count": 6,
          "users": [
            "U03J4C1RWMA",
            "U03JRP87THN",
            "U03J5SM2VUJ",
            "U03HWQNU65D",
            "U03JYDE14BU",
            "U03H36UBPPH"
          ]
        },
        {
          "name": "gratitude-thank-you",
          "count": 9,
          "users": [
            "U03JRP87THN",
            "U03J4D51VC4",
            "U03J5SM2VUJ",
            "U03HWQNU65D",
            "U03JJQ3BMB7",
            "U03J4EJ0CVA",
            "U03H36UBPPH",
            "U03JXD1AQRE",
            "U03JDTLSGLU"
          ]
        },
        {
          "name": "raised_hands",
          "count": 2,
          "users": [
            "U03JRP87THN",
            "U03HVDR403G"
          ]
        },
        {
          "name": "gratitude-spasibo",
          "count": 1,
          "users": [
            "U03JSFUKL2U"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Gqma",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "emoji",
                  "name": "wave",
                  "skin_tone": 2
                },
                {
                  "type": "text",
                  "text": " I think we have finally gotten through all of the outstanding questions.  Thank you again for a great WWDC and one final plug to "
                },
                {
                  "type": "link",
                  "url": "https://essentials.applesurveys.com/jfe/form/SV_2cw6N3JbrxFcoiq",
                  "text": "fill out the survey"
                },
                {
                  "type": "text",
                  "text": " if you haven't already done so!  See you all next year!"
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "channel_id": "C03H0JN431U"
}
