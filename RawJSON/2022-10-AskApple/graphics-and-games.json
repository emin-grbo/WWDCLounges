{
  "name": "graphics-and-games",
  "messages": [
    {
      "type": "message",
      "user": "U03V30M0C1K",
      "text": "This content can't be displayed.",
      "ts": "1665433532.502199",
      "pinned_to": [
        "C04303KH81Y"
      ],
      "team": "T03U5MWB2FN",
      "reactions": [
        {
          "name": "wave",
          "count": 9,
          "users": [
            "U046T0X1Z88",
            "U046G37DF33",
            "U046FCQ7GHX",
            "U046E6ZLWS0",
            "U046PANNT43",
            "U047D8MBQSU",
            "U045XAJ3XF0",
            "U046T9VPPAL",
            "U047KDQ6VCY"
          ]
        },
        {
          "name": "space_invader",
          "count": 3,
          "users": [
            "U045NKLC6SK",
            "U047D8MBQSU",
            "U046T9VPPAL"
          ]
        },
        {
          "name": "video_game",
          "count": 2,
          "users": [
            "U047D8MBQSU",
            "U046T9VPPAL"
          ]
        },
        {
          "name": "joystick",
          "count": 1,
          "users": [
            "U044JLLAMQU"
          ]
        },
        {
          "name": "raised_hands",
          "count": 1,
          "users": [
            "U046UFWQET0"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "header",
          "text": {
            "type": "plain_text",
            "text": "Welcome to Ask Apple",
            "emoji": true
          },
          "block_id": "o4j0n"
        },
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "We're excited to be hosting you in the Graphics and Games channel this week! You can find the full schedule of Q\u0026amp;As for Graphics and Games by visiting the \u003chttps://apps.apple.com/us/app/apple-developer/id640199958 | Apple Developer app\u003e and \u003chttps://developer.apple.com/events/ask-apple/questions-and-answers/ | website\u003e."
          },
          "block_id": "SE4V"
        },
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "If you haven’t already, please take a moment to familiarize yourself with \u003chttps://developer.apple.com/news/?id=vpbyzfg4 | how Q\u0026amp;As will work\u003e."
          },
          "block_id": "HoUc"
        },
        {
          "type": "header",
          "text": {
            "type": "plain_text",
            "text": "Attendance Policy",
            "emoji": true
          },
          "block_id": "cvhZ"
        },
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "We want to make sure these spaces are helpful and welcoming for everyone — developers and Apple employees alike. Please review and follow the \u003chttps://developer.apple.com/events/policy/online-event-attendance-policy/ | attendance policy\u003e."
          },
          "block_id": "Qbj"
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U03V30M0C1K\u003e added a workflow to this channel: *Ask Apple - graphics-and-games*.",
      "ts": "1666018819.566499",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "NKvO",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U03V30M0C1K"
                },
                {
                  "type": "text",
                  "text": " added a workflow to this channel: "
                },
                {
                  "type": "text",
                  "text": "Ask Apple - graphics-and-games",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "9833822d-d3ba-4a80-90a5-c0da4d91c528",
      "type": "message",
      "user": "U044US0P4C9",
      "text": "Welcome to this week’s Graphics \u0026amp; Games activity @ Ask Apple! We’ll be here live to answer your questions beginning 2:00pm PT Tuesday. We hope you can join us!\n\nBut no need to wait until then. You can send your questions starting *now!* Select the:heavy_plus_sign:icon from the lower left to start the _Ask A Question_ workflow. Type in your question and it will be delivered directly to the team. We’ll answer as many questions as we can during the 60 minute event Tuesday.",
      "ts": "1666024844.813679",
      "team": "T03U5MWB2FN",
      "reactions": [
        {
          "name": "partying_face",
          "count": 5,
          "users": [
            "U03V30M0C1K",
            "U0449NNMHQW",
            "U046G37DF33",
            "U045MLK166B",
            "U0458D3T5FX"
          ]
        },
        {
          "name": "raised_hands",
          "count": 6,
          "users": [
            "U046T9VPPAL",
            "U03V8DT125A",
            "U046RUWTEVA",
            "U046MQUBL5R",
            "U045WF64UPQ",
            "U0458D3T5FX"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "wtr",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Welcome to this week’s Graphics \u0026 Games activity @ Ask Apple! We’ll be here live to answer your questions beginning 2:00pm PT Tuesday. We hope you can join us!\n\nBut no need to wait until then. You can send your questions starting "
                },
                {
                  "type": "text",
                  "text": "now!",
                  "style": {
                    "bold": true
                  }
                },
                {
                  "type": "text",
                  "text": " Select the"
                },
                {
                  "type": "emoji",
                  "name": "heavy_plus_sign",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "icon from the lower left to start the "
                },
                {
                  "type": "text",
                  "text": "Ask A Question",
                  "style": {
                    "italic": true
                  }
                },
                {
                  "type": "text",
                  "text": " workflow. Type in your question and it will be delivered directly to the team. We’ll answer as many questions as we can during the 60 minute event Tuesday."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U045MLX8B71\u003e asked\n\u0026gt; Hello there and thanks for your time! I am looking for some general information about the types of graphics programming techniques that are well fit for the Metal graphics libraries. For example, although scene graph implementations are very popular, the Metal suite of tools to build such a paradigm are a little far removed. Does Apple provide, or intend to provide, a similar framework like SceneKit or ARKit to more directly work with graphical development metaphors in metal?",
      "ts": "1666042605.998539",
      "thread_ts": "1666042605.998539",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 2,
      "latest_reply": "1666128782.751849",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "hAe",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U045MLX8B71"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hello there and thanks for your time! I am looking for some general information about the types of graphics programming techniques that are well fit for the Metal graphics libraries. For example, although scene graph implementations are very popular, the Metal suite of tools to build such a paradigm are a little far removed. Does Apple provide, or intend to provide, a similar framework like SceneKit or ARKit to more directly work with graphical development metaphors in metal?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "1254c7ae-8ad8-4e6c-a757-642ea342b183",
          "type": "message",
          "user": "U03V30M0C1K",
          "text": "Whoops! we just got too excited! Check back tomorrow for this answer and many more! :rocket::star-struck::muscle::skin-tone-2:",
          "ts": "1666043007.199199",
          "thread_ts": "1666042605.998539",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 7,
              "users": [
                "U045VNN3MPY",
                "U045ZA653NZ",
                "U045MLX8B71",
                "U046T9VPPAL",
                "U045MLK166B",
                "U046PANNT43",
                "U046252SCGK"
              ]
            },
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U045MLX8B71"
              ]
            },
            {
              "name": "beers",
              "count": 1,
              "users": [
                "U045MLX8B71"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nIgd",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Whoops! we just got too excited! Check back tomorrow for this answer and many more! "
                    },
                    {
                      "type": "emoji",
                      "name": "rocket",
                      "skin_tone": 0
                    },
                    {
                      "type": "emoji",
                      "name": "star-struck",
                      "skin_tone": 0
                    },
                    {
                      "type": "emoji",
                      "name": "muscle",
                      "skin_tone": 2
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "03846d7c-2602-471e-8296-b5db09ecf0b8",
          "type": "message",
          "user": "U046KEXA90C",
          "text": "Hello Ivan !\nWe would like to clarify a couple of points :\n• Metal's purpose is orthogonal to scene representation. It aims at leveraging the GPU for graphics and compute workloads. Whether you want to represent your scene with a graph, or in other ways should be up to the app (or other APIs) and not up to Metal.\n• SceneKit should allow you to leverage the Metal Shading Language for SCNShadable objects - and that's an API suited to describing a scene.\nIs there specific features in SceneKit you would like to see ?",
          "ts": "1666128782.751849",
          "thread_ts": "1666042605.998539",
          "edited": {
            "user": "U046KEXA90C",
            "ts": "1666128906.000000"
          },
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "N0Hg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hello Ivan !\nWe would like to clarify a couple of points :\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Metal's purpose is orthogonal to scene representation. It aims at leveraging the GPU for graphics and compute workloads. Whether you want to represent your scene with a graph, or in other ways should be up to the app (or other APIs) and not up to Metal.\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"SceneKit should allow you to leverage the Metal Shading Language for SCNShadable objects - and that's an API suited to describing a scene.\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is there specific features in SceneKit you would like to see ?"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "77cfd16c-8e05-4cef-8f87-c1fb70b481ac",
      "type": "message",
      "user": "U044US0P4C9",
      "text": "\u003c!here\u003e Welcome to _Q\u0026amp;A: Games on Apple platforms_! We’re ready to answer your questions. To submit a question, find the _Ask A Question_ workflow by selecting the:heavy_plus_sign:icon below. Type in your question and it will go directly to the team. We’ll answer as many questions as we can! :space_invader::rocket::boom: :video_game:\n\nLet’s go! :racing_car:",
      "ts": "1666126804.642419",
      "edited": {
        "user": "U044US0P4C9",
        "ts": "1666126890.000000"
      },
      "team": "T03U5MWB2FN",
      "reactions": [
        {
          "name": "video_game",
          "count": 5,
          "users": [
            "U03V30M0C1K",
            "U046S3T2S2Y",
            "U045BHC57FU",
            "U0458CYQCUD",
            "U045MLX8B71"
          ]
        },
        {
          "name": "rocket",
          "count": 6,
          "users": [
            "U046S3T2S2Y",
            "U046E6ZLWS0",
            "U0458CYQCUD",
            "U045KPJHDCL",
            "U045MLX8B71",
            "U0458D3T5FX"
          ]
        },
        {
          "name": "the_horns",
          "count": 3,
          "users": [
            "U044JLLAMQU",
            "U045MLX8B71",
            "U045LLLQHLM"
          ]
        },
        {
          "name": "space_invader",
          "count": 2,
          "users": [
            "U04646VSW75",
            "U045MLX8B71"
          ]
        },
        {
          "name": "the_horns::skin-tone-2",
          "count": 1,
          "users": [
            "U045BHC57FU"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "XgQe",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "broadcast",
                  "range": "here"
                },
                {
                  "type": "text",
                  "text": " Welcome to "
                },
                {
                  "type": "text",
                  "text": "Q\u0026A: Games on Apple platforms",
                  "style": {
                    "italic": true
                  }
                },
                {
                  "type": "text",
                  "text": "! We’re ready to answer your questions. To submit a question, find the "
                },
                {
                  "type": "text",
                  "text": "Ask A Question",
                  "style": {
                    "italic": true
                  }
                },
                {
                  "type": "text",
                  "text": " workflow by selecting the"
                },
                {
                  "type": "emoji",
                  "name": "heavy_plus_sign",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "icon below. Type in your question and it will go directly to the team. We’ll answer as many questions as we can! "
                },
                {
                  "type": "emoji",
                  "name": "space_invader",
                  "skin_tone": 0
                },
                {
                  "type": "emoji",
                  "name": "rocket",
                  "skin_tone": 0
                },
                {
                  "type": "emoji",
                  "name": "boom",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " "
                },
                {
                  "type": "emoji",
                  "name": "video_game",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "\n\nLet’s go! "
                },
                {
                  "type": "emoji",
                  "name": "racing_car",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U045U12QH7Z\u003e asked\n\u0026gt; I'm experiencing an EXC_BAD_ACCESS 0x0 crash in SceneKit. Any tips on digging into this so I can find out what's going wrong?",
      "ts": "1666127114.419109",
      "thread_ts": "1666127114.419109",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 17,
      "latest_reply": "1666128391.100059",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "fFG7",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U045U12QH7Z"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I'm experiencing an EXC_BAD_ACCESS 0x0 crash in SceneKit. Any tips on digging into this so I can find out what's going wrong?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "fc274106-d40f-4ca4-9bea-f128cc287d8b",
          "type": "message",
          "user": "U046130PKCG",
          "text": "Hi! Can you copy the backtrace from Xcode and paste it here?",
          "ts": "1666127528.732639",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RvVw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi! Can you copy the backtrace from Xcode and paste it here?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "54b08aa1-2c05-4df2-9f0b-65732f94f366",
          "type": "message",
          "user": "U045U12QH7Z",
          "text": "Here you go!\n```* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\n    frame #0: 0x00000001044099a8 SceneKit`splitJoinFace + 672\n    frame #1: 0x0000000104409e60 SceneKit`C3DOffsetBuild + 824\n    frame #2: 0x000000010440a0ac SceneKit`__C3DShapeConnectedComponentSkeletonize + 260\n    frame #3: 0x000000010440a114 SceneKit`C3DShapeConnectedComponentSkeletonize + 40\n    frame #4: 0x0000000104403404 SceneKit`C3DShapeBuildConnectedComponents + 1216\n    frame #5: 0x00000001044460a0 SceneKit`C3DShapeInit + 80\n    frame #6: 0x000000010444603c SceneKit`C3DShapeCreate + 84\n    frame #7: 0x00000001044463d0 SceneKit`C3DShapeGeometryValidate + 224\n    frame #8: 0x00000001041bddcc SceneKit`C3DGeometryGetMesh + 56\n    frame #9: 0x0000000104447e50 SceneKit`_C3DShapeGeometryGetBoundingBox + 24\n    frame #10: 0x00000001041ed484 SceneKit`C3DGetBoundingBox + 120\n    frame #11: 0x00000001042bd524 SceneKit`__C3DComputeLocalBoundingBox + 148\n    frame #12: 0x00000001042bd6ec SceneKit`C3DNodeBoundingBoxDidUpdate + 60\n    frame #13: 0x00000001042beb04 SceneKit`C3DNodeSetGeometry + 368\n    frame #14: 0x00000001043e0d94 SceneKit`C3DTransactionFlush + 1956\n    frame #15: 0x00000001043e11a8 SceneKit`C3DTransactionCommit + 324\n    frame #16: 0x0000000104314ccc SceneKit`-[SCNRenderer setPointOfView:] + 3620\n    frame #17: 0x00000001043b2b50 SceneKit`-[SCNView setPointOfView:] + 72\n  * frame #18: 0x0000000102597198 EnamelScene`GameViewController.initCamera(distance=5.5, self=0x0000000134205210) at GameViewController.swift:199:31\n    frame #19: 0x0000000102595f88 EnamelScene`GameViewController.viewDidLoad(self=0x0000000134205210) at GameViewController.swift:120:9\n    frame #20: 0x0000000102596118 EnamelScene`@objc GameViewController.viewDidLoad() at \u0026lt;compiler-generated\u0026gt;:0\n    frame #21: 0x000000010b055cf4 UIKitCore`-[UIViewController _sendViewDidLoadWithAppearanceProxyObjectTaggingEnabled] + 80\n    frame #22: 0x000000010b0598e0 UIKitCore`-[UIViewController loadViewIfRequired] + 708\n    frame #23: 0x000000010b059bcc UIKitCore`-[UIViewController view] + 20\n    frame #24: 0x000000010b713eb0 UIKitCore`-[UIWindow addRootViewControllerViewIfPossible] + 132\n    frame #25: 0x000000010b7138ec UIKitCore`-[UIWindow _updateLayerOrderingAndSetLayerHidden:actionBlock:] + 212\n    frame #26: 0x000000010b714724 UIKitCore`-[UIWindow _setHidden:forced:] + 228\n    frame #27: 0x0000000104a3c8e4 UIKit`-[UIWindowAccessibility _orderFrontWithoutMakingKey] + 88\n    frame #28: 0x000000010b72321c UIKitCore`-[UIWindow _mainQueue_makeKeyAndVisible] + 36\n    frame #29: 0x000000010b6da858 UIKitCore`-[UIApplication _callInitializationDelegatesWithActions:forCanvas:payload:fromOriginatingProcess:] + 2912\n    frame #30: 0x000000010b6df414 UIKitCore`-[UIApplication _runWithMainScene:transitionContext:completion:] + 856\n    frame #31: 0x000000010ae4c5a8 UIKitCore`-[_UISceneLifecycleMultiplexer completeApplicationLaunchWithFBSScene:transitionContext:] + 104\n    frame #32: 0x000000010b30daf0 UIKitCore`_UIScenePerformActionsWithLifecycleActionMask + 92\n    frame #33: 0x000000010ae4ce40 UIKitCore`__101-[_UISceneLifecycleMultiplexer _evalTransitionToSettings:fromSettings:forceExit:withTransitionStore:]_block_invoke + 188\n    frame #34: 0x000000010ae4c9a8 UIKitCore`-[_UISceneLifecycleMultiplexer _performBlock:withApplicationOfDeactivationReasons:fromReasons:] + 212\n    frame #35: 0x000000010ae4cc98 UIKitCore`-[_UISceneLifecycleMultiplexer _evalTransitionToSettings:fromSettings:forceExit:withTransitionStore:] + 588\n    frame #36: 0x000000010ae4c708 UIKitCore`-[_UISceneLifecycleMultiplexer uiScene:transitionedFromState:withTransitionContext:] + 248\n    frame #37: 0x000000010ae57a98 UIKitCore`__186-[_UIWindowSceneFBSSceneTransitionContextDrivenLifecycleSettingsDiffAction _performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:]_block_invoke + 140\n    frame #38: 0x000000010b22798c UIKitCore`+[BSAnimationSettings(UIKit) tryAnimatingWithSettings:fromCurrentState:actions:completion:] + 656\n    frame #39: 0x000000010b323884 UIKitCore`_UISceneSettingsDiffActionPerformChangesWithTransitionContextAndCompletion + 196\n    frame #40: 0x000000010ae577a4 UIKitCore`-[_UIWindowSceneFBSSceneTransitionContextDrivenLifecycleSettingsDiffAction _performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:] + 288\n    frame #41: 0x000000010acc41fc UIKitCore`__64-[UIScene scene:didUpdateWithDiff:transitionContext:completion:]_block_invoke.189 + 552\n    frame #42: 0x000000010acc3000 UIKitCore`-[UIScene _emitSceneSettingsUpdateResponseForCompletion:afterSceneUpdateWork:] + 208\n    frame #43: 0x000000010acc3eb8 UIKitCore`-[UIScene scene:didUpdateWithDiff:transitionContext:completion:] + 220\n    frame #44: 0x000000010b6de0d4 UIKitCore`-[UIApplication workspace:didCreateScene:withTransitionContext:completion:] + 496\n    frame #45: 0x000000010b24d3a4 UIKitCore`-[UIApplicationSceneClientAgent scene:didInitializeWithEvent:completion:] + 260\n    frame #46: 0x0000000184ec06a4 FrontBoardServices`-[FBSScene _callOutQueue_agent_didCreateWithTransitionContext:completion:] + 316\n    frame #47: 0x0000000184ee63a0 FrontBoardServices`__92-[FBSWorkspaceScenesClient createSceneWithIdentity:parameters:transitionContext:completion:]_block_invoke.59 + 92\n    frame #48: 0x0000000184ecc18c FrontBoardServices`-[FBSWorkspace _calloutQueue_executeCalloutFromSource:withBlock:] + 160\n    frame #49: 0x0000000184ee6028 FrontBoardServices`__92-[FBSWorkspaceScenesClient createSceneWithIdentity:parameters:transitionContext:completion:]_block_invoke + 296\n    frame #50: 0x00000001027f5d5c libdispatch.dylib`_dispatch_client_callout + 16\n    frame #51: 0x00000001027f9974 libdispatch.dylib`_dispatch_block_invoke_direct + 392\n    frame #52: 0x0000000184f05c80 FrontBoardServices`__FBSSERIALQUEUE_IS_CALLING_OUT_TO_A_BLOCK__ + 44\n    frame #53: 0x0000000184f05b74 FrontBoardServices`-[FBSSerialQueue _targetQueue_performNextIfPossible] + 176\n    frame #54: 0x0000000184f05cb4 FrontBoardServices`-[FBSSerialQueue _performNextFromRunLoopSource] + 24\n    frame #55: 0x0000000180372444 CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 24\n    frame #56: 0x000000018037238c CoreFoundation`__CFRunLoopDoSource0 + 172\n    frame #57: 0x0000000180371afc CoreFoundation`__CFRunLoopDoSources0 + 232\n    frame #58: 0x000000018036c168 CoreFoundation`__CFRunLoopRun + 756\n    frame #59: 0x000000018036ba5c CoreFoundation`CFRunLoopRunSpecific + 584\n    frame #60: 0x0000000189326c98 GraphicsServices`GSEventRunModal + 160\n    frame #61: 0x000000010b6dc750 UIKitCore`-[UIApplication _run] + 868\n    frame #62: 0x000000010b6e0748 UIKitCore`UIApplicationMain + 124\n    frame #63: 0x0000000102da0fd0 libswiftUIKit.dylib`UIKit.UIApplicationMain(Swift.Int32, Swift.Optional\u0026lt;Swift.UnsafeMutablePointer\u0026lt;Swift.UnsafeMutablePointer\u0026lt;Swift.Int8\u0026gt;\u0026gt;\u0026gt;, Swift.Optional\u0026lt;Swift.String\u0026gt;, Swift.Optional\u0026lt;Swift.String\u0026gt;) -\u0026gt; Swift.Int32 + 100\n    frame #64: 0x0000000102598184 EnamelScene`static UIApplicationDelegate.main() at \u0026lt;compiler-generated\u0026gt;:0\n    frame #65: 0x000000010259810c EnamelScene`static AppDelegate.$main(self=EnamelScene.AppDelegate) at AppDelegate.swift:10:1\n    frame #66: 0x0000000102598260 EnamelScene`main at \u0026lt;compiler-generated\u0026gt;:0\n    frame #67: 0x00000001028a5fa0 dyld_sim`start_sim + 20\n    frame #68: 0x0000000102691e50 dyld`start + 2544\n  thread #2\n    frame #0: 0x00000001aec22e4c libsystem_kernel.dylib`__workq_kernreturn + 8\n  thread #3, name = 'gputools.smt_poll.0x600003e68340'\n    frame #0: 0x00000001aec24640 libsystem_kernel.dylib`__semwait_signal + 8\n    frame #1: 0x0000000180127050 libsystem_c.dylib`nanosleep + 216\n    frame #2: 0x0000000180126f24 libsystem_c.dylib`usleep + 64\n    frame #3: 0x0000000102f9dcdc GPUToolsCapture`smt_poll_thread_entry(void*) + 104\n    frame #4: 0x00000001aec7d4e4 libsystem_pthread.dylib`_pthread_start + 116\n  thread #4\n    frame #0: 0x00000001aec786b8 libsystem_pthread.dylib`start_wqthread\n  thread #5, queue = 'com.apple.UIKit.KeyboardManagement'\n    frame #0: 0x00000001aec22f3c libsystem_kernel.dylib`__ulock_wait + 8\n    frame #1: 0x00000001027f67c4 libdispatch.dylib`_dlock_wait + 52\n    frame #2: 0x00000001027f6574 libdispatch.dylib`_dispatch_thread_event_wait_slow + 52\n    frame #3: 0x0000000102807ca4 libdispatch.dylib`__DISPATCH_WAIT_FOR_QUEUE__ + 408\n    frame #4: 0x0000000102807630 libdispatch.dylib`_dispatch_sync_f_slow + 192\n    frame #5: 0x000000010b5795a0 UIKitCore`__37-[_UIRemoteKeyboards startConnection]_block_invoke_3 + 128\n    frame #6: 0x0000000180413e40 CoreFoundation`__invoking___ + 144\n    frame #7: 0x0000000180411020 CoreFoundation`-[NSInvocation invoke] + 276\n    frame #8: 0x0000000180cad7b8 Foundation`__NSXPCCONNECTION_IS_CALLING_OUT_TO_REPLY_BLOCK__ + 12\n    frame #9: 0x0000000180cad3f0 Foundation`-[NSXPCConnection _decodeAndInvokeReplyBlockWithEvent:sequence:replyInfo:] + 484\n    frame #10: 0x0000000180cb1460 Foundation`__88-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:]_block_invoke_5 + 184\n    frame #11: 0x0000000180093904 libxpc.dylib`_xpc_connection_reply_callout + 60\n    frame #12: 0x0000000180087a2c libxpc.dylib`_xpc_connection_call_reply_async + 76\n    frame #13: 0x00000001027f5dd4 libdispatch.dylib`_dispatch_client_callout3 + 16\n    frame #14: 0x0000000102816dd8 libdispatch.dylib`_dispatch_mach_msg_async_reply_invoke + 576\n    frame #15: 0x00000001027fddfc libdispatch.dylib`_dispatch_lane_serial_drain + 348\n    frame #16: 0x00000001027fedb8 libdispatch.dylib`_dispatch_lane_invoke + 484\n    frame #17: 0x000000010280cb40 libdispatch.dylib`_dispatch_workloop_worker_thread + 1720\n    frame #18: 0x00000001aec798fc libsystem_pthread.dylib`_pthread_wqthread + 284\n  thread #6, name = 'com.apple.uikit.eventfetch-thread'\n    frame #0: 0x00000001aec2130c libsystem_kernel.dylib`mach_msg2_trap + 8\n    frame #1: 0x00000001aec3216c libsystem_kernel.dylib`mach_msg2_internal + 76\n    frame #2: 0x00000001aec2950c libsystem_kernel.dylib`mach_msg_overwrite + 536\n    frame #3: 0x00000001aec2167c libsystem_kernel.dylib`mach_msg + 20\n    frame #4: 0x0000000180371c80 CoreFoundation`__CFRunLoopServiceMachPort + 156\n    frame #5: 0x000000018036c2f4 CoreFoundation`__CFRunLoopRun + 1152\n    frame #6: 0x000000018036ba5c CoreFoundation`CFRunLoopRunSpecific + 584\n    frame #7: 0x0000000180bce26c Foundation`-[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 208\n    frame #8: 0x0000000180bce490 Foundation`-[NSRunLoop(NSRunLoop) runUntilDate:] + 60\n    frame #9: 0x000000010b77b2d4 UIKitCore`-[UIEventFetcher threadMain] + 424\n    frame #10: 0x0000000180bf3c50 Foundation`__NSThread__start__ + 704\n    frame #11: 0x00000001aec7d4e4 libsystem_pthread.dylib`_pthread_start + 116\n  thread #7\n    frame #0: 0x00000001aec22e4c libsystem_kernel.dylib`__workq_kernreturn + 8\n  thread #8\n    frame #0: 0x00000001aec786b8 libsystem_pthread.dylib`start_wqthread\n  thread #9\n    frame #0: 0x00000001aec22e4c libsystem_kernel.dylib`__workq_kernreturn + 8```",
          "ts": "1666127619.300439",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4kQ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Here you go!\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\\n    frame #0: 0x00000001044099a8 SceneKit`splitJoinFace + 672\\n    frame #1: 0x0000000104409e60 SceneKit`C3DOffsetBuild + 824\\n    frame #2: 0x000000010440a0ac SceneKit`__C3DShapeConnectedComponentSkeletonize + 260\\n    frame #3: 0x000000010440a114 SceneKit`C3DShapeConnectedComponentSkeletonize + 40\\n    frame #4: 0x0000000104403404 SceneKit`C3DShapeBuildConnectedComponents + 1216\\n    frame #5: 0x00000001044460a0 SceneKit`C3DShapeInit + 80\\n    frame #6: 0x000000010444603c SceneKit`C3DShapeCreate + 84\\n    frame #7: 0x00000001044463d0 SceneKit`C3DShapeGeometryValidate + 224\\n    frame #8: 0x00000001041bddcc SceneKit`C3DGeometryGetMesh + 56\\n    frame #9: 0x0000000104447e50 SceneKit`_C3DShapeGeometryGetBoundingBox + 24\\n    frame #10: 0x00000001041ed484 SceneKit`C3DGetBoundingBox + 120\\n    frame #11: 0x00000001042bd524 SceneKit`__C3DComputeLocalBoundingBox + 148\\n    frame #12: 0x00000001042bd6ec SceneKit`C3DNodeBoundingBoxDidUpdate + 60\\n    frame #13: 0x00000001042beb04 SceneKit`C3DNodeSetGeometry + 368\\n    frame #14: 0x00000001043e0d94 SceneKit`C3DTransactionFlush + 1956\\n    frame #15: 0x00000001043e11a8 SceneKit`C3DTransactionCommit + 324\\n    frame #16: 0x0000000104314ccc SceneKit`-[SCNRenderer setPointOfView:] + 3620\\n    frame #17: 0x00000001043b2b50 SceneKit`-[SCNView setPointOfView:] + 72\\n  * frame #18: 0x0000000102597198 EnamelScene`GameViewController.initCamera(distance=5.5, self=0x0000000134205210) at GameViewController.swift:199:31\\n    frame #19: 0x0000000102595f88 EnamelScene`GameViewController.viewDidLoad(self=0x0000000134205210) at GameViewController.swift:120:9\\n    frame #20: 0x0000000102596118 EnamelScene`@objc GameViewController.viewDidLoad() at \u003ccompiler-generated\u003e:0\\n    frame #21: 0x000000010b055cf4 UIKitCore`-[UIViewController _sendViewDidLoadWithAppearanceProxyObjectTaggingEnabled] + 80\\n    frame #22: 0x000000010b0598e0 UIKitCore`-[UIViewController loadViewIfRequired] + 708\\n    frame #23: 0x000000010b059bcc UIKitCore`-[UIViewController view] + 20\\n    frame #24: 0x000000010b713eb0 UIKitCore`-[UIWindow addRootViewControllerViewIfPossible] + 132\\n    frame #25: 0x000000010b7138ec UIKitCore`-[UIWindow _updateLayerOrderingAndSetLayerHidden:actionBlock:] + 212\\n    frame #26: 0x000000010b714724 UIKitCore`-[UIWindow _setHidden:forced:] + 228\\n    frame #27: 0x0000000104a3c8e4 UIKit`-[UIWindowAccessibility _orderFrontWithoutMakingKey] + 88\\n    frame #28: 0x000000010b72321c UIKitCore`-[UIWindow _mainQueue_makeKeyAndVisible] + 36\\n    frame #29: 0x000000010b6da858 UIKitCore`-[UIApplication _callInitializationDelegatesWithActions:forCanvas:payload:fromOriginatingProcess:] + 2912\\n    frame #30: 0x000000010b6df414 UIKitCore`-[UIApplication _runWithMainScene:transitionContext:completion:] + 856\\n    frame #31: 0x000000010ae4c5a8 UIKitCore`-[_UISceneLifecycleMultiplexer completeApplicationLaunchWithFBSScene:transitionContext:] + 104\\n    frame #32: 0x000000010b30daf0 UIKitCore`_UIScenePerformActionsWithLifecycleActionMask + 92\\n    frame #33: 0x000000010ae4ce40 UIKitCore`__101-[_UISceneLifecycleMultiplexer _evalTransitionToSettings:fromSettings:forceExit:withTransitionStore:]_block_invoke + 188\\n    frame #34: 0x000000010ae4c9a8 UIKitCore`-[_UISceneLifecycleMultiplexer _performBlock:withApplicationOfDeactivationReasons:fromReasons:] + 212\\n    frame #35: 0x000000010ae4cc98 UIKitCore`-[_UISceneLifecycleMultiplexer _evalTransitionToSettings:fromSettings:forceExit:withTransitionStore:] + 588\\n    frame #36: 0x000000010ae4c708 UIKitCore`-[_UISceneLifecycleMultiplexer uiScene:transitionedFromState:withTransitionContext:] + 248\\n    frame #37: 0x000000010ae57a98 UIKitCore`__186-[_UIWindowSceneFBSSceneTransitionContextDrivenLifecycleSettingsDiffAction _performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:]_block_invoke + 140\\n    frame #38: 0x000000010b22798c UIKitCore`+[BSAnimationSettings(UIKit) tryAnimatingWithSettings:fromCurrentState:actions:completion:] + 656\\n    frame #39: 0x000000010b323884 UIKitCore`_UISceneSettingsDiffActionPerformChangesWithTransitionContextAndCompletion + 196\\n    frame #40: 0x000000010ae577a4 UIKitCore`-[_UIWindowSceneFBSSceneTransitionContextDrivenLifecycleSettingsDiffAction _performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:] + 288\\n    frame #41: 0x000000010acc41fc UIKitCore`__64-[UIScene scene:didUpdateWithDiff:transitionContext:completion:]_block_invoke.189 + 552\\n    frame #42: 0x000000010acc3000 UIKitCore`-[UIScene _emitSceneSettingsUpdateResponseForCompletion:afterSceneUpdateWork:] + 208\\n    frame #43: 0x000000010acc3eb8 UIKitCore`-[UIScene scene:didUpdateWithDiff:transitionContext:completion:] + 220\\n    frame #44: 0x000000010b6de0d4 UIKitCore`-[UIApplication workspace:didCreateScene:withTransitionContext:completion:] + 496\\n    frame #45: 0x000000010b24d3a4 UIKitCore`-[UIApplicationSceneClientAgent scene:didInitializeWithEvent:completion:] + 260\\n    frame #46: 0x0000000184ec06a4 FrontBoardServices`-[FBSScene _callOutQueue_agent_didCreateWithTransitionContext:completion:] + 316\\n    frame #47: 0x0000000184ee63a0 FrontBoardServices`__92-[FBSWorkspaceScenesClient createSceneWithIdentity:parameters:transitionContext:completion:]_block_invoke.59 + 92\\n    frame #48: 0x0000000184ecc18c FrontBoardServices`-[FBSWorkspace _calloutQueue_executeCalloutFromSource:withBlock:] + 160\\n    frame #49: 0x0000000184ee6028 FrontBoardServices`__92-[FBSWorkspaceScenesClient createSceneWithIdentity:parameters:transitionContext:completion:]_block_invoke + 296\\n    frame #50: 0x00000001027f5d5c libdispatch.dylib`_dispatch_client_callout + 16\\n    frame #51: 0x00000001027f9974 libdispatch.dylib`_dispatch_block_invoke_direct + 392\\n    frame #52: 0x0000000184f05c80 FrontBoardServices`__FBSSERIALQUEUE_IS_CALLING_OUT_TO_A_BLOCK__ + 44\\n    frame #53: 0x0000000184f05b74 FrontBoardServices`-[FBSSerialQueue _targetQueue_performNextIfPossible] + 176\\n    frame #54: 0x0000000184f05cb4 FrontBoardServices`-[FBSSerialQueue _performNextFromRunLoopSource] + 24\\n    frame #55: 0x0000000180372444 CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 24\\n    frame #56: 0x000000018037238c CoreFoundation`__CFRunLoopDoSource0 + 172\\n    frame #57: 0x0000000180371afc CoreFoundation`__CFRunLoopDoSources0 + 232\\n    frame #58: 0x000000018036c168 CoreFoundation`__CFRunLoopRun + 756\\n    frame #59: 0x000000018036ba5c CoreFoundation`CFRunLoopRunSpecific + 584\\n    frame #60: 0x0000000189326c98 GraphicsServices`GSEventRunModal + 160\\n    frame #61: 0x000000010b6dc750 UIKitCore`-[UIApplication _run] + 868\\n    frame #62: 0x000000010b6e0748 UIKitCore`UIApplicationMain + 124\\n    frame #63: 0x0000000102da0fd0 libswiftUIKit.dylib`UIKit.UIApplicationMain(Swift.Int32, Swift.Optional\u003cSwift.UnsafeMutablePointer\u003cSwift.UnsafeMutablePointer\u003cSwift.Int8\u003e\u003e\u003e, Swift.Optional\u003cSwift.String\u003e, Swift.Optional\u003cSwift.String\u003e) -\u003e Swift.Int32 + 100\\n    frame #64: 0x0000000102598184 EnamelScene`static UIApplicationDelegate.main() at \u003ccompiler-generated\u003e:0\\n    frame #65: 0x000000010259810c EnamelScene`static AppDelegate.$main(self=EnamelScene.AppDelegate) at AppDelegate.swift:10:1\\n    frame #66: 0x0000000102598260 EnamelScene`main at \u003ccompiler-generated\u003e:0\\n    frame #67: 0x00000001028a5fa0 dyld_sim`start_sim + 20\\n    frame #68: 0x0000000102691e50 dyld`start + 2544\\n  thread #2\\n    frame #0: 0x00000001aec22e4c libsystem_kernel.dylib`__workq_kernreturn + 8\\n  thread #3, name = 'gputools.smt_poll.0x600003e68340'\\n    frame #0: 0x00000001aec24640 libsystem_kernel.dylib`__semwait_signal + 8\\n    frame #1: 0x0000000180127050 libsystem_c.dylib`nanosleep + 216\\n    frame #2: 0x0000000180126f24 libsystem_c.dylib`usleep + 64\\n    frame #3: 0x0000000102f9dcdc GPUToolsCapture`smt_poll_thread_entry(void*) + 104\\n    frame #4: 0x00000001aec7d4e4 libsystem_pthread.dylib`_pthread_start + 116\\n  thread #4\\n    frame #0: 0x00000001aec786b8 libsystem_pthread.dylib`start_wqthread\\n  thread #5, queue = 'com.apple.UIKit.KeyboardManagement'\\n    frame #0: 0x00000001aec22f3c libsystem_kernel.dylib`__ulock_wait + 8\\n    frame #1: 0x00000001027f67c4 libdispatch.dylib`_dlock_wait + 52\\n    frame #2: 0x00000001027f6574 libdispatch.dylib`_dispatch_thread_event_wait_slow + 52\\n    frame #3: 0x0000000102807ca4 libdispatch.dylib`__DISPATCH_WAIT_FOR_QUEUE__ + 408\\n    frame #4: 0x0000000102807630 libdispatch.dylib`_dispatch_sync_f_slow + 192\\n    frame #5: 0x000000010b5795a0 UIKitCore`__37-[_UIRemoteKeyboards startConnection]_block_invoke_3 + 128\\n    frame #6: 0x0000000180413e40 CoreFoundation`__invoking___ + 144\\n    frame #7: 0x0000000180411020 CoreFoundation`-[NSInvocation invoke] + 276\\n    frame #8: 0x0000000180cad7b8 Foundation`__NSXPCCONNECTION_IS_CALLING_OUT_TO_REPLY_BLOCK__ + 12\\n    frame #9: 0x0000000180cad3f0 Foundation`-[NSXPCConnection _decodeAndInvokeReplyBlockWithEvent:sequence:replyInfo:] + 484\\n    frame #10: 0x0000000180cb1460 Foundation`__88-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:]_block_invoke_5 + 184\\n    frame #11: 0x0000000180093904 libxpc.dylib`_xpc_connection_reply_callout + 60\\n    frame #12: 0x0000000180087a2c libxpc.dylib`_xpc_connection_call_reply_async + 76\\n    frame #13: 0x00000001027f5dd4 libdispatch.dylib`_dispatch_client_callout3 + 16\\n    frame #14: 0x0000000102816dd8 libdispatch.dylib`_dispatch_mach_msg_async_reply_invoke + 576\\n    frame #15: 0x00000001027fddfc libdispatch.dylib`_dispatch_lane_serial_drain + 348\\n    frame #16: 0x00000001027fedb8 libdispatch.dylib`_dispatch_lane_invoke + 484\\n    frame #17: 0x000000010280cb40 libdispatch.dylib`_dispatch_workloop_worker_thread + 1720\\n    frame #18: 0x00000001aec798fc libsystem_pthread.dylib`_pthread_wqthread + 284\\n  thread #6, name = 'com.apple.uikit.eventfetch-thread'\\n    frame #0: 0x00000001aec2130c libsystem_kernel.dylib`mach_msg2_trap + 8\\n    frame #1: 0x00000001aec3216c libsystem_kernel.dylib`mach_msg2_internal + 76\\n    frame #2: 0x00000001aec2950c libsystem_kernel.dylib`mach_msg_overwrite + 536\\n    frame #3: 0x00000001aec2167c libsystem_kernel.dylib`mach_msg + 20\\n    frame #4: 0x0000000180371c80 CoreFoundation`__CFRunLoopServiceMachPort + 156\\n    frame #5: 0x000000018036c2f4 CoreFoundation`__CFRunLoopRun + 1152\\n    frame #6: 0x000000018036ba5c CoreFoundation`CFRunLoopRunSpecific + 584\\n    frame #7: 0x0000000180bce26c Foundation`-[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 208\\n    frame #8: 0x0000000180bce490 Foundation`-[NSRunLoop(NSRunLoop) runUntilDate:] + 60\\n    frame #9: 0x000000010b77b2d4 UIKitCore`-[UIEventFetcher threadMain] + 424\\n    frame #10: 0x0000000180bf3c50 Foundation`__NSThread__start__ + 704\\n    frame #11: 0x00000001aec7d4e4 libsystem_pthread.dylib`_pthread_start + 116\\n  thread #7\\n    frame #0: 0x00000001aec22e4c libsystem_kernel.dylib`__workq_kernreturn + 8\\n  thread #8\\n    frame #0: 0x00000001aec786b8 libsystem_pthread.dylib`start_wqthread\\n  thread #9\\n    frame #0: 0x00000001aec22e4c libsystem_kernel.dylib`__workq_kernreturn + 8\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "00cdfbc4-8beb-4610-aff1-4ac32f3c996a",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "Have you filed a feedback assistant for this crash by any chance?",
          "ts": "1666127694.954639",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qRNRB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Have you filed a feedback assistant for this crash by any chance?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c2551ae4-ea22-43e7-92d1-832b0267c8f0",
          "type": "message",
          "user": "U045U12QH7Z",
          "text": "Not yet, sorry",
          "ts": "1666127809.263419",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Aba/=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Not yet, sorry"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dd2d962d-3710-43cc-9d25-e9c922757994",
          "type": "message",
          "user": "U045U12QH7Z",
          "text": "Thank you for the `bt` tip – I have a lot to learn about debugging!",
          "ts": "1666127870.329959",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FYEY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for the "
                    },
                    {
                      "type": "text",
                      "text": "bt",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " tip – I have a lot to learn about debugging!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "22e9af5f-2949-467c-8528-2230ea106cc3",
          "type": "message",
          "user": "U046130PKCG",
          "text": "How many models do you have in your scene? If it’s a small number, you might try temporarily disabling them one by one until you find the one that triggers this crash.",
          "ts": "1666127958.446789",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "MMM",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "How many models do you have in your scene? If it’s a small number, you might try temporarily disabling them one by one until you find the one that triggers this crash."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a6b25ab7-9434-4faa-9f42-71ffcd667ee7",
          "type": "message",
          "user": "U045U12QH7Z",
          "text": "the scene looks like this",
          "ts": "1666128012.259819",
          "thread_ts": "1666127114.419109",
          "files": [
            {
              "id": "F04705FQF9B",
              "created": 1666128006,
              "timestamp": 1666128006,
              "name": "Screenshot 2022-10-18 at 14.20.00.png",
              "title": "Screenshot 2022-10-18 at 14.20.00.png",
              "mimetype": "image/png",
              "image_exif_rotation": 0,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U045U12QH7Z",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 610831,
              "url": "",
              "url_download": "",
              "url_private": "C04303KH81Y/F04705FQF9B-Screenshot 2022-10-18 at 14.20.00.png",
              "url_private_download": "C04303KH81Y/F04705FQF9B-Screenshot 2022-10-18 at 14.20.00.png",
              "original_h": 814,
              "original_w": 1690,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F04705FQF9B-64c3089cee/screenshot_2022-10-18_at_14.20.00_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F04705FQF9B-64c3089cee/screenshot_2022-10-18_at_14.20.00_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F04705FQF9B-64c3089cee/screenshot_2022-10-18_at_14.20.00_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F04705FQF9B-64c3089cee/screenshot_2022-10-18_at_14.20.00_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 360,
              "thumb_360_h": 173,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F04705FQF9B-64c3089cee/screenshot_2022-10-18_at_14.20.00_480.png",
              "thumb_480_w": 480,
              "thumb_480_h": 231,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F04705FQF9B-64c3089cee/screenshot_2022-10-18_at_14.20.00_720.png",
              "thumb_720_w": 720,
              "thumb_720_h": 347,
              "thumb_960": "https://files.slack.com/files-tmb/T01PTBJ95PS-F04705FQF9B-64c3089cee/screenshot_2022-10-18_at_14.20.00_960.png",
              "thumb_960_w": 960,
              "thumb_960_h": 462,
              "thumb_1024": "https://files.slack.com/files-tmb/T01PTBJ95PS-F04705FQF9B-64c3089cee/screenshot_2022-10-18_at_14.20.00_1024.png",
              "thumb_1024_w": 1024,
              "thumb_1024_h": 493,
              "permalink": "https://appleevents.enterprise.slack.com/files/U045U12QH7Z/F04705FQF9B/screenshot_2022-10-18_at_14.20.00.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F04705FQF9B-b2ec5988ab",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U044YFASVUN"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/1m9",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "the scene looks like this"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3c7172cb-4997-4bff-896f-1383fc52eaf1",
          "type": "message",
          "user": "U045U12QH7Z",
          "text": "I'm generating these pins by extruding a UIBezierPath of an SF Symbol",
          "ts": "1666128037.275159",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7Ck",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'm generating these pins by extruding a UIBezierPath of an SF Symbol"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e7695459-bee0-4164-a2d1-99ffbb65e649",
          "type": "message",
          "user": "U045U12QH7Z",
          "text": "//        let yPin = pinNode(symbol: \"􀈖\", border: \"􀈕\", color: .systemPink)\n//        yPin.position = SCNVector3(x: 3, y: +2.5, z: 0)\n//        scene.rootNode.addChildNode(yPin)\n\n//        let brushPin = pinNode(symbol: \"􀈠\", border: \"􀈟\", color: .systemOrange)\n//        brushPin.position = SCNVector3(x: 0, y: -1.5, z: 0)\n//        scene.rootNode.addChildNode(brushPin)\n\n//        let brushPin = pinNode(symbol: \"􀈬\", border: \"􀈫\", color: .systemOrange)\n//        brushPin.position = SCNVector3(x: 0, y: -1, z: 0)\n//        scene.rootNode.addChildNode(brushPin)\n\n//        let clipPin = pinNode(symbol: \"􀶷\", border: \"􀶶\", color: .systemBrown)\n//        clipPin.position = SCNVector3(x: 0, y: -2, z: 0)\n//        scene.rootNode.addChildNode(clipPin)\n\n\n//        let cloudPin = pinNode(symbol: \"􀙋\", border: \"􀙊\", color: .systemGreen)\n//        cloudPin.position = SCNVector3(x: -2.5, y: 2, z: 0)\n//        scene.rootNode.addChildNode(cloudPin)\n\n//        let trashPin = pinNode(symbol: \"􀈒\", border: \"􀈑\", color: .darkGray)\n//        trashPin.position = SCNVector3(x: -2.5, y: +2, z: 0)\n//        scene.rootNode.addChildNode(trashPin)\n//\n//        let trashPin = pinNode(symbol: \"􀪏\", border: \"􀩼\", color: .darkGray)\n//        trashPin.position = SCNVector3(x: -2.5, y: +2, z: 0)\n//        scene.rootNode.addChildNode(trashPin)\n//\n//        let boxPin = pinNode(symbol: \"􀐛\", border: \"􀐚\", color: .systemBrown)\n//        boxPin.position = SCNVector3(x: +2.5, y: 0, z: 0)\n//        scene.rootNode.addChildNode(boxPin)",
          "ts": "1666128055.079319",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "l6Z0",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "//        let yPin = pinNode(symbol: \"􀈖\", border: \"􀈕\", color: .systemPink)\n//        yPin.position = SCNVector3(x: 3, y: +2.5, z: 0)\n//        scene.rootNode.addChildNode(yPin)\n\n//        let brushPin = pinNode(symbol: \"􀈠\", border: \"􀈟\", color: .systemOrange)\n//        brushPin.position = SCNVector3(x: 0, y: -1.5, z: 0)\n//        scene.rootNode.addChildNode(brushPin)\n\n//        let brushPin = pinNode(symbol: \"􀈬\", border: \"􀈫\", color: .systemOrange)\n//        brushPin.position = SCNVector3(x: 0, y: -1, z: 0)\n//        scene.rootNode.addChildNode(brushPin)\n\n//        let clipPin = pinNode(symbol: \"􀶷\", border: \"􀶶\", color: .systemBrown)\n//        clipPin.position = SCNVector3(x: 0, y: -2, z: 0)\n//        scene.rootNode.addChildNode(clipPin)\n\n\n//        let cloudPin = pinNode(symbol: \"􀙋\", border: \"􀙊\", color: .systemGreen)\n//        cloudPin.position = SCNVector3(x: -2.5, y: 2, z: 0)\n//        scene.rootNode.addChildNode(cloudPin)\n\n//        let trashPin = pinNode(symbol: \"􀈒\", border: \"􀈑\", color: .darkGray)\n//        trashPin.position = SCNVector3(x: -2.5, y: +2, z: 0)\n//        scene.rootNode.addChildNode(trashPin)\n//\n//        let trashPin = pinNode(symbol: \"􀪏\", border: \"􀩼\", color: .darkGray)\n//        trashPin.position = SCNVector3(x: -2.5, y: +2, z: 0)\n//        scene.rootNode.addChildNode(trashPin)\n//\n//        let boxPin = pinNode(symbol: \"􀐛\", border: \"􀐚\", color: .systemBrown)\n//        boxPin.position = SCNVector3(x: +2.5, y: 0, z: 0)\n//        scene.rootNode.addChildNode(boxPin)"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e18e4c5a-d63b-4f45-824f-aa283d61390b",
          "type": "message",
          "user": "U046130PKCG",
          "text": "Ah, how did you get the Bézier paths? An interesting thing about fonts is that they can contain self-intersecting paths, which not all algorithms can handle well.",
          "ts": "1666128086.160989",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+yzvp",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ah, how did you get the Bézier paths? An interesting thing about fonts is that they can contain self-intersecting paths, which not all algorithms can handle well."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2ab43105-f9fb-44fe-9142-2e8de4385cc6",
          "type": "message",
          "user": "U045U12QH7Z",
          "text": "```/// Get SF Pro font containing SF Symbols.\n    guard let fontURL = Bundle.main.url(forResource: \"SF-Pro\", withExtension: \"ttf\") else {\n        return nil\n    }\n    let fontDescriptors = CTFontManagerCreateFontDescriptorsFromURL(fontURL as CFURL) as! [CTFontDescriptor]\n    let fontDescriptor = fontDescriptors.first { desc in\n        let attrs = CTFontDescriptorCopyAttributes(desc)\n        return NSDictionary(dictionary: attrs)[\"NSFontNameAttribute\"] as? NSString == config.fontName as NSString\n    }!\n        \n    let ctFont = CTFontCreateWithFontDescriptor(fontDescriptor, fontSize, nil)\n    \n    /// Get `CGGlyph`s from SF Symbol.\n    let unichars: [unichar] = makeUnichars(from: config.symbol)\n    var glyphs = [CGGlyph](repeating: .zero, count: config.symbol.length)\n    guard CTFontGetGlyphsForCharacters(ctFont, unichars, \u0026amp;glyphs, config.symbol.length) else {\n        return nil\n    }\n    \n    /// Create and transform glyph `CGPath`.\n    /// It is normalized to 1x1 and centered.\n    guard var glyphPath = CTFontCreatePathForGlyph(ctFont, glyphs[0], nil) else {\n        return nil\n    }```",
          "ts": "1666128152.952649",
          "thread_ts": "1666127114.419109",
          "files": [
            {
              "id": "F04705M6LFP",
              "created": 1666128082,
              "timestamp": 1666128082,
              "name": "Screenshot 2022-10-18 at 14.21.19.png",
              "title": "Screenshot 2022-10-18 at 14.21.19.png",
              "mimetype": "image/png",
              "image_exif_rotation": 0,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U045U12QH7Z",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 17583,
              "url": "",
              "url_download": "",
              "url_private": "C04303KH81Y/F04705M6LFP-Screenshot 2022-10-18 at 14.21.19.png",
              "url_private_download": "C04303KH81Y/F04705M6LFP-Screenshot 2022-10-18 at 14.21.19.png",
              "original_h": 61,
              "original_w": 672,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F04705M6LFP-c7a2c70e67/screenshot_2022-10-18_at_14.21.19_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F04705M6LFP-c7a2c70e67/screenshot_2022-10-18_at_14.21.19_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F04705M6LFP-c7a2c70e67/screenshot_2022-10-18_at_14.21.19_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F04705M6LFP-c7a2c70e67/screenshot_2022-10-18_at_14.21.19_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 360,
              "thumb_360_h": 33,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F04705M6LFP-c7a2c70e67/screenshot_2022-10-18_at_14.21.19_480.png",
              "thumb_480_w": 480,
              "thumb_480_h": 44,
              "thumb_720": "",
              "thumb_720_w": 0,
              "thumb_720_h": 0,
              "thumb_960": "",
              "thumb_960_w": 0,
              "thumb_960_h": 0,
              "thumb_1024": "",
              "thumb_1024_w": 0,
              "thumb_1024_h": 0,
              "permalink": "https://appleevents.enterprise.slack.com/files/U045U12QH7Z/F04705M6LFP/screenshot_2022-10-18_at_14.21.19.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F04705M6LFP-45502115ff",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lOP",
              "elements": [
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"\\/\\/\\/ Get SF Pro font containing SF Symbols.\\n    guard let fontURL = Bundle.main.url(forResource: \\\"SF-Pro\\\", withExtension: \\\"ttf\\\") else {\\n        return nil\\n    }\\n    let fontDescriptors = CTFontManagerCreateFontDescriptorsFromURL(fontURL as CFURL) as! [CTFontDescriptor]\\n    let fontDescriptor = fontDescriptors.first { desc in\\n        let attrs = CTFontDescriptorCopyAttributes(desc)\\n        return NSDictionary(dictionary: attrs)[\\\"NSFontNameAttribute\\\"] as? NSString == config.fontName as NSString\\n    }!\\n        \\n    let ctFont = CTFontCreateWithFontDescriptor(fontDescriptor, fontSize, nil)\\n    \\n    \\/\\/\\/ Get `CGGlyph`s from SF Symbol.\\n    let unichars: [unichar] = makeUnichars(from: config.symbol)\\n    var glyphs = [CGGlyph](repeating: .zero, count: config.symbol.length)\\n    guard CTFontGetGlyphsForCharacters(ctFont, unichars, \u0026glyphs, config.symbol.length) else {\\n        return nil\\n    }\\n    \\n    \\/\\/\\/ Create and transform glyph `CGPath`.\\n    \\/\\/\\/ It is normalized to 1x1 and centered.\\n    guard var glyphPath = CTFontCreatePathForGlyph(ctFont, glyphs[0], nil) else {\\n        return nil\\n    }\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "eae8df98-5a0d-4a7f-b653-8ca4065f667b",
          "type": "message",
          "user": "U045U12QH7Z",
          "text": "SF Pro TTF → CTFont → UIBezierPath",
          "ts": "1666128168.289849",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oy4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "SF Pro TTF → CTFont → UIBezierPath"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "47459311-511b-49fc-b41e-0754d8cc9c14",
          "type": "message",
          "user": "U045U12QH7Z",
          "text": "gotcha! I did run into self intersecting path issues, that makes sense",
          "ts": "1666128187.554769",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Y2Kv=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "gotcha! I did run into self intersecting path issues, that makes sense"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c67e37f4-bcd4-4cc9-a9b3-3dde9ddf570a",
          "type": "message",
          "user": "U045U12QH7Z",
          "text": "though, the Box SF Symbol isn't obviously self intersecting, it was one of the problematic symbols I encountered",
          "ts": "1666128210.971899",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "WlrWN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "though, the Box SF Symbol isn't obviously self intersecting, it was one of the problematic symbols I encountered"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "aa13cc55-a973-4ee8-b4d1-1f235ea84271",
          "type": "message",
          "user": "U046130PKCG",
          "text": "Because the SF fonts are variable, sometimes they use self-intersections for non-obvious reasons",
          "ts": "1666128244.598139",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "7YYq",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Because the SF fonts are variable, sometimes they use self-intersections for non-obvious reasons"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e65727bf-672e-46d4-8433-404b03329bb6",
          "type": "message",
          "user": "U046130PKCG",
          "text": "Please do file feedback about this crash, especially if you’re able to attach your sample project.",
          "ts": "1666128311.140029",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "DPN",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Please do file feedback about this crash, especially if you’re able to attach your sample project."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6ae4348d-4357-4fe3-bb16-28bc1b21c86e",
          "type": "message",
          "user": "U045U12QH7Z",
          "text": "Will do, thank you!",
          "ts": "1666128391.100059",
          "thread_ts": "1666127114.419109",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "A/enc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Will do, thank you!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U04627F2JUA\u003e asked\n\u0026gt; In the SpriteKit Scene Editor, in the Components panel, how is the order of the GKComponent's determined? How can I make sure a specific component added there will always be added to the entity first?\n\u0026gt; \n\u0026gt; The order in which components are added to the entity matters, since one component might rely on another component.\n\u0026gt; \n\u0026gt; Is there a way to determine this order in the SpriteKit Scene Editor?\n\u0026gt; \n\u0026gt; I tried alphabetically but that doesn't seem to work and there's no reorder option either.\n\u0026gt; \n\u0026gt; Some advice would be greatly appreciated.\n\u0026gt; Thanks!",
      "ts": "1666127157.038379",
      "thread_ts": "1666127157.038379",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 15,
      "latest_reply": "1666128500.672429",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "k0g6M",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U04627F2JUA"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"In the SpriteKit Scene Editor, in the Components panel, how is the order of the GKComponent's determined? How can I make sure a specific component added there will always be added to the entity first?\\n\\nThe order in which components are added to the entity matters, since one component might rely on another component.\\n\\nIs there a way to determine this order in the SpriteKit Scene Editor?\\n\\nI tried alphabetically but that doesn't seem to work and there's no reorder option either.\\n\\nSome advice would be greatly appreciated.\\nThanks!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "f3e6e8ff-8713-4763-8704-4bba47f49c70",
          "type": "message",
          "user": "U0458CYQCUD",
          "text": "Hi Calin! Have you looked into `GKComponentSystem`? You are able to specify the order in which component systems execute. By migrating your updates to component systems, you will be able to introduce order-dependent code, regardless of the order of components on a given entity.",
          "ts": "1666127330.230909",
          "thread_ts": "1666127157.038379",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xVoA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Calin! Have you looked into "
                    },
                    {
                      "type": "text",
                      "text": "GKComponentSystem",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "? You are able to specify the order in which component systems execute. By migrating your updates to component systems, you will be able to introduce order-dependent code, regardless of the order of components on a given entity."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f9e830a8-2fdf-409d-b03d-98b7853d8464",
          "type": "message",
          "user": "U0458CYQCUD",
          "text": "\u003chttps://developer.apple.com/documentation/gameplaykit/gkcomponentsystem|More information on \u003e`GKComponentSystem`\u003chttps://developer.apple.com/documentation/gameplaykit/gkcomponentsystem| is available here\u003e",
          "ts": "1666127353.242429",
          "thread_ts": "1666127157.038379",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "e9OE4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/gameplaykit/gkcomponentsystem",
                      "text": "More information on "
                    },
                    {
                      "type": "text",
                      "text": "GKComponentSystem",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/gameplaykit/gkcomponentsystem",
                      "text": " is available here"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4524d284-38f4-4288-99ea-b217cabe160c",
          "type": "message",
          "user": "U04627F2JUA",
          "text": "Yes, I was mostly referring to the `didAddToEntity()`  method that gets called, where I do some configuration specific to that component.",
          "ts": "1666127387.337329",
          "thread_ts": "1666127157.038379",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "oi/l",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, I was mostly referring to the "
                    },
                    {
                      "type": "text",
                      "text": "didAddToEntity()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "  method that gets called, where I do some configuration specific to that component."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1a42cbd3-124d-44f6-9387-4d23d0311266",
          "type": "message",
          "user": "U04627F2JUA",
          "text": "Are you suggesting I should maybe move the configuration into the `update()` method with a flag to keep track if it was already configured, and rely on the ComponentSystem to call the `update()`?\n\nThat could be an option, however some components don’t need to be in a component system, as they work only for configuration, using the `didAddToEntity`. I hope it makes sense.",
          "ts": "1666127480.062839",
          "thread_ts": "1666127157.038379",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Crtf8",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Are you suggesting I should maybe move the configuration into the "
                    },
                    {
                      "type": "text",
                      "text": "update()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " method with a flag to keep track if it was already configured, and rely on the ComponentSystem to call the "
                    },
                    {
                      "type": "text",
                      "text": "update()",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "?\n\nThat could be an option, however some components don’t need to be in a component system, as they work only for configuration, using the "
                    },
                    {
                      "type": "text",
                      "text": "didAddToEntity",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ". I hope it makes sense."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b63be126-78dc-435b-bdfa-228b2faba58b",
          "type": "message",
          "user": "U0458CYQCUD",
          "text": "Moving configuration into `update` with a flag is an option, but has the side effect of needing to be checked every update for the lifetime of the component. Could you provide an example of the kind of configuration you are looking to do?",
          "ts": "1666127609.885869",
          "thread_ts": "1666127157.038379",
          "edited": {
            "user": "U0458CYQCUD",
            "ts": "1666127630.000000"
          },
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "MM3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Moving configuration into "
                    },
                    {
                      "type": "text",
                      "text": "update",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " with a flag is an option, but has the side effect of needing to be checked every update for the lifetime of the component. Could you provide an example of the kind of configuration you are looking to do?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2ca8ec34-7348-4be8-8187-cd60b2d416b8",
          "type": "message",
          "user": "U04627F2JUA",
          "text": "For example, a PhysicsComponent will create a body based on the definition on the SKNode, and then a second component does something with that physics body. This can all happen in `didAddToEntity`, but for this to work, I need the PhysicsComponent to be added to the entity before the other component.",
          "ts": "1666127711.529139",
          "thread_ts": "1666127157.038379",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "azj",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "For example, a PhysicsComponent will create a body based on the definition on the SKNode, and then a second component does something with that physics body. This can all happen in "
                    },
                    {
                      "type": "text",
                      "text": "didAddToEntity",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": ", but for this to work, I need the PhysicsComponent to be added to the entity before the other component."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "dd6d031d-eb8b-40c9-885d-3dac266e8dcc",
          "type": "message",
          "user": "U0458CYQCUD",
          "text": "Could you refactor your code such that PhysicsComponent component is also be responsible for creating the second component, once it has finished creating the the body?",
          "ts": "1666127862.987999",
          "thread_ts": "1666127157.038379",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dzXnE",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Could you refactor your code such that PhysicsComponent component is also be responsible for creating the second component, once it has finished creating the the body?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "9b18be73-7fd0-4205-b676-373bc4d941ae",
          "type": "message",
          "user": "U04627F2JUA",
          "text": "I like being able to add the components in the Editor instead of programmatically, because I can use `@GKInspectable` properties to visually see the component’s properties.",
          "ts": "1666127884.494419",
          "thread_ts": "1666127157.038379",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dTtF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I like being able to add the components in the Editor instead of programmatically, because I can use "
                    },
                    {
                      "type": "text",
                      "text": "@GKInspectable",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " properties to visually see the component’s properties."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3507be57-e162-4b0c-a386-37424afbeee5",
          "type": "message",
          "user": "U04627F2JUA",
          "text": "That is also an option. :slightly_smiling_face:\n\nSo I understand there is no way to specify the order of those components in the Editor.\n\nI was expecting this, since there’s no obvious reorder or anything like that, but if I would knew how Xcode archives the scene and determines that order, maybe I could work around that.\n\nFor example, if the order would be alphabetically, I could rename my components in the order I need them.\n\nOr if it would be by some other criteria, maybe I could use that.",
          "ts": "1666128019.854879",
          "thread_ts": "1666127157.038379",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "sGNRz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That is also an option. "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": "\n\nSo I understand there is no way to specify the order of those components in the Editor.\n\nI was expecting this, since there’s no obvious reorder or anything like that, but if I would knew how Xcode archives the scene and determines that order, maybe I could work around that.\n\nFor example, if the order would be alphabetically, I could rename my components in the order I need them.\n\nOr if it would be by some other criteria, maybe I could use that."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "cf4a31f9-bf7b-4439-b3bd-731d38c412ec",
          "type": "message",
          "user": "U0458CYQCUD",
          "text": "In that case, I think your best option is to migrate to `GKComponentSystem` . Even if you don’t need the system capabilities, the systems will enforce an ordering of `update` calls.\n\nThis way, your physics components can all `update` before your other component. The first time `update` is called on it you know you’ll have the physics component you need. If this component is solely for configuration, you can then remove the component after it has completed its task",
          "ts": "1666128088.491239",
          "thread_ts": "1666127157.038379",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "FHSP",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "In that case, I think your best option is to migrate to "
                    },
                    {
                      "type": "text",
                      "text": "GKComponentSystem",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " . Even if you don’t need the system capabilities, the systems will enforce an ordering of "
                    },
                    {
                      "type": "text",
                      "text": "update",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " calls.\n\nThis way, your physics components can all "
                    },
                    {
                      "type": "text",
                      "text": "update",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " before your other component. The first time "
                    },
                    {
                      "type": "text",
                      "text": "update",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is called on it you know you’ll have the physics component you need. If this component is solely for configuration, you can then remove the component after it has completed its task"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "163a6548-0420-43bd-ae6c-e57334ff522c",
          "type": "message",
          "user": "U04627F2JUA",
          "text": "Oh yes, removing the component after it’s done is another option.",
          "ts": "1666128279.058729",
          "thread_ts": "1666127157.038379",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "11Q87",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Oh yes, removing the component after it’s done is another option."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2cbdb894-8ab2-4fb4-9525-f788b277d7b6",
          "type": "message",
          "user": "U04627F2JUA",
          "text": "Ok, thanks for the suggestions.\n\nI was hoping there would be a way to determine that order in the Editor (alphabetically, or by some other criteria) to avoid having to implement any workaround this limitation, but I guess there’s no luck with that.",
          "ts": "1666128365.131209",
          "thread_ts": "1666127157.038379",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ApKu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok, thanks for the suggestions.\n\nI was hoping there would be a way to determine that order in the Editor (alphabetically, or by some other criteria) to avoid having to implement any workaround this limitation, but I guess there’s no luck with that."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "bc4c513a-65dd-450c-8b20-fd4ae02523e5",
          "type": "message",
          "user": "U04627F2JUA",
          "text": "Thanks again, appreciate it!",
          "ts": "1666128371.566729",
          "thread_ts": "1666127157.038379",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Sl4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks again, appreciate it!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e78059db-bd7f-4867-934c-410aa529b464",
          "type": "message",
          "user": "U0458CYQCUD",
          "text": "Happy to help! And if you have any enhancement requests around editor integration, please file feedback via the Feedback Assistant :slightly_smiling_face:",
          "ts": "1666128453.584939",
          "thread_ts": "1666127157.038379",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "dWu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Happy to help! And if you have any enhancement requests around editor integration, please file feedback via the Feedback Assistant "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3d0d9c20-1df3-4883-a2a4-91db0d3799c8",
          "type": "message",
          "user": "U04627F2JUA",
          "text": "Will do!",
          "ts": "1666128500.672429",
          "thread_ts": "1666127157.038379",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "tG0iW",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Will do!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046PGJSQSF\u003e asked\n\u0026gt; Is there a recommended way to write metal shaders and render in SwiftUI?",
      "ts": "1666127243.803529",
      "thread_ts": "1666127243.803529",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 7,
      "latest_reply": "1666128997.832469",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Z1s",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046PGJSQSF"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a recommended way to write metal shaders and render in SwiftUI?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a714dead-04cb-41d9-9006-95c416f63c67",
          "type": "message",
          "user": "U044G4S65EF",
          "text": "Metal can be used with a NSViewRepresentable or UIViewRepresentable whose view’s layer is a CAMetalLayer.\n\nEvery metal feature is available from Swift. You can use a bridging header with plain-old-data (POD) structs to share code between your shaders and Swift. The Metal Game Template in Xcode shows you how to do this.\n\nYou can file a feedback assistant if that doesn’t cover your SwiftUI use case.",
          "ts": "1666127580.267599",
          "thread_ts": "1666127243.803529",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "mAgh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Metal can be used with a NSViewRepresentable or UIViewRepresentable whose view’s layer is a CAMetalLayer.\n\nEvery metal feature is available from Swift. You can use a bridging header with plain-old-data (POD) structs to share code between your shaders and Swift. The Metal Game Template in Xcode shows you how to do this.\n\nYou can file a feedback assistant if that doesn’t cover your SwiftUI use case."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "3225f719-a1d9-4f4a-9e9f-922ed633110e",
          "type": "message",
          "user": "U0462P4V5M0",
          "text": "(not op but curious about this) Meaning I can apply a Metal shader to a SwiftUI view by doing this? Something wacky like adding a warp distortion to a list view?",
          "ts": "1666127716.053999",
          "thread_ts": "1666127243.803529",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8qZxR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "(not op but curious about this) Meaning I can apply a Metal shader to a SwiftUI view by doing this? Something wacky like adding a warp distortion to a list view?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "6386f7b1-b7e6-4a5a-9ce8-b04e9218d0fd",
          "type": "message",
          "user": "U046130PKCG",
          "text": "No, but please file feedback about that!",
          "ts": "1666128017.814339",
          "thread_ts": "1666127243.803529",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/uW=",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "No, but please file feedback about that!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "714157c8-95d8-4c85-afb9-c39a0c6e8b32",
          "type": "message",
          "user": "U0462P4V5M0",
          "text": "FB11702359 :slightly_smiling_face: thanks!",
          "ts": "1666128479.822229",
          "thread_ts": "1666127243.803529",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4eDIm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "FB11702359 "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "845db7f6-e3d1-4f99-84c6-01de2be1e10a",
          "type": "message",
          "user": "U0462P4V5M0",
          "text": "“Recent Similar Reports: None” can’t say I’m surprised, haha",
          "ts": "1666128507.076469",
          "thread_ts": "1666127243.803529",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "0eR",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "“Recent Similar Reports: None” can’t say I’m surprised, haha"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "213fe68e-baf3-4f64-bbd6-28e644b049bf",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "SwiftUI does have some builtin support for drawing and transformations",
          "ts": "1666128799.185059",
          "thread_ts": "1666127243.803529",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nxLS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "SwiftUI does have some builtin support for drawing and transformations"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "74300692-abfe-400e-b245-5fc911a02ae8",
          "type": "message",
          "user": "U0462P4V5M0",
          "text": "The canvas?",
          "ts": "1666128997.832469",
          "thread_ts": "1666127243.803529",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "CHvmh",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The canvas?"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U04722WNK24\u003e asked\n\u0026gt; Hi there,\n\u0026gt; Since I can't find any thread safety remarks of Metal APIs, is it thread-safe to call resource allocation methods on MTLDevice (such as newTextureWithDescriptor, newBufferWithLength, etc.) ?",
      "ts": "1666127343.379719",
      "thread_ts": "1666127343.379719",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666127379.949159",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ktv",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U04722WNK24"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi there,\\nSince I can't find any thread safety remarks of Metal APIs, is it thread-safe to call resource allocation methods on MTLDevice (such as newTextureWithDescriptor, newBufferWithLength, etc.) ?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6646b11e-8d1a-4265-83c1-2f3f92d9e2e8",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "Yes, all calls to `MTLDevice` are all thread safe.\n\nIf you wish to be submitting Metal encoders from multiple threads, however, you can only access each `MTLCommandBuffer` from one thread at a time. An exception to that is if encoding work needs to occur on multiple threads you can utilize `MTLParallelRenderCommandEncoder` to ensure only a single load and store action is performed.\n\n`MTLHeap` also is thread-safe.",
          "ts": "1666127379.949159",
          "thread_ts": "1666127343.379719",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U045MLX8B71",
                "U04722WNK24"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "of=V",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Yes, all calls to "
                    },
                    {
                      "type": "text",
                      "text": "MTLDevice",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " are all thread safe.\n\nIf you wish to be submitting Metal encoders from multiple threads, however, you can only access each "
                    },
                    {
                      "type": "text",
                      "text": "MTLCommandBuffer",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " from one thread at a time. An exception to that is if encoding work needs to occur on multiple threads you can utilize "
                    },
                    {
                      "type": "text",
                      "text": "MTLParallelRenderCommandEncoder",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " to ensure only a single load and store action is performed.\n\n"
                    },
                    {
                      "type": "text",
                      "text": "MTLHeap",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " also is thread-safe."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046E6ZLWS0\u003e asked\n\u0026gt; iOS16 support for 2 UV maps in USDZ\n\u0026gt; According to the page comparing the USD features of SceneKit/RealityKit/hdStorm, AR Quick Look on iOS 16 supports not just one, but two UV maps. Please provide a sample USDZ or an .usda snippet declaring the tokens in a way compatible to ARQL for this feature.",
      "ts": "1666127691.007069",
      "thread_ts": "1666127691.007069",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 6,
      "latest_reply": "1666130515.153119",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "nYF",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046E6ZLWS0"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"iOS16 support for 2 UV maps in USDZ\\nAccording to the page comparing the USD features of SceneKit\\/RealityKit\\/hdStorm, AR Quick Look on iOS 16 supports not just one, but two UV maps. Please provide a sample USDZ or an .usda snippet declaring the tokens in a way compatible to ARQL for this feature.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ccfc957e-4eb3-462a-b53a-fa3b24a1efbf",
          "type": "message",
          "user": "U046130PKCG",
          "text": "~Whoops!~",
          "ts": "1666127720.714459",
          "thread_ts": "1666127691.007069",
          "edited": {
            "user": "U046130PKCG",
            "ts": "1666127745.000000"
          },
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "BBTk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Whoops!",
                      "style": {
                        "strike": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e963dac0-5cf4-43a4-96c9-4ecbc7ecc82b",
          "type": "message",
          "user": "U0458D3T5FX",
          "text": "Hi Thomas.\nThe key to this is defining  `token inputs:varname`  in your `TexCoordReader`",
          "ts": "1666127774.331769",
          "thread_ts": "1666127691.007069",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2YO",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Thomas.\nThe key to this is defining  "
                    },
                    {
                      "type": "text",
                      "text": "token inputs:varname",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "  in your "
                    },
                    {
                      "type": "text",
                      "text": "TexCoordReader",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "32ac30b0-0972-425d-b88a-0857ef1271b0",
          "type": "message",
          "user": "U0458D3T5FX",
          "text": "Here is a sparse dummy sample (leaving out the rest of the material and prim definition)\n```texCoord2f[] primvars:map2 = [...] (\n    interpolation = \"vertex\"\n)\nint[] primvars:map2:indices = [...]\ntexCoord2f[] primvars:st = [...] (\n    interpolation = \"vertex\"\n)\nint[] primvars:st:indices = [...]\n\ndef Shader \"myShader1\"\n{\n    float2 inputs:st.connect = \u0026lt;.../myShader1/TexCoordReader.outputs:result\u0026gt;\n    def Shader \"TexCoordReader\"\n    {\n        token inputs:varname = \"st\"\n    }\n}\ndef Shader \"myShader2\"\n{\n    float2 inputs:st.connect = \u0026lt;.../myShader2/TexCoordReader.outputs:result\u0026gt;\n    def Shader \"TexCoordReader\"\n    {\n        token inputs:varname = \"map2\"\n    }\n}```\n",
          "ts": "1666127862.868299",
          "thread_ts": "1666127691.007069",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "I2IdY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Here is a sparse dummy sample (leaving out the rest of the material and prim definition)\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"texCoord2f[] primvars:map2 = [...] (\\n    interpolation = \\\"vertex\\\"\\n)\\nint[] primvars:map2:indices = [...]\\ntexCoord2f[] primvars:st = [...] (\\n    interpolation = \\\"vertex\\\"\\n)\\nint[] primvars:st:indices = [...]\\n\\ndef Shader \\\"myShader1\\\"\\n{\\n    float2 inputs:st.connect = \u003c...\\/myShader1\\/TexCoordReader.outputs:result\u003e\\n    def Shader \\\"TexCoordReader\\\"\\n    {\\n        token inputs:varname = \\\"st\\\"\\n    }\\n}\\ndef Shader \\\"myShader2\\\"\\n{\\n    float2 inputs:st.connect = \u003c...\\/myShader2\\/TexCoordReader.outputs:result\u003e\\n    def Shader \\\"TexCoordReader\\\"\\n    {\\n        token inputs:varname = \\\"map2\\\"\\n    }\\n}\"}],\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": []
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7019e819-ee76-45ea-af8a-44551208ac42",
          "type": "message",
          "user": "U0458D3T5FX",
          "text": "One UV set is using `st`  and the other is using `map2`",
          "ts": "1666127888.187059",
          "thread_ts": "1666127691.007069",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U046E6ZLWS0"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "K=v",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "One UV set is using "
                    },
                    {
                      "type": "text",
                      "text": "st",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "  and the other is using "
                    },
                    {
                      "type": "text",
                      "text": "map2",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8e7ac761-feb4-4d97-85d4-b0a0249d5f41",
          "type": "message",
          "user": "U046E6ZLWS0",
          "text": "Thank you very much",
          "ts": "1666130304.142029",
          "thread_ts": "1666127691.007069",
          "edited": {
            "user": "U046E6ZLWS0",
            "ts": "1666130310.000000"
          },
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lpA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you very much"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "07526444-ba03-43a5-a4e2-9cf26f0c1626",
          "type": "message",
          "user": "U0458D3T5FX",
          "text": "You're welcome :slightly_smiling_face:",
          "ts": "1666130515.153119",
          "thread_ts": "1666127691.007069",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "csa",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You're welcome "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046S3T2S2Y\u003e asked\n\u0026gt; Is there a way to get SpriteKit scene files saved as text files? It would help working with versioning system much simpler",
      "ts": "1666127914.838389",
      "thread_ts": "1666127914.838389",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666128642.967169",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "DfoHD",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046S3T2S2Y"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a way to get SpriteKit scene files saved as text files? It would help working with versioning system much simpler\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "45b65ba8-bebb-425a-be51-3788f3b9783c",
          "type": "message",
          "user": "U045LLLQHLM",
          "text": "That is a great question. We recommend you to post in the Developer Forums, where Apple engineers are monitoring all week long.\n\u003chttps://developer.apple.com/forums/\u003e",
          "ts": "1666128642.967169",
          "thread_ts": "1666127914.838389",
          "attachments": [
            {
              "fallback": "Apple Developer Forums",
              "id": 1,
              "title": "Apple Developer Forums",
              "title_link": "https://developer.apple.com/forums/",
              "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
              "service_name": "developer.apple.com",
              "service_icon": "https://forums.developer.apple.com/forums/build-09152022-1/public/assets/favicon.ico",
              "from_url": "https://developer.apple.com/forums/",
              "original_url": "https://developer.apple.com/forums/",
              "blocks": null
            }
          ],
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U046S3T2S2Y"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Wk93",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That is a great question. We recommend you to post in the Developer Forums, where Apple engineers are monitoring all week long.\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/forums/",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U045ZS8FJN9\u003e asked\n\u0026gt; Why 'Training a Neural Network using MPS Graph` demo is broken?",
      "ts": "1666128557.951619",
      "thread_ts": "1666128557.951619",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666128571.442059",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "W7mRB",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U045ZS8FJN9"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Why 'Training a Neural Network using MPS Graph` demo is broken?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "2d06e23d-122b-455d-be46-5e4988a7c546",
          "type": "message",
          "user": "U046130PKCG",
          "text": "If you notice a problem with any of our sample projects, please file feedback using Feedback Assistant.",
          "ts": "1666128571.442059",
          "thread_ts": "1666128557.951619",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "4GH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you notice a problem with any of our sample projects, please file feedback using Feedback Assistant."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U045P37JXSB\u003e asked\n\u0026gt; I have developed several accessibility apps for iPhone and iPad using unity3D. One problem that unity can't seem to fix is enabling on enter, hover and on exit events for a pointer device on objects. It would be extremely helpful if Apple would add this capability to the Apple unity plugin. Perhaps it could be part of a button trait functionality. I would also be interested in any suggestions on how to do this now for unity apps for iPad pointer devices. Thanks.",
      "ts": "1666128736.624259",
      "thread_ts": "1666128736.624259",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666128879.914199",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "dntg",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U045P37JXSB"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I have developed several accessibility apps for iPhone and iPad using unity3D. One problem that unity can't seem to fix is enabling on enter, hover and on exit events for a pointer device on objects. It would be extremely helpful if Apple would add this capability to the Apple unity plugin. Perhaps it could be part of a button trait functionality. I would also be interested in any suggestions on how to do this now for unity apps for iPad pointer devices. Thanks.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "30ce8755-a121-4340-8c67-381044b2fc91",
          "type": "message",
          "user": "U0458CYQCUD",
          "text": "Hi John! Thank you for your question, and thank you for your work on accessibility apps :slightly_smiling_face: Could you file a report via Feedback Assistant for this issue? This will help us investigate, as well as provide us a means to share any workarounds we may discover while investigating.",
          "ts": "1666128879.914199",
          "thread_ts": "1666128736.624259",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "XKfL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi John! Thank you for your question, and thank you for your work on accessibility apps "
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " Could you file a report via Feedback Assistant for this issue? This will help us investigate, as well as provide us a means to share any workarounds we may discover while investigating."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046PGJSQSF\u003e asked\n\u0026gt; Are there any recommended environments for writing MSL? Coming from ShaderToy, i'm wondering if there's a similar environment for metal shaders.",
      "ts": "1666129127.588519",
      "thread_ts": "1666129127.588519",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 3,
      "latest_reply": "1666129853.654959",
      "reactions": [
        {
          "name": "heart",
          "count": 2,
          "users": [
            "U046S3T2S2Y",
            "U0462P4V5M0"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "pUl6",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046PGJSQSF"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Are there any recommended environments for writing MSL? Coming from ShaderToy, i'm wondering if there's a similar environment for metal shaders.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "08c240a6-cfd0-4d3a-b1a7-bc52725c10f6",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "We don’t have a similar experience to ShaderToy in Xcode or Playgrounds. But you can still experiment on your shaders. The closes thing I can suggest is Shader Reload functionality in Metal Debugger. If you capture a GPU Trace and your Metal libraries have sources embedded in them, you can modify your shader and see changes to attachments or outputs after reload.",
          "ts": "1666129249.279489",
          "thread_ts": "1666129127.588519",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "heart",
              "count": 1,
              "users": [
                "U046PGJSQSF"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "SL8o",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We don’t have a similar experience to ShaderToy in Xcode or Playgrounds. But you can still experiment on your shaders. The closes thing I can suggest is Shader Reload functionality in Metal Debugger. If you capture a GPU Trace and your Metal libraries have sources embedded in them, you can modify your shader and see changes to attachments or outputs after reload."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "fc16667b-40c0-4c37-b875-8cf6cd82de97",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "Do you mind filing a Feedback Assistant for a ShaderToy-level experience in Xcode?",
          "ts": "1666129303.253959",
          "thread_ts": "1666129127.588519",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U046PGJSQSF"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "J/4",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Do you mind filing a Feedback Assistant for a ShaderToy-level experience in Xcode?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c2ca24be-465c-465a-ad0a-098511b4e122",
          "type": "message",
          "user": "U046H38LPLZ",
          "text": "I'm just another dev and not sure if this is maintained but there is an Open source project that seems to aim to do something similar:  \u003chttps://github.com/minimoog/MetalToy\u003e",
          "ts": "1666129853.654959",
          "thread_ts": "1666129127.588519",
          "attachments": [
            {
              "fallback": "GitHub: GitHub - minimoog/MetalToy",
              "id": 1,
              "title": "GitHub - minimoog/MetalToy",
              "title_link": "https://github.com/minimoog/MetalToy",
              "text": "Contribute to minimoog/MetalToy development by creating an account on GitHub.",
              "image_url": "https://opengraph.githubassets.com/306a0049721fbcac748fe6f9d932866e656e596733a347306edf7d5b316e0fae/minimoog/MetalToy",
              "service_name": "GitHub",
              "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
              "from_url": "https://github.com/minimoog/MetalToy",
              "original_url": "https://github.com/minimoog/MetalToy",
              "blocks": null
            }
          ],
          "edited": {
            "user": "U046H38LPLZ",
            "ts": "1666129999.000000"
          },
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RYA",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I'm just another dev and not sure if this is maintained but there is an Open source project that seems to aim to do something similar:  "
                    },
                    {
                      "type": "link",
                      "url": "https://github.com/minimoog/MetalToy",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U045MLXB6UX\u003e asked\n\u0026gt; I've recently had to start setting NonVolatile on the drawable's texture when presenting to a command buffer with unretained references or I get an API warning, why has that changed? Am I doing something wrong or do I need to make it volatile in the completion handler?",
      "ts": "1666129989.693799",
      "thread_ts": "1666129989.693799",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 6,
      "latest_reply": "1666130899.392479",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "K6o",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U045MLXB6UX"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I've recently had to start setting NonVolatile on the drawable's texture when presenting to a command buffer with unretained references or I get an API warning, why has that changed? Am I doing something wrong or do I need to make it volatile in the completion handler?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "7c07692b-f08a-41a9-86bb-57b5436574fa",
          "type": "message",
          "user": "U044G4S65EF",
          "text": "Hi Steven, can you give us a little more information about the texture you are using and where the API warning is coming from? Are you recording a GPU capture and it's showing up there? Are you managing the drawable texture memory or are you using a framework? Thanks!",
          "ts": "1666130088.301739",
          "thread_ts": "1666129989.693799",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Y0K",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi Steven, can you give us a little more information about the texture you are using and where the API warning is coming from? Are you recording a GPU capture and it's showing up there? Are you managing the drawable texture memory or are you using a framework? Thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "944f4d28-31c3-435a-be64-e2c8f1807dfe",
          "type": "message",
          "user": "U045MLXB6UX",
          "text": "This is just when debugging, with API Validation turned on, and it's the currentDrawable of an MTKView",
          "ts": "1666130211.449039",
          "thread_ts": "1666129989.693799",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "DUNXm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This is just when debugging, with API Validation turned on, and it's the currentDrawable of an MTKView"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a50b29e5-95a6-4c8f-a900-7ef559fa5487",
          "type": "message",
          "user": "U044G4S65EF",
          "text": "Do you happen to have the exact warning message that is displayed?",
          "ts": "1666130278.370179",
          "thread_ts": "1666129989.693799",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "AuS8o",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Do you happen to have the exact warning message that is displayed?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ceaca020-5ec8-4ab2-9254-8dfe47f899f4",
          "type": "message",
          "user": "U045MLXB6UX",
          "text": "`-[MTLDebugCommandBuffer lockPurgeableObjects]:2131: failed assertion` `MTLResource 0x129837c30 (label: CAMetalLayer Display Drawable), referenced in cmd buffer 0x128856e00 (label: Main Loop) is in volatile or empty purgeable state at commit'`",
          "ts": "1666130374.510789",
          "thread_ts": "1666129989.693799",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Tt99i",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "-[MTLDebugCommandBuffer lockPurgeableObjects]:2131: failed assertion",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " "
                    },
                    {
                      "type": "text",
                      "text": "MTLResource 0x129837c30 (label: CAMetalLayer Display Drawable), referenced in cmd buffer 0x128856e00 (label: Main Loop) is in volatile or empty purgeable state at commit'",
                      "style": {
                        "code": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1aa797e1-0513-4899-9d22-89a99f28c52e",
          "type": "message",
          "user": "U044G4S65EF",
          "text": "Thank you. Would you mind filing a Feedback Assistant for this and provide the number to us?",
          "ts": "1666130713.975559",
          "thread_ts": "1666129989.693799",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "YgB3",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you. Would you mind filing a Feedback Assistant for this and provide the number to us?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "f8df9528-c497-4f1c-92ac-319568ca5fb6",
          "type": "message",
          "user": "U045MLXB6UX",
          "text": "Is this a property of command buffers with unretained references?",
          "ts": "1666130899.392479",
          "thread_ts": "1666129989.693799",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2Z57",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is this a property of command buffers with unretained references?"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046H38LPLZ\u003e asked\n\u0026gt; I've been having fun with using metal-cpp and the example apps are great, though I don't think there are C++ headers for the new MetalFX library.  Is that something that could be added as well or is there an easy work around?",
      "ts": "1666130187.972289",
      "thread_ts": "1666130187.972289",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 2,
      "latest_reply": "1666130629.703299",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Vhyir",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046H38LPLZ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I've been having fun with using metal-cpp and the example apps are great, though I don't think there are C++ headers for the new MetalFX library.  Is that something that could be added as well or is there an easy work around?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "322a2e48-14d2-470f-ac57-d018d3a16616",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "Currently the only C++ bindings available are for Metal itself. And not MetalFX. If you absolutely have to use C++ and want to also use MetalFX, I could suggest manually wrapping the two protocols and two descriptors in a similar fashion to how metal-cpp is written.",
          "ts": "1666130361.005229",
          "thread_ts": "1666130187.972289",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VMIg",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Currently the only C++ bindings available are for Metal itself. And not MetalFX. If you absolutely have to use C++ and want to also use MetalFX, I could suggest manually wrapping the two protocols and two descriptors in a similar fashion to how metal-cpp is written."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "eee22112-7c5d-4c3f-92f6-95f77d4d7aa6",
          "type": "message",
          "user": "U045HA7FD6W",
          "text": "Also, feel free to file a feedback assistant ticket with the feature request:slightly_smiling_face:",
          "ts": "1666130629.703299",
          "thread_ts": "1666130187.972289",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U046H38LPLZ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "IWdET",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Also, feel free to file a feedback assistant ticket with the feature request"
                    },
                    {
                      "type": "emoji",
                      "name": "slightly_smiling_face",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "9c8fa010-3dc3-4e36-bac1-a3cdf12a6eb5",
      "type": "message",
      "user": "U044US0P4C9",
      "text": "Thank you for joining us for _Q\u0026amp;A: Games on Apple platforms_! I hope you had as much fun as we did :sunglasses:. While we’re finished answering questions for now (someone’s gotta fix bugs! :ladybug:), you can already ask a question for our next event, _Q\u0026amp;A: Metal 3_, at 3:00pm PT on Thursday. Just use the _Ask A Question_ workflow by selecting the:heavy_plus_sign:icon below. If you’re unable to join us live (and even if you are!), you can send in your questions on that topic starting now. See you Thursday!",
      "ts": "1666130519.509099",
      "thread_ts": "1666130519.509099",
      "reply_count": 2,
      "latest_reply": "1666131014.247659",
      "team": "T03U5MWB2FN",
      "reactions": [
        {
          "name": "tada",
          "count": 3,
          "users": [
            "U045BHC57FU",
            "U044G4S65EF",
            "U044JLLAMQU"
          ]
        },
        {
          "name": "wave",
          "count": 2,
          "users": [
            "U046S3T2S2Y",
            "U044JLLAMQU"
          ]
        },
        {
          "name": "gratitude-thank-you",
          "count": 2,
          "users": [
            "U045LLLQHLM",
            "U044JLLAMQU"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "DHFQy",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Thank you for joining us for "
                },
                {
                  "type": "text",
                  "text": "Q\u0026A: Games on Apple platforms",
                  "style": {
                    "italic": true
                  }
                },
                {
                  "type": "text",
                  "text": "! I hope you had as much fun as we did "
                },
                {
                  "type": "emoji",
                  "name": "sunglasses",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": ". While we’re finished answering questions for now (someone’s gotta fix bugs! "
                },
                {
                  "type": "emoji",
                  "name": "ladybug",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "), you can already ask a question for our next event, "
                },
                {
                  "type": "text",
                  "text": "Q\u0026A: Metal 3",
                  "style": {
                    "italic": true
                  }
                },
                {
                  "type": "text",
                  "text": ", at 3:00pm PT on Thursday. Just use the "
                },
                {
                  "type": "text",
                  "text": "Ask A Question",
                  "style": {
                    "italic": true
                  }
                },
                {
                  "type": "text",
                  "text": " workflow by selecting the"
                },
                {
                  "type": "emoji",
                  "name": "heavy_plus_sign",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "icon below. If you’re unable to join us live (and even if you are!), you can send in your questions on that topic starting now. See you Thursday!"
                }
              ]
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "8fc85fbc-36ed-4b60-9e4e-0ac974bfdd3c",
          "type": "message",
          "user": "U046S3T2S2Y",
          "text": "Thank you for your time!",
          "ts": "1666130555.817299",
          "thread_ts": "1666130519.509099",
          "parent_user_id": "U044US0P4C9",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "the_horns",
              "count": 1,
              "users": [
                "U044JLLAMQU"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qh3I",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you for your time!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5d1ce512-6891-481c-9ccd-6029f25895e2",
          "type": "message",
          "user": "U044US0P4C9",
          "text": "Correction: _Q\u0026amp;A: Metal 3_ is at 10-11 am PT on Thursday!",
          "ts": "1666131014.247659",
          "thread_ts": "1666130519.509099",
          "parent_user_id": "U044US0P4C9",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wt=U",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Correction: "
                    },
                    {
                      "type": "text",
                      "text": "Q\u0026A: Metal 3 ",
                      "style": {
                        "italic": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "is at 10-11 am PT on Thursday!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U0464D8N274\u003e asked\n\u0026gt; I am looking to develop 3D games for Apple platforms. These would involve creating the game assets - characters, props, the virtual world etc in an external authoring tool like Blender, and then importing them into Xcode for use in the game. Please guide me on which of the following technologies is better suited for this purpose - \n\u0026gt; 1) Using SceneKit\n\u0026gt; 2) Using ARKit + Reality Kit (creating an ARView with the cameraMode set to .nonAR, and then setting up a PerspectiveCamera), followed by the whole 3D world for the game.\n\u0026gt; Please explain which is a more efficient option, specifically for 3D games. \n\u0026gt; Thanks,",
      "ts": "1666130598.792569",
      "thread_ts": "1666130598.792569",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666130608.636939",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "SwN",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U0464D8N274"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I am looking to develop 3D games for Apple platforms. These would involve creating the game assets - characters, props, the virtual world etc in an external authoring tool like Blender, and then importing them into Xcode for use in the game. Please guide me on which of the following technologies is better suited for this purpose - \\n1) Using SceneKit\\n2) Using ARKit + Reality Kit (creating an ARView with the cameraMode set to .nonAR, and then setting up a PerspectiveCamera), followed by the whole 3D world for the game.\\nPlease explain which is a more efficient option, specifically for 3D games. \\nThanks,\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "081c638f-0031-4e2a-b23d-e7523598fe2e",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "Picking an engine and APIs for a game can depend on a lot of factors, but here is a breakdown of SceneKit and RealityKit:\n• SceneKit exposes a scene graph-based API, exists on all Apple platforms, offers many hooks if you want to do custom Metal rendering and can be used with Objective-C or Swift.\n• RealityKit exposes an ECS-based Swift API, is designed for AR uses cases and has out-of-the box support for related features.\nIf you want to get down to the Metal :the_horns:, optimized Metal code will always be optimal. Alternatively, Unity or Unreal Engine are also options that could support what you are trying to achieve.",
          "ts": "1666130608.636939",
          "thread_ts": "1666130598.792569",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "=Z1",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Picking an engine and APIs for a game can depend on a lot of factors, but here is a breakdown of SceneKit and RealityKit:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"SceneKit exposes a scene graph-based API, exists on all Apple platforms, offers many hooks if you want to do custom Metal rendering and can be used with Objective-C or Swift.\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"RealityKit exposes an ECS-based Swift API, is designed for AR uses cases and has out-of-the box support for related features.\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\nIf you want to get down to the Metal "
                    },
                    {
                      "type": "emoji",
                      "name": "the_horns",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": ", optimized Metal code will always be optimal. Alternatively, Unity or Unreal Engine are also options that could support what you are trying to achieve."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U04627F2JUA\u003e asked\n\u0026gt; Can you pre-compile an SKShader before it is first displayed?\n\u0026gt; \n\u0026gt; Right now, even if you create them before hand in, let's say, `viewDidMove`, the shader source will only compile the first time it is displayed on the screen.",
      "ts": "1666130798.321709",
      "thread_ts": "1666130798.321709",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 3,
      "latest_reply": "1666288853.009749",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "9P/gQ",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U04627F2JUA"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Can you pre-compile an SKShader before it is first displayed?\\n\\nRight now, even if you create them before hand in, let's say, `viewDidMove`, the shader source will only compile the first time it is displayed on the screen.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "8848eadb-6f84-4506-a9c7-cf62ecaa4501",
          "type": "message",
          "user": "U045LLLQHLM",
          "text": "That is an excellent question!. We recommend you post this the Developer Forums, where Apple engineers are monitoring all week long.\n\u003chttps://developer.apple.com/forums/\u003e",
          "ts": "1666130996.310499",
          "thread_ts": "1666130798.321709",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bBS",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That is an excellent question!. We recommend you post this the Developer Forums, where Apple engineers are monitoring all week long.\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/forums/",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "660f3232-4c4e-4098-9a3a-9fbe12d494f1",
          "type": "message",
          "user": "U04627F2JUA",
          "text": "I have done this a while ago but there was no asnwer.\n\n\u003chttps://developer.apple.com/forums/thread/690915\u003e",
          "ts": "1666131090.421619",
          "thread_ts": "1666130798.321709",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vsZu",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I have done this a while ago but there was no asnwer.\n\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/forums/thread/690915",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "e1e272f2-5ba1-45ab-9e50-b870ab67337a",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "Pre-warming is the only way to pre-compile custom shaders (i.e. drawing with the shader off screen during initialization or somehow in the background).",
          "ts": "1666288853.009749",
          "thread_ts": "1666130798.321709",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RDc",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Pre-warming is the only way to pre-compile custom shaders (i.e. drawing with the shader off screen during initialization or somehow in the background)."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046S70K9A4\u003e asked\n\u0026gt; Is there a tutorial/sample code for the spatial audio framework PHASE?   I have an Apple TV 4k with a Sonos Arc (dolby atmos soundbar).  So I was thinking... in theory, I could explore PHASE in a tvOS app and get spatial audio playback in the room.  There's prob some missing pieces there, but curious if anyone has any guidance :loud_sound::v:",
      "ts": "1666131050.191439",
      "thread_ts": "1666131050.191439",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666131111.392949",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "96WS",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046S70K9A4"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Is there a tutorial\\/sample code for the spatial audio framework PHASE?   I have an Apple TV 4k with a Sonos Arc (dolby atmos soundbar).  So I was thinking... in theory, I could explore PHASE in a tvOS app and get spatial audio playback in the room.  There's prob some missing pieces there, but curious if anyone has any guidance \"},{\"type\":\"emoji\",\"name\":\"loud_sound\",\"unicode\":\"1f50a\"},{\"type\":\"emoji\",\"name\":\"v\",\"unicode\":\"270c-fe0f\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "9fd9da61-037e-43e2-af5b-e7677adaedc2",
          "type": "message",
          "user": "U044G4S65EF",
          "text": "There is an article about Playing Sounds from a Location in a 3D Scene.\n\n\u003chttps://developer.apple.com/documentation/phase/playing_sound_from_a_location_in_a_3d_scene\u003e\n\nIf you have any further questions, please feel free to ask them in the forums.",
          "ts": "1666131111.392949",
          "thread_ts": "1666131050.191439",
          "edited": {
            "user": "U044G4S65EF",
            "ts": "1666131129.000000"
          },
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "loud_sound",
              "count": 1,
              "users": [
                "U044JLLAMQU"
              ]
            },
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U046S70K9A4"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "/Ni",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There is an article about Playing Sounds from a Location in a 3D Scene.\n\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/phase/playing_sound_from_a_location_in_a_3d_scene",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n\nIf you have any further questions, please feel free to ask them in the forums."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "d4195f6e-dd2e-4e6c-85c4-a5904c1bceb2",
      "type": "message",
      "user": "U044US0P4C9",
      "text": "Welcome to _Q\u0026amp;A: Metal 3_! We’re ready to answer your questions. To submit a question, find the _Ask A Question_ workflow by selecting the:heavy_plus_sign:icon below. Type in your question and it will go directly to the team. We’ll answer as many questions as we can! :the_horns::skin-tone-2::fire_engine: :sunny:\n\nLet’s go! :racing_car:",
      "ts": "1666285183.010129",
      "team": "T03U5MWB2FN",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "w4inX",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Welcome to "
                },
                {
                  "type": "text",
                  "text": "Q\u0026A: Metal 3",
                  "style": {
                    "italic": true
                  }
                },
                {
                  "type": "text",
                  "text": "! We’re ready to answer your questions. To submit a question, find the "
                },
                {
                  "type": "text",
                  "text": "Ask A Question ",
                  "style": {
                    "italic": true
                  }
                },
                {
                  "type": "text",
                  "text": "workflow by selecting the"
                },
                {
                  "type": "emoji",
                  "name": "heavy_plus_sign",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "icon below. Type in your question and it will go directly to the team. We’ll answer as many questions as we can! "
                },
                {
                  "type": "emoji",
                  "name": "the_horns",
                  "skin_tone": 2
                },
                {
                  "type": "emoji",
                  "name": "fire_engine",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": " "
                },
                {
                  "type": "emoji",
                  "name": "sunny",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": "\n\nLet’s go! "
                },
                {
                  "type": "emoji",
                  "name": "racing_car",
                  "skin_tone": 0
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046T9VPPAL\u003e asked\n\u0026gt; I want to get started on games using 3d objects and Swift and SceneKit. What resources should I checkout to get started?",
      "ts": "1666285489.197819",
      "thread_ts": "1666285489.197819",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 4,
      "latest_reply": "1666286130.616139",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "5Pg+V",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046T9VPPAL"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I want to get started on games using 3d objects and Swift and SceneKit. What resources should I checkout to get started?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "a74a9f1a-755c-42be-b1be-c200e03eebe7",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "We have a lot of documentation on using our APIs as well as videos where we get into depth at past WWDCs, but we also have some sample code that might prove useful to help you getting started. Here are a few sample games written in Swift that we recommend you check out:\n\n• Fox \u003chttps://developer.apple.com/library/archive/samplecode/Fox/\u003e\n• Badger \u003chttps://developer.apple.com/library/archive/samplecode/Badger\u003e\n• Fox 2 \u003chttps://developer.apple.com/library/archive/samplecode/scenekit-2017/\u003e\nWe also have sample code for APIs using Objective-C and even C++ (using metal-cpp :the_horns:) if you are not currently using Swift.",
          "ts": "1666285558.705159",
          "thread_ts": "1666285489.197819",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "raised_hands",
              "count": 1,
              "users": [
                "U046T9VPPAL"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2Zmm",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We have a lot of documentation on using our APIs as well as videos where we get into depth at past WWDCs, but we also have some sample code that might prove useful to help you getting started. Here are a few sample games written in Swift that we recommend you check out:\n\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Fox \"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/library\\/archive\\/samplecode\\/Fox\\/\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Badger \"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/library\\/archive\\/samplecode\\/Badger\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Fox 2 \"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/library\\/archive\\/samplecode\\/scenekit-2017\\/\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "\nWe also have sample code for APIs using Objective-C and even C++ (using metal-cpp "
                    },
                    {
                      "type": "emoji",
                      "name": "the_horns",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": ") if you are not currently using Swift."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ba1f1a0c-a915-4927-9847-8f8c1ba1f0b9",
          "type": "message",
          "user": "U046T9VPPAL",
          "text": "Awesome!! I’d like to keep it mainly Swift, so that’s great! thank you:clap:",
          "ts": "1666285631.836529",
          "thread_ts": "1666285489.197819",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "the_horns",
              "count": 1,
              "users": [
                "U044JLLAMQU"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ahg2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Awesome!! I’d like to keep it mainly Swift, so that’s great! thank you"
                    },
                    {
                      "type": "emoji",
                      "name": "clap",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "7ebc6645-aff0-4dfb-b38c-9359544676ca",
          "type": "message",
          "user": "U046T9VPPAL",
          "text": "I notice that most of the documentation is a at least a few years old on these, and other resources I’ve found. Why is that? Has SceneKit seen many updates recently?",
          "ts": "1666285681.767379",
          "thread_ts": "1666285489.197819",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "6hEm5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I notice that most of the documentation is a at least a few years old on these, and other resources I’ve found. Why is that? Has SceneKit seen many updates recently?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "13a83824-7e78-4b04-879e-f5e412eabec8",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "There have been updates to SceneKit including in this years releases – Metal is my specialty so I don’t have specifics, sorry!",
          "ts": "1666286130.616139",
          "thread_ts": "1666285489.197819",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gi5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There have been updates to SceneKit including in this years releases – Metal is my specialty so I don’t have specifics, sorry!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046S1N1ZR6\u003e asked\n\u0026gt; Hi there!\n\u0026gt; I have a situation (this is a Mac only app btw) where I need to perform real-time rendering of a chain of `CIFilter`s where their params are controlled via UI controls (à la Photos - editing mode).\n\u0026gt; \n\u0026gt; My setup is this:\n\u0026gt; - On every param change call a `render()` function, which creates (on the fly) the `CIFilter`s and chain them together. This happens on a private serial queue to avoid blocking the GUI.\n\u0026gt; - Send the resulting `CIImage` to a `CurrentValueSubject\u0026lt;CIImage?, Never\u0026gt;`.\n\u0026gt; \n\u0026gt; Now from the other end:\n\u0026gt; - A subclass of `MTKView` which is configured like this:\n\u0026gt;     - `enableSetNeedsDisplay = true`\n\u0026gt;     - `isPaused = true`\n\u0026gt;     - `framebufferOnly = false`\n\u0026gt; - The view is watching the publisher. Once an image has arrived `draw()` is called on _another_ serial queue (owned by this view).\n\u0026gt; - The `draw` is quite simple. There is a `CIRenderDestination` (with `nil` `commandBuffer` specified)\n\u0026gt; - There is a task to clear the view: `context.startTask(toClear: destination`\n\u0026gt; - There is a task to render the image: `context.startTask(toRender: centeredImage, to: destination)`\n\u0026gt; - Finally `present(drawable)` \u0026amp; `commit` are called on the `commandBuffer`.\n\u0026gt; \n\u0026gt; This solution works quite well, but I'm getting sporadic messages like these (which indicate async problems (?)):\n\u0026gt; \u0026gt; [CAMetalLayerDrawable texture] should not be called after already presenting this drawable. Get a nextDrawable instead.\n\u0026gt; \u0026gt;  Each CAMetalLayerDrawable can only be presented once!\n\u0026gt; \n\u0026gt; Furthermore, GPU performance seems to deteriorate over time, which is an indication that I'm not managing resources well (?)\n\u0026gt; Also, do I have to set `waitUntilCompleted()` to the render task \u0026amp; commandBuffer in this scenario?\n\u0026gt; What is the recommended way to handle a case like this? I browsed through developer center's sample code but I couldn't find something (there are a couple of examples for applying filters to camera feeds).\n\u0026gt; Any advices or pointing in the right direction would be much appreciated.\n\u0026gt; Thanks!",
      "ts": "1666285880.305979",
      "thread_ts": "1666285880.305979",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 4,
      "latest_reply": "1666287501.484819",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "snl",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046S1N1ZR6"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi there!\\nI have a situation (this is a Mac only app btw) where I need to perform real-time rendering of a chain of `CIFilter`s where their params are controlled via UI controls (\\u00e0 la Photos - editing mode).\\n\\nMy setup is this:\\n- On every param change call a `render()` function, which creates (on the fly) the `CIFilter`s and chain them together. This happens on a private serial queue to avoid blocking the GUI.\\n- Send the resulting `CIImage` to a `CurrentValueSubject\u003cCIImage?, Never\u003e`.\\n\\nNow from the other end:\\n- A subclass of `MTKView` which is configured like this:\\n    - `enableSetNeedsDisplay = true`\\n    - `isPaused = true`\\n    - `framebufferOnly = false`\\n- The view is watching the publisher. Once an image has arrived `draw()` is called on _another_ serial queue (owned by this view).\\n- The `draw` is quite simple. There is a `CIRenderDestination` (with `nil` `commandBuffer` specified)\\n- There is a task to clear the view: `context.startTask(toClear: destination`\\n- There is a task to render the image: `context.startTask(toRender: centeredImage, to: destination)`\\n- Finally `present(drawable)` \u0026 `commit` are called on the `commandBuffer`.\\n\\nThis solution works quite well, but I'm getting sporadic messages like these (which indicate async problems (?)):\\n\u003e [CAMetalLayerDrawable texture] should not be called after already presenting this drawable. Get a nextDrawable instead.\\n\u003e  Each CAMetalLayerDrawable can only be presented once!\\n\\nFurthermore, GPU performance seems to deteriorate over time, which is an indication that I'm not managing resources well (?)\\nAlso, do I have to set `waitUntilCompleted()` to the render task \u0026 commandBuffer in this scenario?\\nWhat is the recommended way to handle a case like this? I browsed through developer center's sample code but I couldn't find something (there are a couple of examples for applying filters to camera feeds).\\nAny advices or pointing in the right direction would be much appreciated.\\nThanks!\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "7f959b86-f461-460c-b303-533b0d5a571d",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "We think the reason you are seeing those messages sporadically, is due to the fact that sometimes you try to present the same drawable twice. The easiest solution here is to have a semaphore with an initial value matching number of drawables in `CAMetalLayer` (2 or 3). Then, before starting each iteration, you wait on the semaphore, and in the command buffer that presents your work, you add a completion handler that signals that semaphore. Similar to how a default Metal game template does it:\n```- (void)drawInMTKView:(nonnull MTKView *)view\n{\n    /// Per frame updates here\n\n    dispatch_semaphore_wait(_inFlightSemaphore, DISPATCH_TIME_FOREVER);\n\n    id \u0026lt;MTLCommandBuffer\u0026gt; commandBuffer = [_commandQueue commandBuffer];\n    commandBuffer.label = @\"MyCommand\";\n\n    __block dispatch_semaphore_t block_sema = _inFlightSemaphore;\n    [commandBuffer addCompletedHandler:^(id\u0026lt;MTLCommandBuffer\u0026gt; buffer)\n     {\n         dispatch_semaphore_signal(block_sema);\n     }];\n// ... ```",
          "ts": "1666286048.023899",
          "thread_ts": "1666285880.305979",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "cZYH",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "We think the reason you are seeing those messages sporadically, is due to the fact that sometimes you try to present the same drawable twice. The easiest solution here is to have a semaphore with an initial value matching number of drawables in "
                    },
                    {
                      "type": "text",
                      "text": "CAMetalLayer",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " (2 or 3). Then, before starting each iteration, you wait on the semaphore, and in the command buffer that presents your work, you add a completion handler that signals that semaphore. Similar to how a default Metal game template does it:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"- (void)drawInMTKView:(nonnull MTKView *)view\\n{\\n    \\/\\/\\/ Per frame updates here\\n\\n    dispatch_semaphore_wait(_inFlightSemaphore, DISPATCH_TIME_FOREVER);\\n\\n    id \u003cMTLCommandBuffer\u003e commandBuffer = [_commandQueue commandBuffer];\\n    commandBuffer.label = @\\\"MyCommand\\\";\\n\\n    __block dispatch_semaphore_t block_sema = _inFlightSemaphore;\\n    [commandBuffer addCompletedHandler:^(id\u003cMTLCommandBuffer\u003e buffer)\\n     {\\n         dispatch_semaphore_signal(block_sema);\\n     }];\\n\\/\\/ ... \"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2aa0862a-c3cf-4eb0-b7e7-fc5c991e8eaa",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "Or, to be more on the Swift side:\n```let maxFramesInFlight = 3\n\nclass Renderer {\n\tlet inFlightSemaphore = DispatchSemaphore(value: maxFramesInFlight)\n\n\tfunc render(to: currentDrawable: MTLDrawable) {\n\t\t_ = inFlightSemaphore.wait(timeout: Dispatch.distantFuture)\n\n\t\tguard let commandBuffer = commandQueue.makeCommandBuffer() else {\n\t\t\treturn\n\t\t}\n\n\t\tlet semaphore = inFlightSemaphore\n\t\tcommandBuffer.addCompletedHandler { _ in\n\t\t\tsemaphore.signal()\n\t\t}\n\n\t\t// Render your frame here....\n\n\t\tcommandBuffer.present(currentDrawable)\n\n\t\tcommandBuffer.commit()\n\t}\n}```",
          "ts": "1666286102.850539",
          "thread_ts": "1666285880.305979",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wo+f",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Or, to be more on the Swift side:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_preformatted",
                  "Raw": "{\"type\":\"rich_text_preformatted\",\"elements\":[{\"type\":\"text\",\"text\":\"let maxFramesInFlight = 3\\n\\nclass Renderer {\\n\\tlet inFlightSemaphore = DispatchSemaphore(value: maxFramesInFlight)\\n\\n\\tfunc render(to: currentDrawable: MTLDrawable) {\\n\\t\\t_ = inFlightSemaphore.wait(timeout: Dispatch.distantFuture)\\n\\n\\t\\tguard let commandBuffer = commandQueue.makeCommandBuffer() else {\\n\\t\\t\\treturn\\n\\t\\t}\\n\\n\\t\\tlet semaphore = inFlightSemaphore\\n\\t\\tcommandBuffer.addCompletedHandler { _ in\\n\\t\\t\\tsemaphore.signal()\\n\\t\\t}\\n\\n\\t\\t\\/\\/ Render your frame here....\\n\\n\\t\\tcommandBuffer.present(currentDrawable)\\n\\n\\t\\tcommandBuffer.commit()\\n\\t}\\n}\"}],\"border\":0}"
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2ED0B03D-1D03-4300-A5FC-846E4149C91F",
          "type": "message",
          "user": "U046S1N1ZR6",
          "text": "Thanks for the reply :pray: This is how I did it (with semaphores) before I started using a serial queue. My understanding is that since the draw calls are on the queue, waitUntilCompleted would take care of it. ",
          "ts": "1666287044.942409",
          "thread_ts": "1666285880.305979",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "vTL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the reply "
                    },
                    {
                      "type": "emoji",
                      "name": "pray",
                      "skin_tone": 0
                    },
                    {
                      "type": "text",
                      "text": " This is how I did it (with semaphores) before I started using a serial queue. My understanding is that since the draw calls are on the queue, waitUntilCompleted would take care of it"
                    },
                    {
                      "type": "text",
                      "text": "."
                    },
                    {
                      "type": "text",
                      "text": " "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "a2f5cf2d-c5d9-4b81-b6d9-37864790cd13",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "I would suggest using waitUntilCompleted only for debug purposes. Otherwise, your “CPU queue” is basically blocked and not doing any useful work. This guidance may depend on how your application is architectured, but generally this is the advice. The semaphore is also gonna block your CPU queue, but that is necessary so that the CPU doesn’t “run ahead” of the GPU.",
          "ts": "1666287501.484819",
          "thread_ts": "1666285880.305979",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "pray",
              "count": 1,
              "users": [
                "U046S1N1ZR6"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ng6Ir",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I would suggest using waitUntilCompleted only for debug purposes. Otherwise, your “CPU queue” is basically blocked and not doing any useful work. This guidance may depend on how your application is architectured, but generally this is the advice. The semaphore is also gonna block your CPU queue, but that is necessary so that the CPU doesn’t “run ahead” of the GPU."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046Y2ULL2U\u003e asked\n\u0026gt; Not sure this is the right channel for my question, but it is most relevant, please help me forward my question if it is not. Here is my question:\n\u0026gt; I am trying to use ScreenCaptureKit framework to capture screen on Mac Catalyst, but it doesn't work due to an internal crash in the framework. This is the feedback FB10517211 I filed, is any api I misused？",
      "ts": "1666286035.481039",
      "thread_ts": "1666286035.481039",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666286061.406629",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Ceqcc",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046Y2ULL2U"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Not sure this is the right channel for my question, but it is most relevant, please help me forward my question if it is not. Here is my question:\\nI am trying to use ScreenCaptureKit framework to capture screen on Mac Catalyst, but it doesn't work due to an internal crash in the framework. This is the feedback FB10517211 I filed, is any api I misused\\uff1f\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "e4190a00-dedb-44c4-9b42-54bebfc550ee",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "ScreenCaptureKit is for native Mac development only. This isn’t supported in Mac Catalyst as the SDK and API are only available for native macOS applications. Thank you for filing your feedback requesting this support in Catalyst! Keep those Feedbacks coming!",
          "ts": "1666286061.406629",
          "thread_ts": "1666286035.481039",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "9zB",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "ScreenCaptureKit is for native Mac development only. This isn’t supported in Mac Catalyst as the SDK and API are only available for native macOS applications. Thank you for filing your feedback requesting this support in Catalyst! Keep those Feedbacks coming!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046DC1V9V2\u003e asked\n\u0026gt; We sometimes receive the value “Unavailable Player Identification” in GKPlayer.gamePlayerID.\n\u0026gt; Is this a bug?\n\u0026gt; \n\u0026gt; \u003chttps://developer.apple.com/forums/thread/117617|https://developer.apple.com/forums/thread/117617\u003e\n\u0026gt; This issue has been on the Apple Developer Forum for 3 years.\n\u0026gt; \n\u0026gt; Are you aware of this issue?\n\u0026gt; Other developers have filed bug reports (FB7137454).",
      "ts": "1666286384.379559",
      "thread_ts": "1666286384.379559",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 3,
      "latest_reply": "1666289600.852449",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "hq0j",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046DC1V9V2"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We sometimes receive the value \\u201cUnavailable Player Identification\\u201d in GKPlayer.gamePlayerID.\\nIs this a bug?\\n\\n\"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/117617\",\"text\":\"https:\\/\\/developer.apple.com\\/forums\\/thread\\/117617\"},{\"type\":\"text\",\"text\":\"\\nThis issue has been on the Apple Developer Forum for 3 years.\\n\\nAre you aware of this issue?\\nOther developers have filed bug reports (FB7137454).\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ddcfa09d-c25a-4d67-81d1-7c1bdcae49f3",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "The issue occurring in FB7137454 was addressed in macOS 10.15.1. If you are still encountering this issue please file a new Feedback with reproduction steps.",
          "ts": "1666286397.499389",
          "thread_ts": "1666286384.379559",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Unas",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "The issue occurring in FB7137454 was addressed in macOS 10.15.1. If you are still encountering this issue please file a new Feedback with reproduction steps."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "802F1195-454A-49E0-8C90-CF52E326D21E",
          "type": "message",
          "user": "U046DC1V9V2",
          "text": "Thanks for the info.\nOur problem is on iOS.\nWe will consider sending feedback.",
          "ts": "1666289486.449339",
          "thread_ts": "1666286384.379559",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "yZ91",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for the info.\nOur problem is on iOS.\nWe will consider sending feedback."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "8872e4cd-6cbd-4fbe-ada8-a390f2fb320d",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "This FB was also fixed in iOS 13.1. Either way, please do file a new Feedback, thanks!",
          "ts": "1666289600.852449",
          "thread_ts": "1666286384.379559",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U046DC1V9V2"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "MnaY",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This FB was also fixed in iOS 13.1. Either way, please do file a new Feedback, thanks!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U04722WNK24\u003e asked\n\u0026gt; What's the difference between `air-ar` tool and `metal-ar` tool ? They looked the same.",
      "ts": "1666286390.453799",
      "thread_ts": "1666286390.453799",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666286483.273709",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "JPfM",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U04722WNK24"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What's the difference between `air-ar` tool and `metal-ar` tool ? They looked the same.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "05d475a6-ac9a-4c7f-b1c2-9c26ed8d17af",
          "type": "message",
          "user": "U044G4S65EF",
          "text": "Hello, the tools are the same. `metal-ar` is a symlink to `air-ar`.",
          "ts": "1666286483.273709",
          "thread_ts": "1666286390.453799",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5Yk",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hello, the tools are the same. "
                    },
                    {
                      "type": "text",
                      "text": "metal-ar",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " is a symlink to "
                    },
                    {
                      "type": "text",
                      "text": "air-ar",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U0479UQ732N\u003e asked\n\u0026gt; We are having difficulty making sure our game is optimized enough, considering battery drain. The \"Energy\" instruments seem to be gone as of this year. The Xcode energy gauge seems not calibrated for games (our game is always \"VERY HIGH\") and is not very developer-friendly (pure UI, can't log to disk, etc.). How do we know when our game's energy usage, which affects battery life and thermals, is optimized enough? \"Optimize for 60 and run at 30\" is also not sufficient advice, since using everything for the full 16ms is WAY too much energy, as we have clearly seen.",
      "ts": "1666286520.257939",
      "thread_ts": "1666286520.257939",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666286535.518139",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "fiM",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U0479UQ732N"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We are having difficulty making sure our game is optimized enough, considering battery drain. The \\\"Energy\\\" instruments seem to be gone as of this year. The Xcode energy gauge seems not calibrated for games (our game is always \\\"VERY HIGH\\\") and is not very developer-friendly (pure UI, can't log to disk, etc.). How do we know when our game's energy usage, which affects battery life and thermals, is optimized enough? \\\"Optimize for 60 and run at 30\\\" is also not sufficient advice, since using everything for the full 16ms is WAY too much energy, as we have clearly seen.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "cf1aeaa1-1bf1-4528-b38b-89475c047e6c",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "Optimizing for energy on our platform is not just about battery life, but also dealing with thermals. It is recommended to test your application using device conditions in the Serious and Critical profiles to ensure your app is able to run smoothly under these situations. There is a useful page on using the Thermal Inducer here (specifically see the “thermal device condition”):\n\u003chttps://help.apple.com/xcode/mac/current/#/dev308429d42\u003e\nAlso know that if you click the red “(…)” icon in Instruments, you can set the performance state and record a trace!\n\nYour application can subscribe to thermal state change notifications in order to ensure it reacts properly. See this useful page explaining how to get a callback:\n\u003chttps://developer.apple.com/library/archive/documentation/Performance/Conceptual/power_efficiency_guidelines_osx/RespondToThermalStateChanges.html#//apple_ref/doc/uid/TP40013929-CH25-SW1|https://developer.apple.com/library/archive/documentation/Performance/Conceptual/power[…]efficiency_guidelines_osx/RespondToThermalStateChanges.html\u003e\n\nAlso remember ProMotion displays allow other unique frame rates like 48 Hz, so you can take advantage of that on the iPad Pro, iPhone Pro, and newer MacBook Pros!",
          "ts": "1666286535.518139",
          "thread_ts": "1666286520.257939",
          "edited": {
            "user": "U044JLLAMQU",
            "ts": "1666286570.000000"
          },
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "H2s",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Optimizing for energy on our platform is not just about battery life, but also dealing with thermals. It is recommended to test your application using device conditions in the Serious and Critical profiles to ensure your app is able to run smoothly under these situations. There is a useful page on using the Thermal Inducer here (specifically see the “thermal device condition”):\n"
                    },
                    {
                      "type": "link",
                      "url": "https://help.apple.com/xcode/mac/current/#/dev308429d42",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\nAlso know that if you click the red “(…)” icon in Instruments, you can set the performance state and record a trace!\n\nYour application can subscribe to thermal state change notifications in order to ensure it reacts properly. See this useful page explaining how to get a callback:\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/library/archive/documentation/Performance/Conceptual/power_efficiency_guidelines_osx/RespondToThermalStateChanges.html#//apple_ref/doc/uid/TP40013929-CH25-SW1",
                      "text": "https://developer.apple.com/library/archive/documentation/Performance/Conceptual/power[…]efficiency_guidelines_osx/RespondToThermalStateChanges.html"
                    },
                    {
                      "type": "text",
                      "text": "\n\nAlso remember ProMotion displays allow other unique frame rates like 48 Hz, so you can take advantage of that on the iPad Pro, iPhone Pro, and newer MacBook Pros!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U04769JQY2V\u003e asked\n\u0026gt; We haven't been able to use the Metal Debugger, when our app contains a SwiftUI-Canvas-View. Is this a know issue, should we file a radar or is there a workaround?\n\u0026gt; \n\u0026gt; The Xcode-Message is this:\n\u0026gt; Unsupported method: -[MTLDevice newPipelineLibraryWithFilePath:error:]",
      "ts": "1666286800.669649",
      "thread_ts": "1666286800.669649",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666286849.724699",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "tkK",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U04769JQY2V"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"We haven't been able to use the Metal Debugger, when our app contains a SwiftUI-Canvas-View. Is this a know issue, should we file a radar or is there a workaround?\\n\\nThe Xcode-Message is this:\\nUnsupported method: -[MTLDevice newPipelineLibraryWithFilePath\"},{\"type\":\"emoji\",\"name\":\"error\"},{\"type\":\"text\",\"text\":\"]\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "02f60538-de57-4b76-8a8c-21c9111c4466",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "Hey, this is a known interaction between SwiftUI and Metal Debugger. Could you please file a Feedback Assistant?",
          "ts": "1666286849.724699",
          "thread_ts": "1666286800.669649",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "hZJn",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hey, this is a known interaction between SwiftUI and Metal Debugger. Could you please file a Feedback Assistant?"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U045Z46M7QW\u003e asked\n\u0026gt; Our game runs on iOS 16.0 system with obvious stuttering and network instability (frequent and automatic direct switching between WiFi and cellular networks), how do we need to solve this problem?",
      "ts": "1666287190.370289",
      "thread_ts": "1666287190.370289",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666287205.590439",
      "reactions": [
        {
          "name": "raised_hands",
          "count": 1,
          "users": [
            "U045Z46M7QW"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "DY8WL",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U045Z46M7QW"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Our game runs on iOS 16.0 system with obvious stuttering and network instability (frequent and automatic direct switching between WiFi and cellular networks), how do we need to solve this problem?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "55b9f8b4-0d6d-43aa-83b8-4f1116497e2d",
          "type": "message",
          "user": "U045BHC57FU",
          "text": "Hi \u003c@U045Z46M7QW\u003e, here are some questions to help guide your investigation:\n• What device are you testing the game on? Does it run well on iOS 15.x on that device?\n• How close to \"the limit\" are you? Is it an intensive game or a light workload?\n• Did you take Instruments traces (especially with the game profile template) ?\n• Is the game CPU or GPU intensive? Is it thermally limited? How long does it take to start stuttering?\n• Did you run it with the thermal conditioner in Xcode? That's the situation you should tune to ensure that it runs well at all times (if thermal mitigation is the limiting factor).\nFeel free to send us your answers here to follow up during this session!",
          "ts": "1666287205.590439",
          "thread_ts": "1666287190.370289",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "58Y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hi "
                    },
                    {
                      "type": "user",
                      "user_id": "U045Z46M7QW"
                    },
                    {
                      "type": "text",
                      "text": ", here are some questions to help guide your investigation:\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_list",
                  "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"What device are you testing the game on? Does it run well on iOS 15.x on that device?\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"How close to \\\"the limit\\\" are you? Is it an intensive game or a light workload?\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Did you take Instruments traces (especially with the game profile template) ?\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Is the game CPU or GPU intensive? Is it thermally limited? How long does it take to start stuttering?\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Did you run it with the thermal conditioner in Xcode? That's the situation you should tune to ensure that it runs well at all times (if thermal mitigation is the limiting factor).\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
                },
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Feel free to send us your answers here to follow up during this session!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046JMFLKV3\u003e asked\n\u0026gt; I have created a Minesweeper using SpriteKit ; and most of the time ; the scene does not move at all. No physics. Nothing.  \n\u0026gt; Animations are always triggered following a user interaction with the scene.\n\u0026gt; Would enabling 120fps for having smoother animations will impact the battery or is SpriteKit smart enough to not \"redraw\" everything when nothing move?\n\u0026gt; Otherwise, what tips should I go into to preserve battery? (Freeze scene time when there are no animation running?)",
      "ts": "1666287850.612569",
      "thread_ts": "1666287850.612569",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666287899.957889",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "w17rW",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046JMFLKV3"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I have created a Minesweeper using SpriteKit ; and most of the time ; the scene does not move at all. No physics. Nothing.  \\nAnimations are always triggered following a user interaction with the scene.\\nWould enabling 120fps for having smoother animations will impact the battery or is SpriteKit smart enough to not \\\"redraw\\\" everything when nothing move?\\nOtherwise, what tips should I go into to preserve battery? (Freeze scene time when there are no animation running?)\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "73f9c447-d6af-400b-ad63-cd62819ebba0",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "Depending on what is happening in your scene invalidation and your update logic, SpriteKit may be redrawing continuously - it is worth taking an Instruments trace to see what is actually running and updating during your idle periods without animations. In case you do find activity, it is a good idea to try freezing the scene time during these periods without updates, and then measuring again to be sure that you have prevented drawing and simulation updates.\n\nAlso please try testing your app in the Serious and Critical thermal states by using an Inducer in Xcode (under “Devices and Simulators”) or Instruments (by holding down the red “(…)” icon):\n\u003chttps://help.apple.com/xcode/mac/current/#/dev308429d42\u003e\n\nHere is information on responding to thermal state changes so your application can react:\n\u003chttps://developer.apple.com/library/archive/documentation/Performance/Conceptual/power_efficiency_guidelines_osx/RespondToThermalStateChanges.html#//apple_ref/doc/uid/TP40013929-CH25-SW1|https://developer.apple.com/library/archive/documentation/Performance/Conceptual/power[…]efficiency_guidelines_osx/RespondToThermalStateChanges.html\u003e\n\nFinally, remember ProMotion displays allow other unique frame rates like 48 Hz, so you can take advantage of that on the iPad Pro, iPhone Pro, and newer MacBook Pros!",
          "ts": "1666287899.957889",
          "thread_ts": "1666287850.612569",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "battery",
              "count": 1,
              "users": [
                "U046JMFLKV3"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ANlpy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Depending on what is happening in your scene invalidation and your update logic, SpriteKit may be redrawing continuously - it is worth taking an Instruments trace to see what is actually running and updating during your idle periods without animations. In case you do find activity, it is a good idea to try freezing the scene time during these periods without updates, and then measuring again to be sure that you have prevented drawing and simulation updates.\n\nAlso please try testing your app in the Serious and Critical thermal states by using an Inducer in Xcode (under “Devices and Simulators”) or Instruments (by holding down the red “(…)” icon):\n"
                    },
                    {
                      "type": "link",
                      "url": "https://help.apple.com/xcode/mac/current/#/dev308429d42",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n\nHere is information on responding to thermal state changes so your application can react:\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/library/archive/documentation/Performance/Conceptual/power_efficiency_guidelines_osx/RespondToThermalStateChanges.html#//apple_ref/doc/uid/TP40013929-CH25-SW1",
                      "text": "https://developer.apple.com/library/archive/documentation/Performance/Conceptual/power[…]efficiency_guidelines_osx/RespondToThermalStateChanges.html"
                    },
                    {
                      "type": "text",
                      "text": "\n\nFinally, remember ProMotion displays allow other unique frame rates like 48 Hz, so you can take advantage of that on the iPad Pro, iPhone Pro, and newer MacBook Pros!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046E6ZLWS0\u003e asked\n\u0026gt; To protect our IP, we provide many interactive AR scenes not as .usdz, but export them as .reality from RealityComposer. With iPadOS beta 11 and now the RC1 those files trigger a memory limit, what I regard as a regression. Beta12 worked inbetween.\n\u0026gt; Why are .reality files up to 10x time bigger than .usdz?",
      "ts": "1666287899.472539",
      "thread_ts": "1666287899.472539",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 4,
      "latest_reply": "1666288727.601399",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "4xg",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046E6ZLWS0"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"To protect our IP, we provide many interactive AR scenes not as .usdz, but export them as .reality from RealityComposer. With iPadOS beta 11 and now the RC1 those files trigger a memory limit, what I regard as a regression. Beta12 worked inbetween.\\nWhy are .reality files up to 10x time bigger than .usdz?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "6f472315-0bf7-48a1-a783-783a2b06e0f3",
          "type": "message",
          "user": "U044G4S65EF",
          "text": "Hello, USDZ files are compressed and designed to be shared. Reality files may contain additional data for the Reality Composer app to use, but aren't specifically optimized for sharing. If you have some use cases for Reality files, we would encourage you to file a Feedback Request with your use case. We also want to note that Reality files are not designed specifically to protect IP.",
          "ts": "1666287945.937359",
          "thread_ts": "1666287899.472539",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "eyes",
              "count": 1,
              "users": [
                "U046E6ZLWS0"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LLA2y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Hello, USDZ files are compressed and designed to be shared. Reality files may contain additional data for the Reality Composer app to use, but aren't specifically optimized for sharing. If you have some use cases for Reality files, we would encourage you to file a Feedback Request with your use case. We also want to note that Reality files are not designed specifically to protect IP."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "b081ce8f-332e-455c-902f-987b354fcc02",
          "type": "message",
          "user": "U046E6ZLWS0",
          "text": "I was not aware of RealityComposer being able to load/import .reality files.\nIts native file format seems to be .rcfile",
          "ts": "1666288341.258639",
          "thread_ts": "1666287899.472539",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Xgy",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I was not aware of RealityComposer being able to load/import .reality files.\nIts native file format seems to be .rcfile"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "81bc6f5b-6339-4f73-89ad-6a98ec06534a",
          "type": "message",
          "user": "U044G4S65EF",
          "text": "If you create a new project, You can import a reality file. Just make sure to click the Add to Current Scene box.",
          "ts": "1666288684.016829",
          "thread_ts": "1666287899.472539",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "REyL",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If you create a new project, You can import a reality file. Just make sure to click the Add to Current Scene box."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "ca064393-d1bf-41cb-978f-3d8c77d0a8e1",
          "type": "message",
          "user": "U046E6ZLWS0",
          "text": ":+1:",
          "ts": "1666288727.601399",
          "thread_ts": "1666287899.472539",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "Maw",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "emoji",
                      "name": "+1",
                      "skin_tone": 0
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046FPKKSF3\u003e asked\n\u0026gt; How can I import .ply to an iOS app I'm developing. Would like to use it in a view that can be rotated. Thanks.",
      "ts": "1666288398.132689",
      "thread_ts": "1666288398.132689",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666288449.384199",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "rFgZ5",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046FPKKSF3"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"How can I import .ply to an iOS app I'm developing. Would like to use it in a view that can be rotated. Thanks.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ab0ed409-a2bd-4e92-add5-e1abb76c443c",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "Model I/O supports PLY files per:\n\u003chttps://developer.apple.com/documentation/modelio/mdlasset/1391813-canimportfileextension\u003e\n\nFor rendering, \u003chttps://developer.apple.com/documentation/modelio\u003e states\n\u0026gt; Model I/O can share data buffers with the MetalKit, GLKit, and SceneKit frameworks to help you load, process, and render 3D assets efficiently.",
          "ts": "1666288449.384199",
          "thread_ts": "1666288398.132689",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nQf3X",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Model I/O supports PLY files per:\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/modelio/mdlasset/1391813-canimportfileextension",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": "\n\nFor rendering, "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/modelio",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": " states\n"
                    }
                  ]
                },
                {
                  "Type": "rich_text_quote",
                  "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Model I\\/O can share data buffers with the MetalKit, GLKit, and SceneKit frameworks to help you load, process, and render 3D assets efficiently.\"}]}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U0466EASFPF\u003e asked\n\u0026gt; What is Apple's plans related to the Vulkan graphics framework, from my understanding Apple is a big contributor to the project. But does not support it fully on a system level? This would make it easyer to port modern games not made in UE5 or Unity.",
      "ts": "1666288651.985189",
      "thread_ts": "1666288651.985189",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 2,
      "latest_reply": "1666289145.838909",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "ych",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U0466EASFPF"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"What is Apple's plans related to the Vulkan graphics framework, from my understanding Apple is a big contributor to the project. But does not support it fully on a system level? This would make it easyer to port modern games not made in UE5 or Unity.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "9a25b674-821f-46ca-aaf8-795057a19d62",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "Apple does not contribute to Vulkan projects or support Vulkan directly - Metal is Apple’s graphics API, created for optimal performance on Apple Silicon. Unity and Unreal Engine and several other game engines and frameworks have native Metal support for macOS and iOS. There are also third-party libraries such as MoltevnVK which translate Vulkan APIs into Metal APIs, and some developers have successfully used it to ship modern titles.",
          "ts": "1666288663.536909",
          "thread_ts": "1666288651.985189",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "wNOWZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Apple does not contribute to Vulkan projects or support Vulkan directly - Metal is Apple’s graphics API, created for optimal performance on Apple Silicon. Unity and Unreal Engine and several other game engines and frameworks have native Metal support for macOS and iOS. There are also third-party libraries such as MoltevnVK which translate Vulkan APIs into Metal APIs, and some developers have successfully used it to ship modern titles."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "474b4fbc-8f70-4567-9613-85a24a5fca27",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "Is there any limitation with using MoltenVK to use Vulkan on Apple platforms that you had in mind?",
          "ts": "1666289145.838909",
          "thread_ts": "1666288651.985189",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "efgz",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Is there any limitation with using MoltenVK to use Vulkan on Apple platforms that you had in mind?"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U045MLXB6UX\u003e asked\n\u0026gt; Where can we find a list of all build settings for Metal? At one point some of them disappeared from the Xcode project editor",
      "ts": "1666288817.918479",
      "thread_ts": "1666288817.918479",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 7,
      "latest_reply": "1666289433.825669",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "hJR",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U045MLXB6UX"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Where can we find a list of all build settings for Metal? At one point some of them disappeared from the Xcode project editor\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "83f185f2-bfda-470a-ad71-4da471b624f0",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "You can find reference for all build settings here \u003chttps://developer.apple.com/documentation/xcode/build-settings-reference?changes=_9\u003e. If you have any other flags you want to pass to compiler or linker, you can use “Other Metal Compiler flags” `MTL_COMPILER_FLAGS` or “Other Metal Linker Flags” `MTLLINKER_FLAGS` respectively.",
          "ts": "1666288889.158159",
          "thread_ts": "1666288817.918479",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "gx0",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "You can find reference for all build settings here "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/xcode/build-settings-reference?changes=_9",
                      "text": ""
                    },
                    {
                      "type": "text",
                      "text": ". If you have any other flags you want to pass to compiler or linker, you can use “Other Metal Compiler flags” "
                    },
                    {
                      "type": "text",
                      "text": "MTL_COMPILER_FLAGS",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " or “Other Metal Linker Flags” "
                    },
                    {
                      "type": "text",
                      "text": "MTLLINKER_FLAGS",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " respectively."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "06df93f2-5b77-413d-a0a6-f85c20b76ed3",
          "type": "message",
          "user": "U045MLXB6UX",
          "text": "But where can we find the full list of flags to use there?",
          "ts": "1666288995.274339",
          "thread_ts": "1666288817.918479",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "loNc/",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "But where can we find the full list of flags to use there?"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "2e21d783-c1f7-4a5e-860b-29edd4df18a6",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "`xcrun metal --help` should have some, but it’s mostly gonna show generic clang flags.",
          "ts": "1666289062.131849",
          "thread_ts": "1666288817.918479",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pdezZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "xcrun metal --help",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " should have some, but it’s mostly gonna show generic clang flags."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1ea227e4-36e9-4816-b98f-837dcf04a34d",
          "type": "message",
          "user": "U045MLXB6UX",
          "text": "Ok",
          "ts": "1666289272.515139",
          "thread_ts": "1666288817.918479",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "ZIs",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Ok"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "0a69a22f-5635-484b-858a-bb37e266e79d",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "If there’s some particular setting that’s missing and you think might be useful, please let us know through Feedback Assistant",
          "ts": "1666289318.673689",
          "thread_ts": "1666288817.918479",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "//29S",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "If there’s some particular setting that’s missing and you think might be useful, please let us know through Feedback Assistant"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1c5b4049-9ca3-4dd1-bee0-c52f94876ab9",
          "type": "message",
          "user": "U045MLXB6UX",
          "text": "Just documentation would be great, \"here are the ways you can affect Metal compilation\"",
          "ts": "1666289337.719439",
          "thread_ts": "1666288817.918479",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "bdj1q",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Just documentation would be great, \"here are the ways you can affect Metal compilation\""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "be85225e-7387-47d0-8941-326ddb770e7c",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "I can think of this video as a good starting point: \u003chttps://developer.apple.com/wwdc21/10229\u003e",
          "ts": "1666289433.825669",
          "thread_ts": "1666288817.918479",
          "attachments": [
            {
              "fallback": "Apple Developer: Discover compilation workflows in Metal - WWDC21 - Videos - Apple Developer",
              "id": 1,
              "title": "Discover compilation workflows in Metal - WWDC21 - Videos - Apple Developer",
              "title_link": "https://developer.apple.com/wwdc21/10229",
              "text": "The Metal shading language is a powerful C++ based language that allows apps to render stunning effects while maintaining a flexible...",
              "image_url": "https://devimages-cdn.apple.com/wwdc-services/images/119/5144/5144_wide_250x141_2x.jpg",
              "service_name": "Apple Developer",
              "service_icon": "https://developer.apple.com/favicon.ico",
              "from_url": "https://developer.apple.com/wwdc21/10229",
              "original_url": "https://developer.apple.com/wwdc21/10229",
              "blocks": null
            }
          ],
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "zOF",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "I can think of this video as a good starting point: "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/wwdc21/10229",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "4936a7e1-d013-40ef-abfd-a6a8ac3cf8d7",
      "type": "message",
      "user": "U044US0P4C9",
      "text": "Thanks for all the great questions, everyone! We’ll stick around for a few more minutes so we can answer a few more questions. If you have one you’ve been holding back, now’s the time. Send it our way!",
      "ts": "1666288891.145779",
      "team": "T03U5MWB2FN",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "us5",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Thanks for all the great questions, everyone! We’ll stick around for a few more minutes so we can answer a few more questions. If you have one you’ve been holding back, now’s the time. Send it our way!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046S3T2S2Y\u003e asked\n\u0026gt; In SpriteKit, is there a way to render an SKView with a lower resolution that what is actually displayed on screen? The use case would be to be able to render at a lower resolution for less capable GPU (like Intel integrated GPUs for example) and render normally for Apple Silicon or dedicated GPUs",
      "ts": "1666289104.692889",
      "thread_ts": "1666289104.692889",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 2,
      "latest_reply": "1666292444.977599",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "T8X",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046S3T2S2Y"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"In SpriteKit, is there a way to render an SKView with a lower resolution that what is actually displayed on screen? The use case would be to be able to render at a lower resolution for less capable GPU (like Intel integrated GPUs for example) and render normally for Apple Silicon or dedicated GPUs\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "318c7366-3f67-4bae-a104-f2a97e655e5b",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "SKView is a subclass of UIView on iOS , so you can use contentScaleFactor to change the scaling factor.\n\nOn macOS with an NSView, please try using scale,\n\nPlease file a Feedback request if these methods don’t achieve what you need.",
          "ts": "1666289706.588689",
          "thread_ts": "1666289104.692889",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "pD5",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "SKView is a subclass of UIView on iOS , so you can use contentScaleFactor to change the scaling factor.\n\nOn macOS with an NSView, please try using scale,\n\nPlease file a Feedback request if these methods don’t achieve what you need."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "4e3c48fe-0344-4d51-ae02-b15db9096046",
          "type": "message",
          "user": "U046S3T2S2Y",
          "text": "Thank you very much for this information!",
          "ts": "1666292444.977599",
          "thread_ts": "1666289104.692889",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "the_horns",
              "count": 1,
              "users": [
                "U044JLLAMQU"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "8C+y",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thank you very much for this information!"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U04646VSW75\u003e asked\n\u0026gt; In the default Game project in XCode, I cannot get the Actions.sks file to load any preview scene to view the actions I am designing (they are grayed out). Am I doing this incorrectly or is there a specific attribute that needs to be set?",
      "ts": "1666289457.052499",
      "thread_ts": "1666289457.052499",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666289472.203129",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "H=Uxl",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U04646VSW75"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"In the default Game project in XCode, I cannot get the Actions.sks file to load any preview scene to view the actions I am designing (they are grayed out). Am I doing this incorrectly or is there a specific attribute that needs to be set?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "4b764bb3-6cb7-4f02-9292-cf72d380eae6",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "Thanks for your feedback - if you could file a Feedback with your sample project or describe this a bit more, this seems like an issue with the .sks viewer.",
          "ts": "1666289472.203129",
          "thread_ts": "1666289457.052499",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "RpV8X",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks for your feedback - if you could file a Feedback with your sample project or describe this a bit more, this seems like an issue with the .sks viewer."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046H38LPLZ\u003e asked\n\u0026gt; Sorry for the late question, are there any examples available for using the MetalFX temporal upscaler?  The WWDC talk had a lot of great details, but a working example is always good to have.",
      "ts": "1666289712.951009",
      "thread_ts": "1666289712.951009",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 2,
      "latest_reply": "1666293001.655599",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "sfcU",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046H38LPLZ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Sorry for the late question, are there any examples available for using the MetalFX temporal upscaler?  The WWDC talk had a lot of great details, but a working example is always good to have.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "5ccb12ce-0a7d-44e8-95ae-a778c3a57d94",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "There a sample app available at \u003chttps://developer.apple.com/documentation/metalfx/applying_temporal_antialiasing_and_upscaling_using_metalfx?language=objc\u003e",
          "ts": "1666289723.046919",
          "thread_ts": "1666289712.951009",
          "edited": {
            "user": "U044G4SA4FM",
            "ts": "1666289728.000000"
          },
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "heart",
              "count": 2,
              "users": [
                "U045WF64UPQ",
                "U046H38LPLZ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "nP6",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There a sample app available at "
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/metalfx/applying_temporal_antialiasing_and_upscaling_using_metalfx?language=objc",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "1723f3eb-aa83-4c15-82f0-ad4a12efa369",
          "type": "message",
          "user": "U046H38LPLZ",
          "text": "Thanks so much for pointing this out!  I had looked at the available samples around WWDC though this might have been posted later.",
          "ts": "1666293001.655599",
          "thread_ts": "1666289712.951009",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "PSC2H",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Thanks so much for pointing this out!  I had looked at the available samples around WWDC though this might have been posted later."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046FCQ7GHX\u003e asked\n\u0026gt; Hi! Thanks so much for these sessions.  I'm part way through remaking an old OpenGL app with SceneKit. One of the things the app does is vary the size of a glow around a star, based on the percentage of the star that is visible, and its distance from the camera (glare). Is this something I can do with SceneKit, and if so which technique is best to use to accomplish that?",
      "ts": "1666290004.108929",
      "thread_ts": "1666290004.108929",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666290018.598099",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "nuB",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046FCQ7GHX"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi! Thanks so much for these sessions.  I'm part way through remaking an old OpenGL app with SceneKit. One of the things the app does is vary the size of a glow around a star, based on the percentage of the star that is visible, and its distance from the camera (glare). Is this something I can do with SceneKit, and if so which technique is best to use to accomplish that?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "ed6bfca7-8cbc-4ce0-b98d-1a865f983d2e",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "It’s possible what you want to achieve can be done very simply by changing a scene graph property, like a node scale or material parameter. Though it might also require some shader code depending on the exact effect you are going for. If you are to go the custom shader route, we have shader modifiers, programs, rendering delegation and techniques to the rescue. Each suiting different use cases.\n\nIf you are looking to expose the glow as a post-processing effect, SceneKit does also support that:\n\u003chttps://developer.apple.com/documentation/scenekit/postprocessing_a_scene_with_custom_symbols\u003e",
          "ts": "1666290018.598099",
          "thread_ts": "1666290004.108929",
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "pray",
              "count": 1,
              "users": [
                "U046FCQ7GHX"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "VU54",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "It’s possible what you want to achieve can be done very simply by changing a scene graph property, like a node scale or material parameter. Though it might also require some shader code depending on the exact effect you are going for. If you are to go the custom shader route, we have shader modifiers, programs, rendering delegation and techniques to the rescue. Each suiting different use cases.\n\nIf you are looking to expose the glow as a post-processing effect, SceneKit does also support that:\n"
                    },
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/scenekit/postprocessing_a_scene_with_custom_symbols",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U045WF64UPQ\u003e asked\n\u0026gt; Do the Metal FX upscalers have any specific requirements on macOS? I've seen the requirements for Metal 3, but the upscaling sample only lists:\n\u0026gt; \"macOS 13 or later, and a Mac with the M1 chip or an Intel-based Mac\"",
      "ts": "1666290275.335669",
      "thread_ts": "1666290275.335669",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 4,
      "latest_reply": "1666290447.464159",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "FgFR",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U045WF64UPQ"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Do the Metal FX upscalers have any specific requirements on macOS? I've seen the requirements for Metal 3, but the upscaling sample only lists:\\n\\\"macOS 13 or later, and a Mac with the M1 chip or an Intel-based Mac\\\"\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "7ba51f24-bb37-4169-a5a1-62d8d461f05b",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "Here is the list of devices that support Metal 3:",
          "ts": "1666290312.206629",
          "thread_ts": "1666290275.335669",
          "files": [
            {
              "id": "F047F6ES058",
              "created": 1666290286,
              "timestamp": 1666290286,
              "name": "image.png",
              "title": "image.png",
              "mimetype": "image/png",
              "image_exif_rotation": 0,
              "filetype": "png",
              "pretty_type": "PNG",
              "user": "U044JLLAMQU",
              "mode": "hosted",
              "editable": false,
              "is_external": false,
              "external_type": "",
              "size": 155539,
              "url": "",
              "url_download": "",
              "url_private": "C04303KH81Y/F047F6ES058-image.png",
              "url_private_download": "C04303KH81Y/F047F6ES058-image.png",
              "original_h": 454,
              "original_w": 782,
              "thumb_64": "https://files.slack.com/files-tmb/T01PTBJ95PS-F047F6ES058-dab141f116/image_64.png",
              "thumb_80": "https://files.slack.com/files-tmb/T01PTBJ95PS-F047F6ES058-dab141f116/image_80.png",
              "thumb_160": "https://files.slack.com/files-tmb/T01PTBJ95PS-F047F6ES058-dab141f116/image_160.png",
              "thumb_360": "https://files.slack.com/files-tmb/T01PTBJ95PS-F047F6ES058-dab141f116/image_360.png",
              "thumb_360_gif": "",
              "thumb_360_w": 360,
              "thumb_360_h": 209,
              "thumb_480": "https://files.slack.com/files-tmb/T01PTBJ95PS-F047F6ES058-dab141f116/image_480.png",
              "thumb_480_w": 480,
              "thumb_480_h": 279,
              "thumb_720": "https://files.slack.com/files-tmb/T01PTBJ95PS-F047F6ES058-dab141f116/image_720.png",
              "thumb_720_w": 720,
              "thumb_720_h": 418,
              "thumb_960": "",
              "thumb_960_w": 0,
              "thumb_960_h": 0,
              "thumb_1024": "",
              "thumb_1024_w": 0,
              "thumb_1024_h": 0,
              "permalink": "https://appleevents.enterprise.slack.com/files/U044JLLAMQU/F047F6ES058/image.png",
              "permalink_public": "https://slack-files.com/T01PTBJ95PS-F047F6ES058-d24ab6214b",
              "edit_link": "",
              "preview": "",
              "preview_highlight": "",
              "lines": 0,
              "lines_more": 0,
              "is_public": false,
              "public_url_shared": false,
              "channels": null,
              "groups": null,
              "ims": null,
              "initial_comment": {},
              "comments_count": 0,
              "num_stars": 0,
              "is_starred": false,
              "shares": {
                "public": null,
                "private": null
              }
            }
          ],
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U045WF64UPQ"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "qGIx2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Here is the list of devices that support Metal 3:"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "193abf5d-0c0d-4921-805d-9989ff3230a5",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "Spatial upscaling should work on AMD and Intel GPUs that support Metal 3!",
          "ts": "1666290379.539619",
          "thread_ts": "1666290275.335669",
          "edited": {
            "user": "U044JLLAMQU",
            "ts": "1666290399.000000"
          },
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "2Ue2X",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "Spatial upscaling should work on AMD and Intel GPUs that support Metal 3!"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "5b94b48e-fb55-40fa-8128-48e9c9f36c5b",
          "type": "message",
          "user": "U044G4SA4FM",
          "text": "There’s also a runtime query on each scaler descriptor `supportsDevice` that will tell you at runtime if corresponding scaler is supported",
          "ts": "1666290441.007719",
          "thread_ts": "1666290275.335669",
          "edited": {
            "user": "U044G4SA4FM",
            "ts": "1666290450.000000"
          },
          "team": "T03U5MWB2FN",
          "reactions": [
            {
              "name": "+1",
              "count": 1,
              "users": [
                "U044JLLAMQU"
              ]
            }
          ],
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "xwZ",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "There’s also a runtime query on each scaler descriptor "
                    },
                    {
                      "type": "text",
                      "text": "supportsDevice",
                      "style": {
                        "code": true
                      }
                    },
                    {
                      "type": "text",
                      "text": " that will tell you at runtime if corresponding scaler is supported"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "client_msg_id": "c05771b7-614b-4dc7-975e-3aa3aafd7981",
          "type": "message",
          "user": "U044JLLAMQU",
          "text": "\u003chttps://developer.apple.com/documentation/metalfx/mtlfxtemporalscalerdescriptor/4057318-supportsdevice\u003e",
          "ts": "1666290447.464159",
          "thread_ts": "1666290275.335669",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "lCMrX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "link",
                      "url": "https://developer.apple.com/documentation/metalfx/mtlfxtemporalscalerdescriptor/4057318-supportsdevice",
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "6164244d-b3de-4c28-b0a1-ee62a47a612f",
      "type": "message",
      "user": "U044US0P4C9",
      "text": "And that’s a wrap!\n\nThank you for joining us for _Q\u0026amp;A: Metal 3_! I hope you had as much fun as we did :sunglasses:. With that our Q\u0026amp;A activities have concluded. We wish we could have answered all your questions! If we weren’t able to get to your question, here are some next steps:\n• File feedback! Let us know what’s not clear or what behavior seems a bit off by using the Feedback Assistant app or going to: \u003chttp://feedbackassistant.apple.com|feedbackassistant.apple.com\u003e\n• Submit a TSI! Developer Technical Support engineers are available to give you code-level support. You can submit a TSI here: \u003chttps://developer.apple.com/support/technical/\u003e\n• Ask a question on the Apple Developer Forums (or answer one if you spot something you’ve worked through before!): \u003chttps://developer.apple.com/forums/\u003e\nWe’ll be closing the workflow now. Thank you so much for making this such an engaging week!",
      "ts": "1666290459.315249",
      "attachments": [
        {
          "fallback": "Requesting Technical Support - Support - Apple Developer",
          "id": 1,
          "title": "Requesting Technical Support - Support - Apple Developer",
          "title_link": "https://developer.apple.com/support/technical/",
          "text": "Learn how to receive code-level help from an Apple engineer by submitting a Technical Support Incident.",
          "service_name": "developer.apple.com",
          "service_icon": "https://developer.apple.com/favicon.ico",
          "from_url": "https://developer.apple.com/support/technical/",
          "original_url": "https://developer.apple.com/support/technical/",
          "blocks": null
        },
        {
          "fallback": "Apple Developer Forums",
          "id": 2,
          "title": "Apple Developer Forums",
          "title_link": "https://developer.apple.com/forums/",
          "text": "Connect with fellow developers and Apple experts as you give and receive help on a wide variety of development topics, from implementing new technologies to established best practices",
          "service_name": "developer.apple.com",
          "service_icon": "https://forums.developer.apple.com/forums/build-09152022-1/public/assets/favicon.ico",
          "from_url": "https://developer.apple.com/forums/",
          "original_url": "https://developer.apple.com/forums/",
          "blocks": null
        }
      ],
      "team": "T03U5MWB2FN",
      "reactions": [
        {
          "name": "the_horns",
          "count": 2,
          "users": [
            "U044JLLAMQU",
            "U045MLK166B"
          ]
        },
        {
          "name": "gratitude-thank-you",
          "count": 2,
          "users": [
            "U046FCQ7GHX",
            "U046G37DF33"
          ]
        }
      ],
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "Yxxra",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "And that’s a wrap!\n\nThank you for joining us for "
                },
                {
                  "type": "text",
                  "text": "Q\u0026A: Metal 3",
                  "style": {
                    "italic": true
                  }
                },
                {
                  "type": "text",
                  "text": "! I hope you had as much fun as we did "
                },
                {
                  "type": "emoji",
                  "name": "sunglasses",
                  "skin_tone": 0
                },
                {
                  "type": "text",
                  "text": ". With that our Q\u0026A activities have concluded. We wish we could have answered all your questions! If we weren’t able to get to your question, here are some next steps:\n"
                }
              ]
            },
            {
              "Type": "rich_text_list",
              "Raw": "{\"type\":\"rich_text_list\",\"elements\":[{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"File feedback! Let us know what\\u2019s not clear or what behavior seems a bit off by using the Feedback Assistant app or going to: \"},{\"type\":\"link\",\"url\":\"http:\\/\\/feedbackassistant.apple.com\",\"text\":\"feedbackassistant.apple.com\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Submit a TSI! Developer Technical Support engineers are available to give you code-level support. You can submit a TSI here: \"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/support\\/technical\\/\"}]},{\"type\":\"rich_text_section\",\"elements\":[{\"type\":\"text\",\"text\":\"Ask a question on the Apple Developer Forums (or answer one if you spot something you\\u2019ve worked through before!): \"},{\"type\":\"link\",\"url\":\"https:\\/\\/developer.apple.com\\/forums\\/\"}]}],\"style\":\"bullet\",\"indent\":0,\"border\":0}"
            },
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "We’ll be closing the workflow now. Thank you so much for making this such an engaging week!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "59ae1253-d24e-4206-bbea-4d8eea80da09",
      "type": "message",
      "user": "U044US0P4C9",
      "text": "One more thing! Before the week ends, we have a few more answers to questions from earlier in the week. Here they come!",
      "ts": "1666391789.995789",
      "team": "T03U5MWB2FN",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "EVE",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "One more thing! Before the week ends, we have a few more answers to questions from earlier in the week. Here they come!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U046RUWTEVA\u003e asked\n\u0026gt; Hi, I am making a game and have decided to use SwiftUI for the UI part, e.g. the Main menu, settings, etc.\n\u0026gt; \n\u0026gt; For displaying the actual game I am using SwiftUI-s `SpriteView` API. It works nicely except when I throw a `GCVirtualController` in the mix. The problem is that if you present this view using a sheet or a fullscreencover the virtual controller goes underneath the presented view (this is the view who actually owns the virtual controller). \n\u0026gt; \n\u0026gt; Any help would be greatly appreciated as I'm stuck with using hacks such as using a Zstack to hide/show the view with SpriteView.",
      "ts": "1666391885.613769",
      "thread_ts": "1666391885.613769",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666391912.232939",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "PbzP",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U046RUWTEVA"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"Hi, I am making a game and have decided to use SwiftUI for the UI part, e.g. the Main menu, settings, etc.\\n\\nFor displaying the actual game I am using SwiftUI-s `SpriteView` API. It works nicely except when I throw a `GCVirtualController` in the mix. The problem is that if you present this view using a sheet or a fullscreencover the virtual controller goes underneath the presented view (this is the view who actually owns the virtual controller). \\n\\nAny help would be greatly appreciated as I'm stuck with using hacks such as using a Zstack to hide\\/show the view with SpriteView.\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "1ed9248b-d157-4755-a436-c7d08899e1b0",
          "type": "message",
          "user": "U044US0P4C9",
          "text": "That sounds like a bug that we’re not aware of - we’d appreciate if you would submit a feedback report with your example project so we can tackle fixing it.",
          "ts": "1666391912.232939",
          "thread_ts": "1666391885.613769",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "+kFyX",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "That sounds like a bug that we’re not aware of - we’d appreciate if you would submit a feedback report with your example project so we can tackle fixing it."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "message",
      "text": "\u003c@U047D8MBQSU\u003e asked\n\u0026gt; I'm looking for tips or suggestions for debugging `GKMinMaxStrategist`. I have an implementation that plays the game \"correctly\", but it's not picking optimal moves AT ALL. \n\u0026gt; \n\u0026gt; I can debug my `GKGameModel`, and the turns I'm feeding the strategist (and the scores it's spitting back), so I know the results of `bestMoveForActivePlayer()` and `randomMove(for:fromNumberOfBestMoves:)` are not returning the `GKGameModelUpdate`s that correspond to the highest scores as reported by `score(for player: GKGameModelPlayer)`.\n\u0026gt; \n\u0026gt; Alternatively, are there any plans to update or work further on GameplayKit?",
      "ts": "1666391991.146229",
      "thread_ts": "1666391991.146229",
      "subtype": "bot_message",
      "bot_id": "B042Y11KN06",
      "username": "Ask Apple - graphics-and-games",
      "reply_count": 1,
      "latest_reply": "1666392017.523359",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "n7Ttf",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "user",
                  "user_id": "U047D8MBQSU"
                },
                {
                  "type": "text",
                  "text": " asked\n"
                }
              ]
            },
            {
              "Type": "rich_text_quote",
              "Raw": "{\"type\":\"rich_text_quote\",\"elements\":[{\"type\":\"text\",\"text\":\"I'm looking for tips or suggestions for debugging `GKMinMaxStrategist`. I have an implementation that plays the game \\\"correctly\\\", but it's not picking optimal moves AT ALL. \\n\\nI can debug my `GKGameModel`, and the turns I'm feeding the strategist (and the scores it's spitting back), so I know the results of `bestMoveForActivePlayer()` and `randomMove(for\"},{\"type\":\"emoji\",\"name\":\"fromNumberOfBestMoves\"},{\"type\":\"text\",\"text\":\")` are not returning the `GKGameModelUpdate`s that correspond to the highest scores as reported by `score(for player: GKGameModelPlayer)`.\\n\\nAlternatively, are there any plans to update or work further on GameplayKit?\"}]}"
            }
          ]
        }
      ],
      "slackdump_thread_replies": [
        {
          "client_msg_id": "34d2f921-0fe2-4985-9566-7eebdb5945bd",
          "type": "message",
          "user": "U044US0P4C9",
          "text": "This sounds like a bug. We’d love for you to file a feedback request with your example project so we can look into it and fix the problem and try to suggest a workaround based on what you are doing.",
          "ts": "1666392017.523359",
          "thread_ts": "1666391991.146229",
          "team": "T03U5MWB2FN",
          "replace_original": false,
          "delete_original": false,
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "LcdC0",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "This sounds like a bug. We’d love for you to file a feedback request with your example project so we can look into it and fix the problem and try to suggest a workaround based on what you are doing."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "client_msg_id": "1cc8fca4-2028-460b-bc12-a8d925a793b6",
      "type": "message",
      "user": "U044US0P4C9",
      "text": "Thank you for participating!",
      "ts": "1666392141.854889",
      "team": "T03U5MWB2FN",
      "replace_original": false,
      "delete_original": false,
      "blocks": [
        {
          "type": "rich_text",
          "block_id": "P9Vb",
          "elements": [
            {
              "type": "rich_text_section",
              "elements": [
                {
                  "type": "text",
                  "text": "Thank you for participating!"
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "channel_id": "C04303KH81Y"
}
